!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    AAlignment = traits<Derived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon709
ABx_lx	plugin/Eigen/src/Core/util/Constants.h	/^  ABx_lx              = 0x200,$/;"	e	enum:Eigen::DecompositionOptions
ACTIVATION	include/darknet.h	/^} ACTIVATION;$/;"	t	typeref:enum:__anon726
ACTIVATIONS_H	src/activations.h	2;"	d
ACTIVATION_LAYER_H	src/activation_layer.h	2;"	d
ACTIVE	include/darknet.h	/^    ACTIVE,$/;"	e	enum:__anon728
ADD	include/darknet.h	/^    MULT, ADD, SUB, DIV$/;"	e	enum:__anon727
ALIB	Makefile	/^ALIB=libdarknet.a$/;"	m
ALIVE	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	108;"	d
AMDOrdering	plugin/Eigen/src/OrderingMethods/Ordering.h	/^class AMDOrdering$/;"	c	namespace:Eigen
APIBase	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseSolverBase<SparseLU<_MatrixType,_OrderingType> > APIBase;$/;"	t	class:Eigen::SparseLU
AR	Makefile	/^AR=ar$/;"	m
ARCH	Makefile	/^ARCH= -gencode arch=compute_30,code=sm_30 \\$/;"	m
ARCH_ARM	Makefile	/^ARCH_ARM=0$/;"	m
ARCH_X86	Makefile	/^ARCH_X86=1$/;"	m
ARFLAGS	Makefile	/^ARFLAGS=rcs$/;"	m
AVGPOOL	include/darknet.h	/^    AVGPOOL,$/;"	e	enum:__anon728
AVGPOOL_LAYER_H	src/avgpool_layer.h	2;"	d
Abs2ReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> Abs2ReturnType;$/;"	t
AbsReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> AbsReturnType;$/;"	t
AccPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef ResPacket AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
AccPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccessorLevels	plugin/Eigen/src/Core/util/Constants.h	/^enum AccessorLevels {$/;"	g	namespace:Eigen
AcosReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_acos_op<Scalar>, const Derived> AcosReturnType;$/;"	t
Action	plugin/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	g	namespace:Eigen
ActualCols	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualCols = Transpose ? MaxRows : MaxCols$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon295
ActualIndex	plugin/Eigen/src/Core/BandMatrix.h	/^        ActualIndex = ReturnOpposite ? -Index : Index,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon364
ActualLhs	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1, SparseView<Lhs1> >::type ActualLhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualLhsType	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::ExtractType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsType	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsType	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualLhsTypeCleaned	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualLhsTypeCleaned	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualLhsType>::type ActualLhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualMatrixType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef MatrixType ActualMatrixType;$/;"	t	class:Eigen::internal::generic_matrix_wrapper
ActualMatrixType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef Ref<const MatrixType> ActualMatrixType;$/;"	t	class:Eigen::internal::generic_matrix_wrapper
ActualMatrixType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixWrapper::ActualMatrixType ActualMatrixType;$/;"	t	class:Eigen::IterativeSolverBase
ActualMatrixType	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^  typedef typename conditional<(MatrixType::Flags&LinearAccessBit),MatrixType const &,typename MatrixType::PlainObject>::type ActualMatrixType;$/;"	t	struct:Eigen::internal::compute_inverse_size4
ActualPacketAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = 0x0;$/;"	m	namespace:Eigen
ActualPacketAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = PacketAccessBit;$/;"	m	namespace:Eigen
ActualPacketSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    ActualPacketSize    = int(Traversal)==LinearVectorizedTraversal ? LinearPacketSize$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon495
ActualRhs	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,LhsT,RhsT>::type ActualRhs;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
ActualRhsType	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsType	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsType	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRhsTypeCleaned	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::generic_product_impl
ActualRhsTypeCleaned	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename internal::remove_all<ActualRhsType>::type ActualRhsTypeCleaned;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
ActualRows	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualRows = Transpose ? MaxCols : MaxRows,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon295
AddCost	plugin/Eigen/src/Core/NumTraits.h	/^    AddCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
AddExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr(const Arg0& arg0, const Arg1& arg1) : m_arg0(arg0), m_arg1(arg1) {}$/;"	f	class:Eigen::Symbolic::AddExpr
AddExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class AddExpr : public BaseExpr<AddExpr<Arg0,Arg1> >$/;"	c	namespace:Eigen::Symbolic
AdjointReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::MatrixBase
AdjointReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const typename MatrixType::AdjointReturnType,TransposeMode> AdjointReturnType;$/;"	t	class:Eigen::SelfAdjointView
AdjointReturnType	plugin/Eigen/src/Core/SolverBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SolverBase
AdjointReturnType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::AdjointReturnType,TransposeMode> AdjointReturnType;$/;"	t	class:Eigen::TriangularView
AdjointReturnType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    > AdjointReturnType;$/;"	t	class:Eigen::HouseholderSequence
AdjointReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Affine	plugin/Eigen/src/Core/util/Constants.h	/^  Affine        = 0x2,$/;"	e	enum:Eigen::TransformTraits
Affine2d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Affine> Affine2d;$/;"	t	namespace:Eigen
Affine2f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Affine> Affine2f;$/;"	t	namespace:Eigen
Affine3d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Affine> Affine3d;$/;"	t	namespace:Eigen
Affine3f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Affine> Affine3f;$/;"	t	namespace:Eigen
AffineCompact	plugin/Eigen/src/Core/util/Constants.h	/^  AffineCompact = 0x10 | Affine,$/;"	e	enum:Eigen::TransformTraits
AffineCompact2d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,AffineCompact> AffineCompact2d;$/;"	t	namespace:Eigen
AffineCompact2f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,AffineCompact> AffineCompact2f;$/;"	t	namespace:Eigen
AffineCompact3d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,AffineCompact> AffineCompact3d;$/;"	t	namespace:Eigen
AffineCompact3f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,AffineCompact> AffineCompact3f;$/;"	t	namespace:Eigen
AffinePart	plugin/Eigen/src/Geometry/Transform.h	/^                              Block<MatrixType,Dim,HDim> >::type AffinePart;$/;"	t	class:Eigen::Transform
AffinePart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::AffinePart AffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
AffineTransformType	plugin/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Affine> AffineTransformType;$/;"	t	class:Eigen::Translation
AliasFreeProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
Aligned	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned=16,         \/**< \\deprecated Synonym for Aligned16. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned128	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned128=128,     \/**< Data pointer is aligned on a 128 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned16	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned16=16,       \/**< Data pointer is aligned on a 16 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned32	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned32=32,       \/**< Data pointer is aligned on a 32 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned64	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned64=64,       \/**< Data pointer is aligned on a 64 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
Aligned8	plugin/Eigen/src/Core/util/Constants.h	/^  Aligned8=8,         \/**< Data pointer is aligned on a 8 bytes boundary. *\/$/;"	e	enum:Eigen::AlignmentType
AlignedBit	plugin/Eigen/src/Core/util/Constants.h	/^EIGEN_DEPRECATED const unsigned int AlignedBit = 0x80;$/;"	m	namespace:Eigen
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox(const OtherVectorType1& _min, const OtherVectorType2& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(Index _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline explicit AlignedBox(const MatrixBase<Derived>& p) : m_min(p), m_max(m_min)$/;"	f	class:Eigen::AlignedBox
AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, AlignedMax> AlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
AlignedMask	plugin/Eigen/src/Core/util/Constants.h	/^  AlignedMask=255,$/;"	e	enum:Eigen::AlignmentType
AlignedMax	plugin/Eigen/src/Core/util/Constants.h	/^  AlignedMax = Aligned128$/;"	e	enum:Eigen::AlignmentType
AlignedOnScalar	plugin/Eigen/src/Core/GenericPacketMath.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon356
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
AlignedOnScalar	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
AlignedOnScalar	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
AlignedOnScalar	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
AlignedOnScalar	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
AlignedOnScalar	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
AlignedOnScalar	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
AlignedOnScalar	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
AlignedOnScalar	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
AlignedOnScalar	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
AlignedOnScalar	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
AlignedOnScalar	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
AlignedOnScalar	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
AlignedOnScalar	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon602
AlignedOnScalar	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
AlignedOnScalar	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
AlignedOnScalar	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
AlignedOnScalar	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
AlignedOnScalar	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
AlignedOnScalar	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon571
AlignedOnScalar	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
AlignedOnScalar	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
AlignedOnScalar	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
AlignedOnScalar	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
AlignedOnScalar	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
AlignedScaling2d	plugin/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,2> AlignedScaling2d;$/;"	t	namespace:Eigen
AlignedScaling2f	plugin/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 2> AlignedScaling2f;$/;"	t	namespace:Eigen
AlignedScaling3d	plugin/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,3> AlignedScaling3d;$/;"	t	namespace:Eigen
AlignedScaling3f	plugin/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 3> AlignedScaling3f;$/;"	t	namespace:Eigen
Alignment	plugin/Eigen/src/Core/Block.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::traits::__anon562
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME in some rare cases, Alignment could be preserved, like a Vector4f.$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME it is not very clear why alignment is necessarily lost...$/;"	e	enum:Eigen::internal::unary_evaluator::__anon508
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0 \/\/ FIXME this will need to be improved once PartialReduxExpr is vectorized$/;"	e	enum:Eigen::internal::evaluator::__anon518
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator::__anon521
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::evaluator_base::__anon500
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = AlignedMax$/;"	e	enum:Eigen::internal::evaluator::__anon504
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN($/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ArgType>::Alignment, Alignment0)$/;"	e	enum:Eigen::internal::evaluator::__anon512
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<Lhs>::Alignment,evaluator<Rhs>::Alignment)$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = EIGEN_PLAIN_ENUM_MIN(evaluator<ThenMatrixType>::Alignment, evaluator<ElseMatrixType>::Alignment)$/;"	e	enum:Eigen::internal::evaluator::__anon514
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon519
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon503
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgType>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon505
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<ArgTypeNestedCleaned>::Alignment$/;"	e	enum:Eigen::internal::unary_evaluator::__anon516
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon511
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = int(MapOptions)&int(AlignedMask)$/;"	e	enum:Eigen::internal::evaluator::__anon510
Alignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment = traits<Derived>::Alignment$/;"	e	enum:Eigen::internal::evaluator::__anon501
Alignment	plugin/Eigen/src/Core/IndexedView.h	/^    Alignment = 0$/;"	e	enum:Eigen::internal::unary_evaluator::__anon315
Alignment	plugin/Eigen/src/Core/Map.h	/^    Alignment = int(MapOptions)&int(AlignedMask),$/;"	e	enum:Eigen::internal::traits::__anon353
Alignment	plugin/Eigen/src/Core/Matrix.h	/^    Alignment = actual_alignment$/;"	e	enum:Eigen::internal::traits::__anon677
Alignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Alignment = bool(CanVectorizeLhs) ? (LhsOuterStrideBytes<=0 || (int(LhsOuterStrideBytes) % EIGEN_PLAIN_ENUM_MAX(1,LhsAlignment))!=0 ? 0 : LhsAlignment)$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
Alignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Alignment = evaluator<MatrixType>::Alignment$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
Alignment	plugin/Eigen/src/Core/Redux.h	/^    Alignment = evaluator<XprType>::Alignment$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
Alignment	plugin/Eigen/src/Core/Ref.h	/^    Alignment = traits<Map<_PlainObjectType, _Options, _StrideType> >::Alignment$/;"	e	enum:Eigen::internal::traits::__anon560
Alignment	plugin/Eigen/src/Geometry/Quaternion.h	/^    Alignment = internal::traits<Coefficients>::Alignment,$/;"	e	enum:Eigen::internal::traits::__anon690
Alignment	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon56
Alignment	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon55
Alignment0	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Alignment0 = (InnerPanel && (OuterStrideAtCompileTime!=Dynamic)$/;"	e	enum:Eigen::internal::evaluator::__anon512
AlignmentMask	plugin/Eigen/src/Cholesky/LLT.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::LLT::__anon129
AlignmentMatch	plugin/Eigen/src/Core/Ref.h	/^      AlignmentMatch = (int(traits<PlainObjectType>::Alignment)==int(Unaligned)) || (DerivedAlignment >= int(Alignment)), \/\/ FIXME the first condition is not very clear, it should be replaced by the required alignment$/;"	e	enum:Eigen::internal::traits::match::__anon561
AlignmentType	plugin/Eigen/src/Core/util/Constants.h	/^enum AlignmentType {$/;"	g	namespace:Eigen
AllAtOnceTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  AllAtOnceTraversal$/;"	e	enum:Eigen::TraversalType
AllRange	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  AllRange(Index size = XprSize) : m_size(size) {}$/;"	f	struct:Eigen::internal::AllRange
AllRange	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct AllRange {$/;"	s	namespace:Eigen::internal
AllReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_all>::Type AllReturnType;$/;"	t	class:Eigen::VectorwiseOp
AltiVec	plugin/Eigen/src/Core/util/Constants.h	/^    AltiVec = 0x2,$/;"	e	enum:Eigen::Architecture::Type
AmbiVector	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    explicit AmbiVector(Index size)$/;"	f	class:Eigen::internal::AmbiVector
AmbiVector	plugin/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector$/;"	c	namespace:Eigen::internal
AmbiVectorMode	plugin/Eigen/src/Core/util/Constants.h	/^enum AmbiVectorMode {$/;"	g	namespace:Eigen
AmbientDimAtCompileTime	plugin/Eigen/src/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon686
AmbientDimAtCompileTime	plugin/Eigen/src/Geometry/Hyperplane.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::Hyperplane::__anon688
AmbientDimAtCompileTime	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::ParametrizedLine::__anon687
Ancestor	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_all<Lhs>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
Ancestor	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_all<Arg1>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline explicit AngleAxis(const QuaternionBase<QuatDerived>& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  inline AngleAxis(const Scalar& angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	plugin/Eigen/src/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxisType	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::QuaternionBase
AngleAxisType	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Base::AngleAxisType AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisd	plugin/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisf	plugin/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
AnyReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_any>::Type AnyReturnType;$/;"	t	class:Eigen::VectorwiseOp
Architecture	plugin/Eigen/src/Core/util/Constants.h	/^namespace Architecture$/;"	n	namespace:Eigen
Arg1	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg1Type>::type Arg1;$/;"	t	class:Eigen::CwiseTernaryOp
Arg1Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Arg1Flags = evaluator<Arg1>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Arg1Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg1::Nested Arg1Nested;$/;"	t	struct:Eigen::internal::traits
Arg1Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg1Type>::type Arg1Nested;$/;"	t	class:Eigen::CwiseTernaryOp
Arg2	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg2Type>::type Arg2;$/;"	t	class:Eigen::CwiseTernaryOp
Arg2Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Arg2Flags = evaluator<Arg2>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Arg2Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg2::Nested Arg2Nested;$/;"	t	struct:Eigen::internal::traits
Arg2Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg2Type>::type Arg2Nested;$/;"	t	class:Eigen::CwiseTernaryOp
Arg3	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_all<Arg3Type>::type Arg3;$/;"	t	class:Eigen::CwiseTernaryOp
Arg3Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Arg3Flags = evaluator<Arg3>::Flags,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Arg3Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename Arg3::Nested Arg3Nested;$/;"	t	struct:Eigen::internal::traits
Arg3Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::ref_selector<Arg3Type>::type Arg3Nested;$/;"	t	class:Eigen::CwiseTernaryOp
ArgReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_arg_op<Scalar>, const Derived> ArgReturnType;$/;"	t
ArgType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename remove_all<typename XprType::NestedExpressionType>::type ArgType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
ArgTypeIsRowMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ArgTypeIsRowMajor = (int(evaluator<ArgType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::evaluator::__anon512
ArgTypeNested	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::nested_eval<ArgType,1>::type ArgTypeNested;$/;"	t	struct:Eigen::internal::evaluator
ArgTypeNested	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::nested_eval<ArgType,Factor>::type ArgTypeNested;$/;"	t	struct:Eigen::internal::unary_evaluator
ArgTypeNestedCleaned	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<ArgTypeNested>::type ArgTypeNestedCleaned;$/;"	t	struct:Eigen::internal::evaluator
ArgTypeNestedCleaned	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<ArgTypeNested>::type ArgTypeNestedCleaned;$/;"	t	struct:Eigen::internal::unary_evaluator
ArithmeticSequence	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  ArithmeticSequence(FirstType first, SizeType size) : m_first(first), m_size(size) {}$/;"	f	class:Eigen::ArithmeticSequence
ArithmeticSequence	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  ArithmeticSequence(FirstType first, SizeType size, IncrType incr) : m_first(first), m_size(size), m_incr(incr) {}$/;"	f	class:Eigen::ArithmeticSequence
ArithmeticSequence	plugin/Eigen/src/Core/ArithmeticSequence.h	/^class ArithmeticSequence$/;"	c	namespace:Eigen
Array	plugin/Eigen/src/Core/Array.h	/^    Array(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array() : Base()$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Array& other)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const EigenBase<OtherDerived> &other,$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& val0, const Scalar& val1, const Scalar& val2, const Scalar& val3)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const T0& val0, const T1& val1)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array(const T& x)$/;"	f	class:Eigen::Array
Array	plugin/Eigen/src/Core/Array.h	/^class Array$/;"	c	namespace:Eigen
ArrayBase	plugin/Eigen/src/Core/ArrayBase.h	/^    ArrayBase() : Base() {}$/;"	f	class:Eigen::ArrayBase
ArrayBase	plugin/Eigen/src/Core/ArrayBase.h	/^template<typename Derived> class ArrayBase$/;"	c	namespace:Eigen
ArrayRef	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXr> ArrayRef;$/;"	t	class:Eigen::BDCSVD
ArrayWrapper	plugin/Eigen/src/Core/ArrayWrapper.h	/^    explicit EIGEN_STRONG_INLINE ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ArrayWrapper
ArrayWrapper	plugin/Eigen/src/Core/ArrayWrapper.h	/^class ArrayWrapper : public ArrayBase<ArrayWrapper<ExpressionType> >$/;"	c	namespace:Eigen
ArrayXI	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<StorageIndex,Dynamic,1> ArrayXI;$/;"	t	struct:Eigen::internal::Assignment
ArrayXS	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Array<Scalar,Dynamic,1> ArrayXS;$/;"	t	struct:Eigen::internal::Assignment
ArrayXi	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Array<Index,1,Dynamic> ArrayXi;$/;"	t	class:Eigen::BDCSVD
ArrayXpr	plugin/Eigen/src/Core/util/Constants.h	/^struct ArrayXpr {};$/;"	s	namespace:Eigen
ArrayXr	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Array<RealScalar, Dynamic, 1> ArrayXr;$/;"	t	class:Eigen::BDCSVD
AsinReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_asin_op<Scalar>, const Derived> AsinReturnType;$/;"	t
AssignOpType	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> AssignOpType;$/;"	t	struct:Eigen::internal::Assignment
Assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Dense, Weak>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct Assignment<DstXprType, SrcXprType, Functor, EigenBase2EigenBase, Weak>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/DiagonalMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, CwiseBinaryOp<internal::scalar_product_op<ScalarBis,Scalar>, const CwiseNullaryOp<internal::scalar_constant_op<ScalarBis>,Plain>,$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::add_assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,Options>, internal::sub_assign_op<Scalar,Scalar>, Dense2Dense,$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<CwiseUnaryOp<internal::scalar_conjugate_op<typename DecType::Scalar>, const Transpose<const DecType> >,RhsType>,$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/Solve.h	/^struct Assignment<DstXprType, Solve<Transpose<const DecType>,RhsType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::add_assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,DefaultProduct>, internal::sub_assign_op<Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Dense2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Triangular2Triangular>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Horizontal>, internal::assign_op<Scalar,typename ArgType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct Assignment<DstXprType, Homogeneous<ArgType,Vertical>, internal::assign_op<Scalar,typename ArgType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct Assignment<DstXprType, SolveWithGuess<DecType,RhsType,GuessType>, internal::assign_op<Scalar,Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/LU/FullPivLU.h	/^struct Assignment<DstXprType, Inverse<FullPivLU<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename FullPivLU<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/LU/InverseImpl.h	/^struct Assignment<DstXprType, Inverse<XprType>, internal::assign_op<typename DstXprType::Scalar,typename XprType::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/LU/PartialPivLU.h	/^struct Assignment<DstXprType, Inverse<PartialPivLU<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename PartialPivLU<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<ColPivHouseholderQR<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename ColPivHouseholderQR<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^struct Assignment<DstXprType, Inverse<CompleteOrthogonalDecomposition<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename CompleteOrthogonalDecomposition<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^struct Assignment<DstXprType, Inverse<FullPivHouseholderQR<MatrixType> >, internal::assign_op<typename DstXprType::Scalar,typename FullPivHouseholderQR<MatrixType>::Scalar>, Dense2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, Solve<DecType,RhsType>, internal::assign_op<Scalar,Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Diagonal2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Assignment<DstXprType, SrcXprType, Functor, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::add_assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct Assignment<DstXprType, Product<Lhs,Rhs,AliasFreeProduct>, internal::sub_assign_op<typename DstXprType::Scalar,typename Product<Lhs,Rhs,AliasFreeProduct>::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SparseSymmetricPermutationProduct<MatrixType,Mode>, internal::assign_op<Scalar,typename MatrixType::Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct Assignment<DstXprType, SrcXprType, Functor, SparseSelfAdjoint2Sparse>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar,typename DstXprType::Scalar>, Sparse2Dense>$/;"	s	namespace:Eigen::internal
Assignment	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct Assignment<DstXprType, SparseQRMatrixQReturnType<SparseQRType>, internal::assign_op<typename DstXprType::Scalar,typename DstXprType::Scalar>, Sparse2Sparse>$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseTriangularShape> { typedef Sparse2Dense  Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentKind	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	s	namespace:Eigen::internal
AssignmentTraits	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef copy_using_evaluator_traits<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor> AssignmentTraits;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
AssignmentTraits	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AssignmentTraits	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::AssignmentTraits AssignmentTraits;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
AtanReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_atan_op<Scalar>, const Derived> AtanReturnType;$/;"	t
AutoAlign	plugin/Eigen/src/Core/util/Constants.h	/^  AutoAlign = 0,$/;"	e	enum:Eigen::StorageOptions
Aux	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef typename aseq_reverse_first_type_aux<SizeType,IncrType>::type Aux;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type
Ax_lBx	plugin/Eigen/src/Core/util/Constants.h	/^  Ax_lBx              = 0x100,$/;"	e	enum:Eigen::DecompositionOptions
B1	include/darknet.h	/^    float B1;$/;"	m	struct:__anon730
B1	include/darknet.h	/^    float B1;$/;"	m	struct:network
B2	include/darknet.h	/^    float B2;$/;"	m	struct:__anon730
B2	include/darknet.h	/^    float B2;$/;"	m	struct:network
BATCHNORM	include/darknet.h	/^    BATCHNORM,$/;"	e	enum:__anon728
BATCHNORM_LAYER_H	src/batchnorm_layer.h	2;"	d
BAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    BAlignment = traits<OtherDerived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon709
BAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    BAlignment = traits<OtherDerived>::Alignment,$/;"	e	enum:Eigen::internal::quat_product::__anon712
BAx_lx	plugin/Eigen/src/Core/util/Constants.h	/^  BAx_lx              = 0x400,$/;"	e	enum:Eigen::DecompositionOptions
BDCSVD	plugin/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD() : m_algoswap(16), m_numIters(0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	plugin/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	plugin/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::BDCSVD
BDCSVD	plugin/Eigen/src/SVD/BDCSVD.h	/^class BDCSVD : public SVDBase<BDCSVD<_MatrixType> >$/;"	c	namespace:Eigen
BINARY_ACTIVATION	include/darknet.h	/^} BINARY_ACTIVATION;$/;"	t	typeref:enum:__anon727
BLANK	include/darknet.h	/^    BLANK$/;"	e	enum:__anon728
BLASFUNC	plugin/Eigen/src/misc/blas.h	9;"	d
BLASLONG	plugin/Eigen/src/misc/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	plugin/Eigen/src/misc/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASULONG	plugin/Eigen/src/misc/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	plugin/Eigen/src/misc/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLAS_H	plugin/Eigen/src/misc/blas.h	2;"	d
BLAS_H	src/blas.h	2;"	d
BLOCK	include/darknet.h	12;"	d
BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER	plugin/Eigen/src/Core/util/StaticAssert.h	/^        BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
BOX	python/darknet.py	/^class BOX(Structure):$/;"	c
BOX_H	src/box.h	2;"	d
BOX_THRESH	src/rgb2yuyv_neon.cpp	18;"	d	file:
BandMatrix	plugin/Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrix(Index rows=Rows, Index cols=Cols, Index supers=Supers, Index subs=Subs)$/;"	f	class:Eigen::internal::BandMatrix
BandMatrix	plugin/Eigen/src/Core/BandMatrix.h	/^class BandMatrix : public BandMatrixBase<BandMatrix<_Scalar,Rows,Cols,Supers,Subs,Options> >$/;"	c	namespace:Eigen::internal
BandMatrixBase	plugin/Eigen/src/Core/BandMatrix.h	/^class BandMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen::internal
BandMatrixWrapper	plugin/Eigen/src/Core/BandMatrix.h	/^    explicit inline BandMatrixWrapper(const CoefficientsType& coeffs, Index rows=_Rows, Index cols=_Cols, Index supers=_Supers, Index subs=_Subs)$/;"	f	class:Eigen::internal::BandMatrixWrapper
BandMatrixWrapper	plugin/Eigen/src/Core/BandMatrix.h	/^class BandMatrixWrapper : public BandMatrixBase<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	c	namespace:Eigen::internal
BandShape	plugin/Eigen/src/Core/BandMatrix.h	/^struct BandShape {};$/;"	s	namespace:Eigen::internal
BandShape	plugin/Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	s	namespace:Eigen
Base	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodDecomposition> Base;$/;"	t	class:Eigen::CholmodDecomposition
Base	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLDLT
Base	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLLT
Base	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT> Base;$/;"	t	class:Eigen::CholmodSupernodalLLT
Base	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::CholmodBase
Base	plugin/Eigen/src/Core/Array.h	/^    typedef PlainObjectBase<Array> Base;$/;"	t	class:Eigen::Array
Base	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::ArrayBase
Base	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef ArrayBase<ArrayWrapper> Base;$/;"	t	class:Eigen::ArrayWrapper
Base	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef MatrixBase<MatrixWrapper<ExpressionType> > Base;$/;"	t	class:Eigen::MatrixWrapper
Base	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor> Base;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Base	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::internal::BandMatrixBase
Base	plugin/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::Block
Base	plugin/Eigen/src/Core/Block.h	/^    typedef Impl Base;$/;"	t	class:Eigen::BlockImpl
Base	plugin/Eigen/src/Core/Block.h	/^    typedef MapBase<BlockType> Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	plugin/Eigen/src/Core/Block.h	/^    typedef typename internal::dense_xpr_base<BlockType>::type Base;$/;"	t	class:Eigen::internal::BlockImpl_dense
Base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef ternary_evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename dense_xpr_base<EvalToTemp>::type Base;$/;"	t	class:Eigen::internal::EvalToTemp
Base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef unary_evaluator<T> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef typename evaluator<XprType>::InnerIterator Base;$/;"	t	class:Eigen::internal::inner_iterator_selector
Base	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^                                                      BinaryOp>::ret>::Base Base;$/;"	t	class:Eigen::CwiseBinaryOp
Base	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;$/;"	t	class:Eigen::CwiseNullaryOp
Base	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^      CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> >::type Base;$/;"	t	class:Eigen::CwiseTernaryOpImpl
Base	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^      typename internal::traits<Arg1Type>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseTernaryOp
Base	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryOp
Base	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Base	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp, MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryView
Base	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::dense_xpr_base< CwiseUnaryView<ViewOp, MatrixType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	plugin/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename internal::generic_xpr_base<CwiseUnaryView<ViewOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	plugin/Eigen/src/Core/DenseBase.h	/^    typedef DenseCoeffsBase<Derived> Base;$/;"	t	class:Eigen::DenseBase
Base	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, WriteAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	plugin/Eigen/src/Core/Diagonal.h	/^    typedef typename internal::dense_xpr_base<Diagonal>::type Base;$/;"	t	class:Eigen::Diagonal
Base	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    typedef typename internal::dense_xpr_base<ForceAlignedAccess>::type Base;$/;"	t	class:Eigen::ForceAlignedAccess
Base	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename IndexedViewImpl<XprType, RowIndices, ColIndices, typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::IndexedView
Base	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename internal::generic_xpr_base<IndexedView<XprType, RowIndices, ColIndices> >::type Base;$/;"	t	class:Eigen::IndexedViewImpl
Base	plugin/Eigen/src/Core/Inverse.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename internal::generic_xpr_base<Inverse<XprType> >::type Base;$/;"	t	class:Eigen::InverseImpl
Base	plugin/Eigen/src/Core/Map.h	/^    typedef MapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::MapBase
Base	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::MapBase
Base	plugin/Eigen/src/Core/Matrix.h	/^    typedef PlainObjectBase<Matrix> Base;$/;"	t	class:Eigen::Matrix
Base	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::MatrixBase
Base	plugin/Eigen/src/Core/NestByValue.h	/^    typedef typename internal::dense_xpr_base<NestByValue>::type Base;$/;"	t	class:Eigen::NestByValue
Base	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::PermutationBase
Base	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<Map> Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationMatrix> Base;$/;"	t	class:Eigen::PermutationMatrix
Base	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationWrapper> Base;$/;"	t	class:Eigen::PermutationWrapper
Base	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::PlainObjectBase
Base	plugin/Eigen/src/Core/Product.h	/^                                                        internal::product_type<Lhs,Rhs>::ret>::ret>::Base Base;$/;"	t	class:Eigen::Product
Base	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::dense_product_base<Lhs, Rhs, Option> Base;$/;"	t	class:Eigen::ProductImpl
Base	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::ProductImpl
Base	plugin/Eigen/src/Core/Product.h	/^  typedef typename internal::dense_xpr_base<ProductXpr>::type Base;$/;"	t	class:Eigen::internal::dense_product_base
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Lhs, typename Rhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheRight> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef diagonal_product_evaluator_base<Rhs, typename Lhs::DiagonalVectorType, Product<Lhs, Rhs, LazyProduct>, OnTheLeft> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Diagonal<const Product<Lhs, Rhs, LazyProduct>, DiagIndex> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<Product<EIGEN_SCALAR_BINARYOP_EXPR_RETURN_TYPE(Scalar1,Lhs,product), Rhs, DefaultProduct> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<BaseProduct, CoeffBasedProductMode, DenseShape, DenseShape> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef product_evaluator<XprType> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/Ref.h	/^    typedef RefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	plugin/Eigen/src/Core/Ref.h	/^  typedef MapBase<Derived> Base;$/;"	t	class:Eigen::RefBase
Base	plugin/Eigen/src/Core/Replicate.h	/^    typedef typename internal::dense_xpr_base<Replicate>::type Base;$/;"	t	class:Eigen::Replicate
Base	plugin/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::dense_xpr_base<ReturnByValue>::type Base;$/;"	t	class:Eigen::ReturnByValue
Base	plugin/Eigen/src/Core/ReturnByValue.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/Reverse.h	/^    typedef typename internal::dense_xpr_base<Reverse>::type Base;$/;"	t	class:Eigen::Reverse
Base	plugin/Eigen/src/Core/Select.h	/^    typedef typename internal::dense_xpr_base<Select>::type Base;$/;"	t	class:Eigen::Select
Base	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef TriangularBase<SelfAdjointView> Base;$/;"	t	class:Eigen::SelfAdjointView
Base	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	plugin/Eigen/src/Core/Solve.h	/^    typedef typename internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type Base;$/;"	t	class:Eigen::SolveImpl
Base	plugin/Eigen/src/Core/Solve.h	/^  typedef MatrixBase<Solve<Decomposition,RhsType> > Base;$/;"	t	class:Eigen::SolveImpl
Base	plugin/Eigen/src/Core/Solve.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef ReturnByValue<triangular_solve_retval> Base;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Base	plugin/Eigen/src/Core/SolverBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SolverBase
Base	plugin/Eigen/src/Core/Stride.h	/^    typedef Stride<0, Value> Base;$/;"	t	class:Eigen::InnerStride
Base	plugin/Eigen/src/Core/Stride.h	/^    typedef Stride<Value, 0> Base;$/;"	t	class:Eigen::OuterStride
Base	plugin/Eigen/src/Core/Swap.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, BuiltIn> Base;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Base	plugin/Eigen/src/Core/Transpose.h	/^    typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::Transpose
Base	plugin/Eigen/src/Core/Transpose.h	/^    typedef typename internal::TransposeImpl_base<MatrixType>::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	plugin/Eigen/src/Core/Transpose.h	/^  typedef typename internal::generic_xpr_base<Transpose<XprType> >::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	plugin/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Map> Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Transpositions> Base;$/;"	t	class:Eigen::Transpositions
Base	plugin/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<TranspositionsWrapper> Base;$/;"	t	class:Eigen::TranspositionsWrapper
Base	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularBase<TriangularViewType> Base;$/;"	t	class:Eigen::TriangularViewImpl
Base	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularViewImpl<_MatrixType, _Mode, typename internal::traits<_MatrixType>::StorageKind > Base;$/;"	t	class:Eigen::TriangularView
Base	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef evaluator<typename internal::remove_all<MatrixType>::type> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version> Base;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Base	plugin/Eigen/src/Core/VectorBlock.h	/^                     internal::traits<VectorType>::Flags & RowMajorBit ? Size : 1> Base;$/;"	t	class:Eigen::VectorBlock
Base	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::dense_xpr_base<PartialReduxExpr>::type Base;$/;"	t	class:Eigen::PartialReduxExpr
Base	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef blas_traits<NestedXpr> Base;$/;"	t	struct:Eigen::internal::blas_traits
Base	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef SelfAdjointEigenSolver<_MatrixType> Base;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Base	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	plugin/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixBase<Homogeneous> Base;$/;"	t	class:Eigen::Homogeneous
Base	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef evaluator<RefactoredXpr> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef QuaternionBase<Quaternion<_Scalar,_Options> > Base;$/;"	t	class:Eigen::Quaternion
Base	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef RotationBase<Derived, 3> Base;$/;"	t	class:Eigen::QuaternionBase
Base	plugin/Eigen/src/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef DiagonalPreconditioner<_Scalar> Base;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Base	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef IterativeSolverBase<BiCGSTAB> Base;$/;"	t	class:Eigen::BiCGSTAB
Base	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef IterativeSolverBase<ConjugateGradient> Base;$/;"	t	class:Eigen::ConjugateGradient
Base	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> > Base;$/;"	t	class:Eigen::IncompleteCholesky
Base	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseSolverBase<IncompleteLUT> Base;$/;"	t	class:Eigen::IncompleteLUT
Base	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::IterativeSolverBase
Base	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef IterativeSolverBase<LeastSquaresConjugateGradient> Base;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Base	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type Base;$/;"	t	class:Eigen::SolveWithGuess
Base	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef SparseSolverBase<KLU<_MatrixType> > Base;$/;"	t	class:Eigen::KLU
Base	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef SolverBase<FullPivLU> Base;$/;"	t	class:Eigen::FullPivLU
Base	plugin/Eigen/src/LU/PartialPivLU.h	/^    typedef SolverBase<PartialPivLU> Base;$/;"	t	class:Eigen::PartialPivLU
Base	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLDLT<MatrixType, _UpLo> > Base; $/;"	t	class:Eigen::PastixLDLT
Base	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLLT<MatrixType, _UpLo> > Base;$/;"	t	class:Eigen::PastixLLT
Base	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLU<MatrixType> > Base;$/;"	t	class:Eigen::PastixLU
Base	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PastixBase
Base	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLDLT<MatrixType,Options> > Base;$/;"	t	class:Eigen::PardisoLDLT
Base	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLLT<MatrixType,_UpLo> > Base;$/;"	t	class:Eigen::PardisoLLT
Base	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl<PardisoLU> Base;$/;"	t	class:Eigen::PardisoLU
Base	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::PardisoImpl
Base	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseSolverBase<SPQR<_MatrixType> > Base;$/;"	t	class:Eigen::SPQR
Base	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef SVDBase<BDCSVD> Base;$/;"	t	class:Eigen::BDCSVD
Base	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef SVDBase<JacobiSVD> Base;$/;"	t	class:Eigen::JacobiSVD
Base	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialCholesky> Base;$/;"	t	class:Eigen::SimplicialCholesky
Base	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLDLT> Base;$/;"	t	class:Eigen::SimplicialLDLT
Base	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLLT> Base;$/;"	t	class:Eigen::SimplicialLLT
Base	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SimplicialCholeskyBase
Base	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef Map<SparseMatrix<_Scalar, _Flags, _StorageIndex> > Base;$/;"	t	class:Eigen::MappedSparseMatrix
Base	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseCompressedBase<Block<SparseMatrixType,BlockRows,BlockCols,true> > Base;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
Base	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseMatrixBase<BlockType> Base;$/;"	t	class:Eigen::BlockImpl
Base	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef evaluator<SparseCompressedBase<XprType> > Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef internal::sparse_matrix_block_impl<SparseMatrixType,BlockRows,BlockCols> Base;$/;"	t	class:Eigen::BlockImpl
Base	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef SparseMatrixBase<Derived> Base;$/;"	t	class:Eigen::SparseCompressedBase
Base	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef SparseMatrixBase<Derived> Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef sparse_conjunction_evaluator<XprType> Base;$/;"	t	struct:Eigen::internal::binary_evaluator
Base	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Lhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef sparse_dense_outer_product_evaluator<Lhs,Rhs, Rhs::IsRowMajor> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Lhs, Transpose<const typename Rhs::DiagonalVectorType>, Lhs::Flags&RowMajorBit?SDP_AsCwiseProduct:SDP_AsScalarProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef sparse_diagonal_product_evaluator<Rhs, typename Lhs::DiagonalVectorType, Rhs::Flags&RowMajorBit?SDP_AsScalarProduct:SDP_AsCwiseProduct> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseCompressedBase<Derived> Base;$/;"	t	class:Eigen::SparseMapBase
Base	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::SparseMapBase
Base	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef SparseMapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef evaluator<SparseCompressedBase<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseCompressedBase<SparseMatrix> Base;$/;"	t	class:Eigen::SparseMatrix
Base	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef evaluator<SparseCompressedBase<SparseMatrix<_Scalar,_Options,_StorageIndex> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SparseMatrixBase
Base	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::unary_evaluator
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::SparseRefBase<Ref> Base;$/;"	t	class:Eigen::Ref
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMapBase<Derived> Base;$/;"	t	class:Eigen::internal::SparseRefBase
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef evaluator<SparseCompressedBase<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> > > Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef EigenBase<SparseSelfAdjointView> Base;$/;"	t	class:Eigen::SparseSelfAdjointView
Base	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef evaluator<PlainObject> Base;$/;"	t	struct:Eigen::internal::product_evaluator
Base	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef SparseCompressedBase<Transpose<MatrixType> > Base;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Base	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef internal::SparseTransposeImpl<MatrixType> Base;$/;"	t	class:Eigen::TransposeImpl
Base	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      typedef EvalIterator Base;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Base	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef SparseMatrixBase<TriangularViewType> Base;$/;"	t	class:Eigen::TriangularViewImpl
Base	plugin/Eigen/src/SparseCore/SparseVector.h	/^    typedef SparseCompressedBase<SparseVector> Base;$/;"	t	class:Eigen::SparseVector
Base	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef evaluator_base<SparseVectorType> Base;$/;"	t	struct:Eigen::internal::evaluator
Base	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef SparseMatrixBase<SparseView > Base;$/;"	t	class:Eigen::SparseView
Base	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::SparseLUImpl<Scalar, StorageIndex> Base;$/;"	t	class:Eigen::SparseLU
Base	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseSolverBase<SparseQR<_MatrixType,_OrderingType> > Base;$/;"	t	class:Eigen::SparseQR
Base	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseSolverBase<Derived> Base;$/;"	t	class:Eigen::SuperLUBase
Base	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperILU> Base;$/;"	t	class:Eigen::SuperILU
Base	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperLU> Base;$/;"	t	class:Eigen::SuperLU
Base	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseSolverBase<UmfPackLU<_MatrixType> > Base;$/;"	t	class:Eigen::UmfPackLU
Base	plugin/Eigen/src/misc/Image.h	/^  typedef ReturnByValue<image_retval_base> Base;$/;"	t	struct:Eigen::internal::image_retval_base
Base	plugin/Eigen/src/misc/Kernel.h	/^  typedef ReturnByValue<kernel_retval_base> Base;$/;"	t	struct:Eigen::internal::kernel_retval_base
BaseExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class BaseExpr$/;"	c	namespace:Eigen::Symbolic
BaseProduct	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> BaseProduct;$/;"	t	struct:Eigen::internal::product_evaluator
BaseTraits	plugin/Eigen/src/Core/Inverse.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	plugin/Eigen/src/Core/Solve.h	/^  typedef traits<PlainObject> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BaseTraits	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef traits<_MatrixType> BaseTraits;$/;"	t	struct:Eigen::internal::traits
BasisReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime> BasisReturnType;$/;"	t	class:Eigen::MatrixBase
BattleRoyaleWithCheese	src/compare.c	/^void BattleRoyaleWithCheese(char *filename, char *weightfile)$/;"	f
BiCGSTAB	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB() : Base() {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  explicit BiCGSTAB(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^class BiCGSTAB : public IterativeSolverBase<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
BidiagonalType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef BandMatrix<RealScalar, ColsAtCompileTime, ColsAtCompileTime, 1, 0, RowMajor> BidiagonalType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
BinaryOp	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Functor BinaryOp;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
BlasIndex	plugin/Eigen/src/Core/util/MKL_support.h	/^typedef MKL_INT BlasIndex;$/;"	t	namespace:Eigen
BlasIndex	plugin/Eigen/src/Core/util/MKL_support.h	/^typedef int BlasIndex;$/;"	t	namespace:Eigen
BlasLinearMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE BlasLinearMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasLinearMapper
BlasLinearMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^class BlasLinearMapper {$/;"	c	namespace:Eigen::internal
BlasVectorMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE BlasVectorMapper(Scalar *data) : m_data(data) {}$/;"	f	class:Eigen::internal::BlasVectorMapper
BlasVectorMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^class BlasVectorMapper {$/;"	c	namespace:Eigen::internal
Block	plugin/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index i) : Impl(xpr,i)$/;"	f	class:Eigen::Block
Block	plugin/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::Block
Block	plugin/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr,$/;"	f	class:Eigen::Block
Block	plugin/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel> class Block$/;"	c	namespace:Eigen
BlockImpl	plugin/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index i) : Impl(xpr,i) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline BlockImpl(XprType& xpr, Index startRow, Index startCol) : Impl(xpr, startRow, startCol) {}$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/Core/Block.h	/^    inline BlockImpl(XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/Core/Block.h	/^class BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Dense>$/;"	c	namespace:Eigen
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(XprType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockImpl(XprType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline BlockImpl(SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::BlockImpl
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,InnerPanel,Sparse>$/;"	c	namespace:Eigen
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<XprType,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class BlockImpl<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true,Sparse>$/;"	c	namespace:Eigen
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index i)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^    inline BlockImpl_dense(XprType& xpr,$/;"	f	class:Eigen::internal::BlockImpl_dense
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^class BlockImpl_dense<XprType,BlockRows,BlockCols, InnerPanel,true>$/;"	c	namespace:Eigen::internal
BlockImpl_dense	plugin/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class BlockImpl_dense$/;"	c	namespace:Eigen::internal
BlockIndexVector	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<StorageIndex,Dynamic,1> > BlockIndexVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockScalarVector	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Ref<Matrix<Scalar,Dynamic,1> > BlockScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
BlockSize	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^    BlockSize  = meta_least_common_multiple<EIGEN_PLAIN_ENUM_MAX(mr,nr),EIGEN_PLAIN_ENUM_MIN(mr,nr)>::ret$/;"	e	enum:Eigen::internal::tribb_kernel::__anon290
BlockType	plugin/Eigen/src/Core/Block.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::internal::BlockImpl_dense
BlockType	plugin/Eigen/src/Core/IndexedView.h	/^  typedef Block<XprType,RowsAtCompileTime,ColsAtCompileTime,IsInnerPannel> BlockType;$/;"	t	struct:Eigen::internal::traits
BlockType	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MatrixType,Dynamic,Dynamic> BlockType;$/;"	t	struct:Eigen::internal::partial_lu_impl
BlockType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<SparseMatrixType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
BlockType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, InnerPanel> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<XprType, BlockRows, BlockCols, true> BlockType;$/;"	t	class:Eigen::BlockImpl
BlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived> BlockXpr;$/;"	t
BlueNormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_blueNorm,RealScalar>::Type BlueNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
BooleanNotReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_boolean_not_op<Scalar>, const Derived> BooleanNotReturnType;$/;"	t
BothDirections	plugin/Eigen/src/Core/util/Constants.h	/^  BothDirections $/;"	e	enum:Eigen::DirectionType
BottomLeft	plugin/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomLeft	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftCeil	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftFloor	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRight	plugin/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomRight	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightCeil	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightFloor	plugin/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BuildType	plugin/Eigen/src/Core/BandMatrix.h	/^      typedef Block<CoefficientsType,1, DiagonalSize> BuildType;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
BuiltIn	plugin/Eigen/src/Core/util/Constants.h	/^  BuiltIn$/;"	e	enum:Eigen::SpecializedType
CAPTCHA_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
CASE	src/stb_image.h	1338;"	d
CASE	src/stb_image.h	1356;"	d
CASE	src/stb_image.h	4025;"	d
CASE	src/stb_image.h	4038;"	d
CASE	src/stb_image.h	4042;"	d
CASE	src/stb_image.h	4055;"	d
CC	Makefile	/^CC=\/home\/lucas\/Project\/ZCU102\/source\/bsp\/petalinux_2017-4\/tools\/linux-i386\/aarch64-linux-gnu\/bin\/aarch64-linux-gnu-gcc$/;"	m
CC	Makefile	/^CC=gcc$/;"	m
CCP	Makefile	/^CCP=\/home\/lucas\/Project\/ZCU102\/source\/bsp\/petalinux_2017-4\/tools\/linux-i386\/aarch64-linux-gnu\/bin\/aarch64-linux-gnu-g++$/;"	m
CCP	Makefile	/^CCP=g++$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -Wno-unknown-pragmas -Wfatal-errors -fPIC -fpermissive$/;"	m
CHECK_ASM	src/vec_gemm.cpp	17;"	d	file:
CHOLMOD_SUPPORTS_DOUBLE_PRECISION_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        CHOLMOD_SUPPORTS_DOUBLE_PRECISION_ONLY=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
CJMADD	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1672;"	d
CJMADD	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	311;"	d
CJMADD	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	336;"	d
CLASSIFICATION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
COL2IM_H	src/col2im.h	2;"	d
COLAMDOrdering	plugin/Eigen/src/OrderingMethods/Ordering.h	/^class COLAMDOrdering$/;"	c	namespace:Eigen
COLAMD_ASSERT	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	239;"	d
COLAMD_DEBUG0	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	233;"	d
COLAMD_DEBUG1	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	234;"	d
COLAMD_DEBUG2	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	235;"	d
COLAMD_DEBUG3	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	236;"	d
COLAMD_DEBUG4	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	237;"	d
COLAMD_DEFRAG_COUNT	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	72;"	d
COLAMD_DENSE_COL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	69;"	d
COLAMD_DENSE_ROW	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	66;"	d
COLAMD_EMPTY	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	105;"	d
COLAMD_ERROR_A_not_present	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	85;"	d
COLAMD_ERROR_A_too_small	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	91;"	d
COLAMD_ERROR_col_length_negative	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	92;"	d
COLAMD_ERROR_internal_error	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	95;"	d
COLAMD_ERROR_ncol_negative	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	88;"	d
COLAMD_ERROR_nnz_negative	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	89;"	d
COLAMD_ERROR_nrow_negative	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	87;"	d
COLAMD_ERROR_out_of_memory	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	94;"	d
COLAMD_ERROR_p0_nonzero	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	90;"	d
COLAMD_ERROR_p_not_present	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	86;"	d
COLAMD_ERROR_row_index_out_of_bounds	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	93;"	d
COLAMD_INFO1	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	78;"	d
COLAMD_INFO2	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	79;"	d
COLAMD_INFO3	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	80;"	d
COLAMD_KNOBS	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	60;"	d
COLAMD_NDEBUG	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	53;"	d
COLAMD_OK	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	83;"	d
COLAMD_OK_BUT_JUMBLED	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	84;"	d
COLAMD_STATS	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	63;"	d
COLAMD_STATUS	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	75;"	d
COL_IS_ALIVE	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	120;"	d
COL_IS_DEAD	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	119;"	d
COL_IS_DEAD_PRINCIPAL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	121;"	d
COMBO	src/stb_image.h	1337;"	d
COMMON	Makefile	/^COMMON= -Iinclude\/ -Isrc\/ -Iplugin\/$/;"	m
COMPARE_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
CONNECTED	include/darknet.h	/^    CONNECTED,$/;"	e	enum:__anon728
CONNECTED_LAYER_H	src/connected_layer.h	2;"	d
CONSTANT	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
CONVOLUTIONAL	include/darknet.h	/^    CONVOLUTIONAL,$/;"	e	enum:__anon728
CONVOLUTIONAL_LAYER_H	src/convolutional_layer.h	2;"	d
COST	include/darknet.h	/^    COST,$/;"	e	enum:__anon728
COST_LAYER_H	src/cost_layer.h	2;"	d
COST_TYPE	include/darknet.h	/^} COST_TYPE;$/;"	t	typeref:enum:__anon729
CRNN	include/darknet.h	/^    CRNN,$/;"	e	enum:__anon728
CRNN_LAYER_H	src/crnn_layer.h	3;"	d
CROP	include/darknet.h	/^    CROP,$/;"	e	enum:__anon728
CROP_LAYER_H	src/crop_layer.h	2;"	d
CUDA_H	src/cuda.h	2;"	d
CUDNN	Makefile	/^CUDNN=0$/;"	m
CacheSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  CacheSizes(): m_l1(-1),m_l2(-1),m_l3(-1) {$/;"	f	struct:Eigen::internal::CacheSizes
CacheSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct CacheSizes {$/;"	s	namespace:Eigen::internal
CanVectorizeInner	plugin/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeInner =    SameType$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
CanVectorizeLhs	plugin/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeLhs = (!LhsRowMajor) && (LhsFlags & PacketAccessBit) && (RowsAtCompileTime!=1),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
CanVectorizeRhs	plugin/Eigen/src/Core/ProductEvaluators.h	/^    CanVectorizeRhs = bool(RhsRowMajor) && (RhsFlags & PacketAccessBit) && (ColsAtCompileTime!=1),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
CastXpr	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	s
CeilReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_ceil_op<Scalar>, const Derived> CeilReturnType;$/;"	t
CholMatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef MatrixType CholMatrixType;$/;"	t	class:Eigen::CholmodBase
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLLT
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholesky
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> CholMatrixType;$/;"	t	class:Eigen::SimplicialLDLT
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>            CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholMatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, StorageIndex>        CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholmodAuto	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodBase	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase()$/;"	f	class:Eigen::CholmodBase
CholmodBase	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    explicit CholmodBase(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
CholmodBase	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
CholmodDecomposition	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition() : Base() { init(); }$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodDecomposition : public CholmodBase<_MatrixType, _UpLo, CholmodDecomposition<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodLDLt	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodMode	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^enum CholmodMode {$/;"	g	namespace:Eigen
CholmodSimplicialLDLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLDLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLt	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodSupernodalLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSupernodalLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSupernodalLLt	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CodType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef CompleteOrthogonalDecomposition<MatrixType> CodType;$/;"	t	struct:Eigen::internal::Assignment
CoeffBasedProductMode	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
CoeffReadCost	plugin/Eigen/src/Core/BandMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
CoeffReadCost	plugin/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon365
CoeffReadCost	plugin/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = internal::traits<_CoefficientsType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon366
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon509
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon501
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = TraversalSize==Dynamic ? HugeCost$/;"	e	enum:Eigen::internal::evaluator::__anon518
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<Arg1>::CoeffReadCost + evaluator<Arg2>::CoeffReadCost + evaluator<Arg3>::CoeffReadCost + functor_traits<TernaryOp>::Cost,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon505
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon508
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,    $/;"	e	enum:Eigen::internal::unary_evaluator::__anon503
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon512
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon521
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon519
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ArgTypeNestedCleaned>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon516
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<ConditionMatrixType>::CoeffReadCost$/;"	e	enum:Eigen::internal::evaluator::__anon514
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
CoeffReadCost	plugin/Eigen/src/Core/CoreEvaluators.h	/^    CoeffReadCost = internal::functor_traits<NullaryOp>::Cost,$/;"	e	enum:Eigen::internal::evaluator::__anon504
CoeffReadCost	plugin/Eigen/src/Core/IndexedView.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost \/* TODO + cost of row\/col index *\/,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon315
CoeffReadCost	plugin/Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = InnerSize==0 ? NumTraits<Scalar>::ReadCost$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
CoeffReadCost	plugin/Eigen/src/Core/ProductEvaluators.h	/^    CoeffReadCost = NumTraits<Scalar>::MulCost + evaluator<MatrixType>::CoeffReadCost + evaluator<DiagonalType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
CoeffReadCost	plugin/Eigen/src/Core/Redux.h	/^    CoeffReadCost = evaluator<XprType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
CoeffReadCost	plugin/Eigen/src/Core/Solve.h	/^    CoeffReadCost = HugeCost$/;"	e	enum:Eigen::internal::traits::__anon172
CoeffReadCost	plugin/Eigen/src/Core/Visitor.h	/^    CoeffReadCost = internal::evaluator<XprType>::CoeffReadCost$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon286
CoeffReadCost	plugin/Eigen/src/LU/PartialPivLU.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon154
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseBlock.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon75
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon61
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon63
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<Lhs>::CoeffReadCost + evaluator<Rhs>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon65
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon66
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon68
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CoeffReadCost = evaluator<LhsArg>::CoeffReadCost + evaluator<RhsArg>::CoeffReadCost + functor_traits<BinaryOp>::Cost,$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon70
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<UnaryOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon40
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost + functor_traits<ViewOp>::Cost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon41
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    CoeffReadCost = HugeCost$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon39
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon56
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon55
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon38
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon73
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<_Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::evaluator::__anon93
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon43
CoeffReadCost	plugin/Eigen/src/SparseCore/SparseView.h	/^      CoeffReadCost = evaluator<ArgType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon45
CoeffReturnType	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::ArrayBase
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::binary_evaluator
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::ternary_evaluator
CoeffReturnType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::unary_evaluator
CoeffReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::DenseBase
CoeffReturnType	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type CoeffReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
CoeffReturnType	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::unary_evaluator
CoeffReturnType	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MapBase
CoeffReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MatrixBase
CoeffReturnType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::product_evaluator
CoeffReturnType	plugin/Eigen/src/Core/Redux.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
CoeffReturnType	plugin/Eigen/src/Core/SolverBase.h	/^    typedef Scalar CoeffReturnType;$/;"	t	class:Eigen::SolverBase
CoeffReturnType	plugin/Eigen/src/Core/Visitor.h	/^  typedef typename XprType::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::internal::visitor_evaluator
CoeffReturnType	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Coefficients::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::QuaternionBase
CoeffReturnType	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename DenseCoeffsBase<Derived,ReadOnlyAccessors>::CoeffReturnType CoeffReturnType;$/;"	t	struct:Eigen::internal::evaluator
CoeffReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::conditional<_HasDirectAccess, const Scalar&, Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::SparseMatrixBase
CoeffVectorType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::HessenbergDecomposition
CoeffVectorType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::Tridiagonalization
CoeffVectorType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::CoeffVectorType CoeffVectorType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Coefficients	plugin/Eigen/src/Geometry/Hyperplane.h	/^                        : Index(AmbientDimAtCompileTime)+1,1,Options> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<const Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef typename internal::traits<Map>::Coefficients Coefficients;$/;"	t	class:Eigen::Map
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<_Scalar,4,1,_Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Coefficients Coefficients;$/;"	t	class:Eigen::QuaternionBase
Coefficients	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Quaternion>::Coefficients Coefficients;$/;"	t	class:Eigen::Quaternion
CoefficientsType	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrix
CoefficientsType	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixWrapper
CoefficientsType	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixBase
CoefficientsType	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef Matrix<Scalar,DataRowsAtCompileTime,ColsAtCompileTime,Options&RowMajor?RowMajor:ColMajor> CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoefficientsType	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef _CoefficientsType CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoherentAccessPattern	plugin/Eigen/src/SparseCore/SparseUtil.h	/^const int CoherentAccessPattern     = 0x1;$/;"	m	namespace:Eigen
ColIncr	plugin/Eigen/src/Core/IndexedView.h	/^    ColIncr = int(get_compile_time_incr<ColIndices>::value),$/;"	e	enum:Eigen::internal::traits::__anon314
ColMajor	plugin/Eigen/src/Core/util/Constants.h	/^  ColMajor = 0,$/;"	e	enum:Eigen::StorageOptions
ColPivHouseholderQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR()$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    explicit ColPivHouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    explicit ColPivHouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> class ColPivHouseholderQR$/;"	c	namespace:Eigen
ColPivHouseholderQRPreconditioner	plugin/Eigen/src/Core/util/Constants.h	/^  ColPivHouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
ColSpMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor> ColSpMatrix;$/;"	t	class:Eigen::PastixBase
ColSpMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLDLT
ColSpMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLLT
ColSpMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLU
ColType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColType;$/;"	t	class:Eigen::JacobiSVD
ColVectorType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
ColVectorType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
ColXpr	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ColXpr ColXpr;$/;"	t	class:Eigen::MatrixBase
ColXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ColXpr;$/;"	t
Colamd_Row	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct Colamd_Row$/;"	s	namespace:internal
Cols	plugin/Eigen/src/Core/GeneralProduct.h	/^    Cols    = traits<_Rhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
Cols	plugin/Eigen/src/Geometry/Homogeneous.h	/^    Cols = Rhs::ColsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon684
ColsAtCompileTime	plugin/Eigen/src/Cholesky/LDLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon130
ColsAtCompileTime	plugin/Eigen/src/Cholesky/LLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon128
ColsAtCompileTime	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::CholmodBase::__anon142
ColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
ColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon365
ColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon366
ColsAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    ColsAtCompileTime = MatrixCols == 0 ? 0 : BlockCols,$/;"	e	enum:Eigen::internal::traits::__anon562
ColsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = PlainObjectType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon501
ColsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = XprType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon509
ColsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ColsAtCompileTime = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon512
ColsAtCompileTime	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
ColsAtCompileTime	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon556
ColsAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
ColsAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon346
ColsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon343
ColsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon345
ColsAtCompileTime	plugin/Eigen/src/Core/IndexedView.h	/^    ColsAtCompileTime = int(array_size<ColIndices>::value),$/;"	e	enum:Eigen::internal::traits::__anon314
ColsAtCompileTime	plugin/Eigen/src/Core/MapBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon359
ColsAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon677
ColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = PermTraits::ColsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon334
ColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon332
ColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^    ColsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon333
ColsAtCompileTime	plugin/Eigen/src/Core/Product.h	/^    ColsAtCompileTime    = RhsTraits::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon175
ColsAtCompileTime	plugin/Eigen/src/Core/ProductEvaluators.h	/^    ColsAtCompileTime = RhsNestedCleaned::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon318
ColsAtCompileTime	plugin/Eigen/src/Core/Replicate.h	/^    ColsAtCompileTime = ColFactor==Dynamic || int(MatrixType::ColsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon349
ColsAtCompileTime	plugin/Eigen/src/Core/Reverse.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon335
ColsAtCompileTime	plugin/Eigen/src/Core/Select.h	/^    ColsAtCompileTime = ConditionMatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon679
ColsAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
ColsAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    ColsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
ColsAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
ColsAtCompileTime	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon146
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon151
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon150
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon152
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^        ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon145
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon149
ColsAtCompileTime	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon144
ColsAtCompileTime	plugin/Eigen/src/Geometry/Homogeneous.h	/^    ColsAtCompileTime = Direction==Horizontal ? ColsPlusOne : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon681
ColsAtCompileTime	plugin/Eigen/src/Geometry/Transform.h	/^    ColsAtCompileTime = Dim1,$/;"	e	enum:Eigen::internal::traits::__anon701
ColsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^      ColsAtCompileTime = internal::traits<HouseholderSequence>::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon722
ColsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    ColsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon721
ColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::DiagonalPreconditioner::__anon102
ColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::IncompleteCholesky::__anon105
ColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::IncompleteLUT::__anon103
ColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::IterativeSolverBase::__anon110
ColsAtCompileTime	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::KLU::__anon121
ColsAtCompileTime	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::PastixBase::__anon31
ColsAtCompileTime	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::PardisoImpl::__anon28
ColsAtCompileTime	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon719
ColsAtCompileTime	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon717
ColsAtCompileTime	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon715
ColsAtCompileTime	plugin/Eigen/src/QR/HouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon720
ColsAtCompileTime	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SPQR::__anon34
ColsAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon139
ColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon138
ColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon135
ColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon136
ColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon137
ColsAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon131
ColsAtCompileTime	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon140
ColsAtCompileTime	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon163
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon77
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon76
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSelfAdjointView>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon57
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      ColsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::ColsAtCompileTime$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon58
ColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseVector.h	/^    ColsAtCompileTime = IsColVector ? 1 : Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon89
ColsAtCompileTime	plugin/Eigen/src/SparseLU/SparseLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseLU::__anon112
ColsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^      ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon118
ColsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseQR::__anon119
ColsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^    ColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon120
ColsAtCompileTime	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SuperLUBase::__anon37
ColsAtCompileTime	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::UmfPackLU::__anon143
ColsAtCompileTimeMinusOne	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTimeMinusOne = internal::decrement_size<ColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon140
ColsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ColsBlockXpr;$/;"	t
ColsPlusOne	plugin/Eigen/src/Geometry/Homogeneous.h	/^    ColsPlusOne = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon681
ColumnVectorType	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::EigenSolver
ColumnVectorType	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealQZ
ColumnVectorType	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealSchur
ColwiseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Vertical> ColwiseReturnType;$/;"	t	class:Eigen::DenseBase
CommaInitializer	plugin/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	plugin/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	plugin/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(const CommaInitializer& o)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	plugin/Eigen/src/Core/CommaInitializer.h	/^struct CommaInitializer$/;"	s	namespace:Eigen
ComparisonName	plugin/Eigen/src/Core/util/Constants.h	/^enum ComparisonName {$/;"	g	namespace:Eigen::internal
CompleteOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition() : m_cpqr(), m_zCoeffs(), m_temp() {}$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition(Index rows, Index cols)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  explicit CompleteOrthogonalDecomposition(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  explicit CompleteOrthogonalDecomposition(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
CompleteOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^class CompleteOrthogonalDecomposition {$/;"	c	namespace:Eigen
CompleteUnrolling	plugin/Eigen/src/Core/util/Constants.h	/^  CompleteUnrolling$/;"	e	enum:Eigen::UnrollingType
ComplexEigenSolver	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver()$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(Index size)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    explicit ComplexEigenSolver(const EigenBase<InputType>& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^template<typename _MatrixType> class ComplexEigenSolver$/;"	c	namespace:Eigen
ComplexMatrixType	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> ComplexMatrixType;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	struct:Eigen::internal::stem_function
ComplexScalar	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexEigenSolver
ComplexScalar	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::EigenSolver
ComplexScalar	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
ComplexScalar	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealQZ
ComplexScalar	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealSchur
ComplexSchur	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    explicit ComplexSchur(const EigenBase<InputType>& matrix, bool computeU = true)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^template<typename _MatrixType> class ComplexSchur$/;"	c	namespace:Eigen
ComplexVectorType	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ComplexVectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
CompressedAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int CompressedAccessBit = 0x400;$/;"	m	namespace:Eigen
CompressedStorage	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    explicit CompressedStorage(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^class CompressedStorage$/;"	c	namespace:Eigen::internal
ComputationInfo	plugin/Eigen/src/Core/util/Constants.h	/^enum ComputationInfo {$/;"	g	namespace:Eigen
ComputeEigenvectors	plugin/Eigen/src/Core/util/Constants.h	/^  ComputeEigenvectors = 0x80,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullU	plugin/Eigen/src/Core/util/Constants.h	/^  ComputeFullU        = 0x04,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullV	plugin/Eigen/src/Core/util/Constants.h	/^  ComputeFullV        = 0x10,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinU	plugin/Eigen/src/Core/util/Constants.h	/^  ComputeThinU        = 0x08,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinV	plugin/Eigen/src/Core/util/Constants.h	/^  ComputeThinV        = 0x20,$/;"	e	enum:Eigen::DecompositionOptions
ConditionMatrixNested	plugin/Eigen/src/Core/Select.h	/^  typedef typename ConditionMatrixType::Nested ConditionMatrixNested;$/;"	t	struct:Eigen::internal::traits
Conj	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Conj = NumTraits<LhsScalar>::IsComplex$/;"	e	enum:Eigen::internal::scalar_conj_product_op::__anon214
ConjLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
ConjLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
ConjLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
ConjLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
ConjRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
ConjRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
ConjRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
ConjRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
Conjugate	plugin/Eigen/src/Core/BandMatrix.h	/^        Conjugate = ReturnOpposite && NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon364
ConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient() : Base() {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  explicit ConjugateGradient(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^class ConjugateGradient : public IterativeSolverBase<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
ConjugateReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const MatrixConjugateReturnType,UpLo> ConjugateReturnType;$/;"	t	class:Eigen::SelfAdjointView
ConjugateReturnType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const MatrixConjugateReturnType,Mode> ConjugateReturnType;$/;"	t	class:Eigen::TriangularView
ConjugateReturnType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    > ConjugateReturnType;$/;"	t	class:Eigen::HouseholderSequence
ConjugateReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type ConjugateReturnType;$/;"	t
ConstAffinePart	plugin/Eigen/src/Geometry/Transform.h	/^                              const Block<const MatrixType,Dim,HDim> >::type ConstAffinePart;$/;"	t	class:Eigen::Transform
ConstAffinePart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::ConstAffinePart ConstAffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
ConstAlignedMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, AlignedMax> ConstAlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived> ConstBlockXpr;$/;"	t
ConstCholMatrixPtr	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	class:Eigen::SimplicialCholeskyBase
ConstCholMatrixPtr	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef CholMatrixType const * ConstCholMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstColXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ConstColXpr;$/;"	t
ConstColsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ConstColsBlockXpr;$/;"	t
ConstColwiseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Vertical> ConstColwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstDiagonalDynamicIndexReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived,DynamicIndex> >::type ConstDiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalIndexReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
ConstDiagonalReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::add_const<Diagonal<const Derived> >::type ConstDiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
ConstDiagonalReturnType	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<const SparseMatrix> ConstDiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
ConstFixedBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct ConstFixedBlockXpr { typedef Block<const Derived,Rows,Cols> Type; };$/;"	s
ConstFixedSegmentReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	s
ConstInnerVectorReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<const Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true> ConstInnerVectorReturnType;$/;"	t
ConstInnerVectorsReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<const Derived,Dynamic,Dynamic,true> ConstInnerVectorsReturnType;$/;"	t
ConstLinearPart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Unaligned> ConstMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstMatrixPtr	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef MatrixType const * ConstMatrixPtr;$/;"	t	struct:Eigen::internal::simplicial_cholesky_grab_input
ConstMatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef const MatrixType ConstMatrixType;$/;"	t	class:Eigen::Transform
ConstNColsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
ConstNRowsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
ConstNormalReturnType	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef const Block<const Coefficients,AmbientDimAtCompileTime,1> ConstNormalReturnType;$/;"	t	class:Eigen::Hyperplane
ConstReverseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef const Reverse<const Derived, BothDirections> ConstReverseReturnType;$/;"	t	class:Eigen::DenseBase
ConstReverseReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef Reverse<const ExpressionType, Direction> ConstReverseReturnType;$/;"	t	class:Eigen::VectorwiseOp
ConstRowXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowXpr;$/;"	t
ConstRowsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowsBlockXpr;$/;"	t
ConstRowwiseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Horizontal> ConstRowwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstSegmentReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef const VectorBlock<const Derived> ConstSegmentReturnType;$/;"	t
ConstSelfAdjointViewReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
ConstSelfAdjointViewReturnType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<int UpLo> struct ConstSelfAdjointViewReturnType {$/;"	s	class:Eigen::internal::generic_matrix_wrapper
ConstSelfAdjointViewReturnType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<int UpLo> struct ConstSelfAdjointViewReturnType$/;"	s	class:Eigen::internal::generic_matrix_wrapper
ConstSelfAdjointViewReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
ConstStartMinusOne	plugin/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime==1 ? 1 : SizeMinusOne> ConstStartMinusOne;$/;"	t	class:Eigen::MatrixBase
ConstTranslationPart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTransposeReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::DenseBase
ConstTransposeReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ConstTransposeReturnType ConstTransposeReturnType;$/;"	t	class:Eigen::MatrixBase
ConstTransposeReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<const typename MatrixType::ConstTransposeReturnType,TransposeMode> ConstTransposeReturnType;$/;"	t	class:Eigen::SelfAdjointView
ConstTransposeReturnType	plugin/Eigen/src/Core/SolverBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::SolverBase
ConstTransposeReturnType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<const typename MatrixType::ConstTransposeReturnType,TransposeMode> ConstTransposeReturnType;$/;"	t	class:Eigen::TriangularView
ConstTransposeReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::add_const<Transpose<const Derived> >::type ConstTransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConstTriangularViewReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Constant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index rows, Index cols, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index size, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
ConstantBlock	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,1,Cols>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantBlock	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Replicate<const ConstantColumn,Rows,1>                        ConstantBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantBlock	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::ConstantBlock ConstantBlock;$/;"	t	struct:Eigen::internal::product_evaluator
ConstantColumn	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::ConstColXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
ConstantColumn	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::ConstRowXpr                                     ConstantColumn;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
ConstantReturnType	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::ArrayBase
ConstantReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::DenseBase
ConstantReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,PlainObject> ConstantReturnType;$/;"	t	class:Eigen::MatrixBase
ConstantReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ConvertToPacket2l	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static inline Packet2l ConvertToPacket2l(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
CornerType	plugin/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	g	namespace:Eigen
CornerType	plugin/Eigen/src/Geometry/AlignedBox.h	/^  enum CornerType$/;"	g	class:Eigen::AlignedBox
CosReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cos_op<Scalar>, const Derived> CosReturnType;$/;"	t
CoshReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cosh_op<Scalar>, const Derived> CoshReturnType;$/;"	t
Cost	plugin/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon289
Cost	plugin/Eigen/src/Core/Redux.h	/^    Cost = Derived::SizeAtCompileTime == Dynamic ? HugeCost$/;"	e	enum:Eigen::internal::redux_traits::__anon371
Cost	plugin/Eigen/src/Core/VectorwiseOp.h	/^  template<typename Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_lpnorm
Cost	plugin/Eigen/src/Core/VectorwiseOp.h	/^  template<typename _Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_redux
Cost	plugin/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon287
Cost	plugin/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon288
Cost	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon655
Cost	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon656
Cost	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon657
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = 3 * NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon231
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon227
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon228
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon229
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost + NumTraits<DstScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon230
Cost	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    Cost = NumTraits<DstScalar>::ReadCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon226
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon212
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon216
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon217
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon218
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::AddCost+NumTraits<RhsScalar>::AddCost)\/2,$/;"	e	enum:Eigen::internal::functor_traits::__anon221
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon213
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = 3 * NumTraits<Scalar>::AddCost +$/;"	e	enum:Eigen::internal::functor_traits::__anon219
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<LhsScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon215
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon223
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon224
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon225
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    Cost = scalar_div_cost<result_type,PacketAccess>::value$/;"	e	enum:Eigen::internal::functor_traits::__anon222
Cost	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon220
Cost	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^    Cost = 1,$/;"	e	enum:Eigen::internal::functor_traits::__anon234
Cost	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = 0 \/* as the constant value should be loaded in register only once for the whole expression *\/,$/;"	e	enum:Eigen::internal::functor_traits::__anon232
Cost	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon233
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon206
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon207
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon208
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon209
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon204
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon205
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon193
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon194
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon195
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon196
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon197
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon198
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon199
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon200
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon201
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon190
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon191
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon192
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon188
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon189
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon211
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon210
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon202
Cost	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon203
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = $/;"	e	enum:Eigen::internal::functor_traits::__anon284
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = ( (EIGEN_FAST_MATH && is_same<Scalar,float>::value)$/;"	e	enum:Eigen::internal::functor_traits::__anon271
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = (sizeof(Scalar) == 8 ? 28$/;"	e	enum:Eigen::internal::functor_traits::__anon263
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon264
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon265
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon266
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon267
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon268
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon269
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon270
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon272
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon273
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon248
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon249
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? 5 * NumTraits<Scalar>::MulCost : NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon252
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? NumTraits<Scalar>::AddCost : 0,$/;"	e	enum:Eigen::internal::functor_traits::__anon251
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon277
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon278
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon279
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon280
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon281
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon282
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon283
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = functor_traits<scalar_exp_op<Scalar> >::Cost \/\/ TODO measure cost of expm1$/;"	e	enum:Eigen::internal::functor_traits::__anon259
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost = functor_traits<scalar_log_op<Scalar> >::Cost \/\/ TODO measure cost of log1p$/;"	e	enum:Eigen::internal::functor_traits::__anon261
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost =$/;"	e	enum:Eigen::internal::functor_traits::__anon258
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    Cost =$/;"	e	enum:Eigen::internal::functor_traits::__anon260
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon254
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon255
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon256
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon257
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon276
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon262
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon250
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon274
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon275
Cost	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon253
CostOpType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename MemberOp::template Cost<InputScalar,int(TraversalSize)> CostOpType;$/;"	t	struct:Eigen::internal::evaluator
CountReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef PartialReduxExpr<ExpressionType, internal::member_count<Index>, Direction> CountReturnType;$/;"	t	class:Eigen::VectorwiseOp
CrossReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::PlainObject CrossReturnType;$/;"	t	class:Eigen::VectorwiseOp
CubeReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_cube_op<Scalar>, const Derived> CubeReturnType;$/;"	t
CwiseAbs2ReturnType	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs2_op<Scalar>, const Derived> CwiseAbs2ReturnType;$/;"	t
CwiseAbsReturnType	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_abs_op<Scalar>, const Derived> CwiseAbsReturnType;$/;"	t
CwiseBinaryOp	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::CwiseBinaryOp
CwiseBinaryOp	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOp : $/;"	c	namespace:Eigen
CwiseBinaryOpImpl	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOpImpl$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CwiseBinaryOpImpl()$/;"	f	class:Eigen::CwiseBinaryOpImpl
CwiseBinaryOpImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>$/;"	c	namespace:Eigen
CwiseInverseReturnType	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> CwiseInverseReturnType;$/;"	t
CwiseNullaryOp	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    CwiseNullaryOp(Index rows, Index cols, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::CwiseNullaryOp
CwiseNullaryOp	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^class CwiseNullaryOp : public internal::dense_xpr_base< CwiseNullaryOp<NullaryOp, PlainObjectType> >::type, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseProductDenseReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<typename OtherDerived> struct CwiseProductDenseReturnType {$/;"	s	class:Eigen::SparseMatrixBase
CwiseScalarEqualReturnType	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^typedef CwiseBinaryOp<internal::scalar_cmp_op<Scalar,Scalar,internal::cmp_EQ>, const Derived, const ConstantReturnType> CwiseScalarEqualReturnType;$/;"	t
CwiseSignReturnType	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sign_op<Scalar>, const Derived> CwiseSignReturnType;$/;"	t
CwiseSqrtReturnType	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> CwiseSqrtReturnType;$/;"	t
CwiseTernaryOp	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE CwiseTernaryOp(const Arg1& a1, const Arg2& a2,$/;"	f	class:Eigen::CwiseTernaryOp
CwiseTernaryOp	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^class CwiseTernaryOp : public CwiseTernaryOpImpl<$/;"	c	namespace:Eigen
CwiseTernaryOpImpl	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^class CwiseTernaryOpImpl$/;"	c	namespace:Eigen
CwiseUnaryOp	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    explicit CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::CwiseUnaryOp
CwiseUnaryOp	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOp : public CwiseUnaryOpImpl<UnaryOp, XprType, typename internal::traits<XprType>::StorageKind>, internal::no_assignment_operator$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOpImpl$/;"	c	namespace:Eigen
CwiseUnaryView	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    explicit inline CwiseUnaryView(MatrixType& mat, const ViewOp& func = ViewOp())$/;"	f	class:Eigen::CwiseUnaryView
CwiseUnaryView	plugin/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryView : public CwiseUnaryViewImpl<ViewOp, MatrixType, typename internal::traits<MatrixType>::StorageKind>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	plugin/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	plugin/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Dense>$/;"	c	namespace:Eigen
DARKNET_API	include/darknet.h	2;"	d
DATA_H	src/data.h	2;"	d
DEAD	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	109;"	d
DEAD_NON_PRINCIPAL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	113;"	d
DEAD_PRINCIPAL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	112;"	d
DEBUG	Makefile	/^DEBUG=0$/;"	m
DEBUG_PRINT	src/rgb2yuyv_neon.cpp	23;"	d	file:
DECL_GSISX	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	76;"	d
DECL_GSSVX	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	16;"	d
DECONVOLUTIONAL	include/darknet.h	/^    DECONVOLUTIONAL,$/;"	e	enum:__anon728
DECONVOLUTIONAL_LAYER_H	src/deconvolutional_layer.h	2;"	d
DEMO	src/demo.c	12;"	d	file:
DEMO_H	src/demo.h	2;"	d
DEPS	Makefile	/^DEPS = $(wildcard src\/*.h) Makefile include\/darknet.h$/;"	m
DETECTION	include/darknet.h	/^    DETECTION,$/;"	e	enum:__anon728
DETECTION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
DETECTION_LAYER_H	src/detection_layer.h	2;"	d
DET_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
DIV	include/darknet.h	/^    MULT, ADD, SUB, DIV$/;"	e	enum:__anon727
DROPOUT	include/darknet.h	/^    DROPOUT,$/;"	e	enum:__anon728
DROPOUT_LAYER_H	src/dropout_layer.h	2;"	d
DST_CHAN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	65;"	d
DST_CTRL	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	66;"	d
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Data(const XprType& xpr) : BinaryOp(xpr.functor()), lhsImpl(xpr.lhs()), rhsImpl(xpr.rhs()) {}$/;"	f	struct:Eigen::internal::binary_evaluator::Data
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Data(const XprType& xpr) : TernaryOp(xpr.functor()), arg1Impl(xpr.arg1()), arg2Impl(xpr.arg2()), arg3Impl(xpr.arg3()) {}$/;"	f	struct:Eigen::internal::ternary_evaluator::Data
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Data(const XprType& xpr) : UnaryOp(xpr.functor()), argImpl(xpr.nestedExpression()) {}$/;"	f	class:Eigen::internal::unary_evaluator::Data
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Data(const XprType& xpr) : UnaryOp(xpr.functor()), argImpl(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator::Data
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  class Data : private UnaryOp$/;"	c	struct:Eigen::internal::unary_evaluator
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  struct Data : private BinaryOp$/;"	s	struct:Eigen::internal::binary_evaluator
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  struct Data : private TernaryOp$/;"	s	struct:Eigen::internal::ternary_evaluator
Data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  struct Data : private UnaryOp$/;"	s	struct:Eigen::internal::unary_evaluator
DataRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic))$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon363
DataRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon365
DataRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon366
DecompositionOptions	plugin/Eigen/src/Core/util/Constants.h	/^enum DecompositionOptions {$/;"	g	namespace:Eigen
DecompositionType	plugin/Eigen/src/misc/Image.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::image_retval_base
DecompositionType	plugin/Eigen/src/misc/Kernel.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::kernel_retval_base
Default	plugin/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	e	enum:Eigen::Default_t
DefaultProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
DefaultTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  DefaultTraversal,$/;"	e	enum:Eigen::TraversalType
Default_t	plugin/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	g	namespace:Eigen
Defined	plugin/Eigen/src/Core/util/Meta.h	/^  enum { Defined = 0 };$/;"	e	enum:Eigen::scalar_product_traits::__anon483
Dense	plugin/Eigen/src/Core/util/Constants.h	/^struct Dense {};$/;"	s	namespace:Eigen
Dense2Dense	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct Dense2Dense {};$/;"	s	namespace:Eigen::internal
Dense2Triangular	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Dense2Triangular         {};$/;"	s	namespace:Eigen::internal
DenseBase	plugin/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC DenseBase()$/;"	f	class:Eigen::DenseBase
DenseBase	plugin/Eigen/src/Core/DenseBase.h	/^template<typename Derived> class DenseBase$/;"	c	namespace:Eigen
DenseCoeffsBase	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectWriteAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>$/;"	c	namespace:Eigen
DenseIndex	plugin/Eigen/src/Core/util/Meta.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;$/;"	t	namespace:Eigen
DenseMatrix	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef Matrix<Scalar,Dynamic,Dynamic> DenseMatrix;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
DenseMatrixType	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::internal::BandMatrixBase
DenseMatrixType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime, 0, MaxRowsAtCompileTime, MaxColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::DiagonalBase
DenseMatrixType	plugin/Eigen/src/Core/PermutationMatrix.h	/^            DenseMatrixType;$/;"	t	class:Eigen::PermutationBase
DenseMatrixType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::InverseImpl
DenseMatrixType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	class:Eigen::TriangularViewImpl
DenseMatrixType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::FullMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularBase
DenseMatrixType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
DenseShape	plugin/Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	s	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    DenseStorage(const DenseStorage& other) : m_data(other.m_data) {$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() : m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() {$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage() {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(rows)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols) {$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index cols) : m_rows(rows), m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index rows, Index) : m_rows(rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index, Index, Index cols) : m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other) : m_data(other.m_data), m_rows(other.m_rows), m_cols(other.m_cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage(const DenseStorage&) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    explicit DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Cols, int _Options> class DenseStorage<T, Size, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Options> class DenseStorage<T, Size, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Options> class DenseStorage<T, Size, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, 0, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, 0, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, 0, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::DiagonalBase
DenseType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef Derived DenseType;$/;"	t	class:Eigen::PlainObjectBase
DenseType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::TriangularBase
Depth	plugin/Eigen/src/Core/GeneralProduct.h	/^    Depth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
Derived	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Derived	plugin/Eigen/src/Core/Product.h	/^    typedef Product<Lhs, Rhs, Option> Derived;$/;"	t	class:Eigen::ProductImpl
Derived	plugin/Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> Derived;$/;"	t	class:Eigen::SolveImpl
Derived	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
DerivedAlignment	plugin/Eigen/src/Core/Ref.h	/^      DerivedAlignment = int(evaluator<Derived>::Alignment),$/;"	e	enum:Eigen::internal::traits::match::__anon561
DiagCoeffNested	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                                                                       : SparseXprType::ColsAtCompileTime>::type DiagCoeffNested;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
DiagFlags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    DiagFlags = evaluator<DiagonalType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
DiagIndex	plugin/Eigen/src/Core/Diagonal.h	/^    enum { DiagIndex = _DiagIndex };$/;"	e	enum:Eigen::Diagonal::__anon347
DiagIndex	plugin/Eigen/src/Core/SolveTriangular.h	/^    DiagIndex  = IsLower ? LoopIndex : Size - LoopIndex - 1,$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon342
DiagSizeAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime, ColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon139
DiagSizeAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon138
DiagSizeAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon131
DiagVectorType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1> DiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Diagonal	plugin/Eigen/src/Core/Diagonal.h	/^    explicit inline Diagonal(MatrixType& matrix, Index a_index = DiagIndex) : m_matrix(matrix), m_index(a_index)$/;"	f	class:Eigen::Diagonal
Diagonal	plugin/Eigen/src/Core/Diagonal.h	/^template<typename MatrixType, int _DiagIndex> class Diagonal$/;"	c	namespace:Eigen
Diagonal2Dense	plugin/Eigen/src/Core/DiagonalMatrix.h	/^struct Diagonal2Dense {};$/;"	s	namespace:Eigen::internal
Diagonal2Sparse	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Diagonal2Sparse {};$/;"	s	namespace:Eigen::internal
DiagonalBase	plugin/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
DiagonalDynamicIndexReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived,DynamicIndex> DiagonalDynamicIndexReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalIndexReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
DiagonalIntReturnType	plugin/Eigen/src/Core/BandMatrix.h	/^    template<int Index> struct DiagonalIntReturnType {$/;"	s	class:Eigen::internal::BandMatrixBase
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(Index dim) : m_diagonal(dim) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(const MatrixBase<OtherDerived>& other) : m_diagonal(other)$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix() {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalBase<OtherDerived>& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalMatrix& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y) : m_diagonal(x,y) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y, const Scalar& z) : m_diagonal(x,y,z) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalMatrix$/;"	c	namespace:Eigen
DiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner() : m_isInitialized(false) {}$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit DiagonalPreconditioner(const MatType& mat) : m_invdiag(mat.cols())$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class DiagonalPreconditioner$/;"	c	namespace:Eigen
DiagonalReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived> DiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type DiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalReturnType	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef Diagonal<SparseMatrix> DiagonalReturnType;$/;"	t	class:Eigen::SparseMatrix
DiagonalShape	plugin/Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	s	namespace:Eigen
DiagonalSize	plugin/Eigen/src/Core/BandMatrix.h	/^        DiagonalSize = (RowsAtCompileTime==Dynamic || ColsAtCompileTime==Dynamic)$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon364
DiagonalType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type DiagonalType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalVectorType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalWrapper
DiagonalVectorType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalBase
DiagonalVectorType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalMatrix
DiagonalVectorType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Matrix<_Scalar,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1> DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalVectorType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalWrapper	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalWrapper(DiagonalVectorType& a_diagonal) : m_diagonal(a_diagonal) {}$/;"	f	class:Eigen::DiagonalWrapper
DiagonalWrapper	plugin/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalWrapper$/;"	c	namespace:Eigen
DigammaReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_digamma_op<Scalar>, const Derived> DigammaReturnType;$/;"	t
Dim	plugin/Eigen/src/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon685
Dim	plugin/Eigen/src/Geometry/Homogeneous.h	/^    Dim  = Lhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon683
Dim	plugin/Eigen/src/Geometry/Homogeneous.h	/^    Dim = Rhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::homogeneous_left_product_refactoring_helper::__anon684
Dim	plugin/Eigen/src/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon693
Dim	plugin/Eigen/src/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon695
Dim	plugin/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon696
Dim	plugin/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon697
Dim	plugin/Eigen/src/Geometry/Transform.h	/^    Dim = Transform::Dim,$/;"	e	enum:Eigen::internal::transform_traits::__anon700
Dim	plugin/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon705
Dim	plugin/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon706
Dim	plugin/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon707
Dim	plugin/Eigen/src/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon702
Dim	plugin/Eigen/src/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon699
Dim1	plugin/Eigen/src/Geometry/Transform.h	/^    Dim1 = _Dim==Dynamic ? _Dim : _Dim + 1,$/;"	e	enum:Eigen::internal::traits::__anon701
DirectAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int DirectAccessBit = 0x40;$/;"	m	namespace:Eigen
DirectAccessors	plugin/Eigen/src/Core/util/Constants.h	/^  DirectAccessors, $/;"	e	enum:Eigen::AccessorLevels
DirectLinearAccessType	plugin/Eigen/src/Core/util/BlasUtil.h	/^    >::type DirectLinearAccessType;$/;"	t	struct:Eigen::internal::blas_traits
DirectWriteAccessors	plugin/Eigen/src/Core/util/Constants.h	/^  DirectWriteAccessors$/;"	e	enum:Eigen::AccessorLevels
Direction	plugin/Eigen/src/Geometry/Homogeneous.h	/^    enum { Direction = _Direction };$/;"	e	enum:Eigen::Homogeneous::__anon682
DirectionType	plugin/Eigen/src/Core/util/Constants.h	/^enum DirectionType { $/;"	g	namespace:Eigen
DontAlign	plugin/Eigen/src/Core/util/Constants.h	/^  DontAlign = 0x2$/;"	e	enum:Eigen::StorageOptions
DontAlignCols	plugin/Eigen/src/Core/IO.h	/^enum { DontAlignCols = 1 };$/;"	e	enum:Eigen::__anon558
DoublePacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct DoublePacket$/;"	s	namespace:Eigen::internal
DoublePacketType	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef DoublePacket<RealPacket> DoublePacketType;$/;"	t	class:Eigen::internal::gebp_traits
Dst	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluator::XprType Dst;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = DstEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon489
DstAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = Kernel::AssignmentTraits::DstAlignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon498
DstAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstAlignment = Kernel::AssignmentTraits::DstAlignment$/;"	e	enum:Eigen::internal::dense_assignment_loop::__anon499
DstEvaluatorType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef DstEvaluatorTypeT DstEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstEvaluatorType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstEvaluatorType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstEvaluatorType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstEvaluatorType DstEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstEvaluatorType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::DstEvaluatorType DstEvaluatorType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
DstFlags	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstFlags = DstEvaluator::Flags,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon488
DstHasDirectAccess	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstHasDirectAccess = (DstFlags & DirectAccessBit) == DirectAccessBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon489
DstHasDirectAccess	plugin/Eigen/src/Core/Assign_MKL.h	/^      DstHasDirectAccess = Dst::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
DstIndex	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex DstIndex;$/;"	t	struct:Eigen::internal::Assignment
DstIsRowMajor	plugin/Eigen/src/Core/AssignEvaluator.h	/^    DstIsRowMajor = DstFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
DstScalar	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Dst::Scalar DstScalar;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
DstXprType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
DstXprType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
DstXprType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorTypeT::XprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	plugin/Eigen/src/Core/Swap.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
DstXprType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::DstXprType DstXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
DstXprType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename DstEvaluatorType::XprType DstXprType;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Dynamic	plugin/Eigen/src/Core/util/Constants.h	/^const int Dynamic = -1;$/;"	m	namespace:Eigen
DynamicIndex	plugin/Eigen/src/Core/util/Constants.h	/^const int DynamicIndex = 0xffffff;$/;"	m	namespace:Eigen
EIGEN	Makefile	/^EIGEN=1$/;"	m
EIGEN_ALIGN16	plugin/Eigen/src/Core/util/Macros.h	793;"	d
EIGEN_ALIGN32	plugin/Eigen/src/Core/util/Macros.h	794;"	d
EIGEN_ALIGN64	plugin/Eigen/src/Core/util/Macros.h	795;"	d
EIGEN_ALIGN8	plugin/Eigen/src/Core/util/Macros.h	792;"	d
EIGEN_ALIGNEDBOX_H	plugin/Eigen/src/Geometry/AlignedBox.h	11;"	d
EIGEN_ALIGNED_ALLOCA	plugin/Eigen/src/Core/util/Memory.h	629;"	d
EIGEN_ALIGNED_ALLOCATOR	plugin/Eigen/src/StlSupport/details.h	15;"	d
EIGEN_ALIGN_MAX	plugin/Eigen/src/Core/util/Macros.h	797;"	d
EIGEN_ALIGN_TO_BOUNDARY	plugin/Eigen/src/Core/util/Macros.h	690;"	d
EIGEN_ALLANDANY_H	plugin/Eigen/src/Core/BooleanRedux.h	11;"	d
EIGEN_ALLOCA	plugin/Eigen/src/Core/util/Memory.h	547;"	d
EIGEN_ALLOCA	plugin/Eigen/src/Core/util/Memory.h	549;"	d
EIGEN_ALWAYS_INLINE	plugin/Eigen/src/Core/util/Macros.h	539;"	d
EIGEN_ALWAYS_INLINE	plugin/Eigen/src/Core/util/Macros.h	541;"	d
EIGEN_AMBIVECTOR_H	plugin/Eigen/src/SparseCore/AmbiVector.h	11;"	d
EIGEN_ANGLEAXIS_H	plugin/Eigen/src/Geometry/AngleAxis.h	11;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	563;"	d
EIGEN_APPLE_DOUBLE_NEON_BUG	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	565;"	d
EIGEN_ARCH_ARM	plugin/Eigen/src/Core/util/Macros.h	172;"	d
EIGEN_ARCH_ARM	plugin/Eigen/src/Core/util/Macros.h	174;"	d
EIGEN_ARCH_ARM64	plugin/Eigen/src/Core/util/Macros.h	179;"	d
EIGEN_ARCH_ARM64	plugin/Eigen/src/Core/util/Macros.h	181;"	d
EIGEN_ARCH_ARM_OR_ARM64	plugin/Eigen/src/Core/util/Macros.h	185;"	d
EIGEN_ARCH_ARM_OR_ARM64	plugin/Eigen/src/Core/util/Macros.h	187;"	d
EIGEN_ARCH_CONJ_HELPER_H	plugin/Eigen/src/Core/arch/Default/ConjHelper.h	12;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	31;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/Default/Settings.h	46;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	33;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	22;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	32;"	d
EIGEN_ARCH_IA64	plugin/Eigen/src/Core/util/Macros.h	206;"	d
EIGEN_ARCH_IA64	plugin/Eigen/src/Core/util/Macros.h	208;"	d
EIGEN_ARCH_MIPS	plugin/Eigen/src/Core/util/Macros.h	192;"	d
EIGEN_ARCH_MIPS	plugin/Eigen/src/Core/util/Macros.h	194;"	d
EIGEN_ARCH_PPC	plugin/Eigen/src/Core/util/Macros.h	213;"	d
EIGEN_ARCH_PPC	plugin/Eigen/src/Core/util/Macros.h	215;"	d
EIGEN_ARCH_SPARC	plugin/Eigen/src/Core/util/Macros.h	199;"	d
EIGEN_ARCH_SPARC	plugin/Eigen/src/Core/util/Macros.h	201;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	plugin/Eigen/src/Core/util/Macros.h	762;"	d
EIGEN_ARCH_i386	plugin/Eigen/src/Core/util/Macros.h	159;"	d
EIGEN_ARCH_i386	plugin/Eigen/src/Core/util/Macros.h	161;"	d
EIGEN_ARCH_i386_OR_x86_64	plugin/Eigen/src/Core/util/Macros.h	165;"	d
EIGEN_ARCH_i386_OR_x86_64	plugin/Eigen/src/Core/util/Macros.h	167;"	d
EIGEN_ARCH_x86_64	plugin/Eigen/src/Core/util/Macros.h	153;"	d
EIGEN_ARCH_x86_64	plugin/Eigen/src/Core/util/Macros.h	155;"	d
EIGEN_ARITHMETIC_SEQUENCE_H	plugin/Eigen/src/Core/ArithmeticSequence.h	11;"	d
EIGEN_ARM_PREFETCH	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	89;"	d
EIGEN_ARM_PREFETCH	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	91;"	d
EIGEN_ARM_PREFETCH	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	93;"	d
EIGEN_ARM_PREFETCH	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	95;"	d
EIGEN_ARM_PREFETCH	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	98;"	d
EIGEN_ARRAYBASE_H	plugin/Eigen/src/Core/ArrayBase.h	11;"	d
EIGEN_ARRAYWRAPPER_H	plugin/Eigen/src/Core/ArrayWrapper.h	11;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_EIGEN_UNARY	plugin/Eigen/src/Core/GlobalFunctions.h	38;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	plugin/Eigen/src/Core/GlobalFunctions.h	16;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_UNARY	plugin/Eigen/src/Core/GlobalFunctions.h	29;"	d
EIGEN_ARRAY_H	plugin/Eigen/src/Core/Array.h	11;"	d
EIGEN_ASM_COMMENT	plugin/Eigen/src/Core/util/Macros.h	654;"	d
EIGEN_ASSIGNMENT_FUNCTORS_H	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	11;"	d
EIGEN_ASSIGN_EVALUATOR_H	plugin/Eigen/src/Core/AssignEvaluator.h	13;"	d
EIGEN_ASSIGN_H	plugin/Eigen/src/Core/Assign.h	13;"	d
EIGEN_ASSIGN_VML_H	plugin/Eigen/src/Core/Assign_MKL.h	35;"	d
EIGEN_BANDMATRIX_H	plugin/Eigen/src/Core/BandMatrix.h	11;"	d
EIGEN_BASIC_PRECONDITIONERS_H	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	11;"	d
EIGEN_BDCSVD_H	plugin/Eigen/src/SVD/BDCSVD.h	21;"	d
EIGEN_BICGSTAB_H	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	12;"	d
EIGEN_BIDIAGONALIZATION_H	plugin/Eigen/src/SVD/UpperBidiagonalization.h	12;"	d
EIGEN_BINARY_FUNCTORS_H	plugin/Eigen/src/Core/functors/BinaryFunctors.h	11;"	d
EIGEN_BLASUTIL_H	plugin/Eigen/src/Core/util/BlasUtil.h	11;"	d
EIGEN_BLAS_GEMV_SPECIALIZATION	plugin/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	88;"	d
EIGEN_BLAS_GEMV_SPECIALIZE	plugin/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	52;"	d
EIGEN_BLAS_HEMM_L	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	90;"	d
EIGEN_BLAS_HEMM_R	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	212;"	d
EIGEN_BLAS_RANKUPDATE_C	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	96;"	d
EIGEN_BLAS_RANKUPDATE_R	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	75;"	d
EIGEN_BLAS_RANKUPDATE_SPECIALIZE	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	47;"	d
EIGEN_BLAS_SYMM_L	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	43;"	d
EIGEN_BLAS_SYMM_R	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	166;"	d
EIGEN_BLAS_SYMV_SPECIALIZATION	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	74;"	d
EIGEN_BLAS_SYMV_SPECIALIZE	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	50;"	d
EIGEN_BLAS_TRMM_L	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	78;"	d
EIGEN_BLAS_TRMM_R	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	196;"	d
EIGEN_BLAS_TRMM_SPECIALIZE	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	53;"	d
EIGEN_BLAS_TRMV_CM	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	74;"	d
EIGEN_BLAS_TRMV_RM	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	163;"	d
EIGEN_BLAS_TRMV_SPECIALIZE	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	50;"	d
EIGEN_BLAS_TRSM_L	plugin/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	41;"	d
EIGEN_BLAS_TRSM_R	plugin/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	100;"	d
EIGEN_BLOCK_H	plugin/Eigen/src/Core/Block.h	12;"	d
EIGEN_BLOCK_HOUSEHOLDER_H	plugin/Eigen/src/Householder/BlockHouseholder.h	12;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/Default/Settings.h	31;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	20;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	20;"	d
EIGEN_CAT	plugin/Eigen/src/Core/util/Macros.h	511;"	d
EIGEN_CAT2	plugin/Eigen/src/Core/util/Macros.h	510;"	d
EIGEN_CATCH	plugin/Eigen/src/Core/util/Macros.h	1009;"	d
EIGEN_CATCH_ASSIGN_XPR_OP_PRODUCT	plugin/Eigen/src/Core/ProductEvaluators.h	228;"	d
EIGEN_CHECK_BINARY_COMPATIBILIY	plugin/Eigen/src/Core/util/XprHelper.h	829;"	d
EIGEN_CHOLMODSUPPORT_H	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	11;"	d
EIGEN_CHOLMOD_SPECIALIZE0	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	169;"	d
EIGEN_CHOLMOD_SPECIALIZE0	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	197;"	d
EIGEN_CHOLMOD_SPECIALIZE1	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	173;"	d
EIGEN_CHOLMOD_SPECIALIZE1	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	198;"	d
EIGEN_COLAMD_H	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	48;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_H	plugin/Eigen/src/QR/ColPivHouseholderQR.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_LAPACKE_H	plugin/Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	35;"	d
EIGEN_COMMA	plugin/Eigen/src/Core/util/Macros.h	513;"	d
EIGEN_COMMAINITIALIZER_H	plugin/Eigen/src/Core/CommaInitializer.h	12;"	d
EIGEN_COMPLETEORTHOGONALDECOMPOSITION_H	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	11;"	d
EIGEN_COMPLEX32_ALTIVEC_H	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	12;"	d
EIGEN_COMPLEX32_ALTIVEC_H	plugin/Eigen/src/Core/arch/ZVector/Complex.h	12;"	d
EIGEN_COMPLEX_AVX_H	plugin/Eigen/src/Core/arch/AVX/Complex.h	11;"	d
EIGEN_COMPLEX_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/Complex.h	11;"	d
EIGEN_COMPLEX_EIGEN_SOLVER_H	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	13;"	d
EIGEN_COMPLEX_NEON_H	plugin/Eigen/src/Core/arch/NEON/Complex.h	12;"	d
EIGEN_COMPLEX_SCHUR_H	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	13;"	d
EIGEN_COMPLEX_SCHUR_LAPACKE_H	plugin/Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	34;"	d
EIGEN_COMPLEX_SSE_H	plugin/Eigen/src/Core/arch/SSE/Complex.h	11;"	d
EIGEN_COMPRESSED_STORAGE_H	plugin/Eigen/src/SparseCore/CompressedStorage.h	11;"	d
EIGEN_COMP_ARM	plugin/Eigen/src/Core/util/Macros.h	111;"	d
EIGEN_COMP_ARM	plugin/Eigen/src/Core/util/Macros.h	113;"	d
EIGEN_COMP_CLANG	plugin/Eigen/src/Core/util/Macros.h	33;"	d
EIGEN_COMP_CLANG	plugin/Eigen/src/Core/util/Macros.h	35;"	d
EIGEN_COMP_EMSCRIPTEN	plugin/Eigen/src/Core/util/Macros.h	118;"	d
EIGEN_COMP_EMSCRIPTEN	plugin/Eigen/src/Core/util/Macros.h	120;"	d
EIGEN_COMP_GNUC	plugin/Eigen/src/Core/util/Macros.h	26;"	d
EIGEN_COMP_GNUC	plugin/Eigen/src/Core/util/Macros.h	28;"	d
EIGEN_COMP_GNUC_STRICT	plugin/Eigen/src/Core/util/Macros.h	126;"	d
EIGEN_COMP_GNUC_STRICT	plugin/Eigen/src/Core/util/Macros.h	128;"	d
EIGEN_COMP_IBM	plugin/Eigen/src/Core/util/Macros.h	97;"	d
EIGEN_COMP_IBM	plugin/Eigen/src/Core/util/Macros.h	99;"	d
EIGEN_COMP_ICC	plugin/Eigen/src/Core/util/Macros.h	48;"	d
EIGEN_COMP_ICC	plugin/Eigen/src/Core/util/Macros.h	50;"	d
EIGEN_COMP_LLVM	plugin/Eigen/src/Core/util/Macros.h	41;"	d
EIGEN_COMP_LLVM	plugin/Eigen/src/Core/util/Macros.h	43;"	d
EIGEN_COMP_MINGW	plugin/Eigen/src/Core/util/Macros.h	55;"	d
EIGEN_COMP_MINGW	plugin/Eigen/src/Core/util/Macros.h	57;"	d
EIGEN_COMP_MSVC	plugin/Eigen/src/Core/util/Macros.h	69;"	d
EIGEN_COMP_MSVC	plugin/Eigen/src/Core/util/Macros.h	71;"	d
EIGEN_COMP_MSVC_STRICT	plugin/Eigen/src/Core/util/Macros.h	90;"	d
EIGEN_COMP_MSVC_STRICT	plugin/Eigen/src/Core/util/Macros.h	92;"	d
EIGEN_COMP_PGI	plugin/Eigen/src/Core/util/Macros.h	104;"	d
EIGEN_COMP_PGI	plugin/Eigen/src/Core/util/Macros.h	106;"	d
EIGEN_COMP_SUNCC	plugin/Eigen/src/Core/util/Macros.h	62;"	d
EIGEN_COMP_SUNCC	plugin/Eigen/src/Core/util/Macros.h	64;"	d
EIGEN_CONDITIONESTIMATOR_H	plugin/Eigen/src/Core/ConditionEstimator.h	11;"	d
EIGEN_CONJUGATE_GRADIENT_H	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	11;"	d
EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	11;"	d
EIGEN_CONSTANTS_H	plugin/Eigen/src/Core/util/Constants.h	12;"	d
EIGEN_CONST_CONDITIONAL	plugin/Eigen/src/Core/util/Macros.h	664;"	d
EIGEN_COREEVALUATORS_H	plugin/Eigen/src/Core/CoreEvaluators.h	14;"	d
EIGEN_COREITERATORS_H	plugin/Eigen/src/Core/CoreIterators.h	11;"	d
EIGEN_CPUID	plugin/Eigen/src/Core/util/Memory.h	765;"	d
EIGEN_CPUID	plugin/Eigen/src/Core/util/Memory.h	770;"	d
EIGEN_CPUID	plugin/Eigen/src/Core/util/Memory.h	774;"	d
EIGEN_CPUID	plugin/Eigen/src/Core/util/Memory.h	779;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/ArrayBase.h	100;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/ArrayBase.h	90;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/DenseBase.h	570;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/DenseBase.h	580;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/MatrixBase.h	124;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/Core/MatrixBase.h	132;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	147;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	165;"	d
EIGEN_CWISE_BINARY_OP_H	plugin/Eigen/src/Core/CwiseBinaryOp.h	12;"	d
EIGEN_CWISE_BINARY_RETURN_TYPE	plugin/Eigen/src/Core/util/Macros.h	946;"	d
EIGEN_CWISE_NULLARY_OP_H	plugin/Eigen/src/Core/CwiseNullaryOp.h	11;"	d
EIGEN_CWISE_TERNARY_OP_H	plugin/Eigen/src/Core/CwiseTernaryOp.h	13;"	d
EIGEN_CWISE_UNARY_OP_H	plugin/Eigen/src/Core/CwiseUnaryOp.h	12;"	d
EIGEN_CWISE_UNARY_VIEW_H	plugin/Eigen/src/Core/CwiseUnaryView.h	11;"	d
EIGEN_DBG_SPARSE	plugin/Eigen/src/SparseCore/SparseUtil.h	16;"	d
EIGEN_DEBUG_ALIGNED_LOAD	plugin/Eigen/src/Core/GenericPacketMath.h	27;"	d
EIGEN_DEBUG_ALIGNED_STORE	plugin/Eigen/src/Core/GenericPacketMath.h	35;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	plugin/Eigen/src/Core/GenericPacketMath.h	31;"	d
EIGEN_DEBUG_UNALIGNED_STORE	plugin/Eigen/src/Core/GenericPacketMath.h	39;"	d
EIGEN_DEBUG_VAR	plugin/Eigen/src/Core/util/Macros.h	507;"	d
EIGEN_DECLARE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	plugin/Eigen/src/Core/util/Macros.h	562;"	d
EIGEN_DEFAULT_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	819;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	plugin/Eigen/src/Core/util/Macros.h	341;"	d
EIGEN_DEFAULT_IO_FORMAT	plugin/Eigen/src/Core/util/Macros.h	848;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	plugin/Eigen/src/Core/util/Macros.h	335;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	plugin/Eigen/src/Core/util/Macros.h	337;"	d
EIGEN_DEFAULT_SETTINGS_H	plugin/Eigen/src/Core/arch/Default/Settings.h	17;"	d
EIGEN_DEFINE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	plugin/Eigen/src/Core/util/Macros.h	563;"	d
EIGEN_DEFINE_STL_DEQUE_SPECIALIZATION	plugin/Eigen/src/StlSupport/StdDeque.h	21;"	d
EIGEN_DEFINE_STL_LIST_SPECIALIZATION	plugin/Eigen/src/StlSupport/StdList.h	20;"	d
EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION	plugin/Eigen/src/StlSupport/StdVector.h	21;"	d
EIGEN_DENSEBASE_H	plugin/Eigen/src/Core/DenseBase.h	12;"	d
EIGEN_DENSECOEFFSBASE_H	plugin/Eigen/src/Core/DenseCoeffsBase.h	11;"	d
EIGEN_DENSESTORAGEBASE_H	plugin/Eigen/src/Core/PlainObjectBase.h	12;"	d
EIGEN_DENSE_PUBLIC_INTERFACE	plugin/Eigen/src/Core/util/Macros.h	911;"	d
EIGEN_DEPRECATED	plugin/Eigen/src/Core/util/Macros.h	628;"	d
EIGEN_DETERMINANT_H	plugin/Eigen/src/LU/Determinant.h	11;"	d
EIGEN_DIAGONALMATRIX_H	plugin/Eigen/src/Core/DiagonalMatrix.h	12;"	d
EIGEN_DIAGONALPRODUCT_H	plugin/Eigen/src/Core/DiagonalProduct.h	12;"	d
EIGEN_DIAGONAL_H	plugin/Eigen/src/Core/Diagonal.h	12;"	d
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	plugin/Eigen/src/Core/util/Macros.h	782;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	plugin/Eigen/src/Core/DenseBase.h	572;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	plugin/Eigen/src/Core/DenseBase.h	582;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	151;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	155;"	d
EIGEN_DOC_BLOCK_ADDONS_INNER_PANEL_IF	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	168;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	plugin/Eigen/src/Core/DenseBase.h	571;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	plugin/Eigen/src/Core/DenseBase.h	581;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	150;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	154;"	d
EIGEN_DOC_BLOCK_ADDONS_NOT_INNER_PANEL	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	167;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/ArrayBase.h	101;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/ArrayBase.h	91;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/DenseBase.h	573;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/DenseBase.h	583;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/MatrixBase.h	125;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/Core/MatrixBase.h	133;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	149;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	153;"	d
EIGEN_DOC_UNARY_ADDONS	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	166;"	d
EIGEN_DONT_INLINE	plugin/Eigen/src/Core/util/Macros.h	545;"	d
EIGEN_DONT_INLINE	plugin/Eigen/src/Core/util/Macros.h	547;"	d
EIGEN_DONT_INLINE	plugin/Eigen/src/Core/util/Macros.h	549;"	d
EIGEN_DOT_H	plugin/Eigen/src/Core/Dot.h	11;"	d
EIGEN_EIGENBASE_H	plugin/Eigen/src/Core/EigenBase.h	12;"	d
EIGEN_EIGENSOLVER_H	plugin/Eigen/src/Eigenvalues/EigenSolver.h	12;"	d
EIGEN_EMPTY	plugin/Eigen/src/Core/util/Macros.h	855;"	d
EIGEN_EMPTY_STRUCT_CTOR	plugin/Eigen/src/Core/util/XprHelper.h	18;"	d
EIGEN_EMPTY_STRUCT_CTOR	plugin/Eigen/src/Core/util/XprHelper.h	22;"	d
EIGEN_EULERANGLES_H	plugin/Eigen/src/Geometry/EulerAngles.h	11;"	d
EIGEN_EXCEPTION_SPEC	plugin/Eigen/src/Core/CommaInitializer.h	/^  EIGEN_EXCEPTION_SPEC(Eigen::eigen_assert_exception)$/;"	f	struct:Eigen::CommaInitializer
EIGEN_EXCEPTION_SPEC	plugin/Eigen/src/Core/util/Macros.h	1028;"	d
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(bool) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(double) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(float) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(int) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(long long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(short) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(signed char) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned char) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned int) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned long long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned long) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_EXPLICIT_CAST(unsigned short) const {$/;"	f	struct:Eigen::half
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	40;"	d
EIGEN_EXPLICIT_CAST	plugin/Eigen/src/Core/arch/CUDA/Half.h	42;"	d
EIGEN_EXPR_BINARYOP_SCALAR_RETURN_TYPE	plugin/Eigen/src/Core/util/Macros.h	967;"	d
EIGEN_EXTRACT_8f_FROM_16f	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	648;"	d
EIGEN_EXTRACT_8f_FROM_16f	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	652;"	d
EIGEN_FAST_MATH	plugin/Eigen/src/Core/util/Macros.h	504;"	d
EIGEN_FORCEALIGNEDACCESS_H	plugin/Eigen/src/Core/ForceAlignedAccess.h	11;"	d
EIGEN_FORWARDDECLARATIONS_H	plugin/Eigen/src/Core/util/ForwardDeclarations.h	12;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	46;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	48;"	d
EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H	plugin/Eigen/src/QR/FullPivHouseholderQR.h	12;"	d
EIGEN_FUZZY_H	plugin/Eigen/src/Core/Fuzzy.h	12;"	d
EIGEN_GCC3_OR_OLDER	plugin/Eigen/src/Core/util/Macros.h	144;"	d
EIGEN_GCC3_OR_OLDER	plugin/Eigen/src/Core/util/Macros.h	146;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	plugin/Eigen/src/Core/util/Macros.h	747;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1096;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1133;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1200;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1242;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1301;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1336;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1392;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1429;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1471;"	d
EIGEN_GEBGP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1504;"	d
EIGEN_GEBP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1023;"	d
EIGEN_GEBP_ONESTEP	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	970;"	d
EIGEN_GEMM_TO_COEFFBASED_THRESHOLD	plugin/Eigen/src/Core/GeneralProduct.h	28;"	d
EIGEN_GENERALIZEDEIGENSOLVER_H	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	13;"	d
EIGEN_GENERALIZEDSELFADJOINTEIGENSOLVER_H	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	12;"	d
EIGEN_GENERAL_BLOCK_PANEL_H	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_BLAS_H	plugin/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_H	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_BLAS_H	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_H	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	11;"	d
EIGEN_GENERAL_MATRIX_VECTOR_BLAS_H	plugin/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	34;"	d
EIGEN_GENERAL_MATRIX_VECTOR_H	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	11;"	d
EIGEN_GENERAL_PRODUCT_H	plugin/Eigen/src/Core/GeneralProduct.h	12;"	d
EIGEN_GENERIC_PACKET_MATH_H	plugin/Eigen/src/Core/GenericPacketMath.h	12;"	d
EIGEN_GENERIC_PUBLIC_INTERFACE	plugin/Eigen/src/Core/util/Macros.h	892;"	d
EIGEN_GEOMETRY_SSE_H	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	12;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	36;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	38;"	d
EIGEN_GLOBAL_FUNCTIONS_H	plugin/Eigen/src/Core/GlobalFunctions.h	12;"	d
EIGEN_GNUC_AT	plugin/Eigen/src/Core/util/Macros.h	135;"	d
EIGEN_GNUC_AT	plugin/Eigen/src/Core/util/Macros.h	139;"	d
EIGEN_GNUC_AT_LEAST	plugin/Eigen/src/Core/util/Macros.h	133;"	d
EIGEN_GNUC_AT_LEAST	plugin/Eigen/src/Core/util/Macros.h	137;"	d
EIGEN_GNUC_AT_MOST	plugin/Eigen/src/Core/util/Macros.h	134;"	d
EIGEN_GNUC_AT_MOST	plugin/Eigen/src/Core/util/Macros.h	138;"	d
EIGEN_HALF_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/Half.h	37;"	d
EIGEN_HAS_BUILTIN	plugin/Eigen/src/Core/util/Macros.h	346;"	d
EIGEN_HAS_BUILTIN	plugin/Eigen/src/Core/util/Macros.h	348;"	d
EIGEN_HAS_C99_MATH	plugin/Eigen/src/Core/util/Macros.h	403;"	d
EIGEN_HAS_C99_MATH	plugin/Eigen/src/Core/util/Macros.h	405;"	d
EIGEN_HAS_CONSTEXPR	plugin/Eigen/src/Core/util/Macros.h	448;"	d
EIGEN_HAS_CONSTEXPR	plugin/Eigen/src/Core/util/Macros.h	453;"	d
EIGEN_HAS_CONSTEXPR	plugin/Eigen/src/Core/util/Macros.h	457;"	d
EIGEN_HAS_CXX11	plugin/Eigen/src/Core/util/Macros.h	373;"	d
EIGEN_HAS_CXX11	plugin/Eigen/src/Core/util/Macros.h	375;"	d
EIGEN_HAS_CXX11_CONTAINERS	plugin/Eigen/src/Core/util/Macros.h	479;"	d
EIGEN_HAS_CXX11_CONTAINERS	plugin/Eigen/src/Core/util/Macros.h	481;"	d
EIGEN_HAS_CXX11_MATH	plugin/Eigen/src/Core/util/Macros.h	467;"	d
EIGEN_HAS_CXX11_MATH	plugin/Eigen/src/Core/util/Macros.h	469;"	d
EIGEN_HAS_CXX11_NOEXCEPT	plugin/Eigen/src/Core/util/Macros.h	492;"	d
EIGEN_HAS_CXX11_NOEXCEPT	plugin/Eigen/src/Core/util/Macros.h	494;"	d
EIGEN_HAS_CXX14	plugin/Eigen/src/Core/util/Macros.h	379;"	d
EIGEN_HAS_CXX14	plugin/Eigen/src/Core/util/Macros.h	381;"	d
EIGEN_HAS_RVALUE_REFERENCES	plugin/Eigen/src/Core/util/Macros.h	390;"	d
EIGEN_HAS_RVALUE_REFERENCES	plugin/Eigen/src/Core/util/Macros.h	392;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	26;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	28;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_CJMADD	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	28;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	22;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	24;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	27;"	d
EIGEN_HAS_SINGLE_INSTRUCTION_MADD	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	24;"	d
EIGEN_HAS_STATIC_ARRAY_TEMPLATE	plugin/Eigen/src/Core/util/Macros.h	360;"	d
EIGEN_HAS_STATIC_ARRAY_TEMPLATE	plugin/Eigen/src/Core/util/Macros.h	362;"	d
EIGEN_HAS_STD_RESULT_OF	plugin/Eigen/src/Core/util/Macros.h	412;"	d
EIGEN_HAS_STD_RESULT_OF	plugin/Eigen/src/Core/util/Macros.h	414;"	d
EIGEN_HAS_TYPE_TRAITS	plugin/Eigen/src/Core/util/Macros.h	421;"	d
EIGEN_HAS_TYPE_TRAITS	plugin/Eigen/src/Core/util/Macros.h	424;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	plugin/Eigen/src/Core/util/Macros.h	434;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	plugin/Eigen/src/Core/util/Macros.h	436;"	d
EIGEN_HAS_VARIADIC_TEMPLATES	plugin/Eigen/src/Core/util/Macros.h	438;"	d
EIGEN_HESSENBERGDECOMPOSITION_H	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	12;"	d
EIGEN_HOMOGENEOUS_H	plugin/Eigen/src/Geometry/Homogeneous.h	11;"	d
EIGEN_HOUSEHOLDER_H	plugin/Eigen/src/Householder/Householder.h	12;"	d
EIGEN_HOUSEHOLDER_SEQUENCE_H	plugin/Eigen/src/Householder/HouseholderSequence.h	12;"	d
EIGEN_HYPERPLANE_H	plugin/Eigen/src/Geometry/Hyperplane.h	12;"	d
EIGEN_IDEAL_MAX_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	704;"	d
EIGEN_IMPLIES	plugin/Eigen/src/Core/util/Macros.h	943;"	d
EIGEN_INCLUDE_TYPE_TRAITS	plugin/Eigen/src/Core/util/Macros.h	1024;"	d
EIGEN_INCLUDE_TYPE_TRAITS	plugin/Eigen/src/Core/util/Macros.h	422;"	d
EIGEN_INCOMPLETE_CHOlESKY_H	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	12;"	d
EIGEN_INCOMPLETE_LUT_H	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	12;"	d
EIGEN_INDEXED_VIEW_H	plugin/Eigen/src/Core/IndexedView.h	11;"	d
EIGEN_INDEXED_VIEW_HELPER_H	plugin/Eigen/src/Core/util/IndexedViewHelper.h	12;"	d
EIGEN_INDEXED_VIEW_METHOD_2ND_PASS	plugin/Eigen/src/plugins/IndexedViewMethods.h	214;"	d
EIGEN_INDEXED_VIEW_METHOD_2ND_PASS	plugin/Eigen/src/plugins/IndexedViewMethods.h	216;"	d
EIGEN_INDEXED_VIEW_METHOD_CONST	plugin/Eigen/src/plugins/IndexedViewMethods.h	15;"	d
EIGEN_INDEXED_VIEW_METHOD_CONST	plugin/Eigen/src/plugins/IndexedViewMethods.h	18;"	d
EIGEN_INDEXED_VIEW_METHOD_CONST	plugin/Eigen/src/plugins/IndexedViewMethods.h	210;"	d
EIGEN_INDEXED_VIEW_METHOD_TYPE	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^struct EIGEN_INDEXED_VIEW_METHOD_TYPE {$/;"	s
EIGEN_INDEXED_VIEW_METHOD_TYPE	plugin/Eigen/src/plugins/IndexedViewMethods.h	16;"	d
EIGEN_INDEXED_VIEW_METHOD_TYPE	plugin/Eigen/src/plugins/IndexedViewMethods.h	19;"	d
EIGEN_INDEXED_VIEW_METHOD_TYPE	plugin/Eigen/src/plugins/IndexedViewMethods.h	211;"	d
EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR	plugin/Eigen/src/Core/util/Macros.h	859;"	d
EIGEN_INHERIT_ASSIGNMENT_OPERATORS	plugin/Eigen/src/Core/util/Macros.h	882;"	d
EIGEN_INITIALIZE_COEFFS	plugin/Eigen/src/Core/PlainObjectBase.h	15;"	d
EIGEN_INITIALIZE_COEFFS	plugin/Eigen/src/Core/PlainObjectBase.h	18;"	d
EIGEN_INITIALIZE_COEFFS	plugin/Eigen/src/Core/PlainObjectBase.h	21;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	plugin/Eigen/src/Core/PlainObjectBase.h	16;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	plugin/Eigen/src/Core/PlainObjectBase.h	19;"	d
EIGEN_INITIALIZE_COEFFS_IF_THAT_OPTION_IS_ENABLED	plugin/Eigen/src/Core/PlainObjectBase.h	22;"	d
EIGEN_INSERT_8f_INTO_16f	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	662;"	d
EIGEN_INSERT_8f_INTO_16f	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	666;"	d
EIGEN_INTEGRAL_CONSTANT_H	plugin/Eigen/src/Core/util/IntegralConstant.h	12;"	d
EIGEN_INTERNAL_CHECK_COST_VALUE	plugin/Eigen/src/Core/util/StaticAssert.h	215;"	d
EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	plugin/Eigen/src/Core/DenseStorage.h	16;"	d
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	plugin/Eigen/src/Core/DenseStorage.h	18;"	d
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT	plugin/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT__INVALID_COST_VALUE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT__INVALID_COST_VALUE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
EIGEN_INVERSE_H	plugin/Eigen/src/Core/Inverse.h	11;"	d
EIGEN_INVERSE_IMPL_H	plugin/Eigen/src/LU/InverseImpl.h	12;"	d
EIGEN_INVERSE_SSE_H	plugin/Eigen/src/LU/arch/Inverse_SSE.h	28;"	d
EIGEN_IO_H	plugin/Eigen/src/Core/IO.h	12;"	d
EIGEN_ITERATIVE_SOLVER_BASE_H	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	11;"	d
EIGEN_JACOBISVD_H	plugin/Eigen/src/SVD/JacobiSVD.h	12;"	d
EIGEN_JACOBISVD_LAPACKE_H	plugin/Eigen/src/SVD/JacobiSVD_LAPACKE.h	34;"	d
EIGEN_JACOBI_H	plugin/Eigen/src/Jacobi/Jacobi.h	12;"	d
EIGEN_KLUSUPPORT_H	plugin/Eigen/src/KLUSupport/KLUSupport.h	11;"	d
EIGEN_LAPACKE_EIG_SELFADJ	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	76;"	d
EIGEN_LAPACKE_EIG_SELFADJ_2	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	40;"	d
EIGEN_LAPACKE_LLT	plugin/Eigen/src/Cholesky/LLT_LAPACKE.h	42;"	d
EIGEN_LAPACKE_LU_PARTPIV	plugin/Eigen/src/LU/PartialPivLU_LAPACKE.h	42;"	d
EIGEN_LAPACKE_QR_COLPIV	plugin/Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	41;"	d
EIGEN_LAPACKE_QR_NOPIV	plugin/Eigen/src/QR/HouseholderQR_LAPACKE.h	43;"	d
EIGEN_LAPACKE_SCHUR_COMPLEX	plugin/Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	40;"	d
EIGEN_LAPACKE_SCHUR_REAL	plugin/Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	40;"	d
EIGEN_LAPACKE_SVD	plugin/Eigen/src/SVD/JacobiSVD_LAPACKE.h	40;"	d
EIGEN_LDLT_H	plugin/Eigen/src/Cholesky/LDLT.h	14;"	d
EIGEN_LEAST_SQUARE_CONJUGATE_GRADIENT_H	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	11;"	d
EIGEN_LLT_H	plugin/Eigen/src/Cholesky/LLT.h	11;"	d
EIGEN_LLT_LAPACKE_H	plugin/Eigen/src/Cholesky/LLT_LAPACKE.h	34;"	d
EIGEN_LOGICAL_XOR	plugin/Eigen/src/Core/util/Macros.h	941;"	d
EIGEN_LU_H	plugin/Eigen/src/LU/FullPivLU.h	11;"	d
EIGEN_LU_STRUCTS	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	70;"	d
EIGEN_MACROS_H	plugin/Eigen/src/Core/util/Macros.h	12;"	d
EIGEN_MAJOR_VERSION	plugin/Eigen/src/Core/util/Macros.h	15;"	d
EIGEN_MAKESTRING	plugin/Eigen/src/Core/util/Macros.h	517;"	d
EIGEN_MAKESTRING2	plugin/Eigen/src/Core/util/Macros.h	516;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	plugin/Eigen/src/Core/util/Memory.h	690;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF	plugin/Eigen/src/Core/util/Memory.h	662;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE	plugin/Eigen/src/Core/util/Memory.h	691;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_NOTHROW	plugin/Eigen/src/Core/util/Memory.h	657;"	d
EIGEN_MAKE_ARRAY_FIXED_TYPEDEFS	plugin/Eigen/src/Core/Array.h	285;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	plugin/Eigen/src/Core/Array.h	279;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	plugin/Eigen/src/Core/Array.h	307;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Core/Array.h	291;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Core/Array.h	306;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_LARGE	plugin/Eigen/src/Core/Array.h	309;"	d
EIGEN_MAKE_CONJ_HELPER_CPLX_REAL	plugin/Eigen/src/Core/arch/Default/ConjHelper.h	14;"	d
EIGEN_MAKE_CWISE_BINARY_OP	plugin/Eigen/src/Core/util/Macros.h	956;"	d
EIGEN_MAKE_CWISE_COMP_OP	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	108;"	d
EIGEN_MAKE_CWISE_COMP_OP	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	210;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	126;"	d
EIGEN_MAKE_CWISE_COMP_R_OP	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	211;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	plugin/Eigen/src/Core/Matrix.h	434;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	plugin/Eigen/src/Core/Matrix.h	457;"	d
EIGEN_MAKE_IMAGE_HELPERS	plugin/Eigen/src/misc/Image.h	67;"	d
EIGEN_MAKE_KERNEL_HELPERS	plugin/Eigen/src/misc/Kernel.h	66;"	d
EIGEN_MAKE_SCALAR_BINARY_OP	plugin/Eigen/src/Core/util/Macros.h	1000;"	d
EIGEN_MAKE_SCALAR_BINARY_OP_ONTHELEFT	plugin/Eigen/src/Core/util/Macros.h	991;"	d
EIGEN_MAKE_SCALAR_BINARY_OP_ONTHERIGHT	plugin/Eigen/src/Core/util/Macros.h	982;"	d
EIGEN_MAKE_TYPEDEFS	plugin/Eigen/src/Core/Matrix.h	426;"	d
EIGEN_MAKE_TYPEDEFS	plugin/Eigen/src/Core/Matrix.h	456;"	d
EIGEN_MAKE_TYPEDEFS	plugin/Eigen/src/Geometry/AlignedBox.h	372;"	d
EIGEN_MAKE_TYPEDEFS	plugin/Eigen/src/Geometry/AlignedBox.h	388;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Core/Matrix.h	440;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Core/Matrix.h	455;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Geometry/AlignedBox.h	376;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	plugin/Eigen/src/Geometry/AlignedBox.h	387;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	plugin/Eigen/src/Core/DenseStorage.h	62;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	plugin/Eigen/src/Core/DenseStorage.h	69;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	plugin/Eigen/src/Core/DenseStorage.h	75;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	55;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	plugin/Eigen/src/Core/util/Memory.h	57;"	d
EIGEN_MAPBASE_H	plugin/Eigen/src/Core/MapBase.h	12;"	d
EIGEN_MAPPED_SPARSEMATRIX_H	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	11;"	d
EIGEN_MAP_H	plugin/Eigen/src/Core/Map.h	12;"	d
EIGEN_MATHFUNCTIONSIMPL_H	plugin/Eigen/src/Core/MathFunctionsImpl.h	12;"	d
EIGEN_MATHFUNCTIONS_H	plugin/Eigen/src/Core/MathFunctions.h	11;"	d
EIGEN_MATHFUNC_IMPL	plugin/Eigen/src/Core/MathFunctions.h	67;"	d
EIGEN_MATHFUNC_RETVAL	plugin/Eigen/src/Core/MathFunctions.h	68;"	d
EIGEN_MATH_FUNCTIONS_ALTIVEC_H	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	17;"	d
EIGEN_MATH_FUNCTIONS_ALTIVEC_H	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	17;"	d
EIGEN_MATH_FUNCTIONS_AVX_H	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	11;"	d
EIGEN_MATH_FUNCTIONS_NEON_H	plugin/Eigen/src/Core/arch/NEON/MathFunctions.h	13;"	d
EIGEN_MATH_FUNCTIONS_SSE_H	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	16;"	d
EIGEN_MATRIXBASEEIGENVALUES_H	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	12;"	d
EIGEN_MATRIXBASE_H	plugin/Eigen/src/Core/MatrixBase.h	12;"	d
EIGEN_MATRIXSTORAGE_H	plugin/Eigen/src/Core/DenseStorage.h	13;"	d
EIGEN_MATRIX_H	plugin/Eigen/src/Core/Matrix.h	12;"	d
EIGEN_MAX_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	811;"	d
EIGEN_MAX_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	813;"	d
EIGEN_MAX_CPP_VER	plugin/Eigen/src/Core/util/Macros.h	369;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	731;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	733;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	768;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	777;"	d
EIGEN_MAX_STATIC_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	778;"	d
EIGEN_MEMBER_FUNCTOR	plugin/Eigen/src/Core/VectorwiseOp.h	84;"	d
EIGEN_MEMORY_H	plugin/Eigen/src/Core/util/Memory.h	21;"	d
EIGEN_META_H	plugin/Eigen/src/Core/util/Meta.h	12;"	d
EIGEN_MINOR_VERSION	plugin/Eigen/src/Core/util/Macros.h	16;"	d
EIGEN_MIN_ALIGN_BYTES	plugin/Eigen/src/Core/util/Macros.h	717;"	d
EIGEN_MISC_IMAGE_H	plugin/Eigen/src/misc/Image.h	11;"	d
EIGEN_MISC_KERNEL_H	plugin/Eigen/src/misc/Kernel.h	11;"	d
EIGEN_MKL_DOMAIN_ALL	plugin/Eigen/src/Core/util/MKL_support.h	89;"	d
EIGEN_MKL_DOMAIN_ALL	plugin/Eigen/src/Core/util/MKL_support.h	91;"	d
EIGEN_MKL_DOMAIN_BLAS	plugin/Eigen/src/Core/util/MKL_support.h	95;"	d
EIGEN_MKL_DOMAIN_BLAS	plugin/Eigen/src/Core/util/MKL_support.h	97;"	d
EIGEN_MKL_DOMAIN_FFT	plugin/Eigen/src/Core/util/MKL_support.h	101;"	d
EIGEN_MKL_DOMAIN_FFT	plugin/Eigen/src/Core/util/MKL_support.h	103;"	d
EIGEN_MKL_DOMAIN_PARDISO	plugin/Eigen/src/Core/util/MKL_support.h	113;"	d
EIGEN_MKL_DOMAIN_PARDISO	plugin/Eigen/src/Core/util/MKL_support.h	115;"	d
EIGEN_MKL_DOMAIN_VML	plugin/Eigen/src/Core/util/MKL_support.h	107;"	d
EIGEN_MKL_DOMAIN_VML	plugin/Eigen/src/Core/util/MKL_support.h	109;"	d
EIGEN_MKL_SUPPORT_H	plugin/Eigen/src/Core/util/MKL_support.h	34;"	d
EIGEN_MKL_VML_DECLARE_POW_CALL	plugin/Eigen/src/Core/Assign_MKL.h	141;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL	plugin/Eigen/src/Core/Assign_MKL.h	82;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS	plugin/Eigen/src/Core/Assign_MKL.h	115;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_CPLX	plugin/Eigen/src/Core/Assign_MKL.h	111;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL	plugin/Eigen/src/Core/Assign_MKL.h	107;"	d
EIGEN_MKL_VML_THRESHOLD	plugin/Eigen/src/Core/util/MKL_support.h	84;"	d
EIGEN_MSVC10_WORKAROUND_BINARYOP_RETURN_TYPE	plugin/Eigen/src/Core/util/Macros.h	977;"	d
EIGEN_NESTBYVALUE_H	plugin/Eigen/src/Core/NestByValue.h	12;"	d
EIGEN_NOALIAS_H	plugin/Eigen/src/Core/NoAlias.h	11;"	d
EIGEN_NOEXCEPT	plugin/Eigen/src/Core/util/Macros.h	1025;"	d
EIGEN_NOEXCEPT_IF	plugin/Eigen/src/Core/Array.h	/^    Array& operator=(Array&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)$/;"	f	class:Eigen::Array
EIGEN_NOEXCEPT_IF	plugin/Eigen/src/Core/Array.h	/^    Array(Array&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)$/;"	f	class:Eigen::Array
EIGEN_NOEXCEPT_IF	plugin/Eigen/src/Core/Matrix.h	/^    Matrix& operator=(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_assignable<Scalar>::value)$/;"	f	class:Eigen::Matrix
EIGEN_NOEXCEPT_IF	plugin/Eigen/src/Core/Matrix.h	/^    Matrix(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)$/;"	f	class:Eigen::Matrix
EIGEN_NOEXCEPT_IF	plugin/Eigen/src/Core/util/Macros.h	1026;"	d
EIGEN_NOT_A_MACRO	plugin/Eigen/src/Core/util/Macros.h	332;"	d
EIGEN_NO_DEBUG	plugin/Eigen/src/Core/util/Macros.h	567;"	d
EIGEN_NO_THROW	plugin/Eigen/src/Core/util/Macros.h	1027;"	d
EIGEN_NULLARY_FUNCTORS_H	plugin/Eigen/src/Core/functors/NullaryFunctors.h	11;"	d
EIGEN_NUMTRAITS_H	plugin/Eigen/src/Core/NumTraits.h	11;"	d
EIGEN_ONLY_USED_FOR_DEBUG	plugin/Eigen/src/Core/util/Macros.h	621;"	d
EIGEN_ORDERING_H	plugin/Eigen/src/OrderingMethods/Ordering.h	12;"	d
EIGEN_ORTHOMETHODS_H	plugin/Eigen/src/Geometry/OrthoMethods.h	12;"	d
EIGEN_OS_ANDROID	plugin/Eigen/src/Core/util/Macros.h	239;"	d
EIGEN_OS_ANDROID	plugin/Eigen/src/Core/util/Macros.h	241;"	d
EIGEN_OS_BSD	plugin/Eigen/src/Core/util/Macros.h	253;"	d
EIGEN_OS_BSD	plugin/Eigen/src/Core/util/Macros.h	255;"	d
EIGEN_OS_CYGWIN	plugin/Eigen/src/Core/util/Macros.h	295;"	d
EIGEN_OS_CYGWIN	plugin/Eigen/src/Core/util/Macros.h	297;"	d
EIGEN_OS_GNULINUX	plugin/Eigen/src/Core/util/Macros.h	246;"	d
EIGEN_OS_GNULINUX	plugin/Eigen/src/Core/util/Macros.h	248;"	d
EIGEN_OS_LINUX	plugin/Eigen/src/Core/util/Macros.h	231;"	d
EIGEN_OS_LINUX	plugin/Eigen/src/Core/util/Macros.h	233;"	d
EIGEN_OS_MAC	plugin/Eigen/src/Core/util/Macros.h	260;"	d
EIGEN_OS_MAC	plugin/Eigen/src/Core/util/Macros.h	262;"	d
EIGEN_OS_QNX	plugin/Eigen/src/Core/util/Macros.h	267;"	d
EIGEN_OS_QNX	plugin/Eigen/src/Core/util/Macros.h	269;"	d
EIGEN_OS_SOLARIS	plugin/Eigen/src/Core/util/Macros.h	316;"	d
EIGEN_OS_SOLARIS	plugin/Eigen/src/Core/util/Macros.h	318;"	d
EIGEN_OS_SUN	plugin/Eigen/src/Core/util/Macros.h	309;"	d
EIGEN_OS_SUN	plugin/Eigen/src/Core/util/Macros.h	311;"	d
EIGEN_OS_UNIX	plugin/Eigen/src/Core/util/Macros.h	224;"	d
EIGEN_OS_UNIX	plugin/Eigen/src/Core/util/Macros.h	226;"	d
EIGEN_OS_WIN	plugin/Eigen/src/Core/util/Macros.h	274;"	d
EIGEN_OS_WIN	plugin/Eigen/src/Core/util/Macros.h	276;"	d
EIGEN_OS_WIN64	plugin/Eigen/src/Core/util/Macros.h	281;"	d
EIGEN_OS_WIN64	plugin/Eigen/src/Core/util/Macros.h	283;"	d
EIGEN_OS_WINCE	plugin/Eigen/src/Core/util/Macros.h	288;"	d
EIGEN_OS_WINCE	plugin/Eigen/src/Core/util/Macros.h	290;"	d
EIGEN_OS_WIN_STRICT	plugin/Eigen/src/Core/util/Macros.h	302;"	d
EIGEN_OS_WIN_STRICT	plugin/Eigen/src/Core/util/Macros.h	304;"	d
EIGEN_PACKET_MATH_ALTIVEC_H	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_AVX512_H	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_AVX_H	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_HALF_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	11;"	d
EIGEN_PACKET_MATH_NEON_H	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	13;"	d
EIGEN_PACKET_MATH_SSE_H	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_ZVECTOR_H	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	11;"	d
EIGEN_PARALLELIZER_H	plugin/Eigen/src/Core/products/Parallelizer.h	11;"	d
EIGEN_PARAMETRIZEDLINE_H	plugin/Eigen/src/Geometry/ParametrizedLine.h	12;"	d
EIGEN_PARDISOSUPPORT_H	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	33;"	d
EIGEN_PARTIALLU_H	plugin/Eigen/src/LU/PartialPivLU.h	12;"	d
EIGEN_PARTIALLU_LAPACK_H	plugin/Eigen/src/LU/PartialPivLU_LAPACKE.h	34;"	d
EIGEN_PARTIAL_REDUX_H	plugin/Eigen/src/Core/VectorwiseOp.h	12;"	d
EIGEN_PASTIXSUPPORT_H	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	11;"	d
EIGEN_PERMISSIVE_EXPR	plugin/Eigen/src/Core/util/Macros.h	553;"	d
EIGEN_PERMISSIVE_EXPR	plugin/Eigen/src/Core/util/Macros.h	555;"	d
EIGEN_PERMUTATIONMATRIX_H	plugin/Eigen/src/Core/PermutationMatrix.h	12;"	d
EIGEN_PI	plugin/Eigen/src/Core/MathFunctions.h	15;"	d
EIGEN_PLAIN_ENUM_MAX	plugin/Eigen/src/Core/util/Macros.h	917;"	d
EIGEN_PLAIN_ENUM_MIN	plugin/Eigen/src/Core/util/Macros.h	916;"	d
EIGEN_PPC_PREFETCH	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	127;"	d
EIGEN_PPC_PREFETCH	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	129;"	d
EIGEN_PP_EXPAND	plugin/Eigen/src/Core/Assign_MKL.h	69;"	d
EIGEN_PREDICATE_SAME_MATRIX_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	171;"	d
EIGEN_PRODUCTEVALUATORS_H	plugin/Eigen/src/Core/ProductEvaluators.h	14;"	d
EIGEN_PRODUCT_H	plugin/Eigen/src/Core/Product.h	11;"	d
EIGEN_QR_H	plugin/Eigen/src/QR/HouseholderQR.h	13;"	d
EIGEN_QR_LAPACKE_H	plugin/Eigen/src/QR/HouseholderQR_LAPACKE.h	35;"	d
EIGEN_QUATERNION_H	plugin/Eigen/src/Geometry/Quaternion.h	12;"	d
EIGEN_RANDOM_H	plugin/Eigen/src/Core/Random.h	11;"	d
EIGEN_REALSVD2X2_H	plugin/Eigen/src/misc/RealSvd2x2.h	12;"	d
EIGEN_REAL_QZ_H	plugin/Eigen/src/Eigenvalues/RealQZ.h	11;"	d
EIGEN_REAL_SCHUR_H	plugin/Eigen/src/Eigenvalues/RealSchur.h	12;"	d
EIGEN_REAL_SCHUR_LAPACKE_H	plugin/Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	34;"	d
EIGEN_REDUX_H	plugin/Eigen/src/Core/Redux.h	12;"	d
EIGEN_REF_H	plugin/Eigen/src/Core/Ref.h	11;"	d
EIGEN_REPLICATE_H	plugin/Eigen/src/Core/Replicate.h	11;"	d
EIGEN_RESTRICT	plugin/Eigen/src/Core/util/Macros.h	833;"	d
EIGEN_RESTRICT	plugin/Eigen/src/Core/util/Macros.h	836;"	d
EIGEN_RETURNBYVALUE_H	plugin/Eigen/src/Core/ReturnByValue.h	12;"	d
EIGEN_REVERSE_H	plugin/Eigen/src/Core/Reverse.h	13;"	d
EIGEN_ROTATION2D_H	plugin/Eigen/src/Geometry/Rotation2D.h	11;"	d
EIGEN_ROTATIONBASE_H	plugin/Eigen/src/Geometry/RotationBase.h	11;"	d
EIGEN_SAEIGENSOLVER_LAPACKE_H	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	34;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	plugin/Eigen/src/Core/util/Macros.h	325;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	plugin/Eigen/src/Core/util/Macros.h	327;"	d
EIGEN_SCALAR_BINARYOP_EXPR_RETURN_TYPE	plugin/Eigen/src/Core/util/Macros.h	971;"	d
EIGEN_SCALAR_BINARY_SUPPORTED	plugin/Eigen/src/Core/util/Macros.h	964;"	d
EIGEN_SCALING_H	plugin/Eigen/src/Geometry/Scaling.h	11;"	d
EIGEN_SELECT_H	plugin/Eigen/src/Core/Select.h	11;"	d
EIGEN_SELFADJOINTEIGENSOLVER_H	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	12;"	d
EIGEN_SELFADJOINTMATRIX_H	plugin/Eigen/src/Core/SelfAdjointView.h	11;"	d
EIGEN_SELFADJOINTRANK2UPTADE_H	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_BLAS_H	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_H	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_BLAS_H	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_H	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	11;"	d
EIGEN_SELFADJOINT_PRODUCT_H	plugin/Eigen/src/Core/products/SelfadjointProduct.h	11;"	d
EIGEN_SELFCWISEBINARYOP_H	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_H	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_IMPL_H	plugin/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	46;"	d
EIGEN_SIZE_MAX	plugin/Eigen/src/Core/util/Macros.h	938;"	d
EIGEN_SIZE_MIN_PREFER_DYNAMIC	plugin/Eigen/src/Core/util/Macros.h	922;"	d
EIGEN_SIZE_MIN_PREFER_FIXED	plugin/Eigen/src/Core/util/Macros.h	930;"	d
EIGEN_SOLVERBASE_H	plugin/Eigen/src/Core/SolverBase.h	11;"	d
EIGEN_SOLVETRIANGULAR_H	plugin/Eigen/src/Core/SolveTriangular.h	11;"	d
EIGEN_SOLVEWITHGUESS_H	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	11;"	d
EIGEN_SOLVE_H	plugin/Eigen/src/Core/Solve.h	11;"	d
EIGEN_SPARSEASSIGN_H	plugin/Eigen/src/SparseCore/SparseAssign.h	11;"	d
EIGEN_SPARSEDENSEPRODUCT_H	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	11;"	d
EIGEN_SPARSELU_GEMM_KERNEL_H	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	11;"	d
EIGEN_SPARSELU_MEMORY	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	32;"	d
EIGEN_SPARSELU_SUPERNODAL_MATRIX_H	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	12;"	d
EIGEN_SPARSELU_UTILS_H	plugin/Eigen/src/SparseLU/SparseLU_Utils.h	12;"	d
EIGEN_SPARSEMATRIXBASE_H	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	11;"	d
EIGEN_SPARSEMATRIX_H	plugin/Eigen/src/SparseCore/SparseMatrix.h	11;"	d
EIGEN_SPARSEPRODUCT_H	plugin/Eigen/src/SparseCore/SparseProduct.h	11;"	d
EIGEN_SPARSEREDUX_H	plugin/Eigen/src/SparseCore/SparseRedux.h	11;"	d
EIGEN_SPARSESOLVERBASE_H	plugin/Eigen/src/SparseCore/SparseSolverBase.h	11;"	d
EIGEN_SPARSESPARSEPRODUCTWITHPRUNING_H	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	11;"	d
EIGEN_SPARSETRANSPOSE_H	plugin/Eigen/src/SparseCore/SparseTranspose.h	11;"	d
EIGEN_SPARSETRIANGULARSOLVER_H	plugin/Eigen/src/SparseCore/TriangularSolver.h	11;"	d
EIGEN_SPARSEUTIL_H	plugin/Eigen/src/SparseCore/SparseUtil.h	11;"	d
EIGEN_SPARSEVECTOR_H	plugin/Eigen/src/SparseCore/SparseVector.h	11;"	d
EIGEN_SPARSEVIEW_H	plugin/Eigen/src/SparseCore/SparseView.h	12;"	d
EIGEN_SPARSE_AMD_H	plugin/Eigen/src/OrderingMethods/Amd.h	32;"	d
EIGEN_SPARSE_BLOCK_H	plugin/Eigen/src/SparseCore/SparseBlock.h	11;"	d
EIGEN_SPARSE_COMPRESSED_BASE_H	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	11;"	d
EIGEN_SPARSE_CWISE_BINARY_OP_H	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	11;"	d
EIGEN_SPARSE_CWISE_UNARY_OP_H	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	11;"	d
EIGEN_SPARSE_DIAGONAL_PRODUCT_H	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	11;"	d
EIGEN_SPARSE_DOT_H	plugin/Eigen/src/SparseCore/SparseDot.h	11;"	d
EIGEN_SPARSE_FUZZY_H	plugin/Eigen/src/SparseCore/SparseFuzzy.h	11;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATOR	plugin/Eigen/src/SparseCore/SparseUtil.h	21;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATORS	plugin/Eigen/src/SparseCore/SparseUtil.h	39;"	d
EIGEN_SPARSE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	plugin/Eigen/src/SparseCore/SparseUtil.h	32;"	d
EIGEN_SPARSE_LU_H	plugin/Eigen/src/SparseLU/SparseLU.h	13;"	d
EIGEN_SPARSE_MAP_H	plugin/Eigen/src/SparseCore/SparseMap.h	11;"	d
EIGEN_SPARSE_PERMUTATION_H	plugin/Eigen/src/SparseCore/SparsePermutation.h	11;"	d
EIGEN_SPARSE_PUBLIC_INTERFACE	plugin/Eigen/src/SparseCore/SparseUtil.h	43;"	d
EIGEN_SPARSE_QR_H	plugin/Eigen/src/SparseQR/SparseQR.h	12;"	d
EIGEN_SPARSE_REF_H	plugin/Eigen/src/SparseCore/SparseRef.h	11;"	d
EIGEN_SPARSE_SELFADJOINTVIEW_H	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	11;"	d
EIGEN_SPARSE_TRIANGULARVIEW_H	plugin/Eigen/src/SparseCore/SparseTriangularView.h	12;"	d
EIGEN_STABLENORM_H	plugin/Eigen/src/Core/StableNorm.h	11;"	d
EIGEN_STACK_ALLOCATION_LIMIT	plugin/Eigen/src/Core/util/Macros.h	841;"	d
EIGEN_STATIC_ASSERT	plugin/Eigen/src/Core/util/StaticAssert.h	119;"	d
EIGEN_STATIC_ASSERT	plugin/Eigen/src/Core/util/StaticAssert.h	33;"	d
EIGEN_STATIC_ASSERT_ARRAYXPR	plugin/Eigen/src/Core/util/StaticAssert.h	203;"	d
EIGEN_STATIC_ASSERT_DYNAMIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	149;"	d
EIGEN_STATIC_ASSERT_FIXED_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	144;"	d
EIGEN_STATIC_ASSERT_H	plugin/Eigen/src/Core/util/StaticAssert.h	12;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	plugin/Eigen/src/Core/MapBase.h	14;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	plugin/Eigen/src/Core/MapBase.h	295;"	d
EIGEN_STATIC_ASSERT_LVALUE	plugin/Eigen/src/Core/util/StaticAssert.h	199;"	d
EIGEN_STATIC_ASSERT_MATRIX_SPECIFIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	159;"	d
EIGEN_STATIC_ASSERT_NON_INTEGER	plugin/Eigen/src/Core/util/StaticAssert.h	184;"	d
EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	189;"	d
EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	164;"	d
EIGEN_STATIC_ASSERT_SAME_XPR_KIND	plugin/Eigen/src/Core/util/StaticAssert.h	207;"	d
EIGEN_STATIC_ASSERT_SIZE_1x1	plugin/Eigen/src/Core/util/StaticAssert.h	194;"	d
EIGEN_STATIC_ASSERT_VECTOR_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	139;"	d
EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	154;"	d
EIGEN_STDDEQUE_H	plugin/Eigen/src/StlSupport/StdDeque.h	12;"	d
EIGEN_STDLIST_H	plugin/Eigen/src/StlSupport/StdList.h	11;"	d
EIGEN_STDVECTOR_H	plugin/Eigen/src/StlSupport/StdVector.h	12;"	d
EIGEN_STD_DEQUE_SPECIALIZATION_BODY	plugin/Eigen/src/StlSupport/StdDeque.h	52;"	d
EIGEN_STD_LIST_SPECIALIZATION_BODY	plugin/Eigen/src/StlSupport/StdList.h	52;"	d
EIGEN_STD_VECTOR_SPECIALIZATION_BODY	plugin/Eigen/src/StlSupport/StdVector.h	52;"	d
EIGEN_STL_DETAILS_H	plugin/Eigen/src/StlSupport/details.h	12;"	d
EIGEN_STL_FUNCTORS_H	plugin/Eigen/src/Core/functors/StlFunctors.h	11;"	d
EIGEN_STRIDE_H	plugin/Eigen/src/Core/Stride.h	11;"	d
EIGEN_STRONG_INLINE	plugin/Eigen/src/Core/util/Macros.h	524;"	d
EIGEN_STRONG_INLINE	plugin/Eigen/src/Core/util/Macros.h	526;"	d
EIGEN_SUITESPARSEQRSUPPORT_H	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	12;"	d
EIGEN_SUPERLUSUPPORT_H	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	11;"	d
EIGEN_SUPERLU_HAS_ILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	70;"	d
EIGEN_SUPERLU_HAS_ILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	820;"	d
EIGEN_SVDBASE_H	plugin/Eigen/src/SVD/SVDBase.h	17;"	d
EIGEN_SWAP_H	plugin/Eigen/src/Core/Swap.h	11;"	d
EIGEN_SYMBOLIC_INDEX_H	plugin/Eigen/src/Core/util/SymbolicIndex.h	11;"	d
EIGEN_TERNARY_FUNCTORS_H	plugin/Eigen/src/Core/functors/TernaryFunctors.h	11;"	d
EIGEN_THROW	plugin/Eigen/src/Core/util/Macros.h	1007;"	d
EIGEN_THROW_X	plugin/Eigen/src/Core/util/Macros.h	1006;"	d
EIGEN_TMP_NOOPT_ATTRIB	plugin/Eigen/src/Core/MathFunctions.h	832;"	d
EIGEN_TMP_NOOPT_ATTRIB	plugin/Eigen/src/Core/MathFunctions.h	836;"	d
EIGEN_TMP_NOOPT_ATTRIB	plugin/Eigen/src/Core/MathFunctions.h	846;"	d
EIGEN_TRANSFORM_H	plugin/Eigen/src/Geometry/Transform.h	13;"	d
EIGEN_TRANSLATION_H	plugin/Eigen/src/Geometry/Translation.h	11;"	d
EIGEN_TRANSPOSE_H	plugin/Eigen/src/Core/Transpose.h	12;"	d
EIGEN_TRANSPOSITIONS_H	plugin/Eigen/src/Core/Transpositions.h	11;"	d
EIGEN_TRIANGULARMATRIXVECTOR_H	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	11;"	d
EIGEN_TRIANGULARMATRIX_H	plugin/Eigen/src/Core/TriangularMatrix.h	12;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_BLAS_H	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	34;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_H	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	11;"	d
EIGEN_TRIANGULAR_MATRIX_VECTOR_BLAS_H	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_BLAS_H	plugin/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_H	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_VECTOR_H	plugin/Eigen/src/Core/products/TriangularSolverVector.h	11;"	d
EIGEN_TRIDIAGONALIZATION_H	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	12;"	d
EIGEN_TRY	plugin/Eigen/src/Core/util/Macros.h	1008;"	d
EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH	plugin/Eigen/src/Core/arch/Default/Settings.h	38;"	d
EIGEN_TYPE_CASTING_AVX_H	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	11;"	d
EIGEN_TYPE_CASTING_CUDA_H	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	11;"	d
EIGEN_TYPE_CASTING_SSE_H	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	11;"	d
EIGEN_UMEYAMA_H	plugin/Eigen/src/Geometry/Umeyama.h	11;"	d
EIGEN_UMFPACKSUPPORT_H	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	11;"	d
EIGEN_UNALIGNED_VECTORIZE	plugin/Eigen/src/Core/util/Macros.h	826;"	d
EIGEN_UNARY_FUNCTORS_H	plugin/Eigen/src/Core/functors/UnaryFunctors.h	11;"	d
EIGEN_UNROLLING_LIMIT	plugin/Eigen/src/Core/arch/Default/Settings.h	24;"	d
EIGEN_UNUSED	plugin/Eigen/src/Core/util/Macros.h	639;"	d
EIGEN_UNUSED_VARIABLE	plugin/Eigen/src/Core/util/Macros.h	650;"	d
EIGEN_USE_BLAS	plugin/Eigen/src/Core/util/MKL_support.h	38;"	d
EIGEN_USE_LAPACKE	plugin/Eigen/src/Core/util/MKL_support.h	41;"	d
EIGEN_USE_LAPACKE	plugin/Eigen/src/Core/util/MKL_support.h	49;"	d
EIGEN_USE_LAPACKE	plugin/Eigen/src/Core/util/MKL_support.h	72;"	d
EIGEN_USE_LAPACKE	plugin/Eigen/src/Core/util/MKL_support.h	75;"	d
EIGEN_USE_LAPACKE_STRICT	plugin/Eigen/src/Core/util/MKL_support.h	74;"	d
EIGEN_USE_MKL	plugin/Eigen/src/Core/util/MKL_support.h	53;"	d
EIGEN_USE_MKL	plugin/Eigen/src/Core/util/MKL_support.h	65;"	d
EIGEN_USE_MKL	plugin/Eigen/src/Core/util/MKL_support.h	67;"	d
EIGEN_USE_MKL_ALL	plugin/Eigen/src/Core/util/MKL_support.h	71;"	d
EIGEN_USE_MKL_VML	plugin/Eigen/src/Core/util/MKL_support.h	44;"	d
EIGEN_USE_MKL_VML	plugin/Eigen/src/Core/util/MKL_support.h	73;"	d
EIGEN_USE_STD_FPCLASSIFY	plugin/Eigen/src/Core/MathFunctions.h	746;"	d
EIGEN_USE_STD_FPCLASSIFY	plugin/Eigen/src/Core/MathFunctions.h	748;"	d
EIGEN_USING_ARRAY_TYPEDEFS	plugin/Eigen/src/Core/Array.h	322;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE	plugin/Eigen/src/Core/Array.h	316;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE_AND_SIZE	plugin/Eigen/src/Core/Array.h	311;"	d
EIGEN_VECTORBLOCK_H	plugin/Eigen/src/Core/VectorBlock.h	12;"	d
EIGEN_VERSION_AT_LEAST	plugin/Eigen/src/Core/util/Macros.h	18;"	d
EIGEN_VISITOR_H	plugin/Eigen/src/Core/Visitor.h	11;"	d
EIGEN_VMLMODE_EXPAND_LA	plugin/Eigen/src/Core/Assign_MKL.h	71;"	d
EIGEN_VMLMODE_EXPAND_LA	plugin/Eigen/src/Core/Assign_MKL.h	73;"	d
EIGEN_VMLMODE_EXPAND__	plugin/Eigen/src/Core/Assign_MKL.h	76;"	d
EIGEN_VMLMODE_PREFIX	plugin/Eigen/src/Core/Assign_MKL.h	80;"	d
EIGEN_VMLMODE_PREFIX_LA	plugin/Eigen/src/Core/Assign_MKL.h	78;"	d
EIGEN_VMLMODE_PREFIX__	plugin/Eigen/src/Core/Assign_MKL.h	79;"	d
EIGEN_WARNINGS_DISABLED	plugin/Eigen/src/Core/util/DisableStupidWarnings.h	2;"	d
EIGEN_WARNINGS_DISABLED	plugin/Eigen/src/Core/util/ReenableStupidWarnings.h	2;"	d
EIGEN_WORKAROUND_MSVC_STL_SUPPORT	plugin/Eigen/src/StlSupport/details.h	54;"	d
EIGEN_WORLD_VERSION	plugin/Eigen/src/Core/util/Macros.h	14;"	d
EIGEN_XPRHELPER_H	plugin/Eigen/src/Core/util/XprHelper.h	12;"	d
EIGEN_ZVECTOR_PREFETCH	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	153;"	d
EIGEN_ZVECTOR_PREFETCH	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	155;"	d
ELU	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
EXEC	Makefile	/^EXEC=darknet$/;"	m
EXECOBJ	Makefile	/^EXECOBJ = $(addprefix $(OBJDIR), $(EXECOBJA))$/;"	m
EXECOBJA	Makefile	/^EXECOBJA=captcha.o lsd.o super.o art.o tag.o cifar.o go.o rnn.o segmenter.o regressor.o classifier.o coco.o yolo.o detector.o nightmare.o attention.o darknet.o$/;"	m
EXP	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
EigVecMask	plugin/Eigen/src/Core/util/Constants.h	/^  EigVecMask = EigenvaluesOnly | ComputeEigenvectors,$/;"	e	enum:Eigen::DecompositionOptions
Eigen	plugin/Eigen/src/Cholesky/LDLT.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Cholesky/LLT.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Cholesky/LLT_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/ArithmeticSequence.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Array.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/ArrayBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/ArrayWrapper.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Assign.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/AssignEvaluator.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Assign_MKL.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/BandMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Block.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/BooleanRedux.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/CommaInitializer.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/ConditionEstimator.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/CoreEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/CoreIterators.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/CwiseUnaryView.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/DenseBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/DenseStorage.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Diagonal.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/DiagonalMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/DiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Dot.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/EigenBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Fuzzy.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/GeneralProduct.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/GenericPacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/GlobalFunctions.h	/^namespace Eigen$/;"	n
Eigen	plugin/Eigen/src/Core/IO.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/IndexedView.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Inverse.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Map.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/MapBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Matrix.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/MatrixBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/NestByValue.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/NoAlias.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/NumTraits.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/PermutationMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/PlainObjectBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Product.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/ProductEvaluators.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Random.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Redux.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Ref.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Replicate.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/ReturnByValue.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Reverse.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Select.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/SelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Solve.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/SolveTriangular.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/SolverBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/StableNorm.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Stride.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Swap.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Transpose.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/Transpositions.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/TriangularMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/VectorwiseOp.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/Visitor.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/StlFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/TernaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/Parallelizer.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/BlasUtil.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/Constants.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/IntegralConstant.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/MKL_support.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/Macros.h	/^    namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/Macros.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/Memory.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/Meta.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/StaticAssert.h	/^    namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Core/util/XprHelper.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/ComplexSchur_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/RealSchur_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/EulerAngles.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Homogeneous.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/OrthoMethods.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/Umeyama.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Householder/BlockHouseholder.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Householder/Householder.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/Householder/HouseholderSequence.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^namespace Eigen {  $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/Jacobi/Jacobi.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/LU/Determinant.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/LU/FullPivLU.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/LU/InverseImpl.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/LU/PartialPivLU.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/LU/PartialPivLU_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/OrderingMethods/Amd.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/OrderingMethods/Ordering.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/QR/ColPivHouseholderQR_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/QR/HouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/QR/HouseholderQR_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SVD/BDCSVD.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SVD/JacobiSVD.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SVD/JacobiSVD_LAPACKE.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SVD/SVDBase.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/AmbiVector.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseAssign.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseBlock.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseDot.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseFuzzy.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseMap.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseRedux.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseRef.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseUtil.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseVector.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/SparseView.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SparseQR/SparseQR.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/StlSupport/details.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace Eigen {$/;"	n
Eigen	plugin/Eigen/src/misc/Image.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/misc/Kernel.h	/^namespace Eigen { $/;"	n
Eigen	plugin/Eigen/src/misc/RealSvd2x2.h	/^namespace Eigen {$/;"	n
EigenBase	plugin/Eigen/src/Core/EigenBase.h	/^template<typename Derived> struct EigenBase$/;"	s	namespace:Eigen
EigenBase2EigenBase	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct EigenBase2EigenBase {};$/;"	s	namespace:Eigen::internal
EigenSolver	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver() : m_eivec(), m_eivalues(), m_isInitialized(false), m_realSchur(), m_matT(), m_tmp() {}$/;"	f	class:Eigen::EigenSolver
EigenSolver	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(Index size)$/;"	f	class:Eigen::EigenSolver
EigenSolver	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    explicit EigenSolver(const EigenBase<InputType>& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::EigenSolver
EigenSolver	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^template<typename _MatrixType> class EigenSolver$/;"	c	namespace:Eigen
Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl;$/;"	t	class:Eigen::ArrayBase
EigenvalueType	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options&(~RowMajor), MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvalueType	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::EigenSolver
EigenvalueType	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef CwiseBinaryOp<internal::scalar_quotient_op<ComplexScalar,Scalar>,ComplexVectorType,VectorType> EigenvalueType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvalueType	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealQZ
EigenvalueType	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealSchur
EigenvaluesOnly	plugin/Eigen/src/Core/util/Constants.h	/^  EigenvaluesOnly     = 0x40,$/;"	e	enum:Eigen::DecompositionOptions
EigenvaluesReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef Matrix<typename NumTraits<typename internal::traits<Derived>::Scalar>::Real, internal::traits<Derived>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::DenseBase
EigenvaluesReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef Matrix<std::complex<RealScalar>, internal::traits<Derived>::ColsAtCompileTime, 1, ColMajor> EigenvaluesReturnType;$/;"	t	class:Eigen::MatrixBase
EigenvaluesReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef Matrix<RealScalar, internal::traits<MatrixType>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::SelfAdjointView
EigenvectorType	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvectorsType	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::EigenSolver
EigenvectorsType	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::GeneralizedEigenSolver
EigenvectorsType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Matrix<Scalar,Size,Size,ColMajor,MaxColsAtCompileTime,MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
EigenvectorsType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::EigenvectorsType EigenvectorsType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
ElseMatrixNested	plugin/Eigen/src/Core/Select.h	/^  typedef typename ElseMatrixType::Nested ElseMatrixNested;$/;"	t	struct:Eigen::internal::traits
EnableCoeff	plugin/Eigen/src/Core/Product.h	/^      EnableCoeff = IsOneByOne || Option==LazyProduct$/;"	e	enum:Eigen::ProductImpl::__anon176
EnableVml	plugin/Eigen/src/Core/Assign_MKL.h	/^      EnableVml = MightEnableVml && LargeEnough,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon171
ErfReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_erf_op<Scalar>, const Derived> ErfReturnType;$/;"	t
ErfcReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_erfc_op<Scalar>, const Derived> ErfcReturnType;$/;"	t
EssentialVectorType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::hseq_side_dependent_impl<VectorsType,CoeffsType,Side>::EssentialVectorType EssentialVectorType;$/;"	t	class:Eigen::HouseholderSequence
EssentialVectorType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Block<const VectorsType, Dynamic, 1> EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EssentialVectorType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Transpose<Block<const VectorsType, 1, Dynamic> > EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EvalBeforeAssigningBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeAssigningBit = 0x4; \/\/ FIXME deprecated$/;"	m	namespace:Eigen
EvalBeforeNestingBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeNestingBit = 0x2;$/;"	m	namespace:Eigen
EvalIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename evaluator<ArgType>::InnerIterator        EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalIterator	plugin/Eigen/src/SparseCore/SparseView.h	/^    typedef typename evaluator<ArgType>::InnerIterator EvalIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
EvalReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;$/;"	t	class:Eigen::DenseBase
EvalToRowMajor	plugin/Eigen/src/Core/ProductEvaluators.h	/^    EvalToRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
EvalToTemp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  explicit EvalToTemp(const ArgType& arg)$/;"	f	class:Eigen::internal::EvalToTemp
EvalToTemp	plugin/Eigen/src/Core/CoreEvaluators.h	/^class EvalToTemp$/;"	c	namespace:Eigen::internal
EvaluatorFlags	plugin/Eigen/src/Core/Matrix.h	/^    EvaluatorFlags = LinearAccessBit | DirectAccessBit | packet_access_bit | row_major_bit,$/;"	e	enum:Eigen::internal::traits::__anon677
EvaluatorType	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::internal::inner_iterator_selector
EvaluatorType	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef internal::evaluator<XprType> EvaluatorType;$/;"	t	class:Eigen::InnerIterator
ExpReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_exp_op<Scalar>, const Derived> ExpReturnType;$/;"	t
ExpandMem	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  enum { ExpandMem = true };$/;"	e	enum:Eigen::internal::column_dfs_traits::__anon116
ExpandMem	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  enum { ExpandMem = false };$/;"	e	enum:Eigen::internal::panel_dfs_traits::__anon113
Expm1ReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_expm1_op<Scalar>, const Derived> Expm1ReturnType;$/;"	t
ExpressionTraits	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef traits<ExpressionType> ExpressionTraits;$/;"	t	struct:Eigen::internal::evaluator_base
ExpressionType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionTypeNested	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type ExpressionTypeNested;$/;"	t	class:Eigen::VectorwiseOp
ExpressionTypeNestedCleaned	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::remove_all<ExpressionTypeNested>::type ExpressionTypeNestedCleaned;$/;"	t	class:Eigen::VectorwiseOp
ExtendedType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct ExtendedType {$/;"	s	class:Eigen::VectorwiseOp
ExtractType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType>  ExtractType; \/\/ const to get rid of a compile error; anyway blas traits are only used on the RHS$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef const XprType& ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename Base::ExtractType ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
FAST_BITS	src/stb_image.h	1434;"	d
FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
FP32	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^union FP32 {$/;"	u	namespace:Eigen::half_impl
Factor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Factor = (RowFactor==Dynamic || ColFactor==Dynamic) ? Dynamic : RowFactor*ColFactor$/;"	e	enum:Eigen::internal::unary_evaluator::__anon515
FactorType	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteCholesky
FactorType	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> FactorType;$/;"	t	class:Eigen::IncompleteLUT
FixedBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct FixedBlockXpr { typedef Block<Derived,Rows,Cols> Type; };$/;"	s
FixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt ( FixedInt<N> (*)() ) {}$/;"	f	class:Eigen::internal::FixedInt
FixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt( VariableAndFixedInt<N> other) {$/;"	f	class:Eigen::internal::FixedInt
FixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt() {}$/;"	f	class:Eigen::internal::FixedInt
FixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt(std::integral_constant<int,N>) {}$/;"	f	class:Eigen::internal::FixedInt
FixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N> class FixedInt$/;"	c	namespace:Eigen::internal
FixedSegmentReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	s
Flags	plugin/Eigen/src/Core/ArrayWrapper.h	/^    Flags = (Flags0 & ~(NestByRefBit | LvalueBit)) | LvalueBitFlag$/;"	e	enum:Eigen::internal::traits::__anon522
Flags	plugin/Eigen/src/Core/ArrayWrapper.h	/^    Flags = (Flags0 & ~(NestByRefBit | LvalueBit)) | LvalueBitFlag$/;"	e	enum:Eigen::internal::traits::__anon523
Flags	plugin/Eigen/src/Core/BandMatrix.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
Flags	plugin/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon365
Flags	plugin/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon366
Flags	plugin/Eigen/src/Core/Block.h	/^    Flags = (traits<XprType>::Flags & (DirectAccessBit | (InnerPanel?CompressedAccessBit:0))) | FlagsLvalueBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon562
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (Flags0 & ~RowMajorBit) | (Arg1Flags & RowMajorBit),$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (Flags0 & ~RowMajorBit) | (LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgType>::Flags & (HereditaryBits | LinearAccessBit | DirectAccessBit)),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon508
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<ArgTypeNestedCleaned>::Flags & (HereditaryBits|LinearAccessMask) & ~RowMajorBit) | (traits<XprType>::Flags & RowMajorBit),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon516
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (evaluator<PlainObjectTypeCleaned>::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon504
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (traits<XprType>::Flags&RowMajorBit) | (evaluator<ArgType>::Flags&(HereditaryBits&(~RowMajorBit))) | LinearAccessBit,$/;"	e	enum:Eigen::internal::evaluator::__anon518
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)(evaluator<ArgType>::Flags & (HereditaryBits | DirectAccessBit) & ~RowMajorBit) | LinearAccessBit,$/;"	e	enum:Eigen::internal::evaluator::__anon521
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = (unsigned int)evaluator<ThenMatrixType>::Flags & evaluator<ElseMatrixType>::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::evaluator::__anon514
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = Flags0 | FlagsLinearAccessBit | FlagsRowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon512
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags ^ RowMajorBit,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon503
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon505
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::evaluator_wrapper_base::__anon519
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = evaluator<Map<PlainObjectType, RefOptions, StrideType> >::Flags,$/;"	e	enum:Eigen::internal::evaluator::__anon511
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = int( evaluator<PlainObjectType>::Flags) & (LinearAccessMask&PacketAccessMask),$/;"	e	enum:Eigen::internal::evaluator::__anon510
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = int(Flags0) & (HereditaryBits | PacketAccessBit | LinearAccess),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
Flags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags = traits<Derived>::EvaluatorFlags,$/;"	e	enum:Eigen::internal::evaluator::__anon501
Flags	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags = cwise_promote_storage_order<typename traits<Lhs>::StorageKind,typename traits<Rhs>::StorageKind,_LhsNested::Flags & RowMajorBit,_RhsNested::Flags & RowMajorBit>::value$/;"	e	enum:Eigen::internal::traits::__anon183
Flags	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    Flags = traits<PlainObjectType>::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon360
Flags	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  enum { Flags = _Arg1Nested::Flags & RowMajorBit };$/;"	e	enum:Eigen::internal::traits::__anon557
Flags	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    Flags = _XprTypeNested::Flags & RowMajorBit $/;"	e	enum:Eigen::internal::traits::__anon361
Flags	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    Flags = traits<_MatrixTypeNested>::Flags & (RowMajorBit | FlagsLvalueBit | DirectAccessBit), \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon174
Flags	plugin/Eigen/src/Core/DenseBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::DenseBase::__anon564
Flags	plugin/Eigen/src/Core/Diagonal.h	/^    Flags = (unsigned int)_MatrixTypeNested::Flags & (RowMajorBit | MaskLvalueBit | DirectAccessBit) & ~RowMajorBit, \/\/ FIXME DirectAccessBit should not be handled by expressions$/;"	e	enum:Eigen::internal::traits::__anon346
Flags	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      Flags = NoPreferredStorageOrderBit$/;"	e	enum:Eigen::DiagonalBase::__anon343
Flags	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    Flags =  (traits<DiagonalVectorType>::Flags & LvalueBit) | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon345
Flags	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    Flags = LvalueBit | NoPreferredStorageOrderBit$/;"	e	enum:Eigen::internal::traits::__anon344
Flags	plugin/Eigen/src/Core/IndexedView.h	/^    Flags = (evaluator<ArgType>::Flags & (HereditaryBits \/*| LinearAccessBit | DirectAccessBit*\/)),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon315
Flags	plugin/Eigen/src/Core/IndexedView.h	/^    Flags = (traits<XprType>::Flags & (HereditaryBits | DirectAccessMask)) | FlagsLvalueBit | FlagsRowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon314
Flags	plugin/Eigen/src/Core/Inverse.h	/^    Flags = BaseTraits::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon338
Flags	plugin/Eigen/src/Core/Inverse.h	/^  enum { Flags = Base::Flags | EvalBeforeNestingBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon339
Flags	plugin/Eigen/src/Core/Map.h	/^    Flags = is_lvalue<PlainObjectType>::value ? int(Flags0) : (int(Flags0) & ~LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon353
Flags	plugin/Eigen/src/Core/Matrix.h	/^    Flags = compute_matrix_flags<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::ret,$/;"	e	enum:Eigen::internal::traits::__anon677
Flags	plugin/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::PermutationBase::__anon332
Flags	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon333
Flags	plugin/Eigen/src/Core/Product.h	/^    Flags = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon175
Flags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((HereditaryBits|_LinearAccessMask) & (unsigned int)(MatrixFlags)) | (_Vectorizable ? PacketAccessBit : 0),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
Flags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
Flags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon316
Flags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon320
Flags	plugin/Eigen/src/Core/Redux.h	/^    Flags = evaluator<XprType>::Flags & ~DirectAccessBit,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
Flags	plugin/Eigen/src/Core/Ref.h	/^    Flags = traits<Map<_PlainObjectType, _Options, _StrideType> >::Flags | NestByRefBit,$/;"	e	enum:Eigen::internal::traits::__anon560
Flags	plugin/Eigen/src/Core/Replicate.h	/^    Flags = IsRowMajor ? RowMajorBit : 0$/;"	e	enum:Eigen::internal::traits::__anon349
Flags	plugin/Eigen/src/Core/ReturnByValue.h	/^    Flags = (traits<typename traits<Derived>::ReturnType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon337
Flags	plugin/Eigen/src/Core/Reverse.h	/^    Flags = _MatrixTypeNested::Flags & (RowMajorBit | LvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon335
Flags	plugin/Eigen/src/Core/Select.h	/^    Flags = (unsigned int)ThenMatrixType::Flags & ElseMatrixType::Flags & RowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon679
Flags	plugin/Eigen/src/Core/SelfAdjointView.h	/^      Flags = internal::traits<SelfAdjointView>::Flags,$/;"	e	enum:Eigen::SelfAdjointView::__anon674
Flags	plugin/Eigen/src/Core/SelfAdjointView.h	/^    Flags =  MatrixTypeNestedCleaned::Flags & (HereditaryBits|FlagsLvalueBit)$/;"	e	enum:Eigen::internal::traits::__anon673
Flags	plugin/Eigen/src/Core/Solve.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon172
Flags	plugin/Eigen/src/Core/Solve.h	/^  enum { Flags = Base::Flags | EvalBeforeNestingBit };$/;"	e	enum:Eigen::internal::evaluator::__anon173
Flags	plugin/Eigen/src/Core/Transpose.h	/^    Flags = Flags1 ^ RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon184
Flags	plugin/Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularView>::Flags,$/;"	e	enum:Eigen::TriangularView::__anon179
Flags	plugin/Eigen/src/Core/TriangularMatrix.h	/^      Flags = internal::traits<TriangularViewType>::Flags$/;"	e	enum:Eigen::TriangularViewImpl::__anon180
Flags	plugin/Eigen/src/Core/TriangularMatrix.h	/^    Flags = (MatrixTypeNestedCleaned::Flags & (HereditaryBits | FlagsLvalueBit) & (~(PacketAccessBit | DirectAccessBit | LinearAccessBit)))$/;"	e	enum:Eigen::internal::traits::__anon178
Flags	plugin/Eigen/src/Core/VectorwiseOp.h	/^    Flags = RowsAtCompileTime == 1 ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon379
Flags	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon147
Flags	plugin/Eigen/src/Geometry/Homogeneous.h	/^    Flags = ColsAtCompileTime==1 ? (TmpFlags & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon681
Flags	plugin/Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon692
Flags	plugin/Eigen/src/Geometry/Quaternion.h	/^    Flags = Eigen::internal::traits<Derived>::Flags$/;"	e	enum:Eigen::QuaternionBase::__anon689
Flags	plugin/Eigen/src/Geometry/Quaternion.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon690
Flags	plugin/Eigen/src/Geometry/Transform.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon701
Flags	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon721
Flags	plugin/Eigen/src/LU/FullPivLU.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon156
Flags	plugin/Eigen/src/LU/PartialPivLU.h	/^    Flags = BaseTraits::Flags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon154
Flags	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon718
Flags	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon716
Flags	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  enum { Flags = 0 };$/;"	e	enum:Eigen::internal::traits::__anon714
Flags	plugin/Eigen/src/SparseCore/SparseBlock.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
Flags	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Flags = Derived::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon75
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon61
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon63
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::binary_evaluator::__anon65
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon66
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon68
Flags	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::__anon70
Flags	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon40
Flags	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon41
Flags	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Flags = NeedToTranspose ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::sparse_dense_outer_product_evaluator::__anon39
Flags	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Lhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon56
Flags	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  enum { CoeffReadCost = HugeCost, Flags = Rhs::Flags&RowMajorBit, Alignment = 0 }; \/\/ FIXME CoeffReadCost & Flags$/;"	e	enum:Eigen::internal::product_evaluator::__anon55
Flags	plugin/Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~ (NestByRefBit | LvalueBit))$/;"	e	enum:Eigen::internal::traits::__anon81
Flags	plugin/Eigen/src/SparseCore/SparseMap.h	/^    Flags = TraitsBase::Flags & (~NestByRefBit)$/;"	e	enum:Eigen::internal::traits::__anon80
Flags	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon78
Flags	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon77
Flags	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit | CompressedAccessBit,$/;"	e	enum:Eigen::internal::traits::__anon76
Flags	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
Flags	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon87
Flags	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    Flags = Base::Flags | EvalBeforeNestingBit$/;"	e	enum:Eigen::internal::product_evaluator::__anon88
Flags	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Flags = (traits<SparseMatrix<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit) & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon97
Flags	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Flags = (traits<SparseVector<MatScalar,MatOptions,MatIndex> >::Flags | CompressedAccessBit | NestByRefBit) & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon100
Flags	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Flags = traits<PlainObjectType>::Flags | CompressedAccessBit | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon95
Flags	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Flags = traits<PlainObjectType>::Flags | CompressedAccessBit | NestByRefBit$/;"	e	enum:Eigen::internal::traits::__anon98
Flags	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon38
Flags	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon73
Flags	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Flags = SparseVectorType::Flags$/;"	e	enum:Eigen::internal::evaluator::__anon93
Flags	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Flags = _Options | NestByRefBit | LvalueBit | (IsColVector ? 0 : RowMajorBit) | CompressedAccessBit,$/;"	e	enum:Eigen::internal::traits::__anon89
Flags	plugin/Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon43
Flags	plugin/Eigen/src/SparseCore/SparseView.h	/^      Flags = XprType::Flags$/;"	e	enum:Eigen::internal::unary_evaluator::__anon45
Flags	plugin/Eigen/src/SparseCore/SparseView.h	/^    Flags = int(traits<MatrixType>::Flags) & (RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon42
Flags0	plugin/Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon522
Flags0	plugin/Eigen/src/Core/ArrayWrapper.h	/^    Flags0 = traits<typename remove_all<typename ExpressionType::Nested>::type >::Flags,$/;"	e	enum:Eigen::internal::traits::__anon523
Flags0	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = (int(Arg1Flags) | int(Arg2Flags) | int(Arg3Flags)) & ($/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
Flags0	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = (int(LhsFlags) | int(RhsFlags)) & ($/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
Flags0	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags & ( (HereditaryBits & ~RowMajorBit) |$/;"	e	enum:Eigen::internal::evaluator::__anon512
Flags0	plugin/Eigen/src/Core/CoreEvaluators.h	/^    Flags0 = evaluator<ArgType>::Flags,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
Flags0	plugin/Eigen/src/Core/Map.h	/^    Flags0 = TraitsBase::Flags & (~NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon353
Flags0	plugin/Eigen/src/Core/Transpose.h	/^    Flags0 = traits<MatrixTypeNestedPlain>::Flags & ~(LvalueBit | NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon184
Flags1	plugin/Eigen/src/Core/Transpose.h	/^    Flags1 = Flags0 | FlagsLvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon184
FlagsLinearAccessBit	plugin/Eigen/src/Core/CoreEvaluators.h	/^    FlagsLinearAccessBit = (RowsAtCompileTime == 1 || ColsAtCompileTime == 1 || (InnerPanel && (evaluator<ArgType>::Flags&LinearAccessBit))) ? LinearAccessBit : 0,    $/;"	e	enum:Eigen::internal::evaluator::__anon512
FlagsLvalueBit	plugin/Eigen/src/Core/Block.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon562
FlagsLvalueBit	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon174
FlagsLvalueBit	plugin/Eigen/src/Core/IndexedView.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon314
FlagsLvalueBit	plugin/Eigen/src/Core/SelfAdjointView.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon673
FlagsLvalueBit	plugin/Eigen/src/Core/Transpose.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon184
FlagsLvalueBit	plugin/Eigen/src/Core/TriangularMatrix.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon178
FlagsRowMajorBit	plugin/Eigen/src/Core/Block.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon562
FlagsRowMajorBit	plugin/Eigen/src/Core/CoreEvaluators.h	/^    FlagsRowMajorBit = XprType::Flags&RowMajorBit,$/;"	e	enum:Eigen::internal::evaluator::__anon512
FlagsRowMajorBit	plugin/Eigen/src/Core/IndexedView.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon314
FloorReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_floor_op<Scalar>, const Derived> FloorReturnType;$/;"	t
ForceAlignedAccess	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC explicit inline ForceAlignedAccess(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ForceAlignedAccess
ForceAlignedAccess	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^template<typename ExpressionType> class ForceAlignedAccess$/;"	c	namespace:Eigen
ForceAlignment	plugin/Eigen/src/Core/GeneralProduct.h	/^    ForceAlignment  = internal::packet_traits<Scalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gemv_static_vector_if::__anon555
ForwardLinearAccess	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ForwardLinearAccess = InnerPanel && bool(evaluator<ArgType>::Flags&LinearAccessBit)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon513
FromTwoVectors	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
FullMatrixType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullMatrixType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename MatrixType::PlainObject FullMatrixType;$/;"	t	struct:Eigen::internal::traits
FullPivHouseholderQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR()$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    explicit FullPivHouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    explicit FullPivHouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> class FullPivHouseholderQR$/;"	c	namespace:Eigen
FullPivHouseholderQRMatrixQReturnType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  FullPivHouseholderQRMatrixQReturnType(const MatrixType&       qr,$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
FullPivHouseholderQRMatrixQReturnType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename MatrixType> struct FullPivHouseholderQRMatrixQReturnType$/;"	s	namespace:Eigen::internal
FullPivHouseholderQRPreconditioner	plugin/Eigen/src/Core/util/Constants.h	/^  FullPivHouseholderQRPreconditioner$/;"	e	enum:Eigen::QRPreconditioners
FullPivLU	plugin/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU()$/;"	f	class:Eigen::FullPivLU
FullPivLU	plugin/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	plugin/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(Index rows, Index cols)$/;"	f	class:Eigen::FullPivLU
FullPivLU	plugin/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	plugin/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> class FullPivLU$/;"	c	namespace:Eigen
FullPrecision	plugin/Eigen/src/Core/IO.h	/^       FullPrecision = -2 };$/;"	e	enum:Eigen::__anon559
Functor	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<BinaryOp>::type Functor;$/;"	t	class:Eigen::CwiseBinaryOp
Functor	plugin/Eigen/src/Core/Swap.h	/^  typedef swap_assign_op<Scalar> Functor;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
FunctorType	plugin/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon472
FunctorType	plugin/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon473
FunctorType	plugin/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon474
GEMM_H	src/gemm.h	2;"	d
GEMM_SPECIALIZATION	plugin/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	49;"	d
GEMM_X86_H_	src/vec_gemm.h	9;"	d
GPU	Makefile	/^GPU=0$/;"	m
GRU	include/darknet.h	/^    GRU,$/;"	e	enum:__anon728
GRU_LAYER_H	src/gru_layer.h	3;"	d
GemmParallelInfo	plugin/Eigen/src/Core/products/Parallelizer.h	/^  GemmParallelInfo() : sync(-1), users(0), lhs_start(0), lhs_length(0) {}$/;"	f	struct:Eigen::internal::GemmParallelInfo
GemmParallelInfo	plugin/Eigen/src/Core/products/Parallelizer.h	/^template<typename Index> struct GemmParallelInfo$/;"	s	namespace:Eigen::internal
GemmProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
GemvProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
GenEigMask	plugin/Eigen/src/Core/util/Constants.h	/^  GenEigMask = Ax_lBx | ABx_lx | BAx_lx$/;"	e	enum:Eigen::DecompositionOptions
GeneralizedEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver()$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver(const MatrixType& A, const MatrixType& B, bool computeEigenvectors = true)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    explicit GeneralizedEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedEigenSolver
GeneralizedEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^template<typename _MatrixType> class GeneralizedEigenSolver$/;"	c	namespace:Eigen
GeneralizedSelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver() : Base() {}$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB,$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    explicit GeneralizedSelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^class GeneralizedSelfAdjointEigenSolver : public SelfAdjointEigenSolver<_MatrixType>$/;"	c	namespace:Eigen
Generic	plugin/Eigen/src/Core/util/Constants.h	/^    Generic = 0x0,$/;"	e	enum:Eigen::Architecture::Type
GenericNumTraits	plugin/Eigen/src/Core/NumTraits.h	/^template<typename T> struct GenericNumTraits$/;"	s	namespace:Eigen
GetAction	plugin/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
GlobalLU_t	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef LU_GlobalLU_t<IndexVector, ScalarVector> GlobalLU_t; $/;"	t	class:Eigen::internal::SparseLUImpl
HARDTAN	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
HCoeffsType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::ColPivHouseholderQR
HCoeffsType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
HCoeffsType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::FullPivHouseholderQR
HCoeffsType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
HCoeffsType	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::HouseholderQR
HDim	plugin/Eigen/src/Geometry/Transform.h	/^    HDim = Transform::HDim,$/;"	e	enum:Eigen::internal::transform_traits::__anon700
HDim	plugin/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon705
HDim	plugin/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon706
HDim	plugin/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon707
HDim	plugin/Eigen/src/Geometry/Transform.h	/^    HDim = _Dim+1,  \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon702
HEADER	src/rgb2yuyv_neon.cpp	24;"	d	file:
HNormalizedReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef EIGEN_EXPR_BINARYOP_SCALAR_RETURN_TYPE(ConstStartMinusOne,Scalar,quotient) HNormalizedReturnType;$/;"	t	class:Eigen::MatrixBase
HNormalizedReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^            HNormalizedReturnType;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Block	plugin/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Block;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Factors	plugin/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Factors;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Size	plugin/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_Size = Direction==Vertical ? internal::traits<ExpressionType>::RowsAtCompileTime$/;"	e	enum:Eigen::VectorwiseOp::__anon383
HNormalized_SizeMinusOne	plugin/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_SizeMinusOne = HNormalized_Size==Dynamic ? Dynamic : HNormalized_Size-1$/;"	e	enum:Eigen::VectorwiseOp::__anon383
HalfLength	plugin/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon373
HalfLength	plugin/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon375
HalfPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::BlasLinearMapper
HalfPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::half HalfPacket;$/;"	t	class:Eigen::internal::blas_data_mapper
HasACos	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasACos   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasASin	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasASin   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasATan	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasATan   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasAbs	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasAbs	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasAbs	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasAbs	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasAbs	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasAbs	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasAbs	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasAbs	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasAbs	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasAbs	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasAbs	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasAbs	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasAbs	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasAbs	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasAbs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasAbs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAbs  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasAbs2	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasAbs2	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasAbs2	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasAbs2	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasAbs2	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasAbs2	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasAbs2	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasAbs2	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasAbs2	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasAbs2	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasAbs2	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasAbs2	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasAdd	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasAdd	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasAdd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasAdd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasAdd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasAdd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasAdd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasAdd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasAdd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasAdd	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasAdd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasAdd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasAdd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasAdd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasAdd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasAdd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasAdd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasAdd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasAdd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasAdd  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasArg	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasArg    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasBetaInc	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasBetaInc = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasBetaInc	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBetaInc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasBetaInc	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBetaInc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasBlend	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasBlend  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasBlend	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasBlend	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasBlend = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasBlend	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasBlend	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasBlend  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasBlend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasBlend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasBlend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasBlend	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasBlend	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasBlend = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasBlend	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasBlend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasBlend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasBlend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon571
HasBlend	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasBlend  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasBlend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasBlend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasBlend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasBlend = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasCeil	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasCeil   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasCeil	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasCeil	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasCeil	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasCeil	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasCeil	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasCeil	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCeil = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasCeil	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasCeil	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCeil = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasConj	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasConj	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasCos	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasCos    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasCos	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasCos	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasCos	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasCos	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasCos	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasCos	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasCos	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCos  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasCos	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasCos	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasCosh	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasCosh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasDiGamma	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasDiGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasDiGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasDiGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasDirectAccess	plugin/Eigen/src/Core/Ref.h	/^      HasDirectAccess = internal::has_direct_access<Derived>::ret,$/;"	e	enum:Eigen::internal::traits::match::__anon561
HasDiv	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasDiv    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasDiv	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasDiv	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasDiv	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasDiv	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasDiv	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasDiv = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasDiv	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasDiv = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon628
HasDiv	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasDiv	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasDiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasDiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasDiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasDiv	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasDiv	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasDiv	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasDiv	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasDiv	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasDiv	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasDiv	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasDiv	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasDiv	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasDiv	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasDiv	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasDiv	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasDiv	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasDiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasDiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasDiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasErf	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasErf = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasErf	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErf = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasErf	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErf = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasErfc	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasErfc = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasErfc	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErfc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasErfc	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasErfc = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasExp	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasExp    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasExp	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasExp	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasExp	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasExp = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasExp	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasExp	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasExp	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasExp	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasExp	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasExp    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasExp	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasExp	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasExp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasExp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasExp	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasExp	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasExpm1	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasExpm1  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasExpm1	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasExpm1  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasFloor	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasFloor  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasFloor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasFloor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasFloor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasFloor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasFloor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasFloor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasFloor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasFloor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasFloor = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasHalfPacket	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon356
HasHalfPacket	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasHalfPacket	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
HasHalfPacket	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasHalfPacket	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasHalfPacket	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasHalfPacket	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasHalfPacket	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasHalfPacket	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasHalfPacket	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasHalfPacket	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasHalfPacket	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasHalfPacket	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasHalfPacket	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0 \/\/ Packet2i intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon602
HasHalfPacket	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0, \/\/ Packet2f intrinsics not implemented yet$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasHalfPacket	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasHalfPacket=0,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasHalfPacket	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasHalfPacket	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasHalfPacket	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasHalfPacket	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasHalfPacket	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasHalfPacket	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasHalfPacket	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasHalfPacket	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasHalfPacket	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasHalfPacket = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasIGamma	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasIGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasIGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasIGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasIGammac	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasIGammac = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasIGammac	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGammac = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasIGammac	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasIGammac = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasLGamma	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasLGamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasLGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasLGamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLGamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasLog	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasLog    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasLog	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasLog	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasLog = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasLog	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasLog	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasLog	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasLog	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasLog	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasLog    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasLog	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasLog	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasLog	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasLog	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasLog	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasLog10	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasLog10  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasLog1p	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasLog1p  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasLog1p	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasLog1p  = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasMax	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasMax	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasMax	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasMax	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasMax	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasMax	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasMax	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasMax	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasMax	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasMax	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasMax	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasMax	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasMax	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasMax	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasMax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasMax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMax  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasMin	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasMin	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasMin	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasMin	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasMin	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasMin	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasMin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasMin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasMin	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasMin	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasMin	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasMin	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasMin	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasMin	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasMin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasMin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMin  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasMul	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasMul	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasMul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasMul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasMul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasMul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasMul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasMul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasMul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasMul	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasMul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasMul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasMul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasMul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasMul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasMul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasMul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasMul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasMul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasMul  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasNegate	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasNegate	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasNegate	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasNegate	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasNegate	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasNegate	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasNegate	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasNegate	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasNegate	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasNegate	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasNegate	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasNegate	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasNegate	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasNegate	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasNegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasNegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasNoInnerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^    HasNoInnerStride = InnerStrideAtCompileTime == 1,$/;"	e	enum:Eigen::internal::evaluator::__anon510
HasNoOuterStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^    HasNoOuterStride = StrideType::OuterStrideAtCompileTime == 0,$/;"	e	enum:Eigen::internal::evaluator::__anon510
HasNoStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^    HasNoStride = HasNoInnerStride && HasNoOuterStride,$/;"	e	enum:Eigen::internal::evaluator::__anon510
HasPolygamma	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasPolygamma = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasPolygamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasPolygamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasPolygamma	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasPolygamma = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasPow	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasPow    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasRound	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasRound  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasRound	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasRound	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasRound	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasRound	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasRound	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasRound	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasRound	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasRound	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRound = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasRsqrt	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasRsqrt  = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasRsqrt	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasRsqrt	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasRsqrt	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasRsqrt = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasRsqrt	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasRsqrt = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
HasRsqrt	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasRsqrt	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasRsqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasRsqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasRsqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasRsqrt  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasRsqrt	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasRsqrt	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasRsqrt	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasRsqrt	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasRsqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasSameStorageOrderAsArgType	plugin/Eigen/src/Core/CoreEvaluators.h	/^    HasSameStorageOrderAsArgType = (IsRowMajor == ArgTypeIsRowMajor),$/;"	e	enum:Eigen::internal::evaluator::__anon512
HasSameStorageOrderAsXprType	plugin/Eigen/src/Core/Block.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon562
HasSameStorageOrderAsXprType	plugin/Eigen/src/Core/IndexedView.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon314
HasSetLinear	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasSetLinear	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSetLinear	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasSetLinear	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasSetLinear	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasSetLinear	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasSetLinear	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasSetLinear	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasSetLinear	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasSetLinear	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasSetLinear	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasSetLinear	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasSign	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSign   = 0$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSin	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSin    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSin	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasSin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasSin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasSin	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasSin	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasSin	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasSin	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasSin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasSin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasSinh	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSinh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSqrt	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSqrt   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSqrt	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasSqrt	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
HasSqrt	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasSqrt = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
HasSqrt	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    HasSqrt = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
HasSqrt	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasSqrt	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasSqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasSqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HasSqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    HasSqrt   = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
HasSqrt	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon601
HasSqrt	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon605
HasSqrt	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasSqrt	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
HasSqrt	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasSqrt	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSqrt = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasSub	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon357
HasSub	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasSub	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
HasSub	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
HasSub	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
HasSub	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
HasSub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
HasSub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
HasSub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
HasSub	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
HasSub	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
HasSub	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
HasSub	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
HasSub	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
HasSub	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
HasSub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
HasSub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
HasSub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    HasSub  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
HasTan	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasTan    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasTanh	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasTanh   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasTanh	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    HasTanh  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
HasTanh	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasTanh  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
HasUnitDiag	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon303
HasUnitDiag	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon304
HasUnitDiag	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^           HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::TriangularViewImpl::__anon71
HasUnitDiag	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^         HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::internal::unary_evaluator::__anon72
HasUsableDirectAccess	plugin/Eigen/src/Core/util/BlasUtil.h	/^    HasUsableDirectAccess = (    (int(XprType::Flags)&DirectAccessBit)$/;"	e	enum:Eigen::internal::blas_traits::__anon484
HasZeroDiag	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon303
HasZeroDiag	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon304
HasZeta	plugin/Eigen/src/Core/GenericPacketMath.h	/^    HasZeta = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon355
HasZeta	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasZeta = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
HasZeta	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    HasZeta = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
HereditaryBits	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int HereditaryBits = RowMajorBit$/;"	m	namespace:Eigen
HessenbergDecomposition	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    explicit HessenbergDecomposition(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename _MatrixType> class HessenbergDecomposition$/;"	c	namespace:Eigen
HessenbergDecompositionMatrixHReturnType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecompositionMatrixHReturnType(const HessenbergDecomposition<MatrixType>& hess) : m_hess(hess) { }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
HessenbergDecompositionMatrixHReturnType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename MatrixType> struct HessenbergDecompositionMatrixHReturnType$/;"	s	namespace:Eigen::internal
Homogeneous	plugin/Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC explicit inline Homogeneous(const MatrixType& matrix)$/;"	f	class:Eigen::Homogeneous
Homogeneous	plugin/Eigen/src/Geometry/Homogeneous.h	/^template<typename MatrixType,int _Direction> class Homogeneous$/;"	c	namespace:Eigen
HomogeneousDimension	plugin/Eigen/src/Geometry/Umeyama.h	/^    HomogeneousDimension = int(MinRowsAtCompileTime) == Dynamic ? Dynamic : int(MinRowsAtCompileTime)+1$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon694
HomogeneousReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef Homogeneous<Derived, HomogeneousReturnTypeDirection> HomogeneousReturnType;$/;"	t	class:Eigen::MatrixBase
HomogeneousReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef Homogeneous<ExpressionType,Direction> HomogeneousReturnType;$/;"	t	class:Eigen::VectorwiseOp
HomogeneousReturnTypeDirection	plugin/Eigen/src/Core/MatrixBase.h	/^    enum { HomogeneousReturnTypeDirection = ColsAtCompileTime==1&&RowsAtCompileTime==1 ? ((internal::traits<Derived>::Flags&RowMajorBit)==RowMajorBit ? Horizontal : Vertical)$/;"	e	enum:Eigen::MatrixBase::__anon671
HomogeneousShape	plugin/Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	s	namespace:Eigen
Horizontal	plugin/Eigen/src/Core/util/Constants.h	/^  Horizontal, $/;"	e	enum:Eigen::DirectionType
HouseholderQR	plugin/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR() : m_qr(), m_hCoeffs(), m_temp(), m_isInitialized(false) {}$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	plugin/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	plugin/Eigen/src/QR/HouseholderQR.h	/^    explicit HouseholderQR(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	plugin/Eigen/src/QR/HouseholderQR.h	/^    explicit HouseholderQR(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	plugin/Eigen/src/QR/HouseholderQR.h	/^template<typename _MatrixType> class HouseholderQR$/;"	c	namespace:Eigen
HouseholderQRPreconditioner	plugin/Eigen/src/Core/util/Constants.h	/^  HouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
HouseholderSequence	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const HouseholderSequence& other)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	plugin/Eigen/src/Householder/HouseholderSequence.h	/^template<typename VectorsType, typename CoeffsType, int Side> class HouseholderSequence$/;"	c	namespace:Eigen
HouseholderSequenceShape	plugin/Eigen/src/Householder/HouseholderSequence.h	/^struct HouseholderSequenceShape {};$/;"	s	namespace:Eigen::internal
HouseholderSequenceType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HessenbergDecomposition
HouseholderSequenceType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename CoeffVectorType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::Tridiagonalization
HouseholderSequenceType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::HouseholderSequenceType HouseholderSequenceType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
HouseholderSequenceType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheLeft> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheRight> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::ColPivHouseholderQR
HouseholderSequenceType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      HouseholderSequenceType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
HouseholderSequenceType	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef HouseholderSequence<MatrixType,typename internal::remove_all<typename HCoeffsType::ConjugateReturnType>::type> HouseholderSequenceType;$/;"	t	class:Eigen::HouseholderQR
HouseholderUSequenceType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderUSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HouseholderVSequenceType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderVSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HugeCost	plugin/Eigen/src/Core/util/Constants.h	/^const int HugeCost = 10000;$/;"	m	namespace:Eigen
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC Hyperplane(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane(const VectorType& n, const Scalar& d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline explicit Hyperplane(Index _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
HypotNormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_hypotNorm,RealScalar>::Type HypotNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
IM2COL_H	src/im2col.h	2;"	d
IMAGE	python/darknet.py	/^class IMAGE(Structure):$/;"	c
IMAGE_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
IMAGE_H	src/image.h	2;"	d
IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        IMPLICIT_CONVERSION_TO_SCALAR_IS_FOR_INNER_PRODUCT_ONLY=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INCLUDE_STB_IMAGE_WRITE_H	src/stb_image_write.h	81;"	d
INC_YOLO_LIB_H_	include/yolo_lib.h	9;"	d
INPUT_COL_PIXEL	src/rgb2yuyv_neon.cpp	5;"	d	file:
INPUT_RAW_PIXEL	src/rgb2yuyv_neon.cpp	4;"	d	file:
INPUT_RGB_CHANNEL	src/rgb2yuyv_neon.cpp	7;"	d	file:
INPUT_SIZE	src/rgb2yuyv_neon.cpp	6;"	d	file:
INSTANCE_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
INTERLEAVED	include/darknet.h	/^	INTERLEAVED$/;"	e	enum:__anon732
INVALID_MATRIXBASE_TEMPLATE_PARAMETERS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIXBASE_TEMPLATE_PARAMETERS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INVALID_MATRIX_PRODUCT	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INVALID_MATRIX_TEMPLATE_PARAMETERS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_TEMPLATE_PARAMETERS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
IOFormat	plugin/Eigen/src/Core/IO.h	/^  IOFormat(int _precision = StreamPrecision, int _flags = 0,$/;"	f	struct:Eigen::IOFormat
IOFormat	plugin/Eigen/src/Core/IO.h	/^struct IOFormat$/;"	s	namespace:Eigen
Identity	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity()$/;"	f	class:Eigen::MatrixBase
Identity	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
Identity	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC static inline const AngleAxis Identity() { return AngleAxis(Scalar(0), Vector3::UnitX()); }$/;"	f	class:Eigen::AngleAxis
Identity	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static inline Quaternion<Scalar> Identity() { return Quaternion<Scalar>(Scalar(1), Scalar(0), Scalar(0), Scalar(0)); }$/;"	f	class:Eigen::QuaternionBase
Identity	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC static inline Rotation2D Identity() { return Rotation2D(0); }$/;"	f	class:Eigen::Rotation2D
Identity	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static const Transform Identity()$/;"	f	class:Eigen::Transform
Identity	plugin/Eigen/src/Geometry/Translation.h	/^  static const Translation Identity() { return Translation(VectorType::Zero()); }$/;"	f	class:Eigen::Translation
IdentityPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner() {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit IdentityPreconditioner(const MatrixType& ) {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class IdentityPreconditioner$/;"	c	namespace:Eigen
IdentityReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_identity_op<Scalar>,PlainObject> IdentityReturnType;$/;"	t	class:Eigen::MatrixBase
ImagReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_imag_op<Scalar>, const Derived> ImagReturnType;$/;"	t
Impl	plugin/Eigen/src/Core/Block.h	/^    typedef BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, typename internal::traits<XprType>::StorageKind> Impl;$/;"	t	class:Eigen::Block
Impl	plugin/Eigen/src/Core/Block.h	/^    typedef internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel> Impl;$/;"	t	class:Eigen::BlockImpl
IncompleteCholesky	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    IncompleteCholesky() : m_initialShift(1e-3),m_factorizationIsOk(false) {}$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    IncompleteCholesky(const MatrixType& matrix) : m_initialShift(1e-3),m_factorizationIsOk(false)$/;"	f	class:Eigen::IncompleteCholesky
IncompleteCholesky	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^class IncompleteCholesky : public SparseSolverBase<IncompleteCholesky<Scalar,_UpLo,_OrderingType> >$/;"	c	namespace:Eigen
IncompleteLUT	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT()$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    explicit IncompleteLUT(const MatrixType& mat, const RealScalar& droptol=NumTraits<Scalar>::dummy_precision(), int fillfactor = 10)$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^class IncompleteLUT : public SparseSolverBase<IncompleteLUT<_Scalar, _StorageIndex> >$/;"	c	namespace:Eigen
IncrAtCompileTime	plugin/Eigen/src/Core/ArithmeticSequence.h	/^    IncrAtCompileTime = internal::get_fixed_value<IncrType,DynamicIndex>::value$/;"	e	enum:Eigen::ArithmeticSequence::__anon524
Indefinite	plugin/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
Index	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LDLT
Index	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::LLT
Index	plugin/Eigen/src/Core/EigenBase.h	/^  typedef Eigen::Index Index;$/;"	t	struct:Eigen::EigenBase
Index	plugin/Eigen/src/Core/Stride.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Stride
Index	plugin/Eigen/src/Core/Transpositions.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::TranspositionsBase
Index	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::VectorwiseOp
Index	plugin/Eigen/src/Core/util/Meta.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE Index;$/;"	t	namespace:Eigen
Index	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexEigenSolver
Index	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ComplexSchur
Index	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::EigenSolver
Index	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::GeneralizedEigenSolver
Index	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::HessenbergDecomposition
Index	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealQZ
Index	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::RealSchur
Index	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SelfAdjointEigenSolver
Index	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Tridiagonalization
Index	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef Eigen::Index                              Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::AlignedBox
Index	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Hyperplane
Index	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::ParametrizedLine
Index	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::Transform
Index	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::SVDBase
Index	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Eigen::Index Index; \/\/\/< \\deprecated since Eigen 3.3$/;"	t	class:Eigen::internal::UpperBidiagonalization
IndexBased	plugin/Eigen/src/Core/util/Constants.h	/^struct IndexBased {};$/;"	s	namespace:Eigen::internal
IndexPointer	plugin/Eigen/src/SparseCore/SparseMap.h	/^                         StorageIndex *, const StorageIndex *>::type IndexPointer;$/;"	t	class:Eigen::SparseMapBase
IndexType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef long long int IndexType;$/;"	t	struct:Eigen::internal::pardiso_run_selector
IndexVector	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::MetisOrdering
IndexVector	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::COLAMDOrdering
IndexVector	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
IndexVector	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseCompressedBase
IndexVector	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::IndexVector IndexVector;$/;"	t	class:Eigen::SparseMatrix
IndexVector	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseMatrixBase
IndexVector	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::SparseLU
IndexVector	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector; $/;"	t	class:Eigen::internal::SparseLUImpl
IndexVector	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<StorageIndex,Dynamic,1> IndexVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
IndexVector	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<StorageIndex, Dynamic, 1> IndexVector;$/;"	t	class:Eigen::SparseQR
IndexedView	plugin/Eigen/src/Core/IndexedView.h	/^  IndexedView(XprType& xpr, const T0& rowIndices, const T1& colIndices)$/;"	f	class:Eigen::IndexedView
IndexedView	plugin/Eigen/src/Core/IndexedView.h	/^class IndexedView : public IndexedViewImpl<XprType, RowIndices, ColIndices, typename internal::traits<XprType>::StorageKind>$/;"	c	namespace:Eigen
IndexedViewCompatibleType	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct IndexedViewCompatibleType<ArithmeticSequence<FirstType,SizeType,IncrType>, XprSize> {$/;"	s	namespace:Eigen::internal
IndexedViewCompatibleType	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct IndexedViewCompatibleType {$/;"	s	namespace:Eigen::internal
IndexedViewCompatibleType	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct IndexedViewCompatibleType<T, XprSize, typename enable_if<Symbolic::is_symbolic<T>::value>::type> {$/;"	s	namespace:Eigen::internal
IndexedViewCompatibleType	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct IndexedViewCompatibleType<T,XprSize,typename internal::enable_if<internal::is_integral<T>::value>::type> {$/;"	s	namespace:Eigen::internal
IndexedViewCompatibleType	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct IndexedViewCompatibleType<all_t,XprSize> {$/;"	s	namespace:Eigen::internal
IndexedViewImpl	plugin/Eigen/src/Core/IndexedView.h	/^class IndexedViewImpl$/;"	c	namespace:Eigen
IndicesRef	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Ref<ArrayXi> IndicesRef;$/;"	t	class:Eigen::BDCSVD
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationBase
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationMatrix
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationWrapper
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef Map<const Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Transpositions
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsBase
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsWrapper
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^  typedef Map<const Matrix<_StorageIndex,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	plugin/Eigen/src/Core/Transpositions.h	/^  typedef Matrix<_StorageIndex, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
Infinity	plugin/Eigen/src/Core/util/Constants.h	/^const int Infinity = -1;$/;"	m	namespace:Eigen
InnerIncr	plugin/Eigen/src/Core/IndexedView.h	/^    InnerIncr = IsRowMajor ? ColIncr : RowIncr,$/;"	e	enum:Eigen::internal::traits::__anon314
InnerIterator	plugin/Eigen/src/Core/CoreIterators.h	/^  InnerIterator(const XprType &xpr, const Index &outerId)$/;"	f	class:Eigen::InnerIterator
InnerIterator	plugin/Eigen/src/Core/CoreIterators.h	/^class InnerIterator$/;"	c	namespace:Eigen
InnerIterator	plugin/Eigen/src/Core/DenseBase.h	/^    typedef Eigen::InnerIterator<Derived> InnerIterator;$/;"	t	class:Eigen::DenseBase
InnerIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::conditional<OuterVector,OuterVectorInnerIterator,InnerVectorInnerIterator>::type InnerIterator;$/;"	t	struct:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator()$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator(const InnerIterator& other)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit InnerIterator(const SparseCompressedBase& mat)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit InnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::InnerIterator$/;"	c	class:Eigen::SparseCompressedBase
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const binary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const sparse_conjunction_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::binary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::sparse_conjunction_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>::InnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    InnerIterator(const sparse_dense_outer_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  class InnerIterator : public LhsIterator$/;"	c	struct:Eigen::internal::sparse_dense_outer_product_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    InnerIterator(const sparse_diagonal_product_evaluator &xprEval, Index outer)$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator : public SparseXprInnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  class InnerIterator$/;"	c	struct:Eigen::internal::sparse_diagonal_product_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::InnerIterator InnerIterator;$/;"	t	class:Eigen::SparseMatrix
InnerIterator	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& unaryOp, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& xprEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseVector.h	/^    typedef typename Base::InnerIterator InnerIterator;$/;"	t	class:Eigen::SparseVector
InnerIterator	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::InnerIterator InnerIterator;$/;"	t	struct:Eigen::internal::evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator(const unary_evaluator& sve, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
InnerIterator	plugin/Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator : public EvalIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseCore/SparseView.h	/^    class InnerIterator$/;"	c	struct:Eigen::internal::unary_evaluator
InnerIterator	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^     InnerIterator(const MappedSuperNodalMatrix& mat, Index outer)$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
InnerIterator	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix<Scalar,StorageIndex>::InnerIterator$/;"	c	class:Eigen::internal::MappedSuperNodalMatrix
InnerMaxSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    InnerMaxSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon490
InnerMaxSize	plugin/Eigen/src/Core/Assign_MKL.h	/^      InnerMaxSize  = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
InnerMaxSize	plugin/Eigen/src/Core/Redux.h	/^    InnerMaxSize = int(Derived::IsRowMajor)$/;"	e	enum:Eigen::internal::redux_traits::__anon368
InnerPacketSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    InnerPacketSize = unpacket_traits<InnerPacketType>::size$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon491
InnerPacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename find_best_packet<DstScalar,InnerSize>::type InnerPacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
InnerProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
InnerRandomAccessPattern	plugin/Eigen/src/SparseCore/SparseUtil.h	/^const int InnerRandomAccessPattern  = 0x2 | CoherentAccessPattern;$/;"	m	namespace:Eigen
InnerRequiredAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    InnerRequiredAlignment = unpacket_traits<InnerPacketType>::alignment$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon492
InnerSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon490
InnerSize	plugin/Eigen/src/Core/Assign_MKL.h	/^      InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
InnerSize	plugin/Eigen/src/Core/Block.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon562
InnerSize	plugin/Eigen/src/Core/CoreEvaluators.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::evaluator::__anon512
InnerSize	plugin/Eigen/src/Core/IndexedView.h	/^    InnerSize = XprTypeIsRowMajor ? ColsAtCompileTime : RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon314
InnerSize	plugin/Eigen/src/Core/Product.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsTraits::ColsAtCompileTime, RhsTraits::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon175
InnerSize	plugin/Eigen/src/Core/ProductEvaluators.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(LhsNestedCleaned::ColsAtCompileTime, RhsNestedCleaned::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::product_evaluator::__anon318
InnerSizeAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::DenseBase::__anon564
InnerSizeAtCompileTime	plugin/Eigen/src/Core/Redux.h	/^    InnerSizeAtCompileTime = XprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
InnerSizeAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
InnerStride	plugin/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride() : Base() {}$/;"	f	class:Eigen::InnerStride
InnerStride	plugin/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC InnerStride(Index v) : Base(0, v) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::InnerStride
InnerStride	plugin/Eigen/src/Core/Stride.h	/^class InnerStride : public Stride<0, Value>$/;"	c	namespace:Eigen
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon562
InnerStrideAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon512
InnerStrideAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon510
InnerStrideAtCompileTime	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    InnerStrideAtCompileTime = MatrixTypeInnerStride == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon174
InnerStrideAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      InnerStrideAtCompileTime = internal::inner_stride_at_compile_time<Derived>::ret,$/;"	e	enum:Eigen::DenseBase::__anon564
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,$/;"	e	enum:Eigen::internal::traits::__anon346
InnerStrideAtCompileTime	plugin/Eigen/src/Core/IndexedView.h	/^    InnerStrideAtCompileTime = InnerIncr<0 || InnerIncr==DynamicIndex || XprInnerStride==Dynamic ? Dynamic : XprInnerStride * InnerIncr,$/;"	e	enum:Eigen::internal::traits::__anon314
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Map.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon353
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    InnerStrideAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon677
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Stride.h	/^      InnerStrideAtCompileTime = _InnerStrideAtCompileTime,$/;"	e	enum:Eigen::Stride::__anon367
InnerStrideAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon184
InnerStrideMatch	plugin/Eigen/src/Core/Ref.h	/^      InnerStrideMatch = int(StrideType::InnerStrideAtCompileTime)==int(Dynamic)$/;"	e	enum:Eigen::internal::traits::match::__anon561
InnerUnrolling	plugin/Eigen/src/Core/util/Constants.h	/^  InnerUnrolling,$/;"	e	enum:Eigen::UnrollingType
InnerVectorInnerIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE InnerVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
InnerVectorInnerIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::InnerVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
InnerVectorReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived,IsRowMajor?1:Dynamic,IsRowMajor?Dynamic:1,true>       InnerVectorReturnType;$/;"	t
InnerVectorizedTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  InnerVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
InnerVectorsReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived,Dynamic,Dynamic,true> InnerVectorsReturnType;$/;"	t
InputScalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::evaluator
InputScalar	plugin/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MatrixType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::traits
IntColVectorType	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::KLU
IntColVectorType	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_col_type<MatrixType, StorageIndex>::type IntColVectorType;$/;"	t	class:Eigen::FullPivLU
IntColVectorType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::PardisoImpl
IntColVectorType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;    $/;"	t	class:Eigen::SuperLUBase
IntColVectorType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntColVectorType IntColVectorType;   $/;"	t	class:Eigen::SuperLU
IntColVectorType	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::UmfPackLU
IntDiagSizeVectorType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^                   EIGEN_SIZE_MIN_PREFER_FIXED(MaxColsAtCompileTime,MaxRowsAtCompileTime)> IntDiagSizeVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntDiagSizeVectorType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename FullPivHouseholderQR<MatrixType>::IntDiagSizeVectorType IntDiagSizeVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
IntPtr	plugin/Eigen/src/Core/util/Meta.h	/^typedef std::intptr_t  IntPtr;$/;"	t	namespace:Eigen::internal
IntRowVectorType	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::KLU
IntRowVectorType	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_row_type<MatrixType, StorageIndex>::type IntRowVectorType;$/;"	t	class:Eigen::FullPivLU
IntRowVectorType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<StorageIndex, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::PardisoImpl
IntRowVectorType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
IntRowVectorType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      IntRowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
IntRowVectorType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::SuperLUBase
IntRowVectorType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntRowVectorType IntRowVectorType;$/;"	t	class:Eigen::SuperLU
IntRowVectorType	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::UmfPackLU
InvalidInput	plugin/Eigen/src/Core/util/Constants.h	/^  InvalidInput = 3$/;"	e	enum:Eigen::ComputationInfo
InvalidTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  InvalidTraversal,$/;"	e	enum:Eigen::TraversalType
Inverse	plugin/Eigen/src/Core/Inverse.h	/^  explicit EIGEN_DEVICE_FUNC Inverse(const XprType &xpr)$/;"	f	class:Eigen::Inverse
Inverse	plugin/Eigen/src/Core/Inverse.h	/^class Inverse : public InverseImpl<XprType,typename internal::traits<XprType>::StorageKind>$/;"	c	namespace:Eigen
InverseImpl	plugin/Eigen/src/Core/Inverse.h	/^class InverseImpl$/;"	c	namespace:Eigen
InverseImpl	plugin/Eigen/src/Core/PermutationMatrix.h	/^    InverseImpl() {}$/;"	f	class:Eigen::InverseImpl
InverseImpl	plugin/Eigen/src/Core/PermutationMatrix.h	/^class InverseImpl<PermutationType, PermutationStorage>$/;"	c	namespace:Eigen
InverseReturnType	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper<const CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const DiagonalVectorType> > InverseReturnType;$/;"	t	class:Eigen::DiagonalBase
InverseReturnType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef Inverse<Derived> InverseReturnType;$/;"	t	class:Eigen::PermutationBase
InverseReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_inverse_op<Scalar>, const Derived> InverseReturnType;$/;"	t
InverseType	plugin/Eigen/src/Core/Inverse.h	/^  typedef Inverse<ArgType> InverseType;$/;"	t	struct:Eigen::internal::unary_evaluator
InverseType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef Inverse<PermutationType> InverseType;$/;"	t	class:Eigen::InverseImpl
IsBlockAlike	plugin/Eigen/src/Core/IndexedView.h	/^    IsBlockAlike = InnerIncr==1 && OuterIncr==1,$/;"	e	enum:Eigen::internal::traits::__anon314
IsColMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
IsColMajor	plugin/Eigen/src/Core/Reverse.h	/^      IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::Reverse::__anon336
IsColVector	plugin/Eigen/src/Core/VectorBlock.h	/^      IsColVector = !(internal::traits<VectorType>::Flags & RowMajorBit)$/;"	e	enum:Eigen::VectorBlock::__anon324
IsColVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    IsColVector = (_Options & RowMajorBit) ? 0 : 1,$/;"	e	enum:Eigen::internal::traits::__anon89
IsColVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    enum { IsColVector = internal::traits<SparseVector>::IsColVector };$/;"	e	enum:Eigen::SparseVector::__anon91
IsComplex	plugin/Eigen/src/Core/NumTraits.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
IsComplex	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^    IsComplex = false,$/;"	e	enum:Eigen::NumTraits::__anon643
IsComplex	plugin/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon484
IsComplex	plugin/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon485
IsDense	plugin/Eigen/src/Core/util/Constants.h	/^  IsDense         = 0,$/;"	e	enum:Eigen::AmbiVectorMode
IsDynamicSize	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsDynamicSize = PlainObjectType::SizeAtCompileTime==Dynamic,$/;"	e	enum:Eigen::internal::evaluator::__anon510
IsFiniteReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isfinite_op<Scalar>, const Derived> IsFiniteReturnType;$/;"	t
IsInfReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isinf_op<Scalar>, const Derived> IsInfReturnType;$/;"	t
IsInnerPannel	plugin/Eigen/src/Core/IndexedView.h	/^    IsInnerPannel = HasSameStorageOrderAsXprType && is_same<AllRange<InnerSize>,typename conditional<XprTypeIsRowMajor,ColIndices,RowIndices>::type>::value,$/;"	e	enum:Eigen::internal::traits::__anon314
IsInteger	plugin/Eigen/src/Core/NumTraits.h	/^    IsInteger = std::numeric_limits<T>::is_integer,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
IsInteger	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^    IsInteger = false,$/;"	e	enum:Eigen::NumTraits::__anon643
IsLower	plugin/Eigen/src/Core/SolveTriangular.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon342
IsLower	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon305
IsLower	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon306
IsLower	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon303
IsLower	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon304
IsLower	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon301
IsLower	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon302
IsNaNReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_isnan_op<Scalar>, const Derived> IsNaNReturnType;$/;"	t
IsOneByOne	plugin/Eigen/src/Core/Product.h	/^      IsOneByOne = (RowsAtCompileTime == 1 || RowsAtCompileTime == Dynamic) && $/;"	e	enum:Eigen::ProductImpl::__anon176
IsPlainObjectBase	plugin/Eigen/src/Core/DenseBase.h	/^    enum { IsPlainObjectBase = 0 };$/;"	e	enum:Eigen::DenseBase::__anon565
IsPlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    enum { IsPlainObjectBase = 1 };$/;"	e	enum:Eigen::PlainObjectBase::__anon352
IsProjective	plugin/Eigen/src/Geometry/Transform.h	/^    IsProjective = (int(Mode)==int(Projective))$/;"	e	enum:Eigen::internal::transform_traits::__anon700
IsRepeatable	plugin/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon289
IsRepeatable	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^         PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon232
IsRepeatable	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^    IsRepeatable = true$/;"	e	enum:Eigen::internal::functor_traits::__anon234
IsRepeatable	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon233
IsRowMajor	plugin/Eigen/src/Core/Block.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon562
IsRowMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::evaluator::__anon512
IsRowMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = PlainObjectType::IsRowMajor,$/;"	e	enum:Eigen::internal::evaluator::__anon501
IsRowMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
IsRowMajor	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsRowMajor = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::mapbase_evaluator::__anon509
IsRowMajor	plugin/Eigen/src/Core/CoreIterators.h	/^  enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::inner_iterator_selector::__anon187
IsRowMajor	plugin/Eigen/src/Core/DenseBase.h	/^      IsRowMajor = int(Flags) & RowMajorBit, \/**< True if this expression has row-major storage order. *\/$/;"	e	enum:Eigen::DenseBase::__anon564
IsRowMajor	plugin/Eigen/src/Core/IndexedView.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon314
IsRowMajor	plugin/Eigen/src/Core/Redux.h	/^    IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
IsRowMajor	plugin/Eigen/src/Core/Replicate.h	/^    IsRowMajor = MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1 ? 1$/;"	e	enum:Eigen::internal::traits::__anon349
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^      IsRowMajor = XprType::IsRowMajor,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon46
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::BlockImpl::__anon50
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<BlockType>::IsRowMajor };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon48
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  enum { IsRowMajor = unary_evaluator::IsRowMajor };$/;"	e	enum:Eigen::internal::unary_evaluator::InnerVectorInnerIterator::__anon52
IsRowMajor	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  enum { IsRowMajor = unary_evaluator::IsRowMajor };$/;"	e	enum:Eigen::internal::unary_evaluator::OuterVectorInnerIterator::__anon53
IsRowMajor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Lhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon64
IsRowMajor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(LhsArg::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::InnerIterator::__anon69
IsRowMajor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Rhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::binary_evaluator::InnerIterator::__anon62
IsRowMajor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(RhsArg::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_conjunction_evaluator::InnerIterator::__anon67
IsRowMajor	plugin/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon84
IsRowMajor	plugin/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::Map::__anon85
IsRowMajor	plugin/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon82
IsRowMajor	plugin/Eigen/src/SparseCore/SparseMap.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::SparseMapBase::__anon83
IsRowMajor	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsRowMajor = Flags&RowMajorBit ? 1 : 0,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
IsRowMajor	plugin/Eigen/src/SparseCore/SparseView.h	/^    enum { IsRowMajor = (XprType::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::unary_evaluator::__anon44
IsSigned	plugin/Eigen/src/Core/NumTraits.h	/^    IsSigned = std::numeric_limits<T>::is_signed,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
IsSigned	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^    IsSigned = true,$/;"	e	enum:Eigen::NumTraits::__anon643
IsSparse	plugin/Eigen/src/Core/util/Constants.h	/^  IsSparse$/;"	e	enum:Eigen::AmbiVectorMode
IsTransposed	plugin/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = Base::IsTransposed ? 0 : 1$/;"	e	enum:Eigen::internal::blas_traits::__anon486
IsTransposed	plugin/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon484
IsVectorAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    IsVectorAtCompileTime = PlainObjectType::IsVectorAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon501
IsVectorAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::DenseBase::__anon564
IsVectorAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::DiagonalBase::__anon343
IsVectorAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::SolverBase::__anon348
IsVectorAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      IsVectorAtCompileTime = false$/;"	e	enum:Eigen::TriangularView::__anon179
IsVectorAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
Isometry	plugin/Eigen/src/Core/util/Constants.h	/^  Isometry      = 0x1,$/;"	e	enum:Eigen::TransformTraits
Isometry2d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Isometry> Isometry2d;$/;"	t	namespace:Eigen
Isometry2f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Isometry> Isometry2f;$/;"	t	namespace:Eigen
Isometry3d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Isometry> Isometry3d;$/;"	t	namespace:Eigen
Isometry3f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Isometry> Isometry3f;$/;"	t	namespace:Eigen
IsometryTransformType	plugin/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Isometry> IsometryTransformType;$/;"	t	class:Eigen::Translation
IterativeSolverBase	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase()$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  explicit IterativeSolverBase(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class IterativeSolverBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Iterator	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    explicit Iterator(const AmbiVector& vec, const RealScalar& epsilon = 0)$/;"	f	class:Eigen::internal::AmbiVector::Iterator
Iterator	plugin/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector<_Scalar,_StorageIndex>::Iterator$/;"	c	class:Eigen::internal::AmbiVector
IteratorBased	plugin/Eigen/src/Core/util/Constants.h	/^struct IteratorBased {};$/;"	s	namespace:Eigen::internal
IteratorType	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef internal::inner_iterator_selector<XprType, typename internal::evaluator_traits<XprType>::Kind> IteratorType;$/;"	t	class:Eigen::InnerIterator
IvcColType	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^struct IvcColType : public internal::IndexedViewCompatibleType<Indices,ColsAtCompileTime> {};$/;"	s
IvcIndex	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^typedef typename internal::IndexedViewCompatibleType<Index,1>::type IvcIndex;$/;"	t
IvcRowType	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^struct IvcRowType : public internal::IndexedViewCompatibleType<Indices,RowsAtCompileTime> {};$/;"	s
IvcType	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^struct IvcType : public internal::IndexedViewCompatibleType<Indices,SizeAtCompileTime> {};$/;"	s
JRs	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef JacobiRotation<Scalar> JRs;$/;"	t	class:Eigen::RealQZ
JacobiRotation	plugin/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation() {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	plugin/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	plugin/Eigen/src/Jacobi/Jacobi.h	/^template<typename Scalar> class JacobiRotation$/;"	c	namespace:Eigen
JacobiSVD	plugin/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD()$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	plugin/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	plugin/Eigen/src/SVD/JacobiSVD.h	/^    explicit JacobiSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	plugin/Eigen/src/SVD/JacobiSVD.h	/^template<typename _MatrixType, int QRPreconditioner> class JacobiSVD$/;"	c	namespace:Eigen
JointAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    JointAlignment = EIGEN_PLAIN_ENUM_MIN(DstAlignment,SrcAlignment)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon489
KILL_NON_PRINCIPAL_COL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	124;"	d
KILL_PRINCIPAL_COL	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	123;"	d
KILL_ROW	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	122;"	d
KLU	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    KLU()$/;"	f	class:Eigen::KLU
KLU	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    KLU(const KLU& ) { }$/;"	f	class:Eigen::KLU
KLU	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    explicit KLU(const InputMatrixType& matrix)$/;"	f	class:Eigen::KLU
KLU	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^class KLU : public SparseSolverBase<KLU<_MatrixType> >$/;"	c	namespace:Eigen
KLUMatrixRef	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef Ref<const KLUMatrixType, StandardCompressedFormat> KLUMatrixRef;$/;"	t	class:Eigen::KLU
KLUMatrixType	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,int> KLUMatrixType;$/;"	t	class:Eigen::KLU
KMADD	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	107;"	d
KMADD	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	274;"	d
Kind	plugin/Eigen/src/Core/AssignEvaluator.h	/^template<> struct AssignmentKind<DenseShape,DenseShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/AssignEvaluator.h	/^template<typename,typename> struct AssignmentKind { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/BandMatrix.h	/^template<> struct AssignmentKind<DenseShape,BandShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef IndexBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_evaluator_kind<typename traits<T>::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Kind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct AssignmentKind<DenseShape,DiagonalShape> { typedef Diagonal2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/PermutationMatrix.h	/^template<> struct AssignmentKind<DenseShape,PermutationShape> { typedef EigenBase2EigenBase Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<DenseShape,TriangularShape>      { typedef Triangular2Dense      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,DenseShape>      { typedef Dense2Triangular      Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<> struct AssignmentKind<TriangularShape,TriangularShape> { typedef Triangular2Triangular Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename storage_kind_to_evaluator_kind<typename ArgType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	plugin/Eigen/src/Geometry/Homogeneous.h	/^template<> struct AssignmentKind<DenseShape,HomogeneousShape> { typedef Dense2Dense Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef IteratorBased Kind;$/;"	t	struct:Eigen::internal::storage_kind_to_evaluator_kind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseShape>           { typedef Sparse2Dense  Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<DenseShape,  SparseTriangularShape> { typedef Sparse2Dense  Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseShape>           { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape, SparseTriangularShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^template<> struct AssignmentKind<SparseShape,DiagonalShape> { typedef Diagonal2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
Kind	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseSelfAdjointShape,SparseShape> { typedef Sparse2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<> struct AssignmentKind<SparseShape,SparseSelfAdjointShape> { typedef SparseSelfAdjoint2Sparse Kind; };$/;"	t	struct:Eigen::internal::AssignmentKind
Kind	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename storage_kind_to_evaluator_kind<typename MatrixType::StorageKind>::Kind Kind;$/;"	t	struct:Eigen::internal::evaluator_traits
L1	include/darknet.h	/^    SSE, MASKED, L1, SEG, SMOOTH$/;"	e	enum:__anon729
LAPACKE_free	plugin/Eigen/src/misc/lapacke.h	116;"	d
LAPACKE_malloc	plugin/Eigen/src/misc/lapacke.h	113;"	d
LAPACK_C2INT	plugin/Eigen/src/misc/lapacke.h	119;"	d
LAPACK_COL_MAJOR	plugin/Eigen/src/misc/lapacke.h	123;"	d
LAPACK_C_SELECT1	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_C_SELECT1) ( const lapack_complex_float* );$/;"	t
LAPACK_C_SELECT2	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_C_SELECT2)$/;"	t
LAPACK_D_SELECT2	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_D_SELECT2) ( const double*, const double* );$/;"	t
LAPACK_D_SELECT3	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_D_SELECT3)$/;"	t
LAPACK_GLOBAL	plugin/Eigen/src/misc/lapacke_mangling.h	10;"	d
LAPACK_GLOBAL	plugin/Eigen/src/misc/lapacke_mangling.h	12;"	d
LAPACK_GLOBAL	plugin/Eigen/src/misc/lapacke_mangling.h	6;"	d
LAPACK_GLOBAL	plugin/Eigen/src/misc/lapacke_mangling.h	8;"	d
LAPACK_H	plugin/Eigen/src/misc/lapack.h	2;"	d
LAPACK_HEADER_INCLUDED	plugin/Eigen/src/misc/lapacke_mangling.h	2;"	d
LAPACK_ROW_MAJOR	plugin/Eigen/src/misc/lapacke.h	122;"	d
LAPACK_S_SELECT2	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_S_SELECT2) ( const float*, const float* );$/;"	t
LAPACK_S_SELECT3	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_S_SELECT3)$/;"	t
LAPACK_TRANSPOSE_MEMORY_ERROR	plugin/Eigen/src/misc/lapacke.h	126;"	d
LAPACK_WORK_MEMORY_ERROR	plugin/Eigen/src/misc/lapacke.h	125;"	d
LAPACK_Z2INT	plugin/Eigen/src/misc/lapacke.h	120;"	d
LAPACK_Z_SELECT1	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_Z_SELECT1) ( const lapack_complex_double* );$/;"	t
LAPACK_Z_SELECT2	plugin/Eigen/src/misc/lapacke.h	/^typedef lapack_logical (*LAPACK_Z_SELECT2)$/;"	t
LAPACK_cbbcsd	plugin/Eigen/src/misc/lapacke.h	11570;"	d
LAPACK_cbdsqr	plugin/Eigen/src/misc/lapacke.h	11109;"	d
LAPACK_cgbbrd	plugin/Eigen/src/misc/lapacke.h	11097;"	d
LAPACK_cgbcon	plugin/Eigen/src/misc/lapacke.h	10723;"	d
LAPACK_cgbequ	plugin/Eigen/src/misc/lapacke.h	10889;"	d
LAPACK_cgbequb	plugin/Eigen/src/misc/lapacke.h	10894;"	d
LAPACK_cgbrfs	plugin/Eigen/src/misc/lapacke.h	10779;"	d
LAPACK_cgbrfsx	plugin/Eigen/src/misc/lapacke.h	10784;"	d
LAPACK_cgbsv	plugin/Eigen/src/misc/lapacke.h	10933;"	d
LAPACK_cgbsvx	plugin/Eigen/src/misc/lapacke.h	10937;"	d
LAPACK_cgbsvxx	plugin/Eigen/src/misc/lapacke.h	10942;"	d
LAPACK_cgbtrf	plugin/Eigen/src/misc/lapacke.h	10619;"	d
LAPACK_cgbtrs	plugin/Eigen/src/misc/lapacke.h	10667;"	d
LAPACK_cgebak	plugin/Eigen/src/misc/lapacke.h	11205;"	d
LAPACK_cgebal	plugin/Eigen/src/misc/lapacke.h	11201;"	d
LAPACK_cgebrd	plugin/Eigen/src/misc/lapacke.h	11093;"	d
LAPACK_cgecon	plugin/Eigen/src/misc/lapacke.h	10719;"	d
LAPACK_cgeequ	plugin/Eigen/src/misc/lapacke.h	10881;"	d
LAPACK_cgeequb	plugin/Eigen/src/misc/lapacke.h	10886;"	d
LAPACK_cgees	plugin/Eigen/src/misc/lapacke.h	11353;"	d
LAPACK_cgeesx	plugin/Eigen/src/misc/lapacke.h	11357;"	d
LAPACK_cgeev	plugin/Eigen/src/misc/lapacke.h	11361;"	d
LAPACK_cgeevx	plugin/Eigen/src/misc/lapacke.h	11365;"	d
LAPACK_cgehrd	plugin/Eigen/src/misc/lapacke.h	11189;"	d
LAPACK_cgelq2	plugin/Eigen/src/misc/lapacke.h	11511;"	d
LAPACK_cgelqf	plugin/Eigen/src/misc/lapacke.h	11041;"	d
LAPACK_cgels	plugin/Eigen/src/misc/lapacke.h	11281;"	d
LAPACK_cgelsd	plugin/Eigen/src/misc/lapacke.h	11293;"	d
LAPACK_cgelss	plugin/Eigen/src/misc/lapacke.h	11289;"	d
LAPACK_cgelsy	plugin/Eigen/src/misc/lapacke.h	11285;"	d
LAPACK_cgemqrt	plugin/Eigen/src/misc/lapacke.h	11613;"	d
LAPACK_cgeqlf	plugin/Eigen/src/misc/lapacke.h	11053;"	d
LAPACK_cgeqp3	plugin/Eigen/src/misc/lapacke.h	11029;"	d
LAPACK_cgeqpf	plugin/Eigen/src/misc/lapacke.h	11025;"	d
LAPACK_cgeqr2	plugin/Eigen/src/misc/lapacke.h	11479;"	d
LAPACK_cgeqrf	plugin/Eigen/src/misc/lapacke.h	11021;"	d
LAPACK_cgeqrfp	plugin/Eigen/src/misc/lapacke.h	11469;"	d
LAPACK_cgeqrt	plugin/Eigen/src/misc/lapacke.h	11617;"	d
LAPACK_cgeqrt2	plugin/Eigen/src/misc/lapacke.h	11621;"	d
LAPACK_cgeqrt3	plugin/Eigen/src/misc/lapacke.h	11625;"	d
LAPACK_cgerfs	plugin/Eigen/src/misc/lapacke.h	10771;"	d
LAPACK_cgerfsx	plugin/Eigen/src/misc/lapacke.h	10776;"	d
LAPACK_cgerqf	plugin/Eigen/src/misc/lapacke.h	11065;"	d
LAPACK_cgesdd	plugin/Eigen/src/misc/lapacke.h	11373;"	d
LAPACK_cgesv	plugin/Eigen/src/misc/lapacke.h	10919;"	d
LAPACK_cgesvd	plugin/Eigen/src/misc/lapacke.h	11369;"	d
LAPACK_cgesvx	plugin/Eigen/src/misc/lapacke.h	10925;"	d
LAPACK_cgesvxx	plugin/Eigen/src/misc/lapacke.h	10930;"	d
LAPACK_cgetf2	plugin/Eigen/src/misc/lapacke.h	11487;"	d
LAPACK_cgetrf	plugin/Eigen/src/misc/lapacke.h	10615;"	d
LAPACK_cgetri	plugin/Eigen/src/misc/lapacke.h	10841;"	d
LAPACK_cgetrs	plugin/Eigen/src/misc/lapacke.h	10663;"	d
LAPACK_cggbak	plugin/Eigen/src/misc/lapacke.h	11245;"	d
LAPACK_cggbal	plugin/Eigen/src/misc/lapacke.h	11241;"	d
LAPACK_cgges	plugin/Eigen/src/misc/lapacke.h	11421;"	d
LAPACK_cggesx	plugin/Eigen/src/misc/lapacke.h	11425;"	d
LAPACK_cggev	plugin/Eigen/src/misc/lapacke.h	11429;"	d
LAPACK_cggevx	plugin/Eigen/src/misc/lapacke.h	11433;"	d
LAPACK_cggglm	plugin/Eigen/src/misc/lapacke.h	11301;"	d
LAPACK_cgghrd	plugin/Eigen/src/misc/lapacke.h	11237;"	d
LAPACK_cgglse	plugin/Eigen/src/misc/lapacke.h	11297;"	d
LAPACK_cggqrf	plugin/Eigen/src/misc/lapacke.h	11085;"	d
LAPACK_cggrqf	plugin/Eigen/src/misc/lapacke.h	11089;"	d
LAPACK_cggsvd	plugin/Eigen/src/misc/lapacke.h	11381;"	d
LAPACK_cggsvp	plugin/Eigen/src/misc/lapacke.h	11273;"	d
LAPACK_cgtcon	plugin/Eigen/src/misc/lapacke.h	10727;"	d
LAPACK_cgtrfs	plugin/Eigen/src/misc/lapacke.h	10787;"	d
LAPACK_cgtsv	plugin/Eigen/src/misc/lapacke.h	10945;"	d
LAPACK_cgtsvx	plugin/Eigen/src/misc/lapacke.h	10949;"	d
LAPACK_cgttrf	plugin/Eigen/src/misc/lapacke.h	10623;"	d
LAPACK_cgttrs	plugin/Eigen/src/misc/lapacke.h	10671;"	d
LAPACK_chbev	plugin/Eigen/src/misc/lapacke.h	11333;"	d
LAPACK_chbevd	plugin/Eigen/src/misc/lapacke.h	11337;"	d
LAPACK_chbevx	plugin/Eigen/src/misc/lapacke.h	11341;"	d
LAPACK_chbgst	plugin/Eigen/src/misc/lapacke.h	11181;"	d
LAPACK_chbgv	plugin/Eigen/src/misc/lapacke.h	11409;"	d
LAPACK_chbgvd	plugin/Eigen/src/misc/lapacke.h	11413;"	d
LAPACK_chbgvx	plugin/Eigen/src/misc/lapacke.h	11417;"	d
LAPACK_chbtrd	plugin/Eigen/src/misc/lapacke.h	11139;"	d
LAPACK_checon	plugin/Eigen/src/misc/lapacke.h	10749;"	d
LAPACK_cheequb	plugin/Eigen/src/misc/lapacke.h	10916;"	d
LAPACK_cheev	plugin/Eigen/src/misc/lapacke.h	11305;"	d
LAPACK_cheevd	plugin/Eigen/src/misc/lapacke.h	11309;"	d
LAPACK_cheevr	plugin/Eigen/src/misc/lapacke.h	11317;"	d
LAPACK_cheevx	plugin/Eigen/src/misc/lapacke.h	11313;"	d
LAPACK_chegst	plugin/Eigen/src/misc/lapacke.h	11173;"	d
LAPACK_chegv	plugin/Eigen/src/misc/lapacke.h	11385;"	d
LAPACK_chegvd	plugin/Eigen/src/misc/lapacke.h	11389;"	d
LAPACK_chegvx	plugin/Eigen/src/misc/lapacke.h	11393;"	d
LAPACK_cherfs	plugin/Eigen/src/misc/lapacke.h	10817;"	d
LAPACK_cherfsx	plugin/Eigen/src/misc/lapacke.h	10820;"	d
LAPACK_chesv	plugin/Eigen/src/misc/lapacke.h	11001;"	d
LAPACK_chesvx	plugin/Eigen/src/misc/lapacke.h	11003;"	d
LAPACK_chesvxx	plugin/Eigen/src/misc/lapacke.h	11006;"	d
LAPACK_cheswapr	plugin/Eigen/src/misc/lapacke.h	11571;"	d
LAPACK_chetrd	plugin/Eigen/src/misc/lapacke.h	11119;"	d
LAPACK_chetrf	plugin/Eigen/src/misc/lapacke.h	10653;"	d
LAPACK_chetri	plugin/Eigen/src/misc/lapacke.h	10859;"	d
LAPACK_chetri2	plugin/Eigen/src/misc/lapacke.h	11572;"	d
LAPACK_chetri2x	plugin/Eigen/src/misc/lapacke.h	11573;"	d
LAPACK_chetrs	plugin/Eigen/src/misc/lapacke.h	10697;"	d
LAPACK_chetrs2	plugin/Eigen/src/misc/lapacke.h	11574;"	d
LAPACK_chfrk	plugin/Eigen/src/misc/lapacke.h	11438;"	d
LAPACK_chgeqz	plugin/Eigen/src/misc/lapacke.h	11249;"	d
LAPACK_chpcon	plugin/Eigen/src/misc/lapacke.h	10755;"	d
LAPACK_chpev	plugin/Eigen/src/misc/lapacke.h	11321;"	d
LAPACK_chpevd	plugin/Eigen/src/misc/lapacke.h	11325;"	d
LAPACK_chpevx	plugin/Eigen/src/misc/lapacke.h	11329;"	d
LAPACK_chpgst	plugin/Eigen/src/misc/lapacke.h	11177;"	d
LAPACK_chpgv	plugin/Eigen/src/misc/lapacke.h	11397;"	d
LAPACK_chpgvd	plugin/Eigen/src/misc/lapacke.h	11401;"	d
LAPACK_chpgvx	plugin/Eigen/src/misc/lapacke.h	11405;"	d
LAPACK_chprfs	plugin/Eigen/src/misc/lapacke.h	10825;"	d
LAPACK_chpsv	plugin/Eigen/src/misc/lapacke.h	11015;"	d
LAPACK_chpsvx	plugin/Eigen/src/misc/lapacke.h	11017;"	d
LAPACK_chptrd	plugin/Eigen/src/misc/lapacke.h	11131;"	d
LAPACK_chptrf	plugin/Eigen/src/misc/lapacke.h	10659;"	d
LAPACK_chptri	plugin/Eigen/src/misc/lapacke.h	10865;"	d
LAPACK_chptrs	plugin/Eigen/src/misc/lapacke.h	10703;"	d
LAPACK_chsein	plugin/Eigen/src/misc/lapacke.h	11213;"	d
LAPACK_chseqr	plugin/Eigen/src/misc/lapacke.h	11209;"	d
LAPACK_clacgv	plugin/Eigen/src/misc/lapacke.h	11471;"	d
LAPACK_clacpy	plugin/Eigen/src/misc/lapacke.h	11483;"	d
LAPACK_clag2z	plugin/Eigen/src/misc/lapacke.h	11535;"	d
LAPACK_clagge	plugin/Eigen/src/misc/lapacke.h	11543;"	d
LAPACK_claghe	plugin/Eigen/src/misc/lapacke.h	11555;"	d
LAPACK_clagsy	plugin/Eigen/src/misc/lapacke.h	11553;"	d
LAPACK_clange	plugin/Eigen/src/misc/lapacke.h	11495;"	d
LAPACK_clanhe	plugin/Eigen/src/misc/lapacke.h	11497;"	d
LAPACK_clansy	plugin/Eigen/src/misc/lapacke.h	11501;"	d
LAPACK_clantr	plugin/Eigen/src/misc/lapacke.h	11505;"	d
LAPACK_clapmr	plugin/Eigen/src/misc/lapacke.h	11559;"	d
LAPACK_clarfb	plugin/Eigen/src/misc/lapacke.h	11515;"	d
LAPACK_clarfg	plugin/Eigen/src/misc/lapacke.h	11519;"	d
LAPACK_clarft	plugin/Eigen/src/misc/lapacke.h	11523;"	d
LAPACK_clarfx	plugin/Eigen/src/misc/lapacke.h	11527;"	d
LAPACK_clarnv	plugin/Eigen/src/misc/lapacke.h	11475;"	d
LAPACK_claset	plugin/Eigen/src/misc/lapacke.h	11547;"	d
LAPACK_claswp	plugin/Eigen/src/misc/lapacke.h	11491;"	d
LAPACK_clatms	plugin/Eigen/src/misc/lapacke.h	11531;"	d
LAPACK_clauum	plugin/Eigen/src/misc/lapacke.h	11539;"	d
LAPACK_cpbcon	plugin/Eigen/src/misc/lapacke.h	10739;"	d
LAPACK_cpbequ	plugin/Eigen/src/misc/lapacke.h	10909;"	d
LAPACK_cpbrfs	plugin/Eigen/src/misc/lapacke.h	10803;"	d
LAPACK_cpbstf	plugin/Eigen/src/misc/lapacke.h	11185;"	d
LAPACK_cpbsv	plugin/Eigen/src/misc/lapacke.h	10975;"	d
LAPACK_cpbsvx	plugin/Eigen/src/misc/lapacke.h	10979;"	d
LAPACK_cpbtrf	plugin/Eigen/src/misc/lapacke.h	10643;"	d
LAPACK_cpbtrs	plugin/Eigen/src/misc/lapacke.h	10687;"	d
LAPACK_cpftrf	plugin/Eigen/src/misc/lapacke.h	10636;"	d
LAPACK_cpftri	plugin/Eigen/src/misc/lapacke.h	10850;"	d
LAPACK_cpftrs	plugin/Eigen/src/misc/lapacke.h	10680;"	d
LAPACK_cpocon	plugin/Eigen/src/misc/lapacke.h	10731;"	d
LAPACK_cpoequ	plugin/Eigen/src/misc/lapacke.h	10897;"	d
LAPACK_cpoequb	plugin/Eigen/src/misc/lapacke.h	10902;"	d
LAPACK_cporfs	plugin/Eigen/src/misc/lapacke.h	10791;"	d
LAPACK_cporfsx	plugin/Eigen/src/misc/lapacke.h	10796;"	d
LAPACK_cposv	plugin/Eigen/src/misc/lapacke.h	10953;"	d
LAPACK_cposvx	plugin/Eigen/src/misc/lapacke.h	10959;"	d
LAPACK_cposvxx	plugin/Eigen/src/misc/lapacke.h	10964;"	d
LAPACK_cpotrf	plugin/Eigen/src/misc/lapacke.h	10627;"	d
LAPACK_cpotri	plugin/Eigen/src/misc/lapacke.h	10845;"	d
LAPACK_cpotrs	plugin/Eigen/src/misc/lapacke.h	10675;"	d
LAPACK_cppcon	plugin/Eigen/src/misc/lapacke.h	10735;"	d
LAPACK_cppequ	plugin/Eigen/src/misc/lapacke.h	10905;"	d
LAPACK_cpprfs	plugin/Eigen/src/misc/lapacke.h	10799;"	d
LAPACK_cppsv	plugin/Eigen/src/misc/lapacke.h	10967;"	d
LAPACK_cppsvx	plugin/Eigen/src/misc/lapacke.h	10971;"	d
LAPACK_cpptrf	plugin/Eigen/src/misc/lapacke.h	10639;"	d
LAPACK_cpptri	plugin/Eigen/src/misc/lapacke.h	10853;"	d
LAPACK_cpptrs	plugin/Eigen/src/misc/lapacke.h	10683;"	d
LAPACK_cpstrf	plugin/Eigen/src/misc/lapacke.h	10632;"	d
LAPACK_cptcon	plugin/Eigen/src/misc/lapacke.h	10743;"	d
LAPACK_cpteqr	plugin/Eigen/src/misc/lapacke.h	11161;"	d
LAPACK_cptrfs	plugin/Eigen/src/misc/lapacke.h	10807;"	d
LAPACK_cptsv	plugin/Eigen/src/misc/lapacke.h	10983;"	d
LAPACK_cptsvx	plugin/Eigen/src/misc/lapacke.h	10987;"	d
LAPACK_cpttrf	plugin/Eigen/src/misc/lapacke.h	10647;"	d
LAPACK_cpttrs	plugin/Eigen/src/misc/lapacke.h	10691;"	d
LAPACK_cspcon	plugin/Eigen/src/misc/lapacke.h	10753;"	d
LAPACK_csprfs	plugin/Eigen/src/misc/lapacke.h	10823;"	d
LAPACK_cspsv	plugin/Eigen/src/misc/lapacke.h	11009;"	d
LAPACK_cspsvx	plugin/Eigen/src/misc/lapacke.h	11013;"	d
LAPACK_csptrf	plugin/Eigen/src/misc/lapacke.h	10657;"	d
LAPACK_csptri	plugin/Eigen/src/misc/lapacke.h	10863;"	d
LAPACK_csptrs	plugin/Eigen/src/misc/lapacke.h	10701;"	d
LAPACK_cstedc	plugin/Eigen/src/misc/lapacke.h	11153;"	d
LAPACK_cstegr	plugin/Eigen/src/misc/lapacke.h	11157;"	d
LAPACK_cstein	plugin/Eigen/src/misc/lapacke.h	11167;"	d
LAPACK_cstemr	plugin/Eigen/src/misc/lapacke.h	11149;"	d
LAPACK_csteqr	plugin/Eigen/src/misc/lapacke.h	11145;"	d
LAPACK_csycon	plugin/Eigen/src/misc/lapacke.h	10747;"	d
LAPACK_csyconv	plugin/Eigen/src/misc/lapacke.h	11575;"	d
LAPACK_csyequb	plugin/Eigen/src/misc/lapacke.h	10914;"	d
LAPACK_csyr	plugin/Eigen/src/misc/lapacke.h	11643;"	d
LAPACK_csyrfs	plugin/Eigen/src/misc/lapacke.h	10811;"	d
LAPACK_csyrfsx	plugin/Eigen/src/misc/lapacke.h	10816;"	d
LAPACK_csysv	plugin/Eigen/src/misc/lapacke.h	10991;"	d
LAPACK_csysvx	plugin/Eigen/src/misc/lapacke.h	10995;"	d
LAPACK_csysvxx	plugin/Eigen/src/misc/lapacke.h	11000;"	d
LAPACK_csyswapr	plugin/Eigen/src/misc/lapacke.h	11576;"	d
LAPACK_csytrf	plugin/Eigen/src/misc/lapacke.h	10651;"	d
LAPACK_csytri	plugin/Eigen/src/misc/lapacke.h	10857;"	d
LAPACK_csytri2	plugin/Eigen/src/misc/lapacke.h	11577;"	d
LAPACK_csytri2x	plugin/Eigen/src/misc/lapacke.h	11578;"	d
LAPACK_csytrs	plugin/Eigen/src/misc/lapacke.h	10695;"	d
LAPACK_csytrs2	plugin/Eigen/src/misc/lapacke.h	11579;"	d
LAPACK_ctbcon	plugin/Eigen/src/misc/lapacke.h	10767;"	d
LAPACK_ctbrfs	plugin/Eigen/src/misc/lapacke.h	10837;"	d
LAPACK_ctbtrs	plugin/Eigen/src/misc/lapacke.h	10715;"	d
LAPACK_ctfsm	plugin/Eigen/src/misc/lapacke.h	11442;"	d
LAPACK_ctftri	plugin/Eigen/src/misc/lapacke.h	10874;"	d
LAPACK_ctfttp	plugin/Eigen/src/misc/lapacke.h	11446;"	d
LAPACK_ctfttr	plugin/Eigen/src/misc/lapacke.h	11450;"	d
LAPACK_ctgevc	plugin/Eigen/src/misc/lapacke.h	11253;"	d
LAPACK_ctgexc	plugin/Eigen/src/misc/lapacke.h	11257;"	d
LAPACK_ctgsen	plugin/Eigen/src/misc/lapacke.h	11261;"	d
LAPACK_ctgsja	plugin/Eigen/src/misc/lapacke.h	11277;"	d
LAPACK_ctgsna	plugin/Eigen/src/misc/lapacke.h	11269;"	d
LAPACK_ctgsyl	plugin/Eigen/src/misc/lapacke.h	11265;"	d
LAPACK_ctpcon	plugin/Eigen/src/misc/lapacke.h	10763;"	d
LAPACK_ctpmqrt	plugin/Eigen/src/misc/lapacke.h	11629;"	d
LAPACK_ctpqrt	plugin/Eigen/src/misc/lapacke.h	11632;"	d
LAPACK_ctpqrt2	plugin/Eigen/src/misc/lapacke.h	11636;"	d
LAPACK_ctprfb	plugin/Eigen/src/misc/lapacke.h	11640;"	d
LAPACK_ctprfs	plugin/Eigen/src/misc/lapacke.h	10833;"	d
LAPACK_ctptri	plugin/Eigen/src/misc/lapacke.h	10877;"	d
LAPACK_ctptrs	plugin/Eigen/src/misc/lapacke.h	10711;"	d
LAPACK_ctpttf	plugin/Eigen/src/misc/lapacke.h	11454;"	d
LAPACK_ctpttr	plugin/Eigen/src/misc/lapacke.h	11458;"	d
LAPACK_ctrcon	plugin/Eigen/src/misc/lapacke.h	10759;"	d
LAPACK_ctrevc	plugin/Eigen/src/misc/lapacke.h	11217;"	d
LAPACK_ctrexc	plugin/Eigen/src/misc/lapacke.h	11225;"	d
LAPACK_ctrrfs	plugin/Eigen/src/misc/lapacke.h	10829;"	d
LAPACK_ctrsen	plugin/Eigen/src/misc/lapacke.h	11229;"	d
LAPACK_ctrsna	plugin/Eigen/src/misc/lapacke.h	11221;"	d
LAPACK_ctrsyl	plugin/Eigen/src/misc/lapacke.h	11233;"	d
LAPACK_ctrtri	plugin/Eigen/src/misc/lapacke.h	10869;"	d
LAPACK_ctrtrs	plugin/Eigen/src/misc/lapacke.h	10707;"	d
LAPACK_ctrttf	plugin/Eigen/src/misc/lapacke.h	11462;"	d
LAPACK_ctrttp	plugin/Eigen/src/misc/lapacke.h	11466;"	d
LAPACK_ctzrzf	plugin/Eigen/src/misc/lapacke.h	11077;"	d
LAPACK_cunbdb	plugin/Eigen/src/misc/lapacke.h	11580;"	d
LAPACK_cuncsd	plugin/Eigen/src/misc/lapacke.h	11581;"	d
LAPACK_cungbr	plugin/Eigen/src/misc/lapacke.h	11103;"	d
LAPACK_cunghr	plugin/Eigen/src/misc/lapacke.h	11195;"	d
LAPACK_cunglq	plugin/Eigen/src/misc/lapacke.h	11047;"	d
LAPACK_cungql	plugin/Eigen/src/misc/lapacke.h	11057;"	d
LAPACK_cungqr	plugin/Eigen/src/misc/lapacke.h	11035;"	d
LAPACK_cungrq	plugin/Eigen/src/misc/lapacke.h	11069;"	d
LAPACK_cungtr	plugin/Eigen/src/misc/lapacke.h	11121;"	d
LAPACK_cunmbr	plugin/Eigen/src/misc/lapacke.h	11105;"	d
LAPACK_cunmhr	plugin/Eigen/src/misc/lapacke.h	11197;"	d
LAPACK_cunmlq	plugin/Eigen/src/misc/lapacke.h	11049;"	d
LAPACK_cunmql	plugin/Eigen/src/misc/lapacke.h	11061;"	d
LAPACK_cunmqr	plugin/Eigen/src/misc/lapacke.h	11037;"	d
LAPACK_cunmrq	plugin/Eigen/src/misc/lapacke.h	11073;"	d
LAPACK_cunmrz	plugin/Eigen/src/misc/lapacke.h	11081;"	d
LAPACK_cunmtr	plugin/Eigen/src/misc/lapacke.h	11123;"	d
LAPACK_cupgtr	plugin/Eigen/src/misc/lapacke.h	11133;"	d
LAPACK_cupmtr	plugin/Eigen/src/misc/lapacke.h	11135;"	d
LAPACK_dbbcsd	plugin/Eigen/src/misc/lapacke.h	11582;"	d
LAPACK_dbdsdc	plugin/Eigen/src/misc/lapacke.h	11112;"	d
LAPACK_dbdsqr	plugin/Eigen/src/misc/lapacke.h	11108;"	d
LAPACK_ddisna	plugin/Eigen/src/misc/lapacke.h	11170;"	d
LAPACK_dgbbrd	plugin/Eigen/src/misc/lapacke.h	11096;"	d
LAPACK_dgbcon	plugin/Eigen/src/misc/lapacke.h	10722;"	d
LAPACK_dgbequ	plugin/Eigen/src/misc/lapacke.h	10888;"	d
LAPACK_dgbequb	plugin/Eigen/src/misc/lapacke.h	10891;"	d
LAPACK_dgbrfs	plugin/Eigen/src/misc/lapacke.h	10778;"	d
LAPACK_dgbrfsx	plugin/Eigen/src/misc/lapacke.h	10781;"	d
LAPACK_dgbsv	plugin/Eigen/src/misc/lapacke.h	10932;"	d
LAPACK_dgbsvx	plugin/Eigen/src/misc/lapacke.h	10936;"	d
LAPACK_dgbsvxx	plugin/Eigen/src/misc/lapacke.h	10939;"	d
LAPACK_dgbtrf	plugin/Eigen/src/misc/lapacke.h	10618;"	d
LAPACK_dgbtrs	plugin/Eigen/src/misc/lapacke.h	10666;"	d
LAPACK_dgebak	plugin/Eigen/src/misc/lapacke.h	11204;"	d
LAPACK_dgebal	plugin/Eigen/src/misc/lapacke.h	11200;"	d
LAPACK_dgebrd	plugin/Eigen/src/misc/lapacke.h	11092;"	d
LAPACK_dgecon	plugin/Eigen/src/misc/lapacke.h	10718;"	d
LAPACK_dgeequ	plugin/Eigen/src/misc/lapacke.h	10880;"	d
LAPACK_dgeequb	plugin/Eigen/src/misc/lapacke.h	10883;"	d
LAPACK_dgees	plugin/Eigen/src/misc/lapacke.h	11352;"	d
LAPACK_dgeesx	plugin/Eigen/src/misc/lapacke.h	11356;"	d
LAPACK_dgeev	plugin/Eigen/src/misc/lapacke.h	11360;"	d
LAPACK_dgeevx	plugin/Eigen/src/misc/lapacke.h	11364;"	d
LAPACK_dgehrd	plugin/Eigen/src/misc/lapacke.h	11188;"	d
LAPACK_dgejsv	plugin/Eigen/src/misc/lapacke.h	11375;"	d
LAPACK_dgelq2	plugin/Eigen/src/misc/lapacke.h	11510;"	d
LAPACK_dgelqf	plugin/Eigen/src/misc/lapacke.h	11040;"	d
LAPACK_dgels	plugin/Eigen/src/misc/lapacke.h	11280;"	d
LAPACK_dgelsd	plugin/Eigen/src/misc/lapacke.h	11292;"	d
LAPACK_dgelss	plugin/Eigen/src/misc/lapacke.h	11288;"	d
LAPACK_dgelsy	plugin/Eigen/src/misc/lapacke.h	11284;"	d
LAPACK_dgemqrt	plugin/Eigen/src/misc/lapacke.h	11612;"	d
LAPACK_dgeqlf	plugin/Eigen/src/misc/lapacke.h	11052;"	d
LAPACK_dgeqp3	plugin/Eigen/src/misc/lapacke.h	11028;"	d
LAPACK_dgeqpf	plugin/Eigen/src/misc/lapacke.h	11024;"	d
LAPACK_dgeqr2	plugin/Eigen/src/misc/lapacke.h	11478;"	d
LAPACK_dgeqrf	plugin/Eigen/src/misc/lapacke.h	11020;"	d
LAPACK_dgeqrfp	plugin/Eigen/src/misc/lapacke.h	11468;"	d
LAPACK_dgeqrt	plugin/Eigen/src/misc/lapacke.h	11616;"	d
LAPACK_dgeqrt2	plugin/Eigen/src/misc/lapacke.h	11620;"	d
LAPACK_dgeqrt3	plugin/Eigen/src/misc/lapacke.h	11624;"	d
LAPACK_dgerfs	plugin/Eigen/src/misc/lapacke.h	10770;"	d
LAPACK_dgerfsx	plugin/Eigen/src/misc/lapacke.h	10773;"	d
LAPACK_dgerqf	plugin/Eigen/src/misc/lapacke.h	11064;"	d
LAPACK_dgesdd	plugin/Eigen/src/misc/lapacke.h	11372;"	d
LAPACK_dgesv	plugin/Eigen/src/misc/lapacke.h	10918;"	d
LAPACK_dgesvd	plugin/Eigen/src/misc/lapacke.h	11368;"	d
LAPACK_dgesvj	plugin/Eigen/src/misc/lapacke.h	11377;"	d
LAPACK_dgesvx	plugin/Eigen/src/misc/lapacke.h	10924;"	d
LAPACK_dgesvxx	plugin/Eigen/src/misc/lapacke.h	10927;"	d
LAPACK_dgetf2	plugin/Eigen/src/misc/lapacke.h	11486;"	d
LAPACK_dgetrf	plugin/Eigen/src/misc/lapacke.h	10614;"	d
LAPACK_dgetri	plugin/Eigen/src/misc/lapacke.h	10840;"	d
LAPACK_dgetrs	plugin/Eigen/src/misc/lapacke.h	10662;"	d
LAPACK_dggbak	plugin/Eigen/src/misc/lapacke.h	11244;"	d
LAPACK_dggbal	plugin/Eigen/src/misc/lapacke.h	11240;"	d
LAPACK_dgges	plugin/Eigen/src/misc/lapacke.h	11420;"	d
LAPACK_dggesx	plugin/Eigen/src/misc/lapacke.h	11424;"	d
LAPACK_dggev	plugin/Eigen/src/misc/lapacke.h	11428;"	d
LAPACK_dggevx	plugin/Eigen/src/misc/lapacke.h	11432;"	d
LAPACK_dggglm	plugin/Eigen/src/misc/lapacke.h	11300;"	d
LAPACK_dgghrd	plugin/Eigen/src/misc/lapacke.h	11236;"	d
LAPACK_dgglse	plugin/Eigen/src/misc/lapacke.h	11296;"	d
LAPACK_dggqrf	plugin/Eigen/src/misc/lapacke.h	11084;"	d
LAPACK_dggrqf	plugin/Eigen/src/misc/lapacke.h	11088;"	d
LAPACK_dggsvd	plugin/Eigen/src/misc/lapacke.h	11380;"	d
LAPACK_dggsvp	plugin/Eigen/src/misc/lapacke.h	11272;"	d
LAPACK_dgtcon	plugin/Eigen/src/misc/lapacke.h	10726;"	d
LAPACK_dgtrfs	plugin/Eigen/src/misc/lapacke.h	10786;"	d
LAPACK_dgtsv	plugin/Eigen/src/misc/lapacke.h	10944;"	d
LAPACK_dgtsvx	plugin/Eigen/src/misc/lapacke.h	10948;"	d
LAPACK_dgttrf	plugin/Eigen/src/misc/lapacke.h	10622;"	d
LAPACK_dgttrs	plugin/Eigen/src/misc/lapacke.h	10670;"	d
LAPACK_dhgeqz	plugin/Eigen/src/misc/lapacke.h	11248;"	d
LAPACK_dhsein	plugin/Eigen/src/misc/lapacke.h	11212;"	d
LAPACK_dhseqr	plugin/Eigen/src/misc/lapacke.h	11208;"	d
LAPACK_dlacpy	plugin/Eigen/src/misc/lapacke.h	11482;"	d
LAPACK_dlag2s	plugin/Eigen/src/misc/lapacke.h	11534;"	d
LAPACK_dlagge	plugin/Eigen/src/misc/lapacke.h	11542;"	d
LAPACK_dlagsy	plugin/Eigen/src/misc/lapacke.h	11552;"	d
LAPACK_dlamch	plugin/Eigen/src/misc/lapacke.h	11508;"	d
LAPACK_dlange	plugin/Eigen/src/misc/lapacke.h	11494;"	d
LAPACK_dlansy	plugin/Eigen/src/misc/lapacke.h	11500;"	d
LAPACK_dlantr	plugin/Eigen/src/misc/lapacke.h	11504;"	d
LAPACK_dlapmr	plugin/Eigen/src/misc/lapacke.h	11558;"	d
LAPACK_dlapy2	plugin/Eigen/src/misc/lapacke.h	11562;"	d
LAPACK_dlapy3	plugin/Eigen/src/misc/lapacke.h	11564;"	d
LAPACK_dlarfb	plugin/Eigen/src/misc/lapacke.h	11514;"	d
LAPACK_dlarfg	plugin/Eigen/src/misc/lapacke.h	11518;"	d
LAPACK_dlarft	plugin/Eigen/src/misc/lapacke.h	11522;"	d
LAPACK_dlarfx	plugin/Eigen/src/misc/lapacke.h	11526;"	d
LAPACK_dlarnv	plugin/Eigen/src/misc/lapacke.h	11474;"	d
LAPACK_dlartgp	plugin/Eigen/src/misc/lapacke.h	11566;"	d
LAPACK_dlartgs	plugin/Eigen/src/misc/lapacke.h	11568;"	d
LAPACK_dlaset	plugin/Eigen/src/misc/lapacke.h	11546;"	d
LAPACK_dlasrt	plugin/Eigen/src/misc/lapacke.h	11550;"	d
LAPACK_dlaswp	plugin/Eigen/src/misc/lapacke.h	11490;"	d
LAPACK_dlatms	plugin/Eigen/src/misc/lapacke.h	11530;"	d
LAPACK_dlauum	plugin/Eigen/src/misc/lapacke.h	11538;"	d
LAPACK_dopgtr	plugin/Eigen/src/misc/lapacke.h	11128;"	d
LAPACK_dopmtr	plugin/Eigen/src/misc/lapacke.h	11130;"	d
LAPACK_dorbdb	plugin/Eigen/src/misc/lapacke.h	11583;"	d
LAPACK_dorcsd	plugin/Eigen/src/misc/lapacke.h	11584;"	d
LAPACK_dorgbr	plugin/Eigen/src/misc/lapacke.h	11100;"	d
LAPACK_dorghr	plugin/Eigen/src/misc/lapacke.h	11192;"	d
LAPACK_dorglq	plugin/Eigen/src/misc/lapacke.h	11044;"	d
LAPACK_dorgql	plugin/Eigen/src/misc/lapacke.h	11056;"	d
LAPACK_dorgqr	plugin/Eigen/src/misc/lapacke.h	11032;"	d
LAPACK_dorgrq	plugin/Eigen/src/misc/lapacke.h	11068;"	d
LAPACK_dorgtr	plugin/Eigen/src/misc/lapacke.h	11116;"	d
LAPACK_dormbr	plugin/Eigen/src/misc/lapacke.h	11102;"	d
LAPACK_dormhr	plugin/Eigen/src/misc/lapacke.h	11194;"	d
LAPACK_dormlq	plugin/Eigen/src/misc/lapacke.h	11046;"	d
LAPACK_dormql	plugin/Eigen/src/misc/lapacke.h	11060;"	d
LAPACK_dormqr	plugin/Eigen/src/misc/lapacke.h	11034;"	d
LAPACK_dormrq	plugin/Eigen/src/misc/lapacke.h	11072;"	d
LAPACK_dormrz	plugin/Eigen/src/misc/lapacke.h	11080;"	d
LAPACK_dormtr	plugin/Eigen/src/misc/lapacke.h	11118;"	d
LAPACK_dpbcon	plugin/Eigen/src/misc/lapacke.h	10738;"	d
LAPACK_dpbequ	plugin/Eigen/src/misc/lapacke.h	10908;"	d
LAPACK_dpbrfs	plugin/Eigen/src/misc/lapacke.h	10802;"	d
LAPACK_dpbstf	plugin/Eigen/src/misc/lapacke.h	11184;"	d
LAPACK_dpbsv	plugin/Eigen/src/misc/lapacke.h	10974;"	d
LAPACK_dpbsvx	plugin/Eigen/src/misc/lapacke.h	10978;"	d
LAPACK_dpbtrf	plugin/Eigen/src/misc/lapacke.h	10642;"	d
LAPACK_dpbtrs	plugin/Eigen/src/misc/lapacke.h	10686;"	d
LAPACK_dpftrf	plugin/Eigen/src/misc/lapacke.h	10633;"	d
LAPACK_dpftri	plugin/Eigen/src/misc/lapacke.h	10847;"	d
LAPACK_dpftrs	plugin/Eigen/src/misc/lapacke.h	10677;"	d
LAPACK_dpocon	plugin/Eigen/src/misc/lapacke.h	10730;"	d
LAPACK_dpoequ	plugin/Eigen/src/misc/lapacke.h	10896;"	d
LAPACK_dpoequb	plugin/Eigen/src/misc/lapacke.h	10899;"	d
LAPACK_dporfs	plugin/Eigen/src/misc/lapacke.h	10790;"	d
LAPACK_dporfsx	plugin/Eigen/src/misc/lapacke.h	10793;"	d
LAPACK_dposv	plugin/Eigen/src/misc/lapacke.h	10952;"	d
LAPACK_dposvx	plugin/Eigen/src/misc/lapacke.h	10958;"	d
LAPACK_dposvxx	plugin/Eigen/src/misc/lapacke.h	10961;"	d
LAPACK_dpotrf	plugin/Eigen/src/misc/lapacke.h	10626;"	d
LAPACK_dpotri	plugin/Eigen/src/misc/lapacke.h	10844;"	d
LAPACK_dpotrs	plugin/Eigen/src/misc/lapacke.h	10674;"	d
LAPACK_dppcon	plugin/Eigen/src/misc/lapacke.h	10734;"	d
LAPACK_dppequ	plugin/Eigen/src/misc/lapacke.h	10904;"	d
LAPACK_dpprfs	plugin/Eigen/src/misc/lapacke.h	10798;"	d
LAPACK_dppsv	plugin/Eigen/src/misc/lapacke.h	10966;"	d
LAPACK_dppsvx	plugin/Eigen/src/misc/lapacke.h	10970;"	d
LAPACK_dpptrf	plugin/Eigen/src/misc/lapacke.h	10638;"	d
LAPACK_dpptri	plugin/Eigen/src/misc/lapacke.h	10852;"	d
LAPACK_dpptrs	plugin/Eigen/src/misc/lapacke.h	10682;"	d
LAPACK_dpstrf	plugin/Eigen/src/misc/lapacke.h	10629;"	d
LAPACK_dptcon	plugin/Eigen/src/misc/lapacke.h	10742;"	d
LAPACK_dpteqr	plugin/Eigen/src/misc/lapacke.h	11160;"	d
LAPACK_dptrfs	plugin/Eigen/src/misc/lapacke.h	10806;"	d
LAPACK_dptsv	plugin/Eigen/src/misc/lapacke.h	10982;"	d
LAPACK_dptsvx	plugin/Eigen/src/misc/lapacke.h	10986;"	d
LAPACK_dpttrf	plugin/Eigen/src/misc/lapacke.h	10646;"	d
LAPACK_dpttrs	plugin/Eigen/src/misc/lapacke.h	10690;"	d
LAPACK_dsbev	plugin/Eigen/src/misc/lapacke.h	11332;"	d
LAPACK_dsbevd	plugin/Eigen/src/misc/lapacke.h	11336;"	d
LAPACK_dsbevx	plugin/Eigen/src/misc/lapacke.h	11340;"	d
LAPACK_dsbgst	plugin/Eigen/src/misc/lapacke.h	11180;"	d
LAPACK_dsbgv	plugin/Eigen/src/misc/lapacke.h	11408;"	d
LAPACK_dsbgvd	plugin/Eigen/src/misc/lapacke.h	11412;"	d
LAPACK_dsbgvx	plugin/Eigen/src/misc/lapacke.h	11416;"	d
LAPACK_dsbtrd	plugin/Eigen/src/misc/lapacke.h	11138;"	d
LAPACK_dsfrk	plugin/Eigen/src/misc/lapacke.h	11435;"	d
LAPACK_dsgesv	plugin/Eigen/src/misc/lapacke.h	10921;"	d
LAPACK_dspcon	plugin/Eigen/src/misc/lapacke.h	10752;"	d
LAPACK_dspev	plugin/Eigen/src/misc/lapacke.h	11320;"	d
LAPACK_dspevd	plugin/Eigen/src/misc/lapacke.h	11324;"	d
LAPACK_dspevx	plugin/Eigen/src/misc/lapacke.h	11328;"	d
LAPACK_dspgst	plugin/Eigen/src/misc/lapacke.h	11176;"	d
LAPACK_dspgv	plugin/Eigen/src/misc/lapacke.h	11396;"	d
LAPACK_dspgvd	plugin/Eigen/src/misc/lapacke.h	11400;"	d
LAPACK_dspgvx	plugin/Eigen/src/misc/lapacke.h	11404;"	d
LAPACK_dsposv	plugin/Eigen/src/misc/lapacke.h	10955;"	d
LAPACK_dsprfs	plugin/Eigen/src/misc/lapacke.h	10822;"	d
LAPACK_dspsv	plugin/Eigen/src/misc/lapacke.h	11008;"	d
LAPACK_dspsvx	plugin/Eigen/src/misc/lapacke.h	11012;"	d
LAPACK_dsptrd	plugin/Eigen/src/misc/lapacke.h	11126;"	d
LAPACK_dsptrf	plugin/Eigen/src/misc/lapacke.h	10656;"	d
LAPACK_dsptri	plugin/Eigen/src/misc/lapacke.h	10862;"	d
LAPACK_dsptrs	plugin/Eigen/src/misc/lapacke.h	10700;"	d
LAPACK_dstebz	plugin/Eigen/src/misc/lapacke.h	11164;"	d
LAPACK_dstedc	plugin/Eigen/src/misc/lapacke.h	11152;"	d
LAPACK_dstegr	plugin/Eigen/src/misc/lapacke.h	11156;"	d
LAPACK_dstein	plugin/Eigen/src/misc/lapacke.h	11166;"	d
LAPACK_dstemr	plugin/Eigen/src/misc/lapacke.h	11148;"	d
LAPACK_dsteqr	plugin/Eigen/src/misc/lapacke.h	11144;"	d
LAPACK_dsterf	plugin/Eigen/src/misc/lapacke.h	11142;"	d
LAPACK_dstev	plugin/Eigen/src/misc/lapacke.h	11344;"	d
LAPACK_dstevd	plugin/Eigen/src/misc/lapacke.h	11346;"	d
LAPACK_dstevr	plugin/Eigen/src/misc/lapacke.h	11350;"	d
LAPACK_dstevx	plugin/Eigen/src/misc/lapacke.h	11348;"	d
LAPACK_dsycon	plugin/Eigen/src/misc/lapacke.h	10746;"	d
LAPACK_dsyconv	plugin/Eigen/src/misc/lapacke.h	11585;"	d
LAPACK_dsyequb	plugin/Eigen/src/misc/lapacke.h	10911;"	d
LAPACK_dsyev	plugin/Eigen/src/misc/lapacke.h	11304;"	d
LAPACK_dsyevd	plugin/Eigen/src/misc/lapacke.h	11308;"	d
LAPACK_dsyevr	plugin/Eigen/src/misc/lapacke.h	11316;"	d
LAPACK_dsyevx	plugin/Eigen/src/misc/lapacke.h	11312;"	d
LAPACK_dsygst	plugin/Eigen/src/misc/lapacke.h	11172;"	d
LAPACK_dsygv	plugin/Eigen/src/misc/lapacke.h	11384;"	d
LAPACK_dsygvd	plugin/Eigen/src/misc/lapacke.h	11388;"	d
LAPACK_dsygvx	plugin/Eigen/src/misc/lapacke.h	11392;"	d
LAPACK_dsyrfs	plugin/Eigen/src/misc/lapacke.h	10810;"	d
LAPACK_dsyrfsx	plugin/Eigen/src/misc/lapacke.h	10813;"	d
LAPACK_dsysv	plugin/Eigen/src/misc/lapacke.h	10990;"	d
LAPACK_dsysvx	plugin/Eigen/src/misc/lapacke.h	10994;"	d
LAPACK_dsysvxx	plugin/Eigen/src/misc/lapacke.h	10997;"	d
LAPACK_dsyswapr	plugin/Eigen/src/misc/lapacke.h	11586;"	d
LAPACK_dsytrd	plugin/Eigen/src/misc/lapacke.h	11114;"	d
LAPACK_dsytrf	plugin/Eigen/src/misc/lapacke.h	10650;"	d
LAPACK_dsytri	plugin/Eigen/src/misc/lapacke.h	10856;"	d
LAPACK_dsytri2	plugin/Eigen/src/misc/lapacke.h	11587;"	d
LAPACK_dsytri2x	plugin/Eigen/src/misc/lapacke.h	11588;"	d
LAPACK_dsytrs	plugin/Eigen/src/misc/lapacke.h	10694;"	d
LAPACK_dsytrs2	plugin/Eigen/src/misc/lapacke.h	11589;"	d
LAPACK_dtbcon	plugin/Eigen/src/misc/lapacke.h	10766;"	d
LAPACK_dtbrfs	plugin/Eigen/src/misc/lapacke.h	10836;"	d
LAPACK_dtbtrs	plugin/Eigen/src/misc/lapacke.h	10714;"	d
LAPACK_dtfsm	plugin/Eigen/src/misc/lapacke.h	11439;"	d
LAPACK_dtftri	plugin/Eigen/src/misc/lapacke.h	10871;"	d
LAPACK_dtfttp	plugin/Eigen/src/misc/lapacke.h	11443;"	d
LAPACK_dtfttr	plugin/Eigen/src/misc/lapacke.h	11447;"	d
LAPACK_dtgevc	plugin/Eigen/src/misc/lapacke.h	11252;"	d
LAPACK_dtgexc	plugin/Eigen/src/misc/lapacke.h	11256;"	d
LAPACK_dtgsen	plugin/Eigen/src/misc/lapacke.h	11260;"	d
LAPACK_dtgsja	plugin/Eigen/src/misc/lapacke.h	11276;"	d
LAPACK_dtgsna	plugin/Eigen/src/misc/lapacke.h	11268;"	d
LAPACK_dtgsyl	plugin/Eigen/src/misc/lapacke.h	11264;"	d
LAPACK_dtpcon	plugin/Eigen/src/misc/lapacke.h	10762;"	d
LAPACK_dtpmqrt	plugin/Eigen/src/misc/lapacke.h	11628;"	d
LAPACK_dtpqrt	plugin/Eigen/src/misc/lapacke.h	11631;"	d
LAPACK_dtpqrt2	plugin/Eigen/src/misc/lapacke.h	11635;"	d
LAPACK_dtprfb	plugin/Eigen/src/misc/lapacke.h	11639;"	d
LAPACK_dtprfs	plugin/Eigen/src/misc/lapacke.h	10832;"	d
LAPACK_dtptri	plugin/Eigen/src/misc/lapacke.h	10876;"	d
LAPACK_dtptrs	plugin/Eigen/src/misc/lapacke.h	10710;"	d
LAPACK_dtpttf	plugin/Eigen/src/misc/lapacke.h	11451;"	d
LAPACK_dtpttr	plugin/Eigen/src/misc/lapacke.h	11455;"	d
LAPACK_dtrcon	plugin/Eigen/src/misc/lapacke.h	10758;"	d
LAPACK_dtrevc	plugin/Eigen/src/misc/lapacke.h	11216;"	d
LAPACK_dtrexc	plugin/Eigen/src/misc/lapacke.h	11224;"	d
LAPACK_dtrrfs	plugin/Eigen/src/misc/lapacke.h	10828;"	d
LAPACK_dtrsen	plugin/Eigen/src/misc/lapacke.h	11228;"	d
LAPACK_dtrsna	plugin/Eigen/src/misc/lapacke.h	11220;"	d
LAPACK_dtrsyl	plugin/Eigen/src/misc/lapacke.h	11232;"	d
LAPACK_dtrtri	plugin/Eigen/src/misc/lapacke.h	10868;"	d
LAPACK_dtrtrs	plugin/Eigen/src/misc/lapacke.h	10706;"	d
LAPACK_dtrttf	plugin/Eigen/src/misc/lapacke.h	11459;"	d
LAPACK_dtrttp	plugin/Eigen/src/misc/lapacke.h	11463;"	d
LAPACK_dtzrzf	plugin/Eigen/src/misc/lapacke.h	11076;"	d
LAPACK_lsame	plugin/Eigen/src/misc/lapacke.h	148;"	d
LAPACK_sbbcsd	plugin/Eigen/src/misc/lapacke.h	11590;"	d
LAPACK_sbdsdc	plugin/Eigen/src/misc/lapacke.h	11111;"	d
LAPACK_sbdsqr	plugin/Eigen/src/misc/lapacke.h	11107;"	d
LAPACK_sdisna	plugin/Eigen/src/misc/lapacke.h	11169;"	d
LAPACK_sgbbrd	plugin/Eigen/src/misc/lapacke.h	11095;"	d
LAPACK_sgbcon	plugin/Eigen/src/misc/lapacke.h	10721;"	d
LAPACK_sgbequ	plugin/Eigen/src/misc/lapacke.h	10887;"	d
LAPACK_sgbequb	plugin/Eigen/src/misc/lapacke.h	10892;"	d
LAPACK_sgbrfs	plugin/Eigen/src/misc/lapacke.h	10777;"	d
LAPACK_sgbrfsx	plugin/Eigen/src/misc/lapacke.h	10782;"	d
LAPACK_sgbsv	plugin/Eigen/src/misc/lapacke.h	10931;"	d
LAPACK_sgbsvx	plugin/Eigen/src/misc/lapacke.h	10935;"	d
LAPACK_sgbsvxx	plugin/Eigen/src/misc/lapacke.h	10940;"	d
LAPACK_sgbtrf	plugin/Eigen/src/misc/lapacke.h	10617;"	d
LAPACK_sgbtrs	plugin/Eigen/src/misc/lapacke.h	10665;"	d
LAPACK_sgebak	plugin/Eigen/src/misc/lapacke.h	11203;"	d
LAPACK_sgebal	plugin/Eigen/src/misc/lapacke.h	11199;"	d
LAPACK_sgebrd	plugin/Eigen/src/misc/lapacke.h	11091;"	d
LAPACK_sgecon	plugin/Eigen/src/misc/lapacke.h	10717;"	d
LAPACK_sgeequ	plugin/Eigen/src/misc/lapacke.h	10879;"	d
LAPACK_sgeequb	plugin/Eigen/src/misc/lapacke.h	10884;"	d
LAPACK_sgees	plugin/Eigen/src/misc/lapacke.h	11351;"	d
LAPACK_sgeesx	plugin/Eigen/src/misc/lapacke.h	11355;"	d
LAPACK_sgeev	plugin/Eigen/src/misc/lapacke.h	11359;"	d
LAPACK_sgeevx	plugin/Eigen/src/misc/lapacke.h	11363;"	d
LAPACK_sgehrd	plugin/Eigen/src/misc/lapacke.h	11187;"	d
LAPACK_sgejsv	plugin/Eigen/src/misc/lapacke.h	11376;"	d
LAPACK_sgelq2	plugin/Eigen/src/misc/lapacke.h	11509;"	d
LAPACK_sgelqf	plugin/Eigen/src/misc/lapacke.h	11039;"	d
LAPACK_sgels	plugin/Eigen/src/misc/lapacke.h	11279;"	d
LAPACK_sgelsd	plugin/Eigen/src/misc/lapacke.h	11291;"	d
LAPACK_sgelss	plugin/Eigen/src/misc/lapacke.h	11287;"	d
LAPACK_sgelsy	plugin/Eigen/src/misc/lapacke.h	11283;"	d
LAPACK_sgemqrt	plugin/Eigen/src/misc/lapacke.h	11611;"	d
LAPACK_sgeqlf	plugin/Eigen/src/misc/lapacke.h	11051;"	d
LAPACK_sgeqp3	plugin/Eigen/src/misc/lapacke.h	11027;"	d
LAPACK_sgeqpf	plugin/Eigen/src/misc/lapacke.h	11023;"	d
LAPACK_sgeqr2	plugin/Eigen/src/misc/lapacke.h	11477;"	d
LAPACK_sgeqrf	plugin/Eigen/src/misc/lapacke.h	11019;"	d
LAPACK_sgeqrfp	plugin/Eigen/src/misc/lapacke.h	11467;"	d
LAPACK_sgeqrt	plugin/Eigen/src/misc/lapacke.h	11615;"	d
LAPACK_sgeqrt2	plugin/Eigen/src/misc/lapacke.h	11619;"	d
LAPACK_sgeqrt3	plugin/Eigen/src/misc/lapacke.h	11623;"	d
LAPACK_sgerfs	plugin/Eigen/src/misc/lapacke.h	10769;"	d
LAPACK_sgerfsx	plugin/Eigen/src/misc/lapacke.h	10774;"	d
LAPACK_sgerqf	plugin/Eigen/src/misc/lapacke.h	11063;"	d
LAPACK_sgesdd	plugin/Eigen/src/misc/lapacke.h	11371;"	d
LAPACK_sgesv	plugin/Eigen/src/misc/lapacke.h	10917;"	d
LAPACK_sgesvd	plugin/Eigen/src/misc/lapacke.h	11367;"	d
LAPACK_sgesvj	plugin/Eigen/src/misc/lapacke.h	11378;"	d
LAPACK_sgesvx	plugin/Eigen/src/misc/lapacke.h	10923;"	d
LAPACK_sgesvxx	plugin/Eigen/src/misc/lapacke.h	10928;"	d
LAPACK_sgetf2	plugin/Eigen/src/misc/lapacke.h	11485;"	d
LAPACK_sgetrf	plugin/Eigen/src/misc/lapacke.h	10613;"	d
LAPACK_sgetri	plugin/Eigen/src/misc/lapacke.h	10839;"	d
LAPACK_sgetrs	plugin/Eigen/src/misc/lapacke.h	10661;"	d
LAPACK_sggbak	plugin/Eigen/src/misc/lapacke.h	11243;"	d
LAPACK_sggbal	plugin/Eigen/src/misc/lapacke.h	11239;"	d
LAPACK_sgges	plugin/Eigen/src/misc/lapacke.h	11419;"	d
LAPACK_sggesx	plugin/Eigen/src/misc/lapacke.h	11423;"	d
LAPACK_sggev	plugin/Eigen/src/misc/lapacke.h	11427;"	d
LAPACK_sggevx	plugin/Eigen/src/misc/lapacke.h	11431;"	d
LAPACK_sggglm	plugin/Eigen/src/misc/lapacke.h	11299;"	d
LAPACK_sgghrd	plugin/Eigen/src/misc/lapacke.h	11235;"	d
LAPACK_sgglse	plugin/Eigen/src/misc/lapacke.h	11295;"	d
LAPACK_sggqrf	plugin/Eigen/src/misc/lapacke.h	11083;"	d
LAPACK_sggrqf	plugin/Eigen/src/misc/lapacke.h	11087;"	d
LAPACK_sggsvd	plugin/Eigen/src/misc/lapacke.h	11379;"	d
LAPACK_sggsvp	plugin/Eigen/src/misc/lapacke.h	11271;"	d
LAPACK_sgtcon	plugin/Eigen/src/misc/lapacke.h	10725;"	d
LAPACK_sgtrfs	plugin/Eigen/src/misc/lapacke.h	10785;"	d
LAPACK_sgtsv	plugin/Eigen/src/misc/lapacke.h	10943;"	d
LAPACK_sgtsvx	plugin/Eigen/src/misc/lapacke.h	10947;"	d
LAPACK_sgttrf	plugin/Eigen/src/misc/lapacke.h	10621;"	d
LAPACK_sgttrs	plugin/Eigen/src/misc/lapacke.h	10669;"	d
LAPACK_shgeqz	plugin/Eigen/src/misc/lapacke.h	11247;"	d
LAPACK_shsein	plugin/Eigen/src/misc/lapacke.h	11211;"	d
LAPACK_shseqr	plugin/Eigen/src/misc/lapacke.h	11207;"	d
LAPACK_slacpy	plugin/Eigen/src/misc/lapacke.h	11481;"	d
LAPACK_slag2d	plugin/Eigen/src/misc/lapacke.h	11533;"	d
LAPACK_slagge	plugin/Eigen/src/misc/lapacke.h	11541;"	d
LAPACK_slagsy	plugin/Eigen/src/misc/lapacke.h	11551;"	d
LAPACK_slamch	plugin/Eigen/src/misc/lapacke.h	11507;"	d
LAPACK_slange	plugin/Eigen/src/misc/lapacke.h	11493;"	d
LAPACK_slansy	plugin/Eigen/src/misc/lapacke.h	11499;"	d
LAPACK_slantr	plugin/Eigen/src/misc/lapacke.h	11503;"	d
LAPACK_slapmr	plugin/Eigen/src/misc/lapacke.h	11557;"	d
LAPACK_slapy2	plugin/Eigen/src/misc/lapacke.h	11561;"	d
LAPACK_slapy3	plugin/Eigen/src/misc/lapacke.h	11563;"	d
LAPACK_slarfb	plugin/Eigen/src/misc/lapacke.h	11513;"	d
LAPACK_slarfg	plugin/Eigen/src/misc/lapacke.h	11517;"	d
LAPACK_slarft	plugin/Eigen/src/misc/lapacke.h	11521;"	d
LAPACK_slarfx	plugin/Eigen/src/misc/lapacke.h	11525;"	d
LAPACK_slarnv	plugin/Eigen/src/misc/lapacke.h	11473;"	d
LAPACK_slartgp	plugin/Eigen/src/misc/lapacke.h	11565;"	d
LAPACK_slartgs	plugin/Eigen/src/misc/lapacke.h	11567;"	d
LAPACK_slaset	plugin/Eigen/src/misc/lapacke.h	11545;"	d
LAPACK_slasrt	plugin/Eigen/src/misc/lapacke.h	11549;"	d
LAPACK_slaswp	plugin/Eigen/src/misc/lapacke.h	11489;"	d
LAPACK_slatms	plugin/Eigen/src/misc/lapacke.h	11529;"	d
LAPACK_slauum	plugin/Eigen/src/misc/lapacke.h	11537;"	d
LAPACK_sopgtr	plugin/Eigen/src/misc/lapacke.h	11127;"	d
LAPACK_sopmtr	plugin/Eigen/src/misc/lapacke.h	11129;"	d
LAPACK_sorbdb	plugin/Eigen/src/misc/lapacke.h	11591;"	d
LAPACK_sorcsd	plugin/Eigen/src/misc/lapacke.h	11592;"	d
LAPACK_sorgbr	plugin/Eigen/src/misc/lapacke.h	11099;"	d
LAPACK_sorghr	plugin/Eigen/src/misc/lapacke.h	11191;"	d
LAPACK_sorglq	plugin/Eigen/src/misc/lapacke.h	11043;"	d
LAPACK_sorgql	plugin/Eigen/src/misc/lapacke.h	11055;"	d
LAPACK_sorgqr	plugin/Eigen/src/misc/lapacke.h	11031;"	d
LAPACK_sorgrq	plugin/Eigen/src/misc/lapacke.h	11067;"	d
LAPACK_sorgtr	plugin/Eigen/src/misc/lapacke.h	11115;"	d
LAPACK_sormbr	plugin/Eigen/src/misc/lapacke.h	11101;"	d
LAPACK_sormhr	plugin/Eigen/src/misc/lapacke.h	11193;"	d
LAPACK_sormlq	plugin/Eigen/src/misc/lapacke.h	11045;"	d
LAPACK_sormql	plugin/Eigen/src/misc/lapacke.h	11059;"	d
LAPACK_sormqr	plugin/Eigen/src/misc/lapacke.h	11033;"	d
LAPACK_sormrq	plugin/Eigen/src/misc/lapacke.h	11071;"	d
LAPACK_sormrz	plugin/Eigen/src/misc/lapacke.h	11079;"	d
LAPACK_sormtr	plugin/Eigen/src/misc/lapacke.h	11117;"	d
LAPACK_spbcon	plugin/Eigen/src/misc/lapacke.h	10737;"	d
LAPACK_spbequ	plugin/Eigen/src/misc/lapacke.h	10907;"	d
LAPACK_spbrfs	plugin/Eigen/src/misc/lapacke.h	10801;"	d
LAPACK_spbstf	plugin/Eigen/src/misc/lapacke.h	11183;"	d
LAPACK_spbsv	plugin/Eigen/src/misc/lapacke.h	10973;"	d
LAPACK_spbsvx	plugin/Eigen/src/misc/lapacke.h	10977;"	d
LAPACK_spbtrf	plugin/Eigen/src/misc/lapacke.h	10641;"	d
LAPACK_spbtrs	plugin/Eigen/src/misc/lapacke.h	10685;"	d
LAPACK_spftrf	plugin/Eigen/src/misc/lapacke.h	10634;"	d
LAPACK_spftri	plugin/Eigen/src/misc/lapacke.h	10848;"	d
LAPACK_spftrs	plugin/Eigen/src/misc/lapacke.h	10678;"	d
LAPACK_spocon	plugin/Eigen/src/misc/lapacke.h	10729;"	d
LAPACK_spoequ	plugin/Eigen/src/misc/lapacke.h	10895;"	d
LAPACK_spoequb	plugin/Eigen/src/misc/lapacke.h	10900;"	d
LAPACK_sporfs	plugin/Eigen/src/misc/lapacke.h	10789;"	d
LAPACK_sporfsx	plugin/Eigen/src/misc/lapacke.h	10794;"	d
LAPACK_sposv	plugin/Eigen/src/misc/lapacke.h	10951;"	d
LAPACK_sposvx	plugin/Eigen/src/misc/lapacke.h	10957;"	d
LAPACK_sposvxx	plugin/Eigen/src/misc/lapacke.h	10962;"	d
LAPACK_spotrf	plugin/Eigen/src/misc/lapacke.h	10625;"	d
LAPACK_spotri	plugin/Eigen/src/misc/lapacke.h	10843;"	d
LAPACK_spotrs	plugin/Eigen/src/misc/lapacke.h	10673;"	d
LAPACK_sppcon	plugin/Eigen/src/misc/lapacke.h	10733;"	d
LAPACK_sppequ	plugin/Eigen/src/misc/lapacke.h	10903;"	d
LAPACK_spprfs	plugin/Eigen/src/misc/lapacke.h	10797;"	d
LAPACK_sppsv	plugin/Eigen/src/misc/lapacke.h	10965;"	d
LAPACK_sppsvx	plugin/Eigen/src/misc/lapacke.h	10969;"	d
LAPACK_spptrf	plugin/Eigen/src/misc/lapacke.h	10637;"	d
LAPACK_spptri	plugin/Eigen/src/misc/lapacke.h	10851;"	d
LAPACK_spptrs	plugin/Eigen/src/misc/lapacke.h	10681;"	d
LAPACK_spstrf	plugin/Eigen/src/misc/lapacke.h	10630;"	d
LAPACK_sptcon	plugin/Eigen/src/misc/lapacke.h	10741;"	d
LAPACK_spteqr	plugin/Eigen/src/misc/lapacke.h	11159;"	d
LAPACK_sptrfs	plugin/Eigen/src/misc/lapacke.h	10805;"	d
LAPACK_sptsv	plugin/Eigen/src/misc/lapacke.h	10981;"	d
LAPACK_sptsvx	plugin/Eigen/src/misc/lapacke.h	10985;"	d
LAPACK_spttrf	plugin/Eigen/src/misc/lapacke.h	10645;"	d
LAPACK_spttrs	plugin/Eigen/src/misc/lapacke.h	10689;"	d
LAPACK_ssbev	plugin/Eigen/src/misc/lapacke.h	11331;"	d
LAPACK_ssbevd	plugin/Eigen/src/misc/lapacke.h	11335;"	d
LAPACK_ssbevx	plugin/Eigen/src/misc/lapacke.h	11339;"	d
LAPACK_ssbgst	plugin/Eigen/src/misc/lapacke.h	11179;"	d
LAPACK_ssbgv	plugin/Eigen/src/misc/lapacke.h	11407;"	d
LAPACK_ssbgvd	plugin/Eigen/src/misc/lapacke.h	11411;"	d
LAPACK_ssbgvx	plugin/Eigen/src/misc/lapacke.h	11415;"	d
LAPACK_ssbtrd	plugin/Eigen/src/misc/lapacke.h	11137;"	d
LAPACK_ssfrk	plugin/Eigen/src/misc/lapacke.h	11436;"	d
LAPACK_sspcon	plugin/Eigen/src/misc/lapacke.h	10751;"	d
LAPACK_sspev	plugin/Eigen/src/misc/lapacke.h	11319;"	d
LAPACK_sspevd	plugin/Eigen/src/misc/lapacke.h	11323;"	d
LAPACK_sspevx	plugin/Eigen/src/misc/lapacke.h	11327;"	d
LAPACK_sspgst	plugin/Eigen/src/misc/lapacke.h	11175;"	d
LAPACK_sspgv	plugin/Eigen/src/misc/lapacke.h	11395;"	d
LAPACK_sspgvd	plugin/Eigen/src/misc/lapacke.h	11399;"	d
LAPACK_sspgvx	plugin/Eigen/src/misc/lapacke.h	11403;"	d
LAPACK_ssprfs	plugin/Eigen/src/misc/lapacke.h	10821;"	d
LAPACK_sspsv	plugin/Eigen/src/misc/lapacke.h	11007;"	d
LAPACK_sspsvx	plugin/Eigen/src/misc/lapacke.h	11011;"	d
LAPACK_ssptrd	plugin/Eigen/src/misc/lapacke.h	11125;"	d
LAPACK_ssptrf	plugin/Eigen/src/misc/lapacke.h	10655;"	d
LAPACK_ssptri	plugin/Eigen/src/misc/lapacke.h	10861;"	d
LAPACK_ssptrs	plugin/Eigen/src/misc/lapacke.h	10699;"	d
LAPACK_sstebz	plugin/Eigen/src/misc/lapacke.h	11163;"	d
LAPACK_sstedc	plugin/Eigen/src/misc/lapacke.h	11151;"	d
LAPACK_sstegr	plugin/Eigen/src/misc/lapacke.h	11155;"	d
LAPACK_sstein	plugin/Eigen/src/misc/lapacke.h	11165;"	d
LAPACK_sstemr	plugin/Eigen/src/misc/lapacke.h	11147;"	d
LAPACK_ssteqr	plugin/Eigen/src/misc/lapacke.h	11143;"	d
LAPACK_ssterf	plugin/Eigen/src/misc/lapacke.h	11141;"	d
LAPACK_sstev	plugin/Eigen/src/misc/lapacke.h	11343;"	d
LAPACK_sstevd	plugin/Eigen/src/misc/lapacke.h	11345;"	d
LAPACK_sstevr	plugin/Eigen/src/misc/lapacke.h	11349;"	d
LAPACK_sstevx	plugin/Eigen/src/misc/lapacke.h	11347;"	d
LAPACK_ssycon	plugin/Eigen/src/misc/lapacke.h	10745;"	d
LAPACK_ssyconv	plugin/Eigen/src/misc/lapacke.h	11593;"	d
LAPACK_ssyequb	plugin/Eigen/src/misc/lapacke.h	10912;"	d
LAPACK_ssyev	plugin/Eigen/src/misc/lapacke.h	11303;"	d
LAPACK_ssyevd	plugin/Eigen/src/misc/lapacke.h	11307;"	d
LAPACK_ssyevr	plugin/Eigen/src/misc/lapacke.h	11315;"	d
LAPACK_ssyevx	plugin/Eigen/src/misc/lapacke.h	11311;"	d
LAPACK_ssygst	plugin/Eigen/src/misc/lapacke.h	11171;"	d
LAPACK_ssygv	plugin/Eigen/src/misc/lapacke.h	11383;"	d
LAPACK_ssygvd	plugin/Eigen/src/misc/lapacke.h	11387;"	d
LAPACK_ssygvx	plugin/Eigen/src/misc/lapacke.h	11391;"	d
LAPACK_ssyrfs	plugin/Eigen/src/misc/lapacke.h	10809;"	d
LAPACK_ssyrfsx	plugin/Eigen/src/misc/lapacke.h	10814;"	d
LAPACK_ssysv	plugin/Eigen/src/misc/lapacke.h	10989;"	d
LAPACK_ssysvx	plugin/Eigen/src/misc/lapacke.h	10993;"	d
LAPACK_ssysvxx	plugin/Eigen/src/misc/lapacke.h	10998;"	d
LAPACK_ssyswapr	plugin/Eigen/src/misc/lapacke.h	11594;"	d
LAPACK_ssytrd	plugin/Eigen/src/misc/lapacke.h	11113;"	d
LAPACK_ssytrf	plugin/Eigen/src/misc/lapacke.h	10649;"	d
LAPACK_ssytri	plugin/Eigen/src/misc/lapacke.h	10855;"	d
LAPACK_ssytri2	plugin/Eigen/src/misc/lapacke.h	11595;"	d
LAPACK_ssytri2x	plugin/Eigen/src/misc/lapacke.h	11596;"	d
LAPACK_ssytrs	plugin/Eigen/src/misc/lapacke.h	10693;"	d
LAPACK_ssytrs2	plugin/Eigen/src/misc/lapacke.h	11597;"	d
LAPACK_stbcon	plugin/Eigen/src/misc/lapacke.h	10765;"	d
LAPACK_stbrfs	plugin/Eigen/src/misc/lapacke.h	10835;"	d
LAPACK_stbtrs	plugin/Eigen/src/misc/lapacke.h	10713;"	d
LAPACK_stfsm	plugin/Eigen/src/misc/lapacke.h	11440;"	d
LAPACK_stftri	plugin/Eigen/src/misc/lapacke.h	10872;"	d
LAPACK_stfttp	plugin/Eigen/src/misc/lapacke.h	11444;"	d
LAPACK_stfttr	plugin/Eigen/src/misc/lapacke.h	11448;"	d
LAPACK_stgevc	plugin/Eigen/src/misc/lapacke.h	11251;"	d
LAPACK_stgexc	plugin/Eigen/src/misc/lapacke.h	11255;"	d
LAPACK_stgsen	plugin/Eigen/src/misc/lapacke.h	11259;"	d
LAPACK_stgsja	plugin/Eigen/src/misc/lapacke.h	11275;"	d
LAPACK_stgsna	plugin/Eigen/src/misc/lapacke.h	11267;"	d
LAPACK_stgsyl	plugin/Eigen/src/misc/lapacke.h	11263;"	d
LAPACK_stpcon	plugin/Eigen/src/misc/lapacke.h	10761;"	d
LAPACK_stpmqrt	plugin/Eigen/src/misc/lapacke.h	11627;"	d
LAPACK_stpqrt2	plugin/Eigen/src/misc/lapacke.h	11634;"	d
LAPACK_stprfb	plugin/Eigen/src/misc/lapacke.h	11638;"	d
LAPACK_stprfs	plugin/Eigen/src/misc/lapacke.h	10831;"	d
LAPACK_stptri	plugin/Eigen/src/misc/lapacke.h	10875;"	d
LAPACK_stptrs	plugin/Eigen/src/misc/lapacke.h	10709;"	d
LAPACK_stpttf	plugin/Eigen/src/misc/lapacke.h	11452;"	d
LAPACK_stpttr	plugin/Eigen/src/misc/lapacke.h	11456;"	d
LAPACK_strcon	plugin/Eigen/src/misc/lapacke.h	10757;"	d
LAPACK_strevc	plugin/Eigen/src/misc/lapacke.h	11215;"	d
LAPACK_strexc	plugin/Eigen/src/misc/lapacke.h	11223;"	d
LAPACK_strrfs	plugin/Eigen/src/misc/lapacke.h	10827;"	d
LAPACK_strsen	plugin/Eigen/src/misc/lapacke.h	11227;"	d
LAPACK_strsna	plugin/Eigen/src/misc/lapacke.h	11219;"	d
LAPACK_strsyl	plugin/Eigen/src/misc/lapacke.h	11231;"	d
LAPACK_strtri	plugin/Eigen/src/misc/lapacke.h	10867;"	d
LAPACK_strtrs	plugin/Eigen/src/misc/lapacke.h	10705;"	d
LAPACK_strttf	plugin/Eigen/src/misc/lapacke.h	11460;"	d
LAPACK_strttp	plugin/Eigen/src/misc/lapacke.h	11464;"	d
LAPACK_stzrzf	plugin/Eigen/src/misc/lapacke.h	11075;"	d
LAPACK_zbbcsd	plugin/Eigen/src/misc/lapacke.h	11598;"	d
LAPACK_zbdsqr	plugin/Eigen/src/misc/lapacke.h	11110;"	d
LAPACK_zcgesv	plugin/Eigen/src/misc/lapacke.h	10922;"	d
LAPACK_zcposv	plugin/Eigen/src/misc/lapacke.h	10956;"	d
LAPACK_zgbbrd	plugin/Eigen/src/misc/lapacke.h	11098;"	d
LAPACK_zgbcon	plugin/Eigen/src/misc/lapacke.h	10724;"	d
LAPACK_zgbequ	plugin/Eigen/src/misc/lapacke.h	10890;"	d
LAPACK_zgbequb	plugin/Eigen/src/misc/lapacke.h	10893;"	d
LAPACK_zgbrfs	plugin/Eigen/src/misc/lapacke.h	10780;"	d
LAPACK_zgbrfsx	plugin/Eigen/src/misc/lapacke.h	10783;"	d
LAPACK_zgbsv	plugin/Eigen/src/misc/lapacke.h	10934;"	d
LAPACK_zgbsvx	plugin/Eigen/src/misc/lapacke.h	10938;"	d
LAPACK_zgbsvxx	plugin/Eigen/src/misc/lapacke.h	10941;"	d
LAPACK_zgbtrf	plugin/Eigen/src/misc/lapacke.h	10620;"	d
LAPACK_zgbtrs	plugin/Eigen/src/misc/lapacke.h	10668;"	d
LAPACK_zgebak	plugin/Eigen/src/misc/lapacke.h	11206;"	d
LAPACK_zgebal	plugin/Eigen/src/misc/lapacke.h	11202;"	d
LAPACK_zgebrd	plugin/Eigen/src/misc/lapacke.h	11094;"	d
LAPACK_zgecon	plugin/Eigen/src/misc/lapacke.h	10720;"	d
LAPACK_zgeequ	plugin/Eigen/src/misc/lapacke.h	10882;"	d
LAPACK_zgeequb	plugin/Eigen/src/misc/lapacke.h	10885;"	d
LAPACK_zgees	plugin/Eigen/src/misc/lapacke.h	11354;"	d
LAPACK_zgeesx	plugin/Eigen/src/misc/lapacke.h	11358;"	d
LAPACK_zgeev	plugin/Eigen/src/misc/lapacke.h	11362;"	d
LAPACK_zgeevx	plugin/Eigen/src/misc/lapacke.h	11366;"	d
LAPACK_zgehrd	plugin/Eigen/src/misc/lapacke.h	11190;"	d
LAPACK_zgelq2	plugin/Eigen/src/misc/lapacke.h	11512;"	d
LAPACK_zgelqf	plugin/Eigen/src/misc/lapacke.h	11042;"	d
LAPACK_zgels	plugin/Eigen/src/misc/lapacke.h	11282;"	d
LAPACK_zgelsd	plugin/Eigen/src/misc/lapacke.h	11294;"	d
LAPACK_zgelss	plugin/Eigen/src/misc/lapacke.h	11290;"	d
LAPACK_zgelsy	plugin/Eigen/src/misc/lapacke.h	11286;"	d
LAPACK_zgemqrt	plugin/Eigen/src/misc/lapacke.h	11614;"	d
LAPACK_zgeqlf	plugin/Eigen/src/misc/lapacke.h	11054;"	d
LAPACK_zgeqp3	plugin/Eigen/src/misc/lapacke.h	11030;"	d
LAPACK_zgeqpf	plugin/Eigen/src/misc/lapacke.h	11026;"	d
LAPACK_zgeqr2	plugin/Eigen/src/misc/lapacke.h	11480;"	d
LAPACK_zgeqrf	plugin/Eigen/src/misc/lapacke.h	11022;"	d
LAPACK_zgeqrfp	plugin/Eigen/src/misc/lapacke.h	11470;"	d
LAPACK_zgeqrt	plugin/Eigen/src/misc/lapacke.h	11618;"	d
LAPACK_zgeqrt2	plugin/Eigen/src/misc/lapacke.h	11622;"	d
LAPACK_zgeqrt3	plugin/Eigen/src/misc/lapacke.h	11626;"	d
LAPACK_zgerfs	plugin/Eigen/src/misc/lapacke.h	10772;"	d
LAPACK_zgerfsx	plugin/Eigen/src/misc/lapacke.h	10775;"	d
LAPACK_zgerqf	plugin/Eigen/src/misc/lapacke.h	11066;"	d
LAPACK_zgesdd	plugin/Eigen/src/misc/lapacke.h	11374;"	d
LAPACK_zgesv	plugin/Eigen/src/misc/lapacke.h	10920;"	d
LAPACK_zgesvd	plugin/Eigen/src/misc/lapacke.h	11370;"	d
LAPACK_zgesvx	plugin/Eigen/src/misc/lapacke.h	10926;"	d
LAPACK_zgesvxx	plugin/Eigen/src/misc/lapacke.h	10929;"	d
LAPACK_zgetf2	plugin/Eigen/src/misc/lapacke.h	11488;"	d
LAPACK_zgetrf	plugin/Eigen/src/misc/lapacke.h	10616;"	d
LAPACK_zgetri	plugin/Eigen/src/misc/lapacke.h	10842;"	d
LAPACK_zgetrs	plugin/Eigen/src/misc/lapacke.h	10664;"	d
LAPACK_zggbak	plugin/Eigen/src/misc/lapacke.h	11246;"	d
LAPACK_zggbal	plugin/Eigen/src/misc/lapacke.h	11242;"	d
LAPACK_zgges	plugin/Eigen/src/misc/lapacke.h	11422;"	d
LAPACK_zggesx	plugin/Eigen/src/misc/lapacke.h	11426;"	d
LAPACK_zggev	plugin/Eigen/src/misc/lapacke.h	11430;"	d
LAPACK_zggevx	plugin/Eigen/src/misc/lapacke.h	11434;"	d
LAPACK_zggglm	plugin/Eigen/src/misc/lapacke.h	11302;"	d
LAPACK_zgghrd	plugin/Eigen/src/misc/lapacke.h	11238;"	d
LAPACK_zgglse	plugin/Eigen/src/misc/lapacke.h	11298;"	d
LAPACK_zggqrf	plugin/Eigen/src/misc/lapacke.h	11086;"	d
LAPACK_zggrqf	plugin/Eigen/src/misc/lapacke.h	11090;"	d
LAPACK_zggsvd	plugin/Eigen/src/misc/lapacke.h	11382;"	d
LAPACK_zggsvp	plugin/Eigen/src/misc/lapacke.h	11274;"	d
LAPACK_zgtcon	plugin/Eigen/src/misc/lapacke.h	10728;"	d
LAPACK_zgtrfs	plugin/Eigen/src/misc/lapacke.h	10788;"	d
LAPACK_zgtsv	plugin/Eigen/src/misc/lapacke.h	10946;"	d
LAPACK_zgtsvx	plugin/Eigen/src/misc/lapacke.h	10950;"	d
LAPACK_zgttrf	plugin/Eigen/src/misc/lapacke.h	10624;"	d
LAPACK_zgttrs	plugin/Eigen/src/misc/lapacke.h	10672;"	d
LAPACK_zhbev	plugin/Eigen/src/misc/lapacke.h	11334;"	d
LAPACK_zhbevd	plugin/Eigen/src/misc/lapacke.h	11338;"	d
LAPACK_zhbevx	plugin/Eigen/src/misc/lapacke.h	11342;"	d
LAPACK_zhbgst	plugin/Eigen/src/misc/lapacke.h	11182;"	d
LAPACK_zhbgv	plugin/Eigen/src/misc/lapacke.h	11410;"	d
LAPACK_zhbgvd	plugin/Eigen/src/misc/lapacke.h	11414;"	d
LAPACK_zhbgvx	plugin/Eigen/src/misc/lapacke.h	11418;"	d
LAPACK_zhbtrd	plugin/Eigen/src/misc/lapacke.h	11140;"	d
LAPACK_zhecon	plugin/Eigen/src/misc/lapacke.h	10750;"	d
LAPACK_zheequb	plugin/Eigen/src/misc/lapacke.h	10915;"	d
LAPACK_zheev	plugin/Eigen/src/misc/lapacke.h	11306;"	d
LAPACK_zheevd	plugin/Eigen/src/misc/lapacke.h	11310;"	d
LAPACK_zheevr	plugin/Eigen/src/misc/lapacke.h	11318;"	d
LAPACK_zheevx	plugin/Eigen/src/misc/lapacke.h	11314;"	d
LAPACK_zhegst	plugin/Eigen/src/misc/lapacke.h	11174;"	d
LAPACK_zhegv	plugin/Eigen/src/misc/lapacke.h	11386;"	d
LAPACK_zhegvd	plugin/Eigen/src/misc/lapacke.h	11390;"	d
LAPACK_zhegvx	plugin/Eigen/src/misc/lapacke.h	11394;"	d
LAPACK_zherfs	plugin/Eigen/src/misc/lapacke.h	10818;"	d
LAPACK_zherfsx	plugin/Eigen/src/misc/lapacke.h	10819;"	d
LAPACK_zhesv	plugin/Eigen/src/misc/lapacke.h	11002;"	d
LAPACK_zhesvx	plugin/Eigen/src/misc/lapacke.h	11004;"	d
LAPACK_zhesvxx	plugin/Eigen/src/misc/lapacke.h	11005;"	d
LAPACK_zheswapr	plugin/Eigen/src/misc/lapacke.h	11599;"	d
LAPACK_zhetrd	plugin/Eigen/src/misc/lapacke.h	11120;"	d
LAPACK_zhetrf	plugin/Eigen/src/misc/lapacke.h	10654;"	d
LAPACK_zhetri	plugin/Eigen/src/misc/lapacke.h	10860;"	d
LAPACK_zhetri2	plugin/Eigen/src/misc/lapacke.h	11600;"	d
LAPACK_zhetri2x	plugin/Eigen/src/misc/lapacke.h	11601;"	d
LAPACK_zhetrs	plugin/Eigen/src/misc/lapacke.h	10698;"	d
LAPACK_zhetrs2	plugin/Eigen/src/misc/lapacke.h	11602;"	d
LAPACK_zhfrk	plugin/Eigen/src/misc/lapacke.h	11437;"	d
LAPACK_zhgeqz	plugin/Eigen/src/misc/lapacke.h	11250;"	d
LAPACK_zhpcon	plugin/Eigen/src/misc/lapacke.h	10756;"	d
LAPACK_zhpev	plugin/Eigen/src/misc/lapacke.h	11322;"	d
LAPACK_zhpevd	plugin/Eigen/src/misc/lapacke.h	11326;"	d
LAPACK_zhpevx	plugin/Eigen/src/misc/lapacke.h	11330;"	d
LAPACK_zhpgst	plugin/Eigen/src/misc/lapacke.h	11178;"	d
LAPACK_zhpgv	plugin/Eigen/src/misc/lapacke.h	11398;"	d
LAPACK_zhpgvd	plugin/Eigen/src/misc/lapacke.h	11402;"	d
LAPACK_zhpgvx	plugin/Eigen/src/misc/lapacke.h	11406;"	d
LAPACK_zhprfs	plugin/Eigen/src/misc/lapacke.h	10826;"	d
LAPACK_zhpsv	plugin/Eigen/src/misc/lapacke.h	11016;"	d
LAPACK_zhpsvx	plugin/Eigen/src/misc/lapacke.h	11018;"	d
LAPACK_zhptrd	plugin/Eigen/src/misc/lapacke.h	11132;"	d
LAPACK_zhptrf	plugin/Eigen/src/misc/lapacke.h	10660;"	d
LAPACK_zhptri	plugin/Eigen/src/misc/lapacke.h	10866;"	d
LAPACK_zhptrs	plugin/Eigen/src/misc/lapacke.h	10704;"	d
LAPACK_zhsein	plugin/Eigen/src/misc/lapacke.h	11214;"	d
LAPACK_zhseqr	plugin/Eigen/src/misc/lapacke.h	11210;"	d
LAPACK_zlacgv	plugin/Eigen/src/misc/lapacke.h	11472;"	d
LAPACK_zlacpy	plugin/Eigen/src/misc/lapacke.h	11484;"	d
LAPACK_zlag2c	plugin/Eigen/src/misc/lapacke.h	11536;"	d
LAPACK_zlagge	plugin/Eigen/src/misc/lapacke.h	11544;"	d
LAPACK_zlaghe	plugin/Eigen/src/misc/lapacke.h	11556;"	d
LAPACK_zlagsy	plugin/Eigen/src/misc/lapacke.h	11554;"	d
LAPACK_zlange	plugin/Eigen/src/misc/lapacke.h	11496;"	d
LAPACK_zlanhe	plugin/Eigen/src/misc/lapacke.h	11498;"	d
LAPACK_zlansy	plugin/Eigen/src/misc/lapacke.h	11502;"	d
LAPACK_zlantr	plugin/Eigen/src/misc/lapacke.h	11506;"	d
LAPACK_zlapmr	plugin/Eigen/src/misc/lapacke.h	11560;"	d
LAPACK_zlarfb	plugin/Eigen/src/misc/lapacke.h	11516;"	d
LAPACK_zlarfg	plugin/Eigen/src/misc/lapacke.h	11520;"	d
LAPACK_zlarft	plugin/Eigen/src/misc/lapacke.h	11524;"	d
LAPACK_zlarfx	plugin/Eigen/src/misc/lapacke.h	11528;"	d
LAPACK_zlarnv	plugin/Eigen/src/misc/lapacke.h	11476;"	d
LAPACK_zlaset	plugin/Eigen/src/misc/lapacke.h	11548;"	d
LAPACK_zlaswp	plugin/Eigen/src/misc/lapacke.h	11492;"	d
LAPACK_zlatms	plugin/Eigen/src/misc/lapacke.h	11532;"	d
LAPACK_zlauum	plugin/Eigen/src/misc/lapacke.h	11540;"	d
LAPACK_zpbcon	plugin/Eigen/src/misc/lapacke.h	10740;"	d
LAPACK_zpbequ	plugin/Eigen/src/misc/lapacke.h	10910;"	d
LAPACK_zpbrfs	plugin/Eigen/src/misc/lapacke.h	10804;"	d
LAPACK_zpbstf	plugin/Eigen/src/misc/lapacke.h	11186;"	d
LAPACK_zpbsv	plugin/Eigen/src/misc/lapacke.h	10976;"	d
LAPACK_zpbsvx	plugin/Eigen/src/misc/lapacke.h	10980;"	d
LAPACK_zpbtrf	plugin/Eigen/src/misc/lapacke.h	10644;"	d
LAPACK_zpbtrs	plugin/Eigen/src/misc/lapacke.h	10688;"	d
LAPACK_zpftrf	plugin/Eigen/src/misc/lapacke.h	10635;"	d
LAPACK_zpftri	plugin/Eigen/src/misc/lapacke.h	10849;"	d
LAPACK_zpftrs	plugin/Eigen/src/misc/lapacke.h	10679;"	d
LAPACK_zpocon	plugin/Eigen/src/misc/lapacke.h	10732;"	d
LAPACK_zpoequ	plugin/Eigen/src/misc/lapacke.h	10898;"	d
LAPACK_zpoequb	plugin/Eigen/src/misc/lapacke.h	10901;"	d
LAPACK_zporfs	plugin/Eigen/src/misc/lapacke.h	10792;"	d
LAPACK_zporfsx	plugin/Eigen/src/misc/lapacke.h	10795;"	d
LAPACK_zposv	plugin/Eigen/src/misc/lapacke.h	10954;"	d
LAPACK_zposvx	plugin/Eigen/src/misc/lapacke.h	10960;"	d
LAPACK_zposvxx	plugin/Eigen/src/misc/lapacke.h	10963;"	d
LAPACK_zpotrf	plugin/Eigen/src/misc/lapacke.h	10628;"	d
LAPACK_zpotri	plugin/Eigen/src/misc/lapacke.h	10846;"	d
LAPACK_zpotrs	plugin/Eigen/src/misc/lapacke.h	10676;"	d
LAPACK_zppcon	plugin/Eigen/src/misc/lapacke.h	10736;"	d
LAPACK_zppequ	plugin/Eigen/src/misc/lapacke.h	10906;"	d
LAPACK_zpprfs	plugin/Eigen/src/misc/lapacke.h	10800;"	d
LAPACK_zppsv	plugin/Eigen/src/misc/lapacke.h	10968;"	d
LAPACK_zppsvx	plugin/Eigen/src/misc/lapacke.h	10972;"	d
LAPACK_zpptrf	plugin/Eigen/src/misc/lapacke.h	10640;"	d
LAPACK_zpptri	plugin/Eigen/src/misc/lapacke.h	10854;"	d
LAPACK_zpptrs	plugin/Eigen/src/misc/lapacke.h	10684;"	d
LAPACK_zpstrf	plugin/Eigen/src/misc/lapacke.h	10631;"	d
LAPACK_zptcon	plugin/Eigen/src/misc/lapacke.h	10744;"	d
LAPACK_zpteqr	plugin/Eigen/src/misc/lapacke.h	11162;"	d
LAPACK_zptrfs	plugin/Eigen/src/misc/lapacke.h	10808;"	d
LAPACK_zptsv	plugin/Eigen/src/misc/lapacke.h	10984;"	d
LAPACK_zptsvx	plugin/Eigen/src/misc/lapacke.h	10988;"	d
LAPACK_zpttrf	plugin/Eigen/src/misc/lapacke.h	10648;"	d
LAPACK_zpttrs	plugin/Eigen/src/misc/lapacke.h	10692;"	d
LAPACK_zspcon	plugin/Eigen/src/misc/lapacke.h	10754;"	d
LAPACK_zsprfs	plugin/Eigen/src/misc/lapacke.h	10824;"	d
LAPACK_zspsv	plugin/Eigen/src/misc/lapacke.h	11010;"	d
LAPACK_zspsvx	plugin/Eigen/src/misc/lapacke.h	11014;"	d
LAPACK_zsptrf	plugin/Eigen/src/misc/lapacke.h	10658;"	d
LAPACK_zsptri	plugin/Eigen/src/misc/lapacke.h	10864;"	d
LAPACK_zsptrs	plugin/Eigen/src/misc/lapacke.h	10702;"	d
LAPACK_zstedc	plugin/Eigen/src/misc/lapacke.h	11154;"	d
LAPACK_zstegr	plugin/Eigen/src/misc/lapacke.h	11158;"	d
LAPACK_zstein	plugin/Eigen/src/misc/lapacke.h	11168;"	d
LAPACK_zstemr	plugin/Eigen/src/misc/lapacke.h	11150;"	d
LAPACK_zsteqr	plugin/Eigen/src/misc/lapacke.h	11146;"	d
LAPACK_zsycon	plugin/Eigen/src/misc/lapacke.h	10748;"	d
LAPACK_zsyconv	plugin/Eigen/src/misc/lapacke.h	11603;"	d
LAPACK_zsyequb	plugin/Eigen/src/misc/lapacke.h	10913;"	d
LAPACK_zsyr	plugin/Eigen/src/misc/lapacke.h	11644;"	d
LAPACK_zsyrfs	plugin/Eigen/src/misc/lapacke.h	10812;"	d
LAPACK_zsyrfsx	plugin/Eigen/src/misc/lapacke.h	10815;"	d
LAPACK_zsysv	plugin/Eigen/src/misc/lapacke.h	10992;"	d
LAPACK_zsysvx	plugin/Eigen/src/misc/lapacke.h	10996;"	d
LAPACK_zsysvxx	plugin/Eigen/src/misc/lapacke.h	10999;"	d
LAPACK_zsyswapr	plugin/Eigen/src/misc/lapacke.h	11604;"	d
LAPACK_zsytrf	plugin/Eigen/src/misc/lapacke.h	10652;"	d
LAPACK_zsytri	plugin/Eigen/src/misc/lapacke.h	10858;"	d
LAPACK_zsytri2	plugin/Eigen/src/misc/lapacke.h	11605;"	d
LAPACK_zsytri2x	plugin/Eigen/src/misc/lapacke.h	11606;"	d
LAPACK_zsytrs	plugin/Eigen/src/misc/lapacke.h	10696;"	d
LAPACK_zsytrs2	plugin/Eigen/src/misc/lapacke.h	11607;"	d
LAPACK_ztbcon	plugin/Eigen/src/misc/lapacke.h	10768;"	d
LAPACK_ztbrfs	plugin/Eigen/src/misc/lapacke.h	10838;"	d
LAPACK_ztbtrs	plugin/Eigen/src/misc/lapacke.h	10716;"	d
LAPACK_ztfsm	plugin/Eigen/src/misc/lapacke.h	11441;"	d
LAPACK_ztftri	plugin/Eigen/src/misc/lapacke.h	10873;"	d
LAPACK_ztfttp	plugin/Eigen/src/misc/lapacke.h	11445;"	d
LAPACK_ztfttr	plugin/Eigen/src/misc/lapacke.h	11449;"	d
LAPACK_ztgevc	plugin/Eigen/src/misc/lapacke.h	11254;"	d
LAPACK_ztgexc	plugin/Eigen/src/misc/lapacke.h	11258;"	d
LAPACK_ztgsen	plugin/Eigen/src/misc/lapacke.h	11262;"	d
LAPACK_ztgsja	plugin/Eigen/src/misc/lapacke.h	11278;"	d
LAPACK_ztgsna	plugin/Eigen/src/misc/lapacke.h	11270;"	d
LAPACK_ztgsyl	plugin/Eigen/src/misc/lapacke.h	11266;"	d
LAPACK_ztpcon	plugin/Eigen/src/misc/lapacke.h	10764;"	d
LAPACK_ztpmqrt	plugin/Eigen/src/misc/lapacke.h	11630;"	d
LAPACK_ztpqrt	plugin/Eigen/src/misc/lapacke.h	11633;"	d
LAPACK_ztpqrt2	plugin/Eigen/src/misc/lapacke.h	11637;"	d
LAPACK_ztprfb	plugin/Eigen/src/misc/lapacke.h	11641;"	d
LAPACK_ztprfs	plugin/Eigen/src/misc/lapacke.h	10834;"	d
LAPACK_ztptri	plugin/Eigen/src/misc/lapacke.h	10878;"	d
LAPACK_ztptrs	plugin/Eigen/src/misc/lapacke.h	10712;"	d
LAPACK_ztpttf	plugin/Eigen/src/misc/lapacke.h	11453;"	d
LAPACK_ztpttr	plugin/Eigen/src/misc/lapacke.h	11457;"	d
LAPACK_ztrcon	plugin/Eigen/src/misc/lapacke.h	10760;"	d
LAPACK_ztrevc	plugin/Eigen/src/misc/lapacke.h	11218;"	d
LAPACK_ztrexc	plugin/Eigen/src/misc/lapacke.h	11226;"	d
LAPACK_ztrrfs	plugin/Eigen/src/misc/lapacke.h	10830;"	d
LAPACK_ztrsen	plugin/Eigen/src/misc/lapacke.h	11230;"	d
LAPACK_ztrsna	plugin/Eigen/src/misc/lapacke.h	11222;"	d
LAPACK_ztrsyl	plugin/Eigen/src/misc/lapacke.h	11234;"	d
LAPACK_ztrtri	plugin/Eigen/src/misc/lapacke.h	10870;"	d
LAPACK_ztrtrs	plugin/Eigen/src/misc/lapacke.h	10708;"	d
LAPACK_ztrttf	plugin/Eigen/src/misc/lapacke.h	11461;"	d
LAPACK_ztrttp	plugin/Eigen/src/misc/lapacke.h	11465;"	d
LAPACK_ztzrzf	plugin/Eigen/src/misc/lapacke.h	11078;"	d
LAPACK_zunbdb	plugin/Eigen/src/misc/lapacke.h	11608;"	d
LAPACK_zuncsd	plugin/Eigen/src/misc/lapacke.h	11609;"	d
LAPACK_zungbr	plugin/Eigen/src/misc/lapacke.h	11104;"	d
LAPACK_zunghr	plugin/Eigen/src/misc/lapacke.h	11196;"	d
LAPACK_zunglq	plugin/Eigen/src/misc/lapacke.h	11048;"	d
LAPACK_zungql	plugin/Eigen/src/misc/lapacke.h	11058;"	d
LAPACK_zungqr	plugin/Eigen/src/misc/lapacke.h	11036;"	d
LAPACK_zungrq	plugin/Eigen/src/misc/lapacke.h	11070;"	d
LAPACK_zungtr	plugin/Eigen/src/misc/lapacke.h	11122;"	d
LAPACK_zunmbr	plugin/Eigen/src/misc/lapacke.h	11106;"	d
LAPACK_zunmhr	plugin/Eigen/src/misc/lapacke.h	11198;"	d
LAPACK_zunmlq	plugin/Eigen/src/misc/lapacke.h	11050;"	d
LAPACK_zunmql	plugin/Eigen/src/misc/lapacke.h	11062;"	d
LAPACK_zunmqr	plugin/Eigen/src/misc/lapacke.h	11038;"	d
LAPACK_zunmrq	plugin/Eigen/src/misc/lapacke.h	11074;"	d
LAPACK_zunmrz	plugin/Eigen/src/misc/lapacke.h	11082;"	d
LAPACK_zunmtr	plugin/Eigen/src/misc/lapacke.h	11124;"	d
LAPACK_zupgtr	plugin/Eigen/src/misc/lapacke.h	11134;"	d
LAPACK_zupmtr	plugin/Eigen/src/misc/lapacke.h	11136;"	d
LAYER_TYPE	include/darknet.h	/^} LAYER_TYPE;$/;"	t	typeref:enum:__anon728
LDFLAGS	Makefile	/^LDFLAGS= -L\/home\/lucas\/Project\/ZCU102\/source\/bsp\/petalinux_2017-4\/tools\/linux-i386\/aarch64-linux-gnu\/aarch64-linux-gnu\/libc\/usr\/lib\/ -lm -pthread$/;"	m
LDFLAGS	Makefile	/^LDFLAGS= -lm -pthread$/;"	m
LDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^    LDLT()$/;"	f	class:Eigen::LDLT
LDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LDLT
LDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(Index size)$/;"	f	class:Eigen::LDLT
LDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^    explicit LDLT(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LDLT
LDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^template<typename _MatrixType, int _UpLo> class LDLT$/;"	c	namespace:Eigen
LDLTTraits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT<MatrixType,UpLo> > LDLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LDLT_Traits	plugin/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LDLT_Traits	plugin/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LEAKY	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
LETTERBOX_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
LHTAN	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
LINEAR	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
LIST_H	src/list.h	2;"	d
LLT	plugin/Eigen/src/Cholesky/LLT.h	/^    LLT() : m_matrix(), m_isInitialized(false) {}$/;"	f	class:Eigen::LLT
LLT	plugin/Eigen/src/Cholesky/LLT.h	/^    explicit LLT(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LLT
LLT	plugin/Eigen/src/Cholesky/LLT.h	/^    explicit LLT(Index size) : m_matrix(size, size),$/;"	f	class:Eigen::LLT
LLT	plugin/Eigen/src/Cholesky/LLT.h	/^    explicit LLT(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::LLT
LLT	plugin/Eigen/src/Cholesky/LLT.h	/^template<typename _MatrixType, int _UpLo> class LLT$/;"	c	namespace:Eigen
LLTTraits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT<MatrixType,UpLo>  > LLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LLT_Traits	plugin/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LLT_Traits	plugin/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLVL	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
LMatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType, Lower|UnitDiag>  LMatrixType;$/;"	t	class:Eigen::SuperLU
LOCAL	include/darknet.h	/^    LOCAL,$/;"	e	enum:__anon728
LOCAL_LAYER_H	src/local_layer.h	2;"	d
LOGGY	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
LOGISTIC	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
LSTM	include/darknet.h	/^    LSTM,$/;"	e	enum:__anon728
LSTM_LAYER_H	src/lstm_layer.h	2;"	d
LSUB	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
LUMatrixType	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::KLU
LUMatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::SuperLUBase
LUMatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::LUMatrixType LUMatrixType;$/;"	t	class:Eigen::SuperLU
LUMatrixType	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::UmfPackLU
LUNoMarker	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum { LUNoMarker = 3 };$/;"	e	enum:Eigen::internal::__anon114
LUSUP	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
LUTempSpace	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUTempSpace(Index&m, Index& w)$/;"	f	namespace:Eigen::internal
LU_GlobalLU_t	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct LU_GlobalLU_t {$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <> struct LU_kernel_bmod<1>$/;"	s	namespace:Eigen::internal
LU_kernel_bmod	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^template <int SegSizeAtCompileTime> struct LU_kernel_bmod$/;"	s	namespace:Eigen::internal
LUnumTempV	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^inline Index LUnumTempV(Index& m, Index& w, Index& t, Index& b)$/;"	f	namespace:Eigen::internal
Large	plugin/Eigen/src/Core/GeneralProduct.h	/^  Large = 2,$/;"	e	enum:Eigen::__anon526
LargeEnough	plugin/Eigen/src/Core/Assign_MKL.h	/^      LargeEnough = VmlSize==Dynamic || VmlSize>=EIGEN_MKL_VML_THRESHOLD$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
LazyCoeffBasedProductMode	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
LazyProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
LeastSquareDiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner() : Base() {}$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    explicit LeastSquareDiagonalPreconditioner(const MatType& mat) : Base()$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
LeastSquareDiagonalPreconditioner	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class LeastSquareDiagonalPreconditioner : public DiagonalPreconditioner<_Scalar>$/;"	c	namespace:Eigen
LeastSquaresConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  LeastSquaresConjugateGradient() : Base() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  explicit LeastSquaresConjugateGradient(const EigenBase<MatrixDerived>& A) : Base(A.derived()) {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
LeastSquaresConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^class LeastSquaresConjugateGradient : public IterativeSolverBase<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
LgammaReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_lgamma_op<Scalar>, const Derived> LgammaReturnType;$/;"	t
Lhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<LhsType>::type Lhs;$/;"	t	class:Eigen::CwiseBinaryOp
Lhs	plugin/Eigen/src/Core/Product.h	/^    typedef _Lhs Lhs;$/;"	t	class:Eigen::Product
Lhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,LhsMode,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<SparseLhsType>::type Lhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Lhs1	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename conditional<NeedToTranspose,RhsT,LhsT>::type Lhs1;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsAlignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsAlignment = EIGEN_PLAIN_ENUM_MIN(LhsEtorType::Alignment,LhsVecPacketSize*int(sizeof(typename LhsNestedCleaned::Scalar))),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsArg	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Lhs LhsArg;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsArg	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^            Lhs1 const&, SparseView<Lhs1> >::type LhsArg;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsBlasTraits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsBlasTraits	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsBlasTraits	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Lhs> LhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
LhsCleaned	plugin/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::traits
LhsCleaned	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
LhsCoeffReadCost	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsCoeffReadCost = LhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsEtorType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<LhsNestedCleaned> LhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
LhsEval	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualLhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsEval	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsEval	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef evaluator<Lhs> LhsEval;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsEvaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<LhsArg> LhsEvaluator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsFlags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    LhsFlags = evaluator<Lhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
LhsFlags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsFlags = LhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsInnerIterator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename LhsEval::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsInnerIterator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsIsSelfAdjoint	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsSelfAdjoint = (LhsMode&SelfAdjoint)==SelfAdjoint,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon292
LhsIsUpper	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsUpper = (LhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon292
LhsIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Lhs>::InnerIterator  LhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
LhsIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<LhsArg>::InnerIterator  LhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<LhsArg>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
LhsIterator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename evaluator<ActualLhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
LhsIterator	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename evaluator<Lhs>::InnerIterator LhsIterator;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
LhsMatrixType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename take_matrix_for_product<Lhs>::type LhsMatrixType;$/;"	t	struct:Eigen::internal::traits
LhsMatrixType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<homogeneous_left_product_impl>::LhsMatrixType LhsMatrixType;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
LhsMatrixTypeNested	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename LhsMatrixTypeCleaned::Nested>::type LhsMatrixTypeNested;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<LhsType>::type LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
LhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Lhs>::type LhsNested;$/;"	t	class:Eigen::Product
LhsNested	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Lhs,Rhs::ColsAtCompileTime>::type LhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
LhsNested	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<Lhs,1>::type LhsNested;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsNestedCleaned	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	class:Eigen::Product
LhsNestedCleaned	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
LhsOuterStrideBytes	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsOuterStrideBytes = int(LhsNestedCleaned::OuterStrideAtCompileTime) * int(sizeof(typename LhsNestedCleaned::Scalar)),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::LhsPacket LhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
LhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,RealPacket,  Scalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon299
LhsPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon300
LhsProductTraits	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef blas_traits<Lhs> LhsProductTraits;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress   = Traits::LhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon311
LhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
LhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
LhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
LhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
LhsRowMajor	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsRowMajor = LhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsScalar	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar> LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
LhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_RhsScalar,_LhsScalar>::type LhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
LhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
LhsTraits	plugin/Eigen/src/Core/Product.h	/^  typedef traits<LhsCleaned> LhsTraits;$/;"	t	struct:Eigen::internal::traits
LhsUpLo	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { LhsUpLo = LhsMode&(Upper|Lower) };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon293
LhsVecPacketSize	plugin/Eigen/src/Core/ProductEvaluators.h	/^    LhsVecPacketSize = unpacket_traits<LhsVecPacketType>::size,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
LhsVecPacketType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename find_best_packet<Scalar,RowsAtCompileTime>::type LhsVecPacketType;$/;"	t	struct:Eigen::internal::product_evaluator
LinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinearAccess	plugin/Eigen/src/Core/CoreEvaluators.h	/^    LinearAccess = ( (Direction==BothDirections) && (int(Flags0)&PacketAccessBit) )$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
LinearAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int LinearAccessBit = 0x10;$/;"	m	namespace:Eigen
LinearAccessMask	plugin/Eigen/src/Core/CoreEvaluators.h	/^    LinearAccessMask = XprType::IsVectorAtCompileTime ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon516
LinearAccessMask	plugin/Eigen/src/Core/CoreEvaluators.h	/^    LinearAccessMask = bool(HasNoStride) || bool(PlainObjectType::IsVectorAtCompileTime) ? ~int(0) : ~int(LinearAccessBit),$/;"	e	enum:Eigen::internal::evaluator::__anon510
LinearBlock	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlock	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_const<LinearBlockConst>::type                 LinearBlock;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearBlockConst	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Lhs::template ConstNColsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearBlockConst	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename Rhs::template ConstNRowsBlockXpr<Dim>::Type          LinearBlockConst;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearMapper	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gebp_kernel
LinearMapper	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_lhs
LinearMapper	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename DataMapper::LinearMapper LinearMapper;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
LinearMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasLinearMapper<Scalar, Index, AlignmentType> LinearMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
LinearMatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim,Options> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	plugin/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearPacketSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    LinearPacketSize = unpacket_traits<LinearPacketType>::size,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon491
LinearPacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename find_best_packet<DstScalar,Dst::SizeAtCompileTime>::type LinearPacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
LinearPart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim,int(Mode)==(AffineCompact) && (Options&RowMajor)==0> LinearPart;$/;"	t	class:Eigen::Transform
LinearProduct	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs,LinearBlock,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
LinearProduct	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<LinearBlock,Rhs,LazyProduct>                          LinearProduct;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
LinearRequiredAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    LinearRequiredAlignment = unpacket_traits<LinearPacketType>::alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon492
LinearTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  LinearTraversal,$/;"	e	enum:Eigen::TraversalType
LinearVectorizedTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  LinearVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
ListEl	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    struct ListEl$/;"	s	class:Eigen::internal::AmbiVector
Literal	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename NumTraits<RealScalar>::Literal Literal;$/;"	t	class:Eigen::BDCSVD
Log10ReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log10_op<Scalar>, const Derived> Log10ReturnType;$/;"	t
Log1pReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log1p_op<Scalar>, const Derived> Log1pReturnType;$/;"	t
LogReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_log_op<Scalar>, const Derived> LogReturnType;$/;"	t
Lower	plugin/Eigen/src/Core/util/Constants.h	/^  Lower=0x1,                      $/;"	e	enum:Eigen::UpLoType
LpNormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    template<int p> struct LpNormReturnType {$/;"	s	class:Eigen::VectorwiseOp
LuType	plugin/Eigen/src/LU/FullPivLU.h	/^  typedef FullPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LuType	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef PartialPivLU<MatrixType> LuType;$/;"	t	struct:Eigen::internal::Assignment
LvalueBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int LvalueBit = 0x20;$/;"	m	namespace:Eigen
LvalueBitFlag	plugin/Eigen/src/Core/ArrayWrapper.h	/^    LvalueBitFlag = is_lvalue<ExpressionType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon522
LvalueBitFlag	plugin/Eigen/src/Core/ArrayWrapper.h	/^    LvalueBitFlag = is_lvalue<ExpressionType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon523
MASKED	include/darknet.h	/^    SSE, MASKED, L1, SEG, SMOOTH$/;"	e	enum:__anon729
MATRIX_FREE_CONJUGATE_GRADIENT_IS_COMPATIBLE_WITH_UPPER_UNION_LOWER_MODE_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        MATRIX_FREE_CONJUGATE_GRADIENT_IS_COMPATIBLE_WITH_UPPER_UNION_LOWER_MODE_ONLY=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
MATRIX_H	src/matrix.h	2;"	d
MAXPOOL	include/darknet.h	/^    MAXPOOL,$/;"	e	enum:__anon728
MAXPOOL_LAYER_H	src/maxpool_layer.h	2;"	d
METADATA	python/darknet.py	/^class METADATA(Structure):$/;"	c
METIS_SUPPORT_H	plugin/Eigen/src/MetisSupport/MetisSupport.h	10;"	d
MKL_DIRECT_CALL	plugin/Eigen/src/Core/util/MKL_support.h	59;"	d
MKL_DIRECT_CALL	plugin/Eigen/src/Core/util/MKL_support.h	77;"	d
MKL_DIRECT_CALL_JUST_SET	plugin/Eigen/src/Core/util/MKL_support.h	60;"	d
MULT	include/darknet.h	/^    MULT, ADD, SUB, DIV$/;"	e	enum:__anon727
Map	plugin/Eigen/src/Core/Map.h	/^    explicit inline Map(PointerArgType dataPtr, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index rows, Index cols, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType dataPtr, Index size, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/Map.h	/^template<typename PlainObjectType, int MapOptions, typename StrideType> class Map$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/PermutationMatrix.h	/^class Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess>$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	plugin/Eigen/src/Core/Transpositions.h	/^    explicit inline Map(const StorageIndex* indicesPtr)$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/Transpositions.h	/^    inline Map(const StorageIndex* indicesPtr, Index size)$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Core/Transpositions.h	/^class Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,PacketAccess>$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC explicit EIGEN_STRONG_INLINE Map(Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC explicit EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/Geometry/Quaternion.h	/^class Map<Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/Geometry/Quaternion.h	/^class Map<const Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Map(Index rows, Index cols, Index nnz, const StorageIndex* outerIndexPtr,$/;"	f	class:Eigen::Map
Map	plugin/Eigen/src/SparseCore/SparseMap.h	/^class Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/SparseCore/SparseMap.h	/^class Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Map	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::SparseMatrix
Map	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(MatrixBase<MatrixType>& _mat)$/;"	f	struct:Eigen::SluMatrix
Map	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(SparseMatrixBase<MatrixType>& a_mat)$/;"	f	struct:Eigen::SluMatrix
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC explicit inline MapBase(PointerType dataPtr) : Base(dataPtr) {}$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index rows, Index cols) : Base(dataPtr, rows, cols) {}$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline MapBase(PointerType dataPtr, Index vecSize) : Base(dataPtr, vecSize) {}$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    explicit inline MapBase(PointerType dataPtr) : m_data(dataPtr), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index rows, Index cols)$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType dataPtr, Index vecSize)$/;"	f	class:Eigen::MapBase
MapBase	plugin/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
MapBase	plugin/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, WriteAccessors>$/;"	c	namespace:Eigen
MapLU	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef Map<Matrix<Scalar, Dynamic, Dynamic, StorageOrder> > MapLU;$/;"	t	struct:Eigen::internal::partial_lu_impl
MapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Unaligned>  MapType;$/;"	t	class:Eigen::PlainObjectBase
MapType	src/vec_gemm.cpp	/^typedef Map<MatrixType> MapType;$/;"	t	file:
MappedMatrixBlock	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Map<ScalarMatrix, 0,  OuterStride<> > MappedMatrixBlock;$/;"	t	class:Eigen::internal::SparseLUImpl
MappedRhs	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;$/;"	t	struct:Eigen::internal::triangular_solver_selector
MappedSparseMatrix	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline MappedSparseMatrix(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr, Scalar* valuePtr, StorageIndex* innerNonZeroPtr = 0)$/;"	f	class:Eigen::MappedSparseMatrix
MappedSparseMatrix	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix$/;"	c	namespace:Eigen
MappedSuperNodalMatrix	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    MappedSuperNodalMatrix(Index m, Index n,  ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
MappedSuperNodalMatrix	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^class MappedSuperNodalMatrix$/;"	c	namespace:Eigen::internal
MaskLvalueBit	plugin/Eigen/src/Core/Diagonal.h	/^    MaskLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon346
MaskPacketAccessBit	plugin/Eigen/src/Core/CoreEvaluators.h	/^    MaskPacketAccessBit = (InnerStrideAtCompileTime == 1 || HasSameStorageOrderAsArgType) ? PacketAccessBit : 0,$/;"	e	enum:Eigen::internal::evaluator::__anon512
MatchAtCompileTime	plugin/Eigen/src/Core/Ref.h	/^      MatchAtCompileTime = HasDirectAccess && StorageOrderMatch && InnerStrideMatch && OuterStrideMatch && AlignmentMatch && ScalarTypeMatch$/;"	e	enum:Eigen::internal::traits::match::__anon561
MatchAtCompileTime	plugin/Eigen/src/SparseCore/SparseRef.h	/^      MatchAtCompileTime = (Derived::Flags&CompressedAccessBit) && Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon99
MatchAtCompileTime	plugin/Eigen/src/SparseCore/SparseRef.h	/^      MatchAtCompileTime = (Derived::Flags&CompressedAccessBit) && StorageOrderMatch$/;"	e	enum:Eigen::internal::traits::match::__anon96
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix() : Base()$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Matrix& other) : Base(other)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix(const T& x)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^    explicit Matrix(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Matrix
Matrix	plugin/Eigen/src/Core/Matrix.h	/^class Matrix$/;"	c	namespace:Eigen
Matrix	plugin/Eigen/src/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix2	plugin/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2s	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,2> Matrix2s;$/;"	t	class:Eigen::RealQZ
Matrix3	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::QuaternionBase
MatrixAlignment	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon160
MatrixAlignment	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = traits<MatrixType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon161
MatrixBase	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase() : Base() {}$/;"	f	class:Eigen::MatrixBase
MatrixBase	plugin/Eigen/src/Core/MatrixBase.h	/^template<typename Derived> class MatrixBase$/;"	c	namespace:Eigen
MatrixCols	plugin/Eigen/src/Core/Block.h	/^    MatrixCols = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon562
MatrixConjugateReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::SelfAdjointView
MatrixConjugateReturnType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::TriangularView
MatrixFlags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    MatrixFlags = evaluator<MatrixType>::Flags,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
MatrixFree	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MatrixFree = false$/;"	e	enum:Eigen::internal::generic_matrix_wrapper::__anon108
MatrixFree	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MatrixFree = true$/;"	e	enum:Eigen::internal::generic_matrix_wrapper::__anon109
MatrixHReturnType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef internal::HessenbergDecompositionMatrixHReturnType<MatrixType> MatrixHReturnType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixL	plugin/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	plugin/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	plugin/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	plugin/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLDLT
MatrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLLT
MatrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::Lower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const CholMatrixType, Eigen::UnitLower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixOptions	plugin/Eigen/src/SVD/BDCSVD.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::BDCSVD::__anon139
MatrixOptions	plugin/Eigen/src/SVD/JacobiSVD.h	/^      MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::JacobiSVD::__anon138
MatrixOptions	plugin/Eigen/src/SVD/SVDBase.h	/^    MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::SVDBase::__anon131
MatrixQReturnType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef internal::FullPivHouseholderQRMatrixQReturnType<MatrixType> MatrixQReturnType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixQType	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, (MatrixType::Flags&RowMajorBit) ? RowMajor : ColMajor, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::HouseholderQR
MatrixRows	plugin/Eigen/src/Core/Block.h	/^    MatrixRows = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon562
MatrixTReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef internal::TridiagonalizationMatrixTReturnType<MatrixTypeRealView> MatrixTReturnType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LDLT
MatrixType	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LLT
MatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodBase
MatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodDecomposition
MatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLDLT
MatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLLT
MatrixType	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSupernodalLLT
MatrixType	plugin/Eigen/src/Core/ProductEvaluators.h	/^    typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<typename internal::conditional<int(Side)==OnTheRight,LhsNested,RhsNested>::type>::type MatrixType;$/;"	t	struct:Eigen::internal::generic_product_impl
MatrixType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointView
MatrixType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularView
MatrixType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularViewImpl
MatrixType	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexEigenSolver
MatrixType	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexSchur
MatrixType	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::EigenSolver
MatrixType	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedEigenSolver
MatrixType	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
MatrixType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixType	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealQZ
MatrixType	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealSchur
MatrixType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
MatrixType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
MatrixType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename Transform<Scalar,Dim,AffineCompact,Options>::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
MatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename internal::make_proper_matrix_type<Scalar,Rows,HDim,Options>::type MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BiCGSTAB
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ConjugateGradient
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::IterativeSolverBase
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
MatrixType	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::KLU
MatrixType	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivLU
MatrixType	plugin/Eigen/src/LU/PartialPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PartialPivLU
MatrixType	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MapLU, Dynamic, Dynamic> MatrixType;$/;"	t	struct:Eigen::internal::partial_lu_impl
MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixBase
MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLDLT
MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLLT
MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLU
MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pastix_traits
MatrixType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pardiso_traits
MatrixType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::MatrixType MatrixType;$/;"	t	class:Eigen::PardisoImpl
MatrixType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
MatrixType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixType	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HouseholderQR
MatrixType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor, StorageIndex> MatrixType;$/;"	t	class:Eigen::SPQR
MatrixType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BDCSVD
MatrixType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::JacobiSVD
MatrixType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SVDBase
MatrixType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
MatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholesky
MatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLDLT
MatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLLT
MatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
MatrixType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar, _Options, _StorageIndex> MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename nested_eval<ExpressionType, 1>::type MatrixType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixType	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Eigen::SparseLU
MatrixType	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> MatrixType; $/;"	t	class:Eigen::internal::SparseLUImpl
MatrixType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SparseQR
MatrixType	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::evaluator_traits
MatrixType	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::QRMatrixType MatrixType;$/;"	t	struct:Eigen::SparseQR_QProduct
MatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperILU
MatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLU
MatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLUBase
MatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Derived MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Matrix<Scalar,Rows,Cols,Options,MRows,MCols> MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::UmfPackLU
MatrixType	plugin/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::image_retval_base
MatrixType	plugin/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	plugin/Eigen/src/misc/Kernel.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	src/vec_gemm.cpp	/^typedef Matrix<float,Dynamic,Dynamic,RowMajor> MatrixType;$/;"	t	file:
MatrixTypeCleaned	plugin/Eigen/src/Core/ProductEvaluators.h	/^    typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeCleaned	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::transposition_matrix_product
MatrixTypeCleaned	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeCleaned	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::permutation_matrix_product
MatrixTypeInnerStride	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeInnerStride =  inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon174
MatrixTypeNested	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryView
MatrixTypeNested	plugin/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/Diagonal.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename internal::ref_selector<XprType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::IndexedView
MatrixTypeNested	plugin/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::Replicate
MatrixTypeNested	plugin/Eigen/src/Core/Replicate.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/Reverse.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNested	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/Transpose.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::Transpose
MatrixTypeNested	plugin/Eigen/src/Core/Transpose.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::TriangularView
MatrixTypeNested	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename ref_selector<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::ref_selector<MatrixType>::non_const_type MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseView
MatrixTypeNestedCleaned	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNestedCleaned	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedNonRef	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedNonRef MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedNonRef	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedNonRef	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularViewImpl
MatrixTypeNestedPlain	plugin/Eigen/src/Core/Transpose.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedPlain;$/;"	t	struct:Eigen::internal::traits
MatrixTypeOuterStride	plugin/Eigen/src/Core/Diagonal.h	/^    MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon346
MatrixTypeRealView	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::remove_all<typename MatrixType::RealReturnType>::type MatrixTypeRealView;$/;"	t	class:Eigen::Tridiagonalization
MatrixU	plugin/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	plugin/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	plugin/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	plugin/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLDLT
MatrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLLT
MatrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef TriangularView<const typename CholMatrixType::AdjointReturnType, Eigen::Upper>   MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixUType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::BDCSVD
MatrixUType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixUType MatrixUType;$/;"	t	class:Eigen::JacobiSVD
MatrixUType	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, MatrixOptions, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixUType;$/;"	t	class:Eigen::SVDBase
MatrixVType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::BDCSVD
MatrixVType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::MatrixVType MatrixVType;$/;"	t	class:Eigen::JacobiSVD
MatrixVType	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef Matrix<Scalar, ColsAtCompileTime, ColsAtCompileTime, MatrixOptions, MaxColsAtCompileTime, MaxColsAtCompileTime> MatrixVType;$/;"	t	class:Eigen::SVDBase
MatrixWrapper	plugin/Eigen/src/Core/ArrayWrapper.h	/^    explicit inline MatrixWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::MatrixWrapper
MatrixWrapper	plugin/Eigen/src/Core/ArrayWrapper.h	/^class MatrixWrapper : public MatrixBase<MatrixWrapper<ExpressionType> >$/;"	c	namespace:Eigen
MatrixWrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef internal::generic_matrix_wrapper<MatrixType> MatrixWrapper;$/;"	t	class:Eigen::IterativeSolverBase
MatrixX	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<Scalar, Dynamic, Dynamic, ColMajor> MatrixX;$/;"	t	class:Eigen::BDCSVD
MatrixXpr	plugin/Eigen/src/Core/util/Constants.h	/^struct MatrixXpr {};$/;"	s	namespace:Eigen
MatrixXr	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, Dynamic, ColMajor> MatrixXr;$/;"	t	class:Eigen::BDCSVD
Max	plugin/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MaxCoeffReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_maxCoeff>::Type MaxCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MaxCols	plugin/Eigen/src/Core/GeneralProduct.h	/^    MaxCols = traits<_Rhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
MaxColsAtCompileTime	plugin/Eigen/src/Cholesky/LDLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon130
MaxColsAtCompileTime	plugin/Eigen/src/Cholesky/LLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::LLT::__anon128
MaxColsAtCompileTime	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::CholmodBase::__anon142
MaxColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
MaxColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon365
MaxColsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon366
MaxColsAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    MaxColsAtCompileTime = BlockCols==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon562
MaxColsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    MaxColsAtCompileTime = traits<XprType>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon512
MaxColsAtCompileTime	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon182
MaxColsAtCompileTime	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon556
MaxColsAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
MaxColsAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon346
MaxColsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon343
MaxColsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon345
MaxColsAtCompileTime	plugin/Eigen/src/Core/IndexedView.h	/^    MaxColsAtCompileTime = ColsAtCompileTime != Dynamic ? int(ColsAtCompileTime) : int(traits<XprType>::MaxColsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon314
MaxColsAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    MaxColsAtCompileTime = _MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon677
MaxColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = PermTraits::MaxColsAtCompileTime$/;"	e	enum:Eigen::InverseImpl::__anon334
MaxColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::PermutationBase::__anon332
MaxColsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^    MaxColsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon333
MaxColsAtCompileTime	plugin/Eigen/src/Core/Product.h	/^    MaxColsAtCompileTime = RhsTraits::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon175
MaxColsAtCompileTime	plugin/Eigen/src/Core/ProductEvaluators.h	/^    MaxColsAtCompileTime = RhsNestedCleaned::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::product_evaluator::__anon318
MaxColsAtCompileTime	plugin/Eigen/src/Core/Redux.h	/^    MaxColsAtCompileTime = XprType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
MaxColsAtCompileTime	plugin/Eigen/src/Core/Replicate.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon349
MaxColsAtCompileTime	plugin/Eigen/src/Core/Reverse.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon335
MaxColsAtCompileTime	plugin/Eigen/src/Core/Select.h	/^    MaxColsAtCompileTime = ConditionMatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon679
MaxColsAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
MaxColsAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    MaxColsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
MaxColsAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
MaxColsAtCompileTime	plugin/Eigen/src/Core/VectorwiseOp.h	/^    MaxColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexEigenSolver::__anon146
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexSchur::__anon151
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::EigenSolver::__anon150
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon152
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealQZ::__anon145
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealSchur::__anon149
MaxColsAtCompileTime	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon144
MaxColsAtCompileTime	plugin/Eigen/src/Geometry/Homogeneous.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon681
MaxColsAtCompileTime	plugin/Eigen/src/Geometry/Transform.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon701
MaxColsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^      MaxColsAtCompileTime = internal::traits<HouseholderSequence>::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderSequence::__anon722
MaxColsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    MaxColsAtCompileTime = MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon721
MaxColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::DiagonalPreconditioner::__anon102
MaxColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::IncompleteCholesky::__anon105
MaxColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::IncompleteLUT::__anon103
MaxColsAtCompileTime	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::IterativeSolverBase::__anon110
MaxColsAtCompileTime	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::KLU::__anon121
MaxColsAtCompileTime	plugin/Eigen/src/LU/FullPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivLU::__anon157
MaxColsAtCompileTime	plugin/Eigen/src/LU/PartialPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PartialPivLU::__anon155
MaxColsAtCompileTime	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PastixBase::__anon31
MaxColsAtCompileTime	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::PardisoImpl::__anon28
MaxColsAtCompileTime	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon719
MaxColsAtCompileTime	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon717
MaxColsAtCompileTime	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon715
MaxColsAtCompileTime	plugin/Eigen/src/QR/HouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderQR::__anon720
MaxColsAtCompileTime	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      MaxColsAtCompileTime = Dynamic$/;"	e	enum:Eigen::SPQR::__anon34
MaxColsAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon139
MaxColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon138
MaxColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon135
MaxColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon136
MaxColsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon137
MaxColsAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon131
MaxColsAtCompileTime	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon163
MaxColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon77
MaxColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon76
MaxColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
MaxColsAtCompileTime	plugin/Eigen/src/SparseCore/SparseVector.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon89
MaxColsAtCompileTime	plugin/Eigen/src/SparseLU/SparseLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SparseLU::__anon112
MaxColsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SparseQR::__anon119
MaxColsAtCompileTime	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SuperLUBase::__anon37
MaxColsAtCompileTime	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::UmfPackLU::__anon143
MaxDepth	plugin/Eigen/src/Core/GeneralProduct.h	/^    MaxDepth = EIGEN_SIZE_MIN_PREFER_FIXED(traits<_Lhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
MaxDepthAtCompileTime	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    MaxDepthAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(Lhs::MaxColsAtCompileTime,Rhs::MaxRowsAtCompileTime)$/;"	e	enum:Eigen::internal::generic_product_impl::__anon298
MaxDiagSizeAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime, MaxColsAtCompileTime), $/;"	e	enum:Eigen::BDCSVD::__anon139
MaxDiagSizeAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon138
MaxDiagSizeAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::SVDBase::__anon131
MaxRows	plugin/Eigen/src/Core/GeneralProduct.h	/^    MaxRows = traits<_Lhs>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
MaxRowsAtCompileTime	plugin/Eigen/src/Cholesky/LDLT.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon130
MaxRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
MaxRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon365
MaxRowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon366
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    MaxRowsAtCompileTime = BlockRows==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon562
MaxRowsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    MaxRowsAtCompileTime = traits<XprType>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon512
MaxRowsAtCompileTime	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
MaxRowsAtCompileTime	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon556
MaxRowsAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    MaxRowsAtCompileTime = int(MatrixType::MaxSizeAtCompileTime) == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon346
MaxRowsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon343
MaxRowsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon345
MaxRowsAtCompileTime	plugin/Eigen/src/Core/IndexedView.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime != Dynamic ? int(RowsAtCompileTime) : int(traits<XprType>::MaxRowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon314
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    MaxRowsAtCompileTime = _MaxRows,$/;"	e	enum:Eigen::internal::traits::__anon677
MaxRowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = PermTraits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon334
MaxRowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon332
MaxRowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^    MaxRowsAtCompileTime = IndicesType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon333
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Product.h	/^    MaxRowsAtCompileTime = LhsTraits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon175
MaxRowsAtCompileTime	plugin/Eigen/src/Core/ProductEvaluators.h	/^    MaxRowsAtCompileTime = LhsNestedCleaned::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon318
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Redux.h	/^    MaxRowsAtCompileTime = XprType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Replicate.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon349
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Reverse.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon335
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Select.h	/^    MaxRowsAtCompileTime = ConditionMatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon679
MaxRowsAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
MaxRowsAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    MaxRowsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
MaxRowsAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
MaxRowsAtCompileTime	plugin/Eigen/src/Core/VectorwiseOp.h	/^    MaxRowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon146
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon151
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon150
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon152
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^        MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon145
MaxRowsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon149
MaxRowsAtCompileTime	plugin/Eigen/src/Geometry/Homogeneous.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon681
MaxRowsAtCompileTime	plugin/Eigen/src/Geometry/Transform.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon701
MaxRowsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^      MaxRowsAtCompileTime = internal::traits<HouseholderSequence>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon722
MaxRowsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    MaxRowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon721
MaxRowsAtCompileTime	plugin/Eigen/src/LU/FullPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon157
MaxRowsAtCompileTime	plugin/Eigen/src/LU/PartialPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon155
MaxRowsAtCompileTime	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon719
MaxRowsAtCompileTime	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon717
MaxRowsAtCompileTime	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon715
MaxRowsAtCompileTime	plugin/Eigen/src/QR/HouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon720
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon139
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon138
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon134
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon135
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon136
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon137
MaxRowsAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon131
MaxRowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon76
MaxRowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon77
MaxRowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
MaxRowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseVector.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon89
MaxSize	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon153
MaxSize	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon148
MaxSizeAtCompileTime	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MaxSizeAtCompileTime = Dst::SizeAtCompileTime$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon490
MaxSizeAtCompileTime	plugin/Eigen/src/Core/Assign_MKL.h	/^      MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
MaxSizeAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
MaxSizeAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
MaxSizeAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
MaxSizeAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
MaxSizeMinusOne	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : MaxSize - 1$/;"	e	enum:Eigen::HessenbergDecomposition::__anon153
MaxSizeMinusOne	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : (MaxSize > 1 ? MaxSize - 1 : 1)$/;"	e	enum:Eigen::Tridiagonalization::__anon148
MaxSmallDimAtCompileTime	plugin/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::image_retval::__anon159
MaxSmallDimAtCompileTime	plugin/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::kernel_retval::__anon158
MayInnerVectorize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MayInnerVectorize  = MightVectorize$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
MayLinearVectorize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MayLinearVectorize = bool(MightVectorize) && bool(MayLinearize) && bool(DstHasDirectAccess)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
MayLinearVectorize	plugin/Eigen/src/Core/Redux.h	/^    MayLinearVectorize = bool(MightVectorize) && (int(Derived::Flags)&LinearAccessBit),$/;"	e	enum:Eigen::internal::redux_traits::__anon369
MayLinearize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MayLinearize = bool(StorageOrdersAgree) && (int(DstFlags) & int(SrcFlags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
MaySliceVectorize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
MaySliceVectorize	plugin/Eigen/src/Core/Redux.h	/^    MaySliceVectorize  = bool(MightVectorize) && int(InnerMaxSize)>=3*PacketSize$/;"	e	enum:Eigen::internal::redux_traits::__anon369
MayUnrollCompletely	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollCompletely = int(Dst::SizeAtCompileTime) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon495
MayUnrollInner	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MayUnrollInner      = int(InnerSize) != Dynamic$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon495
MeanReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_mean>::Type MeanReturnType;$/;"	t	class:Eigen::VectorwiseOp
MemType	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	t	namespace:Eigen::internal	typeref:enum:Eigen::internal::__anon117
MetisOrdering	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^class MetisOrdering$/;"	c	namespace:Eigen
MightEnableVml	plugin/Eigen/src/Core/Assign_MKL.h	/^      MightEnableVml = StorageOrdersAgree && DstHasDirectAccess && SrcHasDirectAccess && Src::InnerStrideAtCompileTime==1 && Dst::InnerStrideAtCompileTime==1,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
MightLinearize	plugin/Eigen/src/Core/Assign_MKL.h	/^      MightLinearize = MightEnableVml && (int(Dst::Flags) & int(Src::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
MightVectorize	plugin/Eigen/src/Core/AssignEvaluator.h	/^    MightVectorize = bool(StorageOrdersAgree)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
MightVectorize	plugin/Eigen/src/Core/Redux.h	/^    MightVectorize = (int(Derived::Flags)&ActualPacketAccessBit)$/;"	e	enum:Eigen::internal::redux_traits::__anon369
Min	plugin/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MinCoeffReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_minCoeff>::Type MinCoeffReturnType;$/;"	t	class:Eigen::VectorwiseOp
MinRowsAtCompileTime	plugin/Eigen/src/Geometry/Umeyama.h	/^    MinRowsAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, OtherMatrixType::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon694
Mode	plugin/Eigen/src/Core/SelfAdjointView.h	/^      Mode = internal::traits<SelfAdjointView>::Mode,$/;"	e	enum:Eigen::SelfAdjointView::__anon674
Mode	plugin/Eigen/src/Core/SelfAdjointView.h	/^    Mode = UpLo | SelfAdjoint,$/;"	e	enum:Eigen::internal::traits::__anon673
Mode	plugin/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularView::__anon179
Mode	plugin/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularViewImpl::__anon180
Mode	plugin/Eigen/src/Core/TriangularMatrix.h	/^      Mode = internal::traits<Derived>::Mode,$/;"	e	enum:Eigen::TriangularBase::__anon177
Mode	plugin/Eigen/src/Core/TriangularMatrix.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::internal::traits::__anon178
Mode	plugin/Eigen/src/Geometry/Transform.h	/^    Mode = Transform::Mode,$/;"	e	enum:Eigen::internal::transform_traits::__anon700
Mode	plugin/Eigen/src/Geometry/Transform.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::Transform::__anon702
Mode	plugin/Eigen/src/Geometry/Transform.h	/^    Mode =$/;"	e	enum:Eigen::internal::transform_product_result::__anon704
Mode	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon57
MoveOuter	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^      MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon86
MulCost	plugin/Eigen/src/Core/NumTraits.h	/^    MulCost = 1$/;"	e	enum:Eigen::GenericNumTraits::__anon680
NCMatrix	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> NCMatrix;$/;"	t	class:Eigen::SparseLU
NColsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
NEON	plugin/Eigen/src/Core/util/Constants.h	/^    NEON = 0x4,$/;"	e	enum:Eigen::Architecture::Type
NETWORK	include/darknet.h	/^    NETWORK,$/;"	e	enum:__anon728
NETWORK_H	src/network.h	3;"	d
NORMALIZATION	include/darknet.h	/^    NORMALIZATION,$/;"	e	enum:__anon728
NORMALIZATION_LAYER_H	src/normalization_layer.h	2;"	d
NRM_THRESH	src/rgb2yuyv_neon.cpp	19;"	d	file:
NRowsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
NUMCHARS	src/data.c	451;"	d	file:
NUMERIC_TYPE_MUST_BE_REAL	plugin/Eigen/src/Core/util/StaticAssert.h	/^        NUMERIC_TYPE_MUST_BE_REAL=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
NVCC	Makefile	/^NVCC=nvcc $/;"	m
NaturalOrdering	plugin/Eigen/src/OrderingMethods/Ordering.h	/^class NaturalOrdering$/;"	c	namespace:Eigen
NeedToConjugate	plugin/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = Base::NeedToConjugate ? 0 : IsComplex$/;"	e	enum:Eigen::internal::blas_traits::__anon485
NeedToConjugate	plugin/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon484
NeedsAlignment	plugin/Eigen/src/Geometry/Quaternion.h	/^  enum { NeedsAlignment = internal::traits<Quaternion>::Alignment>0 };$/;"	e	enum:Eigen::Quaternion::__anon691
NeedsToAlign	plugin/Eigen/src/Core/PlainObjectBase.h	/^    enum { NeedsToAlign = (SizeAtCompileTime != Dynamic) && (internal::traits<Derived>::Alignment>0) };$/;"	e	enum:Eigen::PlainObjectBase::__anon351
NegateExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  NegateExpr(const Arg0& arg0) : m_arg0(arg0) {}$/;"	f	class:Eigen::Symbolic::NegateExpr
NegateExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class NegateExpr : public BaseExpr<NegateExpr<Arg0> >$/;"	c	namespace:Eigen::Symbolic
NegativeReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_opposite_op<Scalar>, const Derived> NegativeReturnType;$/;"	t
NegativeSemiDef	plugin/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
NestByRefBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int NestByRefBit = 0x100;$/;"	m	namespace:Eigen
NestByValue	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC explicit inline NestByValue(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::NestByValue
NestByValue	plugin/Eigen/src/Core/NestByValue.h	/^template<typename ExpressionType> class NestByValue$/;"	c	namespace:Eigen
Nested	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper Nested;$/;"	t	class:Eigen::DiagonalWrapper
Nested	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef const DiagonalMatrix& Nested;$/;"	t	class:Eigen::DiagonalMatrix
Nested	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename internal::ref_selector<Inverse>::type Nested;$/;"	t	class:Eigen::Inverse
Nested	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef const PermutationMatrix& Nested;$/;"	t	class:Eigen::PermutationMatrix
Nested	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef Derived const& Nested;$/;"	t	class:Eigen::TriangularBase
Nested	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::ref_selector<SolveWithGuess>::type Nested;$/;"	t	class:Eigen::SolveWithGuess
NestedExpression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::ArrayWrapper
NestedExpression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::remove_all<ExpressionType>::type NestedExpression;$/;"	t	class:Eigen::MatrixWrapper
NestedExpression	plugin/Eigen/src/Core/Block.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::Block
NestedExpression	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryOp
NestedExpression	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::CwiseUnaryView
NestedExpression	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::IndexedView
NestedExpression	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprType>::type NestedExpression;$/;"	t	class:Eigen::Inverse
NestedExpression	plugin/Eigen/src/Core/Replicate.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Replicate
NestedExpression	plugin/Eigen/src/Core/Reverse.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Reverse
NestedExpression	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef MatrixTypeNestedCleaned NestedExpression;$/;"	t	class:Eigen::SelfAdjointView
NestedExpression	plugin/Eigen/src/Core/Transpose.h	/^    typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::Transpose
NestedExpression	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedCleaned NestedExpression;$/;"	t	class:Eigen::TriangularView
NestedExpression	plugin/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixType NestedExpression;$/;"	t	class:Eigen::Homogeneous
NestedExpression	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type NestedExpression;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
NestedExpression	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixType>::type NestedExpression;$/;"	t	class:Eigen::SparseView
NestedExpressionType	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type NestedExpressionType;$/;"	t	class:Eigen::ArrayWrapper
NestedExpressionType	plugin/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::ref_selector<ExpressionType>::non_const_type NestedExpressionType;$/;"	t	class:Eigen::MatrixWrapper
NewInf	plugin/Eigen/src/Core/util/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen::internal
NewMode	plugin/Eigen/src/Geometry/Scaling.h	/^      NewMode = int(Mode) == int(Isometry) ? Affine : Mode$/;"	e	enum:Eigen::internal::uniformscaling_times_affine_returntype::__anon698
NewSup	plugin/Eigen/src/Core/util/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen::internal
NoAlias	plugin/Eigen/src/Core/NoAlias.h	/^    explicit NoAlias(ExpressionType& expression) : m_expression(expression) {}$/;"	f	class:Eigen::NoAlias
NoAlias	plugin/Eigen/src/Core/NoAlias.h	/^class NoAlias$/;"	c	namespace:Eigen
NoChange	plugin/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	e	enum:Eigen::NoChange_t
NoChange_t	plugin/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	g	namespace:Eigen
NoConvergence	plugin/Eigen/src/Core/util/Constants.h	/^  NoConvergence = 2,$/;"	e	enum:Eigen::ComputationInfo
NoPivoting	plugin/Eigen/src/Core/util/Constants.h	/^  NoPivoting          = 0x02, $/;"	e	enum:Eigen::DecompositionOptions
NoPreferredStorageOrderBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int NoPreferredStorageOrderBit = 0x200;$/;"	m	namespace:Eigen
NoQRPreconditioner	plugin/Eigen/src/Core/util/Constants.h	/^  NoQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
NoUnrolling	plugin/Eigen/src/Core/util/Constants.h	/^  NoUnrolling,$/;"	e	enum:Eigen::UnrollingType
NonConstCoeffReturnType	plugin/Eigen/src/Geometry/Quaternion.h	/^                                        Scalar&, CoeffReturnType>::type NonConstCoeffReturnType;$/;"	t	class:Eigen::QuaternionBase
NonConstImagReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;$/;"	t
NonConstRealReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type NonConstRealReturnType;$/;"	t
NonInteger	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::NonInteger         NonInteger;$/;"	t	class:Eigen::AlignedBox
NormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_norm,RealScalar>::Type NormReturnType;$/;"	t	class:Eigen::VectorwiseOp
NormalReturnType	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NullaryExpr	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NumTraits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct NumTraits<Eigen::half>$/;"	s	namespace:Eigen
NumberOfRegisters	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
NumberOfRegisters	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
NumberOfRegisters	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
NumericalIssue	plugin/Eigen/src/Core/util/Constants.h	/^  NumericalIssue = 1, $/;"	e	enum:Eigen::ComputationInfo
OBJ	Makefile	/^OBJ= zcu102_api.o gemm.o utils.o cuda.o deconvolutional_layer.o convolutional_layer.o list.o image.o activations.o im2col.o col2im.o blas.o crop_layer.o dropout_layer.o maxpool_layer.o softmax_layer.o data.o matrix.o network.o connected_layer.o cost_layer.o parser.o option_list.o detection_layer.o route_layer.o box.o normalization_layer.o avgpool_layer.o layer.o local_layer.o shortcut_layer.o activation_layer.o rnn_layer.o gru_layer.o crnn_layer.o demo.o batchnorm_layer.o region_layer.o reorg_layer.o tree.o  lstm_layer.o$/;"	m
OBJDIR	Makefile	/^OBJDIR=.\/obj\/$/;"	m
OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG	plugin/Eigen/src/Core/util/StaticAssert.h	/^        OBJECT_ALLOCATED_ON_STACK_IS_TOO_BIG=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
OBJS	Makefile	/^OBJS = $(addprefix $(OBJDIR), $(OBJ))$/;"	m
OLD_CLASSIFICATION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
ONES_COMPLEMENT	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	101;"	d
OPENCV	Makefile	/^OPENCV=1$/;"	m
OPENMP	Makefile	/^OPENMP=0$/;"	m
OPTION_LIST_H	src/option_list.h	2;"	d
OPTS	Makefile	/^OPTS=-O0 -g$/;"	m
OPTS	Makefile	/^OPTS=-Ofast$/;"	m
OUTPUT_LOCATION_X	src/rgb2yuyv_neon.cpp	10;"	d	file:
OUTPUT_LOCATION_Y	src/rgb2yuyv_neon.cpp	11;"	d	file:
OUTPUT_RAW_PIXEL	src/rgb2yuyv_neon.cpp	8;"	d	file:
OUTUT_COL_PIXEL	src/rgb2yuyv_neon.cpp	9;"	d	file:
OUT_OF_RANGE_ACCESS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        OUT_OF_RANGE_ACCESS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
OffsetCol	plugin/Eigen/src/Core/Reverse.h	/^      OffsetCol  = ReverseCol && IsRowMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon336
OffsetRow	plugin/Eigen/src/Core/Reverse.h	/^      OffsetRow  = ReverseRow && IsColMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon336
OnTheLeft	plugin/Eigen/src/Core/util/Constants.h	/^  OnTheLeft = 1,  $/;"	e	enum:Eigen::SideType
OnTheRight	plugin/Eigen/src/Core/util/Constants.h	/^  OnTheRight = 2  $/;"	e	enum:Eigen::SideType
Ones	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones()$/;"	f	class:Eigen::DenseBase
Ones	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index newSize)$/;"	f	class:Eigen::DenseBase
Ones	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
OppositeExtendedType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct OppositeExtendedType {$/;"	s	class:Eigen::VectorwiseOp
Options	plugin/Eigen/src/Core/Array.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Array::__anon331
Options	plugin/Eigen/src/Core/BandMatrix.h	/^      Options = internal::traits<Derived>::Options$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
Options	plugin/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon365
Options	plugin/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon366
Options	plugin/Eigen/src/Core/Map.h	/^  enum { Options }; \/\/ Expressions don't have Options$/;"	e	enum:Eigen::internal::traits::__anon354
Options	plugin/Eigen/src/Core/Matrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon677
Options	plugin/Eigen/src/Core/Matrix.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Matrix::__anon678
Options	plugin/Eigen/src/Core/PlainObjectBase.h	/^    enum { Options = internal::traits<Derived>::Options };$/;"	e	enum:Eigen::PlainObjectBase::__anon350
Options	plugin/Eigen/src/Core/Ref.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon560
Options	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon146
Options	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexSchur::__anon151
Options	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::EigenSolver::__anon150
Options	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon152
Options	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon153
Options	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^        Options = MatrixType::Options,$/;"	e	enum:Eigen::RealQZ::__anon145
Options	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::RealSchur::__anon149
Options	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon144
Options	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::Tridiagonalization::__anon148
Options	plugin/Eigen/src/Geometry/Hyperplane.h	/^    Options = _Options$/;"	e	enum:Eigen::Hyperplane::__anon688
Options	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^    Options = _Options$/;"	e	enum:Eigen::ParametrizedLine::__anon687
Options	plugin/Eigen/src/Geometry/Transform.h	/^    Options = _Options,$/;"	e	enum:Eigen::Transform::__anon702
Options	plugin/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon137
Options	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseMatrix::__anon79
Options	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon95
Options	plugin/Eigen/src/SparseCore/SparseRef.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon98
Options	plugin/Eigen/src/SparseCore/SparseVector.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseVector::__anon92
OrderingType	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::IncompleteCholesky
OrderingType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::OrderingType OrderingType;$/;"	t	class:Eigen::SimplicialCholeskyBase
OrderingType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _Ordering OrderingType;$/;"	t	struct:Eigen::internal::traits
OrderingType	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseLU
OrderingType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef _OrderingType OrderingType;$/;"	t	class:Eigen::SparseQR
OtherCols	plugin/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon705
OtherCols	plugin/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon706
OtherRows	plugin/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon705
OtherRows	plugin/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon706
OtherRows	plugin/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon707
OuterIncr	plugin/Eigen/src/Core/IndexedView.h	/^    OuterIncr = IsRowMajor ? RowIncr : ColIncr,$/;"	e	enum:Eigen::internal::traits::__anon314
OuterProduct	plugin/Eigen/src/Core/util/Constants.h	/^{ DefaultProduct=0, LazyProduct, AliasFreeProduct, CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::ProductImplType
OuterRandomAccessPattern	plugin/Eigen/src/SparseCore/SparseUtil.h	/^const int OuterRandomAccessPattern  = 0x4 | CoherentAccessPattern;$/;"	m	namespace:Eigen
OuterSize	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::BlockImpl::__anon47
OuterSize	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    enum { OuterSize = IsRowMajor ? BlockRows : BlockCols };$/;"	e	enum:Eigen::internal::sparse_matrix_block_impl::__anon49
OuterStride	plugin/Eigen/src/Core/AssignEvaluator.h	/^    OuterStride = int(outer_stride_at_compile_time<Dst>::ret),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon490
OuterStride	plugin/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride() : Base() {}$/;"	f	class:Eigen::OuterStride
OuterStride	plugin/Eigen/src/Core/Stride.h	/^    EIGEN_DEVICE_FUNC OuterStride(Index v) : Base(v,0) {} \/\/ FIXME making this explicit could break valid code$/;"	f	class:Eigen::OuterStride
OuterStride	plugin/Eigen/src/Core/Stride.h	/^class OuterStride : public Stride<Value, 0>$/;"	c	namespace:Eigen
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon562
OuterStrideAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsArgType$/;"	e	enum:Eigen::internal::evaluator::__anon512
OuterStrideAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = IsVectorAtCompileTime  ? 0$/;"	e	enum:Eigen::internal::evaluator::__anon502
OuterStrideAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::evaluator::__anon510
OuterStrideAtCompileTime	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon174
OuterStrideAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      OuterStrideAtCompileTime = internal::outer_stride_at_compile_time<Derived>::ret$/;"	e	enum:Eigen::DenseBase::__anon564
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    OuterStrideAtCompileTime = 0$/;"	e	enum:Eigen::internal::traits::__anon346
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Map.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon353
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon677
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Stride.h	/^      OuterStrideAtCompileTime = _OuterStrideAtCompileTime$/;"	e	enum:Eigen::Stride::__anon367
OuterStrideAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon184
OuterStrideMatch	plugin/Eigen/src/Core/Ref.h	/^      OuterStrideMatch = Derived::IsVectorAtCompileTime$/;"	e	enum:Eigen::internal::traits::match::__anon561
OuterType	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef internal::variable_if_dynamic<Index,Derived::IsVectorAtCompileTime?0:Dynamic> OuterType;$/;"	t	class:Eigen::SparseCompressedBase::InnerIterator
OuterType	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    typedef internal::variable_if_dynamic<Index,Derived::IsVectorAtCompileTime?0:Dynamic> OuterType;$/;"	t	class:Eigen::SparseCompressedBase::ReverseInnerIterator
OuterVector	plugin/Eigen/src/SparseCore/SparseBlock.h	/^      OuterVector =  (BlockCols==1 && ArgType::IsRowMajor)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon51
OuterVectorInnerIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  EIGEN_STRONG_INLINE OuterVectorInnerIterator(const unary_evaluator& aEval, Index outer)$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
OuterVectorInnerIterator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased>::OuterVectorInnerIterator$/;"	c	class:Eigen::internal::unary_evaluator
PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1	plugin/Eigen/src/Core/util/StaticAssert.h	/^        PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
PACK_OUTPUT	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	1030;"	d
PACK_OUTPUT_2	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	1144;"	d
PACK_OUTPUT_D	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	1186;"	d
PACK_OUTPUT_SQ_D	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	1182;"	d
PALIGN_NEON	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	512;"	d
PALIGN_NEON	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	532;"	d
PALIGN_NEON	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	731;"	d
PALIGN_NEON	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	744;"	d
PARSER_H	src/parser.h	2;"	d
PASTIX_COMPLEX	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	16;"	d
PASTIX_DCOMPLEX	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	17;"	d
PLANAR	include/darknet.h	/^	PLANAR,$/;"	e	enum:__anon732
PLSE	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
POLY	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
PREDICT_CUBE_CENTER_H_SCALE	src/rgb2yuyv_neon.cpp	21;"	d	file:
PREDICT_CUBE_CENTER_W_SCALE	src/rgb2yuyv_neon.cpp	20;"	d	file:
PREDICT_CUBE_DEPTH	src/rgb2yuyv_neon.cpp	15;"	d	file:
PREDICT_CUBE_HEIGHT	src/rgb2yuyv_neon.cpp	14;"	d	file:
PREDICT_CUBE_SIZE	src/rgb2yuyv_neon.cpp	12;"	d	file:
PREDICT_CUBE_SIZE_SQUARE	src/rgb2yuyv_neon.cpp	22;"	d	file:
PREDICT_CUBE_WIDTH	src/rgb2yuyv_neon.cpp	13;"	d	file:
PREDICT_NUM_OF_BOX	src/rgb2yuyv_neon.cpp	16;"	d	file:
PREDICT_NUM_OF_GRIDS	src/rgb2yuyv_neon.cpp	17;"	d	file:
PROF	Makefile	/^PROF=1$/;"	m
Packet	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^} Packet;$/;"	t	namespace:Eigen::internal	typeref:union:Eigen::internal::__anon612
Packet	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
Packet	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::BlasLinearMapper
Packet	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::internal::blas_data_mapper
Packet16f	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512 Packet16f;$/;"	t	namespace:Eigen::internal
Packet16i	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512i Packet16i;$/;"	t	namespace:Eigen::internal
Packet16uc	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned char  Packet16uc;$/;"	t	namespace:Eigen::internal
Packet16uc	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned char       Packet16uc;$/;"	t	namespace:Eigen::internal
Packet1cd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const __m128d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1cd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const Packet2d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet1d	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x1_t Packet1d;$/;"	t	namespace:Eigen::internal
Packet2bl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef Packet2ul                    Packet2bl;$/;"	t	namespace:Eigen::internal
Packet2bl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool long         Packet2bl;$/;"	t	namespace:Eigen::internal
Packet2cd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd() {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cd(const __m256d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cd
Packet2cd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet2cd$/;"	s	namespace:Eigen::internal
Packet2cf	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf() : v(p4f_ZERO) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const __m128& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2d	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector double              Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float64x2_t Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128d> Packet2d;$/;"	t	namespace:Eigen::internal
Packet2d	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector double              Packet2d;$/;"	t	namespace:Eigen::internal
Packet2f	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef eigen_packet_wrapper<float32x2_t,0> Packet2f;$/;"	t	namespace:Eigen::internal
Packet2i	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef eigen_packet_wrapper<int32x2_t  ,3> Packet2i;$/;"	t	namespace:Eigen::internal
Packet2l	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector long long           Packet2l;$/;"	t	namespace:Eigen::internal
Packet2l	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector long long           Packet2l;$/;"	t	namespace:Eigen::internal
Packet2ul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned long long  Packet2ul;$/;"	t	namespace:Eigen::internal
Packet2ul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned long long  Packet2ul;$/;"	t	namespace:Eigen::internal
Packet4bi	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool int     Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4bi	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector __bool int          Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4cf	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf() {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet4cf(const __m256& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet4cf
Packet4cf	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^struct Packet4cf$/;"	s	namespace:Eigen::internal
Packet4d	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256d Packet4d;$/;"	t	namespace:Eigen::internal
Packet4f	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector float          Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef eigen_packet_wrapper<float32x4_t,1> Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128>  Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector float               Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^} Packet4f;$/;"	t	namespace:Eigen::internal	typeref:struct:Eigen::internal::__anon611
Packet4i	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector int            Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef eigen_packet_wrapper<int32x4_t  ,2> Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef eigen_packet_wrapper<__m128i> Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector int                 Packet4i;$/;"	t	namespace:Eigen::internal
Packet4ui	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned int   Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef eigen_packet_wrapper<uint32x4_t ,4> Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector unsigned int        Packet4ui;$/;"	t	namespace:Eigen::internal
Packet8d	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^typedef __m512d Packet8d;$/;"	t	namespace:Eigen::internal
Packet8f	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256  Packet8f;$/;"	t	namespace:Eigen::internal
Packet8i	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^typedef __m256i Packet8i;$/;"	t	namespace:Eigen::internal
Packet8i	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector short int      Packet8i;$/;"	t	namespace:Eigen::internal
Packet8i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^typedef __vector short int           Packet8i;$/;"	t	namespace:Eigen::internal
PacketAccess	plugin/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon289
PacketAccess	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon655
PacketAccess	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon656
PacketAccess	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^{ enum { Cost = NumTraits<float>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon657
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon227
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasDiv$/;"	e	enum:Eigen::internal::functor_traits::__anon230
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon229
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon228
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = is_same<DstScalar,SrcScalar>::value && packet_traits<DstScalar>::Vectorizable && packet_traits<SrcScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon226
PacketAccess	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^    PacketAccess = packet_traits<Scalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon231
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon218
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon219
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon223
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon224
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon225
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMax$/;"	e	enum:Eigen::internal::functor_traits::__anon217
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMin$/;"	e	enum:Eigen::internal::functor_traits::__anon216
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon215
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasAdd && packet_traits<RhsScalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon212
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasDiv && packet_traits<RhsScalar>::HasDiv,$/;"	e	enum:Eigen::internal::functor_traits::__anon222
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon213
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^    PacketAccess = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasSub && packet_traits<RhsScalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon221
PacketAccess	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon220
PacketAccess	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^         PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon232
PacketAccess	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^    PacketAccess =   (!NumTraits<Scalar>::IsInteger) && packet_traits<Scalar>::HasSetLinear && packet_traits<Scalar>::HasBlend,$/;"	e	enum:Eigen::internal::functor_traits::__anon234
PacketAccess	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon233
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon206
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon207
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon208
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon209
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon204
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon205
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon193
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon194
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon195
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon196
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon197
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon198
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon199
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon200
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon201
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon190
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon191
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon192
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon188
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon189
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon211
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon210
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon202
PacketAccess	plugin/Eigen/src/Core/functors/StlFunctors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon203
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon280
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon281
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon282
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon283
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasACos$/;"	e	enum:Eigen::internal::functor_traits::__anon268
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasASin$/;"	e	enum:Eigen::internal::functor_traits::__anon269
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasATan$/;"	e	enum:Eigen::internal::functor_traits::__anon270
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasAbs$/;"	e	enum:Eigen::internal::functor_traits::__anon249
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasArg$/;"	e	enum:Eigen::internal::functor_traits::__anon252
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCeil$/;"	e	enum:Eigen::internal::functor_traits::__anon279
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasConj$/;"	e	enum:Eigen::internal::functor_traits::__anon251
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCos$/;"	e	enum:Eigen::internal::functor_traits::__anon265
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasCosh$/;"	e	enum:Eigen::internal::functor_traits::__anon273
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasExp,$/;"	e	enum:Eigen::internal::functor_traits::__anon258
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasExpm1,$/;"	e	enum:Eigen::internal::functor_traits::__anon259
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasFloor$/;"	e	enum:Eigen::internal::functor_traits::__anon278
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasLog,$/;"	e	enum:Eigen::internal::functor_traits::__anon260
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasLog1p,$/;"	e	enum:Eigen::internal::functor_traits::__anon261
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasNegate };$/;"	e	enum:Eigen::internal::functor_traits::__anon248
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRound$/;"	e	enum:Eigen::internal::functor_traits::__anon277
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasRsqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon264
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSign$/;"	e	enum:Eigen::internal::functor_traits::__anon284
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSin$/;"	e	enum:Eigen::internal::functor_traits::__anon266
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSinh$/;"	e	enum:Eigen::internal::functor_traits::__anon272
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasSqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon263
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTan$/;"	e	enum:Eigen::internal::functor_traits::__anon267
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^    PacketAccess = packet_traits<Scalar>::HasTanh,$/;"	e	enum:Eigen::internal::functor_traits::__anon271
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon254
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon255
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon256
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon257
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon276
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog10 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon262
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon250
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon274
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon275
PacketAccess	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon253
PacketAccessBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int PacketAccessBit = 0x8;$/;"	m	namespace:Eigen
PacketAccessMask	plugin/Eigen/src/Core/CoreEvaluators.h	/^    PacketAccessMask = bool(HasNoInnerStride) ? ~int(0) : ~int(PacketAccessBit),$/;"	e	enum:Eigen::internal::evaluator::__anon510
PacketAlignment	plugin/Eigen/src/Core/CoreEvaluators.h	/^    PacketAlignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::evaluator::__anon512
PacketBlock	plugin/Eigen/src/Core/GenericPacketMath.h	/^template <typename Packet,int N=unpacket_traits<Packet>::size> struct PacketBlock {$/;"	s	namespace:Eigen::internal
PacketReturnType	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
PacketReturnType	plugin/Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketReturnType PacketReturnType;$/;"	t	class:Eigen::internal::redux_evaluator
PacketReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::SparseMatrixBase
PacketScalar	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::ArrayBase
PacketScalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::evaluator
PacketScalar	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::find_best_packet<Scalar,SizeAtCompileTime>::type PacketScalar;$/;"	t	class:Eigen::DenseBase
PacketScalar	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseCoeffsBase
PacketScalar	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PacketScalar PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	plugin/Eigen/src/Core/Matrix.h	/^  typedef typename find_best_packet<_Scalar,size>::type PacketScalar;$/;"	t	struct:Eigen::internal::traits
PacketScalar	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MatrixBase
PacketScalar	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::PlainObjectBase
PacketScalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename XprType::PacketScalar PacketScalar;$/;"	t	class:Eigen::internal::redux_evaluator
PacketScalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketScalar;$/;"	t	struct:Eigen::internal::redux_impl
PacketScalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketScalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
PacketScalar	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::SparseMatrixBase
PacketSize	plugin/Eigen/src/Cholesky/LLT.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::LLT::__anon129
PacketSize	plugin/Eigen/src/Core/GeneralProduct.h	/^    PacketSize      = internal::packet_traits<Scalar>::size$/;"	e	enum:Eigen::internal::gemv_static_vector_if::__anon555
PacketSize	plugin/Eigen/src/Core/Redux.h	/^    PacketSize = redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_impl::__anon377
PacketSize	plugin/Eigen/src/Core/Redux.h	/^    PacketSize = redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon375
PacketSize	plugin/Eigen/src/Core/Redux.h	/^    PacketSize = unpacket_traits<PacketType>::size,$/;"	e	enum:Eigen::internal::redux_traits::__anon368
PacketSize	plugin/Eigen/src/Core/Reverse.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::Reverse::__anon336
PacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon312
PacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon313
PacketSize	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::symm_pack_rhs::__anon291
PacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename AssignmentTraits::PacketType PacketType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
PacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
PacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
PacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename Kernel::PacketType PacketType;$/;"	t	struct:Eigen::internal::dense_assignment_loop
PacketType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename conditional<int(Traversal)==LinearVectorizedTraversal, LinearPacketType, InnerPacketType>::type PacketType;$/;"	t	struct:Eigen::internal::copy_using_evaluator_traits
PacketType	plugin/Eigen/src/Core/Redux.h	/^    typedef typename find_best_packet<typename Derived::Scalar,Derived::SizeAtCompileTime>::type PacketType;$/;"	t	struct:Eigen::internal::redux_traits
PacketType	plugin/Eigen/src/Core/Redux.h	/^  typedef typename redux_traits<Func, Derived>::PacketType PacketType;$/;"	t	struct:Eigen::internal::redux_impl
ParameterType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Array<StorageIndex,64,1,DontAlign> ParameterType;$/;"	t	class:Eigen::PardisoImpl
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ParametrizedLine(const ParametrizedLine<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline explicit ParametrizedLine(Index _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline ParametrizedLine<_Scalar, _AmbientDim,_Options>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim,OtherOptions>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
PardisoImpl	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoImpl : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PardisoLDLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT()$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLDLT : public PardisoImpl< PardisoLDLT<MatrixType,Options> >$/;"	c	namespace:Eigen
PardisoLLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT()$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLLT : public PardisoImpl< PardisoLLT<MatrixType,_UpLo> >$/;"	c	namespace:Eigen
PardisoLU	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU()$/;"	f	class:Eigen::PardisoLU
PardisoLU	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    explicit PardisoLU(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
PardisoLU	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLU : public PardisoImpl< PardisoLU<MatrixType> >$/;"	c	namespace:Eigen
PartialPivLU	plugin/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU()$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	plugin/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(EigenBase<InputType>& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	plugin/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(Index size)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	plugin/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	plugin/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> class PartialPivLU$/;"	c	namespace:Eigen
PartialReduxExpr	plugin/Eigen/src/Core/VectorwiseOp.h	/^    explicit PartialReduxExpr(const MatrixType& mat, const MemberOp& func = MemberOp())$/;"	f	class:Eigen::PartialReduxExpr
PartialReduxExpr	plugin/Eigen/src/Core/VectorwiseOp.h	/^class PartialReduxExpr : public internal::dense_xpr_base< PartialReduxExpr<MatrixType, MemberOp, Direction> >::type,$/;"	c	namespace:Eigen
PastixBase	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixBase() : m_initisOk(false), m_analysisIsOk(false), m_factorizationIsOk(false), m_pastixdata(0), m_size(0)$/;"	f	class:Eigen::PastixBase
PastixBase	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
PastixLDLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT():Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLDLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLDLT : public PastixBase< PastixLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT() : Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLLT : public PastixBase< PastixLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLU	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU() : Base()$/;"	f	class:Eigen::PastixLU
PastixLU	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    explicit PastixLU(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLU
PastixLU	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLU : public PastixBase< PastixLU<_MatrixType> >$/;"	c	namespace:Eigen
Perm	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> Perm;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
PermIndexType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename PermutationType::StorageIndex PermIndexType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermIndexType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename PermutationType::Index PermIndexType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PermPermProduct	plugin/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	e	enum:Eigen::internal::PermPermProduct_t
PermPermProduct_t	plugin/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	g	namespace:Eigen::internal
PermTraits	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationType> PermTraits;$/;"	t	class:Eigen::InverseImpl
PermutationBase	plugin/Eigen/src/Core/PermutationMatrix.h	/^class PermutationBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
PermutationMap	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Map<PermutationMatrix<Dynamic,Dynamic,int> > PermutationMap;$/;"	t	class:Eigen::SuperLUBase
PermutationMap	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::PermutationMap PermutationMap;$/;"	t	class:Eigen::SuperLU
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(const InverseImpl<Other,PermutationStorage>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(internal::PermPermProduct_t, const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    explicit PermutationMatrix(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(Index size) : m_indices(size)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix()$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	c	namespace:Eigen
PermutationPType	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationPType;$/;"	t	class:Eigen::FullPivLU
PermutationQType	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationQType;$/;"	t	class:Eigen::FullPivLU
PermutationShape	plugin/Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	s	namespace:Eigen
PermutationStorage	plugin/Eigen/src/Core/util/Constants.h	/^struct PermutationStorage {};$/;"	s	namespace:Eigen
PermutationType	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::LDLT
PermutationType	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename OrderingType::PermutationType PermutationType;$/;"	t	class:Eigen::IncompleteCholesky
PermutationType	plugin/Eigen/src/LU/PartialPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::PartialPivLU
PermutationType	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^  typedef PermutationMatrix<Dynamic,Dynamic,StorageIndex> PermutationType;$/;"	t	class:Eigen::MetisOrdering
PermutationType	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType; $/;"	t	class:Eigen::COLAMDOrdering
PermutationType	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::AMDOrdering
PermutationType	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::NaturalOrdering
PermutationType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermutationType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      PermutationType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PermutationType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::FullPivHouseholderQR
PermutationType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef Map<PermutationMatrix<Dynamic, Dynamic, StorageIndex> > PermutationType;$/;"	t	class:Eigen::SPQR
PermutationType	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseLU
PermutationType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef PermutationMatrix<Dynamic, Dynamic, StorageIndex> PermutationType;$/;"	t	class:Eigen::SparseQR
PermutationWrapper	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationWrapper(const IndicesType& indices)$/;"	f	class:Eigen::PermutationWrapper
PermutationWrapper	plugin/Eigen/src/Core/PermutationMatrix.h	/^class PermutationWrapper : public PermutationBase<PermutationWrapper<_IndicesType> >$/;"	c	namespace:Eigen
Pivoting	plugin/Eigen/src/Core/util/Constants.h	/^  Pivoting            = 0x01, $/;"	e	enum:Eigen::DecompositionOptions
PlainArray	plugin/Eigen/src/Core/DenseBase.h	/^          > PlainArray;$/;"	t	class:Eigen::DenseBase
PlainMatrix	plugin/Eigen/src/Core/DenseBase.h	/^          > PlainMatrix;$/;"	t	class:Eigen::DenseBase
PlainObject	plugin/Eigen/src/Core/Array.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Array
PlainObject	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ArrayBase
PlainObject	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::PlainObject         PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	plugin/Eigen/src/Core/DenseBase.h	/^                                 PlainMatrix, PlainArray>::type PlainObject;$/;"	t	class:Eigen::DenseBase
PlainObject	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalMatrix<Scalar,DiagonalVectorType::SizeAtCompileTime,DiagonalVectorType::MaxSizeAtCompileTime> PlainObject;$/;"	t	class:Eigen::DiagonalBase
PlainObject	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename InverseType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject                       PlainObject;$/;"	t	class:Eigen::Inverse
PlainObject	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	plugin/Eigen/src/Core/Matrix.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Matrix
PlainObject	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::MatrixBase
PlainObject	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef PlainPermutationType PlainObject;$/;"	t	class:Eigen::PermutationBase
PlainObject	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	plugin/Eigen/src/Core/ReturnByValue.h	/^  typedef typename internal::traits<Derived>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::SelfAdjointView
PlainObject	plugin/Eigen/src/Core/Solve.h	/^                 RhsType::MaxColsAtCompileTime>::type PlainObject;$/;"	t	struct:Eigen::internal::solve_traits
PlainObject	plugin/Eigen/src/Core/Solve.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	plugin/Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::PlainObject PlainObject;$/;"	t	class:Eigen::Solve
PlainObject	plugin/Eigen/src/Core/Solve.h	/^  typedef typename solve_traits<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType PlainObject;$/;"	t	class:Eigen::TriangularViewImpl
PlainObject	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef Quaternion<_Scalar,_Options> PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename SolveType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::evaluator
PlainObject	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::PlainObject PlainObject;$/;"	t	class:Eigen::SolveWithGuess
PlainObject	plugin/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivLU
PlainObject	plugin/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::PartialPivLU
PlainObject	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::ColPivHouseholderQR
PlainObject	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
PlainObject	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::FullPivHouseholderQR
PlainObject	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrix<Scalar, Flags&RowMajorBit ? RowMajor : ColMajor, StorageIndex> PlainObject;$/;"	t	class:Eigen::SparseMatrixBase
PlainObject	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Lhs,OnTheRight,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename permutation_matrix_product<Rhs,OnTheLeft,false,SparseShape>::ReturnType PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::unary_evaluator
PlainObject	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename XprType::PlainObject PlainObject;$/;"	t	struct:Eigen::internal::product_evaluator
PlainObject	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename sparse_eval<RhsType, RhsType::RowsAtCompileTime, RhsType::ColsAtCompileTime,traits<RhsType>::Flags>::type PlainObject;$/;"	t	struct:Eigen::internal::solve_traits
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase() : m_storage()$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(Index size, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const DenseBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^    explicit PlainObjectBase(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	plugin/Eigen/src/Core/PlainObjectBase.h	/^class PlainObjectBase : public doxygen::dense_xpr_base_dispatcher<Derived>$/;"	c	namespace:Eigen
PlainObjectType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef PlainObjectBase<Derived> PlainObjectType;$/;"	t	struct:Eigen::internal::evaluator
PlainObjectType	plugin/Eigen/src/Core/Ref.h	/^  typedef _PlainObjectType PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	plugin/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::PlainObjectType PlainObjectType;$/;"	t	class:Eigen::RefBase
PlainObjectType	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	class:Eigen::Ref
PlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseVector<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	class:Eigen::Ref
PlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseMatrix<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef SparseVector<MatScalar,MatOptions,MatIndex> PlainObjectType;$/;"	t	struct:Eigen::internal::traits
PlainObjectTypeCleaned	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename internal::remove_all<PlainObjectType>::type PlainObjectTypeCleaned;$/;"	t	struct:Eigen::internal::evaluator
PlainObjectTypeInnerSize	plugin/Eigen/src/Core/Map.h	/^    PlainObjectTypeInnerSize = ((traits<PlainObjectType>::Flags&RowMajorBit)==RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon353
PlainPermutationType	plugin/Eigen/src/Core/PermutationMatrix.h	/^            PlainPermutationType;$/;"	t	class:Eigen::PermutationBase
PlainPermutationType	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::PlainPermutationType PlainPermutationType;$/;"	t	class:Eigen::InverseImpl
PointerArgType	plugin/Eigen/src/Core/Map.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::Map
PointerType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::PointerType PointerType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
PointerType	plugin/Eigen/src/Core/Map.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::Map
PointerType	plugin/Eigen/src/Core/MapBase.h	/^                     PointerType;$/;"	t	class:Eigen::MapBase
PointerType	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::MapBase
PositiveSemiDef	plugin/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
PreconditionIfMoreColsThanRows	plugin/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon132
PreconditionIfMoreRowsThanCols	plugin/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon132
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::BiCGSTAB
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::ConjugateGradient
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::Preconditioner Preconditioner;$/;"	t	class:Eigen::IterativeSolverBase
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Preconditioner	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
PrivateType	plugin/Eigen/src/Core/Array.h	/^    struct PrivateType {};$/;"	s	class:Eigen::Array
ProdReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_prod>::Type ProdReturnType;$/;"	t	class:Eigen::VectorwiseOp
ProdXprType	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<LhsT,RhsT,DefaultProduct> ProdXprType;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Product	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)$/;"	f	class:Eigen::Product
Product	plugin/Eigen/src/Core/Product.h	/^class Product : public ProductImpl<_Lhs,_Rhs,Option,$/;"	c	namespace:Eigen
ProductExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ProductExpr(const Arg0& arg0, const Arg1& arg1) : m_arg0(arg0), m_arg1(arg1) {}$/;"	f	class:Eigen::Symbolic::ProductExpr
ProductExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class ProductExpr : public BaseExpr<ProductExpr<Arg0,Arg1> >$/;"	c	namespace:Eigen::Symbolic
ProductImpl	plugin/Eigen/src/Core/Product.h	/^class ProductImpl : public internal::generic_xpr_base<Product<Lhs,Rhs,Option>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
ProductImpl	plugin/Eigen/src/Core/Product.h	/^class ProductImpl<Lhs,Rhs,Option,Dense>$/;"	c	namespace:Eigen
ProductImplType	plugin/Eigen/src/Core/util/Constants.h	/^enum ProductImplType$/;"	g	namespace:Eigen
ProductType	plugin/Eigen/src/Geometry/Transform.h	/^    typedef internal::transform_transform_product_impl<Transform,Transform<Scalar,Dim,OtherMode,OtherOptions> > ProductType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ProductXpr	plugin/Eigen/src/Core/Product.h	/^  typedef Product<Lhs,Rhs,Option> ProductXpr;$/;"	t	class:Eigen::internal::dense_product_base
Projective	plugin/Eigen/src/Core/util/Constants.h	/^  Projective    = 0x20$/;"	e	enum:Eigen::TransformTraits
Projective2d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Projective> Projective2d;$/;"	t	namespace:Eigen
Projective2f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Projective> Projective2f;$/;"	t	namespace:Eigen
Projective3d	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Projective> Projective3d;$/;"	t	namespace:Eigen
Projective3f	plugin/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Projective> Projective3f;$/;"	t	namespace:Eigen
QRMatrixType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> QRMatrixType;$/;"	t	class:Eigen::SparseQR
QRPreconditioners	plugin/Eigen/src/Core/util/Constants.h	/^enum QRPreconditioners {$/;"	g	namespace:Eigen
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef ColPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef FullPivHouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<MatrixType> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QRType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef HouseholderQR<TransposeTypeWithSameStorageOrder> QRType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
QUANTIZE	Makefile	/^QUANTIZE=0$/;"	m
QrType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef ColPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
QrType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef FullPivHouseholderQR<MatrixType> QrType;$/;"	t	struct:Eigen::internal::Assignment
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC explicit inline Quaternion(const Scalar* data) : m_coeffs(data) {}$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion(const Scalar& w, const Scalar& x, const Scalar& y, const Scalar& z) : m_coeffs(x, y, z, w){}$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }$/;"	f	class:Eigen::Quaternion
Quaternion	plugin/Eigen/src/Geometry/Quaternion.h	/^class Quaternion : public QuaternionBase<Quaternion<_Scalar,_Options> >$/;"	c	namespace:Eigen
QuaternionBase	plugin/Eigen/src/Geometry/Quaternion.h	/^class QuaternionBase : public RotationBase<Derived, 3>$/;"	c	namespace:Eigen
QuaternionMapAlignedd	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, Aligned>  QuaternionMapAlignedd;$/;"	t	namespace:Eigen
QuaternionMapAlignedf	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, Aligned>   QuaternionMapAlignedf;$/;"	t	namespace:Eigen
QuaternionMapd	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, 0>        QuaternionMapd;$/;"	t	namespace:Eigen
QuaternionMapf	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, 0>         QuaternionMapf;$/;"	t	namespace:Eigen
QuaternionType	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
Quaterniond	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaternionf	plugin/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
QuickSplit	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^Index QuickSplit(VectorV &row, VectorI &ind, Index ncut)$/;"	f	namespace:Eigen::internal
QuotientExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  QuotientExpr(const Arg0& arg0, const Arg1& arg1) : m_arg0(arg0), m_arg1(arg1) {}$/;"	f	class:Eigen::Symbolic::QuotientExpr
QuotientExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class QuotientExpr : public BaseExpr<QuotientExpr<Arg0,Arg1> >$/;"	c	namespace:Eigen::Symbolic
RAMP	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
RANDOM	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
REGION	include/darknet.h	/^    REGION,$/;"	e	enum:__anon728
REGION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
REGION_LAYER_H	src/region_layer.h	2;"	d
REGRESSION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
RELIE	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
RELU	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
REORG	include/darknet.h	/^    REORG,$/;"	e	enum:__anon728
REORG_LAYER_H	src/reorg_layer.h	2;"	d
RNN	include/darknet.h	/^    RNN,$/;"	e	enum:__anon728
RNN_LAYER_H	src/rnn_layer.h	3;"	d
ROUTE	include/darknet.h	/^    ROUTE,$/;"	e	enum:__anon728
ROUTE_LAYER_H	src/route_layer.h	2;"	d
ROW_IS_ALIVE	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	118;"	d
ROW_IS_DEAD	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	116;"	d
ROW_IS_MARKED_DEAD	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	117;"	d
Random	plugin/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random()$/;"	f	class:Eigen::DenseBase
Random	plugin/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Random	plugin/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index size)$/;"	f	class:Eigen::DenseBase
RandomAccessLinSpacedReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar>,PlainObject> RandomAccessLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
RandomAccessPattern	plugin/Eigen/src/SparseCore/SparseUtil.h	/^const int RandomAccessPattern       = 0x8 | OuterRandomAccessPattern | InnerRandomAccessPattern;$/;"	m	namespace:Eigen
RandomReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_random_op<Scalar>,PlainObject> RandomReturnType;$/;"	t	class:Eigen::DenseBase
ReadCost	plugin/Eigen/src/Core/NumTraits.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
ReadOnlyAccessors	plugin/Eigen/src/Core/util/Constants.h	/^  ReadOnlyAccessors, $/;"	e	enum:Eigen::AccessorLevels
ReadOnlyMapBase	plugin/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::MapBase
ReadOnlyMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> ReadOnlyMapBase;$/;"	t	class:Eigen::SparseMapBase
Real	plugin/Eigen/src/Core/NumTraits.h	/^  typedef T Real;$/;"	t	struct:Eigen::GenericNumTraits
RealPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RealScalar>::type RealPacket;$/;"	t	class:Eigen::internal::gebp_traits
RealPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacketSize  = Vectorizable ? packet_traits<RealScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
RealQZ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ(const MatrixType& A, const MatrixType& B, bool computeQZ = true) :$/;"	f	class:Eigen::RealQZ
RealQZ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      explicit RealQZ(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime) :$/;"	f	class:Eigen::RealQZ
RealQZ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^  template<typename _MatrixType> class RealQZ$/;"	c	namespace:Eigen
RealReturnType	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type RealReturnType;$/;"	t
RealRowVectorType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, RealScalar>::type RealRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RealRowVectorType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^      RealRowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RealScalar	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LDLT
RealScalar	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LLT
RealScalar	plugin/Eigen/src/Cholesky/LLT.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::llt_inplace
RealScalar	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CholmodBase
RealScalar	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArrayBase
RealScalar	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseBase
RealScalar	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseCoeffsBase
RealScalar	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::RealScalar RealScalar;$/;"	t	class:Eigen::DiagonalBase
RealScalar	plugin/Eigen/src/Core/Dot.h	/^  typedef typename NumTraits<typename traits<Derived>::Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::lpNorm_selector
RealScalar	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MapBase
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::arg_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef T RealScalar;$/;"	t	struct:Eigen::internal::imag_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef T RealScalar;$/;"	t	struct:Eigen::internal::real_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef bool RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl_default
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_ref_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::norm1_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_ref_impl
RealScalar	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_default_impl
RealScalar	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::hypot_impl
RealScalar	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixBase
RealScalar	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::PlainObjectBase
RealScalar	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointView
RealScalar	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::RealScalar RealScalar;$/;"	t	class:Eigen::VectorwiseOp
RealScalar	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexEigenSolver
RealScalar	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexSchur
RealScalar	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::EigenSolver
RealScalar	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
RealScalar	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::HessenbergDecomposition
RealScalar	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealScalar	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tridiagonalization
RealScalar	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
RealScalar	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::Real               RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
RealScalar	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::QuaternionBase
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::BiCGSTAB
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ConjugateGradient
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar; $/;"	t	class:Eigen::IncompleteCholesky
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::IncompleteLUT
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::IterativeSolverBase
RealScalar	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
RealScalar	plugin/Eigen/src/Jacobi/Jacobi.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiRotation
RealScalar	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::KLU
RealScalar	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::partial_lu_impl
RealScalar	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::PastixBase
RealScalar	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pastix_traits
RealScalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLDLT
RealScalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLLT
RealScalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLU
RealScalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoImpl
RealScalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pardiso_traits
RealScalar	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RealScalar	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::FullPivHouseholderQR
RealScalar	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::HouseholderQR
RealScalar	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SPQR
RealScalar	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::BDCSVD
RealScalar	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiSVD
RealScalar	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
RealScalar	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SVDBase
RealScalar	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RealScalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholesky
RealScalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
RealScalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLDLT
RealScalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLLT
RealScalar	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector
RealScalar	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
RealScalar	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::CompressedStorage
RealScalar	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SparseMatrixBase
RealScalar	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename ResultType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
RealScalar	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::RealScalar RealScalar; $/;"	t	class:Eigen::SparseLU
RealScalar	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef typename ScalarVector::RealScalar RealScalar; $/;"	t	class:Eigen::internal::SparseLUImpl
RealScalar	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SparseQR
RealScalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperILU
RealScalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLU
RealScalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLUBase
RealScalar	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::UmfPackLU
RealSchur	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::RealSchur
RealSchur	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    explicit RealSchur(const EigenBase<InputType>& matrix, bool computeU = true)$/;"	f	class:Eigen::RealSchur
RealSchur	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^template<typename _MatrixType> class RealSchur$/;"	c	namespace:Eigen
RealVectorType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
ReduxReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    template<typename BinaryOp> struct ReduxReturnType$/;"	s	class:Eigen::VectorwiseOp
Ref	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(PlainObjectBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const DenseBase<Derived>& expr,$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const Ref& other) : Base(other) {$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC inline Ref(const RefBase<OtherRef>& other) {$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/Core/Ref.h	/^template<typename PlainObjectType, int Options, typename StrideType> class Ref$/;"	c	namespace:Eigen
Ref	plugin/Eigen/src/Core/Ref.h	/^template<typename TPlainObjectType, int Options, typename StrideType> class Ref<const TPlainObjectType, Options, StrideType>$/;"	c	namespace:Eigen
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(MappedSparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(SparseMatrix<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(SparseVector<MatScalar,OtherOptions,MatIndex>& expr)$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const Ref& other) : Base(other), m_hasCopy(false) {$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const RefBase<OtherRef>& other) : m_hasCopy(false) {$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseCompressedBase<Derived>& expr)$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    inline Ref(const SparseMatrixBase<Derived>& expr) : m_hasCopy(false)$/;"	f	class:Eigen::Ref
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^class Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType >$/;"	c	namespace:Eigen
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^class Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType >$/;"	c	namespace:Eigen
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^class Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^class Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType>$/;"	c	namespace:Eigen
RefBase	plugin/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC RefBase()$/;"	f	class:Eigen::RefBase
RefBase	plugin/Eigen/src/Core/Ref.h	/^template<typename Derived> class RefBase$/;"	c	namespace:Eigen
RefactoredXpr	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename helper::Xpr RefactoredXpr;$/;"	t	struct:Eigen::internal::product_evaluator
Replicate	plugin/Eigen/src/Core/Replicate.h	/^    inline Replicate(const OriginalMatrixType& matrix, Index rowFactor, Index colFactor)$/;"	f	class:Eigen::Replicate
Replicate	plugin/Eigen/src/Core/Replicate.h	/^    inline explicit Replicate(const OriginalMatrixType& matrix)$/;"	f	class:Eigen::Replicate
Replicate	plugin/Eigen/src/Core/Replicate.h	/^template<typename MatrixType,int RowFactor,int ColFactor> class Replicate$/;"	c	namespace:Eigen
ReplicateReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef Replicate<ExpressionType,(isVertical?Dynamic:1),(isHorizontal?Dynamic:1)> ReplicateReturnType;$/;"	t	class:Eigen::VectorwiseOp
RequireInitialization	plugin/Eigen/src/Core/NumTraits.h	/^    RequireInitialization = internal::is_arithmetic<T>::value ? 0 : 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon680
RequireInitialization	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^    RequireInitialization = false$/;"	e	enum:Eigen::NumTraits::__anon643
Res	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseResType>::type Res;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
ResAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<double> >::Alignment$/;"	e	enum:Eigen::internal::quat_conj::__anon713
ResAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<double> >::Alignment$/;"	e	enum:Eigen::internal::quat_product::__anon712
ResAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<float> >::Alignment$/;"	e	enum:Eigen::internal::quat_conj::__anon710
ResAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<Quaternion<float> >::Alignment$/;"	e	enum:Eigen::internal::quat_product::__anon709
ResAlignment	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^    ResAlignment = traits<typename plain_matrix_type<VectorLhs>::type>::Alignment$/;"	e	enum:Eigen::internal::cross3_impl::__anon711
ResPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResPacket ResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
ResPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,ScalarPacket,Scalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize   = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
ResPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Traits::ResPacketSize$/;"	e	enum:Eigen::internal::gebp_kernel::__anon311
ResPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
ResPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
ResPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
ResPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon299
ResPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon300
ResScalar	plugin/Eigen/src/Core/Dot.h	/^  typedef typename conj_prod::result_type ResScalar;$/;"	t	struct:Eigen::internal::dot_nocheck
ResScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_triangular_product
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::tribb_kernel
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::triangular_matrix_vector_product
ResultAlignment	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon160
ResultAlignment	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = traits<ResultType>::Alignment,$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon161
ResultMode	plugin/Eigen/src/Geometry/Transform.h	/^  enum { ResultMode = transform_product_result<LhsMode,RhsMode>::Mode };$/;"	e	enum:Eigen::internal::transform_transform_product_impl::__anon708
ResultScalar	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    ResultScalar;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^    typedef typename ProductType::ResultType ResultType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,ResultMode,LhsOptions> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Projective,Options> ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename MatrixType::PlainObject ResultType;$/;"	t	struct:Eigen::internal::transform_right_product_impl
ReturnByValue	plugin/Eigen/src/Core/ReturnByValue.h	/^template<typename Derived> class ReturnByValue$/;"	c	namespace:Eigen
ReturnOpposite	plugin/Eigen/src/Core/BandMatrix.h	/^        ReturnOpposite = (Options&SelfAdjoint) && (((Index)>0 && Supers==0) || ((Index)<0 && Subs==0)),$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon364
ReturnType	plugin/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::traits<Derived>::ReturnType ReturnType;$/;"	t	class:Eigen::ReturnByValue
ReturnType	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^                      typename Scalar_=Scalar> struct ReturnType$/;"	s	class:Eigen::VectorwiseOp
ReturnType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^  typedef MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::PlainObject ReturnType; \/\/ FIXME shall it be a BandMatrix?$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/Geometry/Homogeneous.h	/^                 MatrixTypeCleaned::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/Geometry/Homogeneous.h	/^                 Rhs::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,1> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	plugin/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,Dim> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	plugin/Eigen/src/Geometry/RotationBase.h	/^  typedef Transform<Scalar,Dim,Affine> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^      typedef typename SPQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^        SparseMatrix<Scalar,int(SrcStorageOrder)==RowMajor?ColMajor:RowMajor,StorageIndex> >::type ReturnType;$/;"	t	struct:Eigen::internal::permutation_matrix_product
ReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename SparseQRType::MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/misc/Image.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	plugin/Eigen/src/misc/Kernel.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
Reverse	plugin/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC explicit inline Reverse(const MatrixType& matrix) : m_matrix(matrix) { }$/;"	f	class:Eigen::Reverse
Reverse	plugin/Eigen/src/Core/Reverse.h	/^template<typename MatrixType, int Direction> class Reverse$/;"	c	namespace:Eigen
ReverseCol	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
ReverseCol	plugin/Eigen/src/Core/Reverse.h	/^      ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon336
ReverseFirstType	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef typename internal::aseq_reverse_first_type<FirstType,SizeType,IncrType>::type ReverseFirstType;$/;"	t	class:Eigen::ArithmeticSequence
ReverseIncrType	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef typename internal::aseq_negate<IncrType>::type ReverseIncrType;$/;"	t	class:Eigen::ArithmeticSequence
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    ReverseInnerIterator(const SparseCompressedBase& mat, Index outer)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit ReverseInnerIterator(const SparseCompressedBase& mat)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    explicit ReverseInnerIterator(const internal::CompressedStorage<Scalar,StorageIndex>& data)$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase<Derived>::ReverseInnerIterator$/;"	c	class:Eigen::SparseCompressedBase
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ReverseInnerIterator ReverseInnerIterator;$/;"	t	class:Eigen::SparseMatrix
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseVector.h	/^    typedef typename Base::ReverseInnerIterator ReverseInnerIterator;$/;"	t	class:Eigen::SparseVector
ReverseInnerIterator	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef typename SparseVectorType::ReverseInnerIterator ReverseInnerIterator;$/;"	t	struct:Eigen::internal::evaluator
ReversePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
ReversePacket	plugin/Eigen/src/Core/Reverse.h	/^      ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::Reverse::__anon336
ReverseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef Reverse<Derived, BothDirections> ReverseReturnType;$/;"	t	class:Eigen::DenseBase
ReverseReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef Reverse<ExpressionType, Direction> ReverseReturnType;$/;"	t	class:Eigen::VectorwiseOp
ReverseRow	plugin/Eigen/src/Core/CoreEvaluators.h	/^    ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::internal::unary_evaluator::__anon520
ReverseRow	plugin/Eigen/src/Core/Reverse.h	/^      ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon336
Rhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_all<RhsType>::type Rhs;$/;"	t	class:Eigen::CwiseBinaryOp
Rhs	plugin/Eigen/src/Core/Product.h	/^    typedef _Rhs Rhs;$/;"	t	class:Eigen::Product
Rhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,RhsMode,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseRhsType>::type Rhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
RhsAlignment	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsAlignment = EIGEN_PLAIN_ENUM_MIN(RhsEtorType::Alignment,RhsVecPacketSize*int(sizeof(typename RhsNestedCleaned::Scalar))),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsArg	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::Rhs RhsArg;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsBlasTraits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsBlasTraits	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsBlasTraits	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef internal::blas_traits<Rhs> RhsBlasTraits;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
RhsCleaned	plugin/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Rhs>::type RhsCleaned;$/;"	t	struct:Eigen::internal::traits
RhsCoeffReadCost	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsCoeffReadCost = RhsEtorType::CoeffReadCost,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsEtorType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef evaluator<RhsNestedCleaned> RhsEtorType;$/;"	t	struct:Eigen::internal::product_evaluator
RhsEval	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef evaluator<ActualRhs> RhsEval;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
RhsEvaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef evaluator<RhsArg> RhsEvaluator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsFlags	plugin/Eigen/src/Core/CoreEvaluators.h	/^    RhsFlags = evaluator<Rhs>::Flags,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
RhsFlags	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsFlags = RhsEtorType::Flags,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsIsSelfAdjoint	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsSelfAdjoint = (RhsMode&SelfAdjoint)==SelfAdjoint$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon292
RhsIsUpper	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsUpper = (RhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon292
RhsIsVectorAtCompileTime	plugin/Eigen/src/Core/SolveTriangular.h	/^      RhsIsVectorAtCompileTime = (Side==OnTheLeft ? Rhs::ColsAtCompileTime : Rhs::RowsAtCompileTime)==1$/;"	e	enum:Eigen::internal::trsolve_traits::__anon340
RhsIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<Rhs>::InnerIterator  RhsIterator;$/;"	t	struct:Eigen::internal::binary_evaluator
RhsIterator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename evaluator<RhsArg>::InnerIterator  RhsIterator;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
RhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::ref_selector<RhsType>::type RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
RhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::ref_selector<Rhs>::type RhsNested;$/;"	t	class:Eigen::Product
RhsNested	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::nested_eval<Rhs,Lhs::RowsAtCompileTime>::type RhsNested;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNested	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename nested_eval<Rhs,1>::type RhsNested;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsNested	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNested;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
RhsNestedCleaned	plugin/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	class:Eigen::Product
RhsNestedCleaned	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::product_evaluator
RhsNestedCleaned	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::triangular_solve_retval
RhsOuterStrideBytes	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsOuterStrideBytes = int(RhsNestedCleaned::OuterStrideAtCompileTime) * int(sizeof(typename RhsNestedCleaned::Scalar)),$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
RhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacketType,Scalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon299
RhsPacketSize	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon300
RhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress   = Traits::RhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon311
RhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
RhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
RhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
RhsProgress	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
RhsRowMajor	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsRowMajor = RhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsScalar	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
RhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
RhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_LhsScalar,_RhsScalar>::type RhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
RhsScalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::generic_product_impl
RhsTraits	plugin/Eigen/src/Core/Product.h	/^  typedef traits<RhsCleaned> RhsTraits;$/;"	t	struct:Eigen::internal::traits
RhsUpLo	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  enum { RhsUpLo = RhsMode&(Upper|Lower)  };$/;"	e	enum:Eigen::internal::selfadjoint_product_impl::__anon294
RhsVecPacketSize	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RhsVecPacketSize = unpacket_traits<RhsVecPacketType>::size,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
RhsVecPacketType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename find_best_packet<Scalar,ColsAtCompileTime>::type RhsVecPacketType;$/;"	t	struct:Eigen::internal::product_evaluator
RhsVectors	plugin/Eigen/src/Core/SolveTriangular.h	/^      RhsVectors  = RhsIsVectorAtCompileTime ? 1 : Dynamic$/;"	e	enum:Eigen::internal::trsolve_traits::__anon341
Rotation2D	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Rotation2D() {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC explicit Rotation2D(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::Rotation2D
Rotation2D	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC explicit inline Rotation2D(const Scalar& a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	plugin/Eigen/src/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2Dd	plugin/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Df	plugin/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
RotationBase	plugin/Eigen/src/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationMatrixType	plugin/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RoundReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_round_op<Scalar>, const Derived> RoundReturnType;$/;"	t
RowIncr	plugin/Eigen/src/Core/IndexedView.h	/^    RowIncr = int(get_compile_time_incr<RowIndices>::value),$/;"	e	enum:Eigen::internal::traits::__anon314
RowIndicesT	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^operator()(const RowIndicesT (&rowIndices)[RowIndicesN], const ColIndices& colIndices) EIGEN_INDEXED_VIEW_METHOD_CONST$/;"	v
RowIndicesT	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^operator()(const RowIndicesT (&rowIndices)[RowIndicesN], const ColIndicesT (&colIndices)[ColIndicesN]) EIGEN_INDEXED_VIEW_METHOD_CONST$/;"	v
RowMajor	plugin/Eigen/src/Core/util/Constants.h	/^  RowMajor = 0x1,  \/\/ it is only a coincidence that this is equal to RowMajorBit -- don't rely on that$/;"	e	enum:Eigen::StorageOptions
RowMajorBit	plugin/Eigen/src/Core/util/Constants.h	/^const unsigned int RowMajorBit = 0x1;$/;"	m	namespace:Eigen
RowType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowType;$/;"	t	class:Eigen::JacobiSVD
RowVectorType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RowVectorType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
RowVectorType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
RowVectorType	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::HouseholderQR
RowVectorType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, 1, ColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RowXpr	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::RowXpr RowXpr;$/;"	t	class:Eigen::MatrixBase
RowXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowXpr;$/;"	t
Rows	plugin/Eigen/src/Core/GeneralProduct.h	/^    Rows    = traits<_Lhs>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon528
Rows	plugin/Eigen/src/Geometry/Homogeneous.h	/^    Rows = Lhs::RowsAtCompileTime$/;"	e	enum:Eigen::internal::homogeneous_right_product_refactoring_helper::__anon683
Rows	plugin/Eigen/src/Geometry/Transform.h	/^    Rows = int(Mode)==(AffineCompact) ? Dim : HDim$/;"	e	enum:Eigen::Transform::__anon702
RowsAtCompileTime	plugin/Eigen/src/Cholesky/LDLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon130
RowsAtCompileTime	plugin/Eigen/src/Cholesky/LLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon128
RowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
RowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon365
RowsAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon366
RowsAtCompileTime	plugin/Eigen/src/Core/Block.h	/^    RowsAtCompileTime = MatrixRows == 0 ? 0 : BlockRows,$/;"	e	enum:Eigen::internal::traits::__anon562
RowsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = PlainObjectType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon501
RowsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon513
RowsAtCompileTime	plugin/Eigen/src/Core/CoreEvaluators.h	/^    RowsAtCompileTime = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::evaluator::__anon512
RowsAtCompileTime	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
RowsAtCompileTime	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon556
RowsAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
RowsAtCompileTime	plugin/Eigen/src/Core/Diagonal.h	/^    RowsAtCompileTime = (int(DiagIndex) == DynamicIndex || int(MatrixType::SizeAtCompileTime) == Dynamic) ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon346
RowsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^      RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon343
RowsAtCompileTime	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon345
RowsAtCompileTime	plugin/Eigen/src/Core/IndexedView.h	/^    RowsAtCompileTime = int(array_size<RowIndices>::value),$/;"	e	enum:Eigen::internal::traits::__anon314
RowsAtCompileTime	plugin/Eigen/src/Core/MapBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon359
RowsAtCompileTime	plugin/Eigen/src/Core/Matrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon677
RowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = PermTraits::RowsAtCompileTime,$/;"	e	enum:Eigen::InverseImpl::__anon334
RowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon332
RowsAtCompileTime	plugin/Eigen/src/Core/PermutationMatrix.h	/^    RowsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon333
RowsAtCompileTime	plugin/Eigen/src/Core/Product.h	/^    RowsAtCompileTime    = LhsTraits::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon175
RowsAtCompileTime	plugin/Eigen/src/Core/ProductEvaluators.h	/^    RowsAtCompileTime = LhsNestedCleaned::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_evaluator::__anon318
RowsAtCompileTime	plugin/Eigen/src/Core/Replicate.h	/^    RowsAtCompileTime = RowFactor==Dynamic || int(MatrixType::RowsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon349
RowsAtCompileTime	plugin/Eigen/src/Core/Reverse.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon335
RowsAtCompileTime	plugin/Eigen/src/Core/Select.h	/^    RowsAtCompileTime = ConditionMatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon679
RowsAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
RowsAtCompileTime	plugin/Eigen/src/Core/Transpose.h	/^    RowsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon184
RowsAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
RowsAtCompileTime	plugin/Eigen/src/Core/VectorwiseOp.h	/^    RowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
RowsAtCompileTime	plugin/Eigen/src/Core/Visitor.h	/^    RowsAtCompileTime = XprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_evaluator::__anon286
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon146
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon151
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon150
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::GeneralizedEigenSolver::__anon152
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^        RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealQZ::__anon145
RowsAtCompileTime	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon149
RowsAtCompileTime	plugin/Eigen/src/Geometry/Homogeneous.h	/^    RowsAtCompileTime = Direction==Vertical  ?  RowsPlusOne : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon681
RowsAtCompileTime	plugin/Eigen/src/Geometry/Transform.h	/^    RowsAtCompileTime = _Mode==Projective ? Dim1 : _Dim,$/;"	e	enum:Eigen::internal::traits::__anon701
RowsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^      RowsAtCompileTime = internal::traits<HouseholderSequence>::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon722
RowsAtCompileTime	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    RowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon721
RowsAtCompileTime	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon719
RowsAtCompileTime	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::CompleteOrthogonalDecomposition::__anon717
RowsAtCompileTime	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon715
RowsAtCompileTime	plugin/Eigen/src/QR/HouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon720
RowsAtCompileTime	plugin/Eigen/src/SVD/BDCSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime, $/;"	e	enum:Eigen::BDCSVD::__anon139
RowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon138
RowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon134
RowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon135
RowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon136
RowsAtCompileTime	plugin/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon137
RowsAtCompileTime	plugin/Eigen/src/SVD/SVDBase.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SVDBase::__anon131
RowsAtCompileTime	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon140
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon76
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon77
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSelfAdjointView>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon57
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      RowsAtCompileTime = internal::traits<SparseSymmetricPermutationProduct>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseSymmetricPermutationProduct::__anon58
RowsAtCompileTime	plugin/Eigen/src/SparseCore/SparseVector.h	/^    RowsAtCompileTime = IsColVector ? Dynamic : 1,$/;"	e	enum:Eigen::internal::traits::__anon89
RowsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^      RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon118
RowsAtCompileTime	plugin/Eigen/src/SparseQR/SparseQR.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::SparseQRMatrixQReturnType::__anon120
RowsBlockXpr	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowsBlockXpr;$/;"	t
RowsPlusOne	plugin/Eigen/src/Geometry/Homogeneous.h	/^    RowsPlusOne = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon681
RowwiseReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Horizontal> RowwiseReturnType;$/;"	t	class:Eigen::DenseBase
RsqrtReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_rsqrt_op<Scalar>, const Derived> RsqrtReturnType;$/;"	t
SAccPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::AccPacket SAccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SCMatrix	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef internal::MappedSuperNodalMatrix<Scalar, StorageIndex> SCMatrix;$/;"	t	class:Eigen::SparseLU
SDP_AsCwiseProduct	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsCwiseProduct$/;"	e	enum:Eigen::internal::__anon54
SDP_AsScalarProduct	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  SDP_AsScalarProduct,$/;"	e	enum:Eigen::internal::__anon54
SECRET_NUM	include/darknet.h	8;"	d
SEG	include/darknet.h	/^    SSE, MASKED, L1, SEG, SMOOTH$/;"	e	enum:__anon729
SEGMENTATION_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
SELFADJOINTVIEW_ACCEPTS_UPPER_AND_LOWER_MODE_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        SELFADJOINTVIEW_ACCEPTS_UPPER_AND_LOWER_MODE_ONLY=1$/;"	e	enum:Eigen::internal::static_assertion::__anon487
SHORTCUT	include/darknet.h	/^    SHORTCUT,$/;"	e	enum:__anon728
SHORTCUT_LAYER_H	src/shortcut_layer.h	2;"	d
SIG	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
SLIB	Makefile	/^SLIB=libdarknet.so$/;"	m
SLhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::LhsPacket SLhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SMOOTH	include/darknet.h	/^    SSE, MASKED, L1, SEG, SMOOTH$/;"	e	enum:__anon729
SOFTMAX	include/darknet.h	/^    SOFTMAX,$/;"	e	enum:__anon728
SOFTMAX_LAYER_H	src/softmax_layer.h	2;"	d
SPARSELU_COLUMN_BMOD_H	plugin/Eigen/src/SparseLU/SparseLU_column_bmod.h	32;"	d
SPARSELU_COLUMN_DFS_H	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	31;"	d
SPARSELU_COPY_TO_UCOL_H	plugin/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	30;"	d
SPARSELU_HEAP_RELAX_SNODE_H	plugin/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	29;"	d
SPARSELU_IMPL_H	plugin/Eigen/src/SparseLU/SparseLUImpl.h	10;"	d
SPARSELU_KERNEL_BMOD_H	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	12;"	d
SPARSELU_PANEL_BMOD_H	plugin/Eigen/src/SparseLU/SparseLU_panel_bmod.h	32;"	d
SPARSELU_PANEL_DFS_H	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	31;"	d
SPARSELU_PIVOTL_H	plugin/Eigen/src/SparseLU/SparseLU_pivotL.h	31;"	d
SPARSELU_PRUNEL_H	plugin/Eigen/src/SparseLU/SparseLU_pruneL.h	31;"	d
SPARSELU_RELAX_SNODE_H	plugin/Eigen/src/SparseLU/SparseLU_relax_snode.h	29;"	d
SPARSE_COLETREE_H	plugin/Eigen/src/SparseCore/SparseColEtree.h	32;"	d
SPQR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQR() $/;"	f	class:Eigen::SPQR
SPQR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    explicit SPQR(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
SPQR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^class SPQR : public SparseSolverBase<SPQR<_MatrixType> >$/;"	c	namespace:Eigen
SPQRMatrixQReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQReturnType
SPQRMatrixQReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQReturnType{$/;"	s	namespace:Eigen
SPQRMatrixQTransposeReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType(const SPQRType& spqr) : m_spqr(spqr) {}$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
SPQRMatrixQTransposeReturnType	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQRMatrixQTransposeReturnType{$/;"	s	namespace:Eigen
SPQR_QProduct	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct(const SPQRType& spqr, const Derived& other, bool transpose) : m_spqr(spqr),m_other(other),m_transpose(transpose) {}$/;"	f	struct:Eigen::SPQR_QProduct
SPQR_QProduct	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^struct SPQR_QProduct : ReturnByValue<SPQR_QProduct<SPQRType,Derived> >$/;"	s	namespace:Eigen
SPQR_free	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void SPQR_free()$/;"	f	class:Eigen::SPQR
SResPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResPacket SResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SResScalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::ResScalar SResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
SRhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename SwappedTraits::RhsPacket SRhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
SSE	include/darknet.h	/^    SSE, MASKED, L1, SEG, SMOOTH$/;"	e	enum:__anon729
SSE	plugin/Eigen/src/Core/util/Constants.h	/^    SSE = 0x1,$/;"	e	enum:Eigen::Architecture::Type
STAIR	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
STBIDEF	src/stb_image.h	410;"	d
STBIDEF	src/stb_image.h	412;"	d
STBIW_ASSERT	src/stb_image_write.h	126;"	d
STBIW_FREE	src/stb_image_write.h	117;"	d
STBIW_MALLOC	src/stb_image_write.h	115;"	d
STBIW_MEMMOVE	src/stb_image_write.h	120;"	d
STBIW_REALLOC	src/stb_image_write.h	116;"	d
STBI_ASSERT	src/stb_image.h	575;"	d
STBI_FREE	src/stb_image.h	633;"	d
STBI_HAS_LROTL	src/stb_image.h	613;"	d
STBI_INCLUDE_STB_IMAGE_H	src/stb_image.h	215;"	d
STBI_MALLOC	src/stb_image.h	631;"	d
STBI_NEON	src/stb_image.h	720;"	d
STBI_NOTUSED	src/stb_image.h	607;"	d
STBI_NOTUSED	src/stb_image.h	609;"	d
STBI_NO_BMP	src/stb_image.h	533;"	d
STBI_NO_GIF	src/stb_image.h	542;"	d
STBI_NO_HDR	src/stb_image.h	545;"	d
STBI_NO_JPEG	src/stb_image.h	527;"	d
STBI_NO_PIC	src/stb_image.h	548;"	d
STBI_NO_PNG	src/stb_image.h	530;"	d
STBI_NO_PNM	src/stb_image.h	551;"	d
STBI_NO_PSD	src/stb_image.h	536;"	d
STBI_NO_SIMD	src/stb_image.h	649;"	d
STBI_NO_SIMD	src/stb_image.h	664;"	d
STBI_NO_TGA	src/stb_image.h	539;"	d
STBI_NO_ZLIB	src/stb_image.h	556;"	d
STBI_REALLOC	src/stb_image.h	632;"	d
STBI_SIMD_ALIGN	src/stb_image.h	694;"	d
STBI_SIMD_ALIGN	src/stb_image.h	702;"	d
STBI_SIMD_ALIGN	src/stb_image.h	726;"	d
STBI_SIMD_ALIGN	src/stb_image.h	730;"	d
STBI_SSE2	src/stb_image.h	668;"	d
STBI_VERSION	src/stb_image.h	391;"	d
STBI__BYTECAST	src/stb_image.h	1300;"	d
STBI__F_avg	src/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon19
STBI__F_avg_first	src/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon19
STBI__F_none	src/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon19
STBI__F_paeth	src/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon19
STBI__F_paeth_first	src/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon19
STBI__F_sub	src/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon19
STBI__F_up	src/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon19
STBI__HDR_BUFLEN	src/stb_image.h	5795;"	d
STBI__IDCT_1D	src/stb_image.h	1909;"	d
STBI__MARKER_none	src/stb_image.h	2394;"	d
STBI__PNG_TYPE	src/stb_image.h	4295;"	d
STBI__RESTART	src/stb_image.h	2411;"	d
STBI__SCAN_header	src/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon10
STBI__SCAN_load	src/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon10
STBI__SCAN_type	src/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon10
STBI__X64_TARGET	src/stb_image.h	638;"	d
STBI__X86_TARGET	src/stb_image.h	640;"	d
STBI__ZFAST_BITS	src/stb_image.h	3437;"	d
STBI__ZFAST_MASK	src/stb_image.h	3438;"	d
STBI_default	src/stb_image.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon7
STBI_grey	src/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon7
STBI_grey_alpha	src/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon7
STBI_rgb	src/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon7
STBI_rgb_alpha	src/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon7
STB_IMAGE_IMPLEMENTATION	src/image.c	8;"	d	file:
STB_IMAGE_WRITE_IMPLEMENTATION	src/image.c	10;"	d	file:
STEP	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
STEPS	include/darknet.h	/^    CONSTANT, STEP, EXP, POLY, STEPS, SIG, RANDOM$/;"	e	enum:__anon731
STORAGE_INDEX_MUST_MATCH	plugin/Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_INDEX_MUST_MATCH=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
STORAGE_KIND_MUST_MATCH	plugin/Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_KIND_MUST_MATCH=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
STORAGE_LAYOUT_DOES_NOT_MATCH	plugin/Eigen/src/Core/util/StaticAssert.h	/^        STORAGE_LAYOUT_DOES_NOT_MATCH=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
STUDY_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
SUB	include/darknet.h	/^    MULT, ADD, SUB, DIV$/;"	e	enum:__anon727
SUPER_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
SVA_Inner	plugin/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Inner,$/;"	e	enum:Eigen::internal::__anon90
SVA_Outer	plugin/Eigen/src/SparseCore/SparseVector.h	/^  SVA_Outer$/;"	e	enum:Eigen::internal::__anon90
SVA_RuntimeSwitch	plugin/Eigen/src/SparseCore/SparseVector.h	/^  SVA_RuntimeSwitch,$/;"	e	enum:Eigen::internal::__anon90
SVD	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<MatrixType, QRPreconditioner> SVD;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
SVDBase	plugin/Eigen/src/SVD/SVDBase.h	/^  SVDBase()$/;"	f	class:Eigen::SVDBase
SVDBase	plugin/Eigen/src/SVD/SVDBase.h	/^class SVDBase$/;"	c	namespace:Eigen
SWAG_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
SameType	plugin/Eigen/src/Core/CoreEvaluators.h	/^    SameType = is_same<typename Arg1::Scalar,typename Arg2::Scalar>::value && is_same<typename Arg1::Scalar,typename Arg3::Scalar>::value,$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
SameType	plugin/Eigen/src/Core/CoreEvaluators.h	/^    SameType = is_same<typename Lhs::Scalar,typename Rhs::Scalar>::value,$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
SameType	plugin/Eigen/src/Core/ProductEvaluators.h	/^    SameType = is_same<typename LhsNestedCleaned::Scalar,typename RhsNestedCleaned::Scalar>::value,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
Scalar	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LDLT
Scalar	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LLT
Scalar	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CholmodBase
Scalar	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::ArrayBase
Scalar	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename DstEvaluatorType::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrix
Scalar	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Scalar	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixBase
Scalar	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::CommaInitializer
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename ArgType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator_wrapper_base
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename PlainObjectType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::block_evaluator
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::mapbase_evaluator
Scalar	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef typename internal::traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::InnerIterator
Scalar	plugin/Eigen/src/Core/CoreIterators.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	class:Eigen::internal::inner_iterator_selector
Scalar	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^      const typename Arg3::Scalar&)>::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/CwiseUnaryView.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseBase
Scalar	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseCoeffsBase
Scalar	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalMatrix
Scalar	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	class:Eigen::DiagonalBase
Scalar	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/IndexedView.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::Scalar                            Scalar;$/;"	t	class:Eigen::Inverse
Scalar	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::InverseImpl
Scalar	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	plugin/Eigen/src/Core/Matrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/MatrixBase.h	/^      typedef typename ScalarBinaryOpTraits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
Scalar	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MatrixBase
Scalar	plugin/Eigen/src/Core/NoAlias.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::NoAlias
Scalar	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef void Scalar;$/;"	t	class:Eigen::PermutationBase
Scalar	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef void Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::PlainObjectBase
Scalar	plugin/Eigen/src/Core/Product.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::dense_product_base
Scalar	plugin/Eigen/src/Core/Product.h	/^  typedef typename ScalarBinaryOpTraits<typename traits<LhsCleaned>::Scalar, typename traits<RhsCleaned>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/ProductEvaluators.h	/^   typedef typename ScalarBinaryOpTraits<typename MatrixType::Scalar, typename DiagonalType::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::diagonal_product_evaluator_base
Scalar	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl_base
Scalar	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::product_evaluator
Scalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_impl
Scalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_novec_unroller
Scalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
Scalar	plugin/Eigen/src/Core/Redux.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::redux_evaluator
Scalar	plugin/Eigen/src/Core/Replicate.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/Reverse.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::Scalar Scalar; $/;"	t	class:Eigen::SelfAdjointView
Scalar	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	plugin/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Scalar	plugin/Eigen/src/Core/SolverBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SolverBase
Scalar	plugin/Eigen/src/Core/Swap.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
Scalar	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::TriangularBase
Scalar	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Scalar Scalar;$/;"	t	class:Eigen::TriangularView
Scalar	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::Scalar Scalar;$/;"	t	class:Eigen::TriangularViewImpl
Scalar	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
Scalar	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Kernel::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_assignment_loop
Scalar	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::VectorwiseOp
Scalar	plugin/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::result_type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar; $/;"	t	struct:Eigen::internal::max_coeff_visitor
Scalar	plugin/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::coeff_visitor
Scalar	plugin/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Scalar	plugin/Eigen/src/Core/Visitor.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::visitor_evaluator
Scalar	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  Scalar;$/;"	t	class:Eigen::internal::gebp_traits
Scalar	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::selfadjoint_product_impl
Scalar	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef std::complex<RealScalar> Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename NestedXpr::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexEigenSolver
Scalar	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexSchur
Scalar	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::EigenSolver
Scalar	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GeneralizedEigenSolver
Scalar	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HessenbergDecomposition
Scalar	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealQZ
Scalar	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealSchur
Scalar	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Scalar	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::Scalar Scalar;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
Scalar	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::Tridiagonalization
Scalar	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Scalar	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef _Scalar                                   Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename traits<Derived>::Scalar Scalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Scalar	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::Map
Scalar	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Scalar	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::QuaternionBase
Scalar	plugin/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	plugin/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Geometry/RotationBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	plugin/Eigen/src/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::UniformScaling
Scalar	plugin/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	plugin/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::traits<HouseholderSequence>::Scalar Scalar;$/;"	t	class:Eigen::HouseholderSequence
Scalar	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalPreconditioner
Scalar	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::LeastSquareDiagonalPreconditioner
Scalar	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BiCGSTAB
Scalar	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ConjugateGradient
Scalar	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLUT
Scalar	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterativeSolverBase
Scalar	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LeastSquaresConjugateGradient
Scalar	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef typename internal::traits<SolveWithGuess>::Scalar Scalar;$/;"	t	class:Eigen::SolveWithGuess
Scalar	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::KLU
Scalar	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PastixBase
Scalar	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pastix_traits
Scalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLDLT
Scalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLLT
Scalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLU
Scalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PardisoImpl
Scalar	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pardiso_traits
Scalar	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ColPivHouseholderQR
Scalar	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
Scalar	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivHouseholderQR
Scalar	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HouseholderQR
Scalar	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SPQR
Scalar	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::Scalar Scalar;$/;"	t	struct:Eigen::SPQR_QProduct
Scalar	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BDCSVD
Scalar	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::JacobiSVD
Scalar	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Scalar	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Scalar	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SVDBase
Scalar	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholesky
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLDLT
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLLT
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                             Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                         Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector
Scalar	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
Scalar	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::CompressedStorage
Scalar	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename LhsCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MappedSparseMatrix
Scalar	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef typename DstXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::Assignment
Scalar	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::binary_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename ProdXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_dense_outer_product_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Product<Lhs,Rhs>::Scalar Scalar;$/;"	t	struct:Eigen::internal::generic_product_impl
Scalar	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SparseMapBase
Scalar	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SparseMatrixBase
Scalar	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::permutation_matrix_product
Scalar	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSelfAdjointView
Scalar	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Scalar	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::internal::SparseTransposeImpl
Scalar	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	plugin/Eigen/src/SparseCore/SparseView.h	/^        typedef typename XprType::Scalar Scalar;$/;"	t	class:Eigen::internal::unary_evaluator::InnerIterator
Scalar	plugin/Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::unary_evaluator
Scalar	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
Scalar	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Scalar	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::Scalar Scalar; $/;"	t	class:Eigen::SparseLU
Scalar	plugin/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MappedSupernodalType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixLReturnType
Scalar	plugin/Eigen/src/SparseLU/SparseLU.h	/^  typedef typename MatrixLType::Scalar Scalar;$/;"	t	struct:Eigen::SparseLUMatrixUReturnType
Scalar	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _Scalar Scalar; $/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
Scalar	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename ScalarVector::Scalar Scalar;$/;"	t	struct:Eigen::internal::column_dfs_traits
Scalar	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseQR
Scalar	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::Scalar Scalar;$/;"	t	struct:Eigen::internal::Assignment
Scalar	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQRMatrixQReturnType
Scalar	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename SparseQRType::Scalar Scalar;$/;"	t	struct:Eigen::SparseQR_QProduct
Scalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperILU
Scalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperLU
Scalar	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SuperLUBase
Scalar	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::UmfPackLU
ScalarIsComplex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^      ScalarIsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::PardisoImpl::__anon28
ScalarMatrix	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic,ColMajor> ScalarMatrix;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type     ScalarPacket;$/;"	t	class:Eigen::internal::gebp_traits
ScalarPointer	plugin/Eigen/src/SparseCore/SparseMap.h	/^                         Scalar *, const Scalar *>::type ScalarPointer;$/;"	t	class:Eigen::SparseMapBase
ScalarTraits	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef NumTraits<Scalar>                         ScalarTraits;$/;"	t	class:Eigen::AlignedBox
ScalarTypeMatch	plugin/Eigen/src/Core/Ref.h	/^      ScalarTypeMatch = internal::is_same<typename PlainObjectType::Scalar, typename Derived::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::match::__anon561
ScalarVector	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef typename Base::ScalarVector ScalarVector;$/;"	t	class:Eigen::SparseMatrix
ScalarVector	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseMatrixBase
ScalarVector	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::SparseLU
ScalarVector	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::SparseLUImpl
ScalarVector	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef Matrix<Scalar,Dynamic,1> ScalarVector;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
ScalarVector	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef Matrix<Scalar, Dynamic, 1> ScalarVector;$/;"	t	class:Eigen::SparseQR
ScalarWithConstIfNotLvalue	plugin/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::ArrayWrapper
ScalarWithConstIfNotLvalue	plugin/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MatrixWrapper
ScalarWithConstIfNotLvalue	plugin/Eigen/src/Core/Diagonal.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::Diagonal
ScalarWithConstIfNotLvalue	plugin/Eigen/src/Core/MapBase.h	/^                  >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MapBase
ScalarWithConstIfNotLvalue	plugin/Eigen/src/Core/Transpose.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::TransposeImpl
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline DiagonalMatrix<Scalar,2> Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	namespace:Eigen
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline DiagonalMatrix<Scalar,3> Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	namespace:Eigen
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<double> Scaling(double s) { return UniformScaling<double>(s); }$/;"	f	namespace:Eigen
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<float> Scaling(float s) { return UniformScaling<float>(s); }$/;"	f	namespace:Eigen
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline UniformScaling<std::complex<RealScalar> > Scaling(const std::complex<RealScalar>& s)$/;"	f	namespace:Eigen
Scaling	plugin/Eigen/src/Geometry/Scaling.h	/^inline const DiagonalWrapper<const Derived> Scaling(const MatrixBase<Derived>& coeffs)$/;"	f	namespace:Eigen
Score_is_abs	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef void Score_is_abs;$/;"	t	struct:Eigen::internal::scalar_score_coeff_op
SegmentReturnType	plugin/Eigen/src/plugins/BlockMethods.h	/^typedef VectorBlock<Derived> SegmentReturnType;$/;"	t
Select	plugin/Eigen/src/Core/Select.h	/^    Select(const ConditionMatrixType& a_conditionMatrix,$/;"	f	class:Eigen::Select
Select	plugin/Eigen/src/Core/Select.h	/^class Select : public internal::dense_xpr_base< Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >::type,$/;"	c	namespace:Eigen
Selector	plugin/Eigen/src/Core/GenericPacketMath.h	/^template <size_t N> struct Selector {$/;"	s	namespace:Eigen::internal
SelfAdjoint	plugin/Eigen/src/Core/util/Constants.h	/^  SelfAdjoint=0x10,$/;"	e	enum:Eigen::UpLoType
SelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver()$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    explicit SelfAdjointEigenSolver(const EigenBase<InputType>& matrix, int options = ComputeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename _MatrixType> class SelfAdjointEigenSolver$/;"	c	namespace:Eigen
SelfAdjointShape	plugin/Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	s	namespace:Eigen
SelfAdjointView	plugin/Eigen/src/Core/SelfAdjointView.h	/^    explicit inline SelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SelfAdjointView
SelfAdjointView	plugin/Eigen/src/Core/SelfAdjointView.h	/^template<typename _MatrixType, unsigned int UpLo> class SelfAdjointView$/;"	c	namespace:Eigen
SelfAdjointViewReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
SelfAdjointViewReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::SparseMatrixBase
Sequential	plugin/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	e	enum:Eigen::Sequential_t
SequentialLinSpacedReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,PacketScalar>,PlainObject> SequentialLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
Sequential_t	plugin/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	g	namespace:Eigen
SetAction	plugin/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
SetDiag	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon305
SetDiag	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon306
Shape	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef BandShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef typename storage_kind_to_shape<typename traits<T>::StorageKind>::Shape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits_base
Shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<SolverStorage>          { typedef SolverShape Shape;           };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef SelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename glue_shapes<typename evaluator_traits<MatrixType>::Shape, TriangularShape>::type Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef HomogeneousShape Shape;  $/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequenceShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::storage_kind_to_shape
Shape	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSelfAdjointShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Shape	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseShape Shape;$/;"	t	struct:Eigen::internal::evaluator_traits
Side	plugin/Eigen/src/Core/ProductEvaluators.h	/^  enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };$/;"	e	enum:Eigen::internal::generic_product_impl::__anon317
SideType	plugin/Eigen/src/Core/util/Constants.h	/^enum SideType {$/;"	g	namespace:Eigen
SignMatrix	plugin/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	g	namespace:Eigen::internal
SignReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sign_op<Scalar>, const Derived> SignReturnType;$/;"	t
SimplicialCholesky	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky() : Base(), m_LDLT(true) {}$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialCholesky : public SimplicialCholeskyBase<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialCholesky	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholesky(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholeskyBase	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialCholeskyBase(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^class SimplicialCholeskyBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
SimplicialCholeskyLDLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLDLT$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyLLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLLT,$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyMode	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^enum SimplicialCholeskyMode {$/;"	g	namespace:Eigen
SimplicialLDLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT() : Base() {}$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLDLT : public SimplicialCholeskyBase<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLDLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT() : Base() {}$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLLT : public SimplicialCholeskyBase<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	c	namespace:Eigen
SimplicialLLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    explicit SimplicialLLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
SinReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sin_op<Scalar>, const Derived> SinReturnType;$/;"	t
SingleRange	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  SingleRange(Index val) : m_value(val) {}$/;"	f	struct:Eigen::internal::SingleRange
SingleRange	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct SingleRange {$/;"	s	namespace:Eigen::internal
SingletonVector	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^        SingletonVector(Index i, Index v)$/;"	f	class:Eigen::SparseMatrix::SingletonVector
SingletonVector	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    class SingletonVector$/;"	c	class:Eigen::SparseMatrix
SingularValuesType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::BDCSVD
SingularValuesType	plugin/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename Base::SingularValuesType SingularValuesType;$/;"	t	class:Eigen::JacobiSVD
SingularValuesType	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef typename internal::plain_diag_type<MatrixType, RealScalar>::type SingularValuesType;$/;"	t	class:Eigen::SVDBase
SinhReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sinh_op<Scalar>, const Derived> SinhReturnType;$/;"	t
Size	plugin/Eigen/src/Core/Redux.h	/^    Size = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_impl::__anon377
Size	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon153
Size	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon144
Size	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon148
SizeA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeA = ActualRows * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon296
SizeAtCompileTime	plugin/Eigen/src/Core/ArithmeticSequence.h	/^    SizeAtCompileTime = internal::get_fixed_value<SizeType>::value,$/;"	e	enum:Eigen::ArithmeticSequence::__anon524
SizeAtCompileTime	plugin/Eigen/src/Core/BandMatrix.h	/^      SizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime)$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon363
SizeAtCompileTime	plugin/Eigen/src/Core/DenseBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon564
SizeAtCompileTime	plugin/Eigen/src/Core/MapBase.h	/^      SizeAtCompileTime = Base::SizeAtCompileTime$/;"	e	enum:Eigen::MapBase::__anon359
SizeAtCompileTime	plugin/Eigen/src/Core/Redux.h	/^    SizeAtCompileTime = XprType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_evaluator::__anon378
SizeAtCompileTime	plugin/Eigen/src/Core/SolverBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SolverBase::__anon348
SizeAtCompileTime	plugin/Eigen/src/Core/TriangularMatrix.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon177
SizeAtCompileTime	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^    SizeAtCompileTime = 1$/;"	e	enum:Eigen::internal::SingleRange::__anon385
SizeAtCompileTime	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  enum { SizeAtCompileTime = XprSize };$/;"	e	enum:Eigen::internal::AllRange::__anon387
SizeAtCompileTime	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
SizeB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeB = ActualCols * MaxDepth$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon296
SizeMinusOne	plugin/Eigen/src/Core/MatrixBase.h	/^      SizeMinusOne = SizeAtCompileTime==Dynamic ? Dynamic : SizeAtCompileTime-1$/;"	e	enum:Eigen::MatrixBase::__anon672
SizeMinusOne	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : Size - 1,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon153
SizeMinusOne	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : (Size > 1 ? Size - 1 : 1),$/;"	e	enum:Eigen::Tridiagonalization::__anon148
SkipDiag	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::TriangularViewImpl::__anon71
SkipDiag	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipDiag = (Mode&ZeroDiag) ? 1 : 0,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon72
SkipFirst	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    enum { SkipFirst = ((Mode&Lower) && !(MatrixType::Flags&RowMajorBit))$/;"	e	enum:Eigen::TriangularViewImpl::__anon71
SkipFirst	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  enum { SkipFirst = ((Mode&Lower) && !(ArgType::Flags&RowMajorBit))$/;"	e	enum:Eigen::internal::unary_evaluator::__anon72
SkipLast	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipLast = !SkipFirst,$/;"	e	enum:Eigen::TriangularViewImpl::__anon71
SkipLast	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^         SkipLast = !SkipFirst,$/;"	e	enum:Eigen::internal::unary_evaluator::__anon72
SliceVectorizedTraversal	plugin/Eigen/src/Core/util/Constants.h	/^  SliceVectorizedTraversal,$/;"	e	enum:Eigen::TraversalType
SluMatrix	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix()$/;"	f	struct:Eigen::SluMatrix
SluMatrix	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
SluMatrix	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrix : SuperMatrix$/;"	s	namespace:Eigen
SluMatrixMapHelper	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<Matrix<Scalar,Rows,Cols,Options,MRows,MCols> >$/;"	s	namespace:Eigen
SluMatrixMapHelper	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<SparseMatrixBase<Derived> >$/;"	s	namespace:Eigen
Small	plugin/Eigen/src/Core/GeneralProduct.h	/^  Small = 3$/;"	e	enum:Eigen::__anon526
SmallPanelWidth	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = 2 * EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon305
SmallPanelWidth	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon306
Solve	plugin/Eigen/src/Core/Solve.h	/^  Solve(const Decomposition &dec, const RhsType &rhs)$/;"	f	class:Eigen::Solve
Solve	plugin/Eigen/src/Core/Solve.h	/^class Solve : public SolveImpl<Decomposition,RhsType,typename internal::traits<RhsType>::StorageKind>$/;"	c	namespace:Eigen
SolveImpl	plugin/Eigen/src/Core/Solve.h	/^class SolveImpl : public internal::generic_xpr_base<Solve<Decomposition,RhsType>, MatrixXpr, StorageKind>::type$/;"	c	namespace:Eigen
SolveImpl	plugin/Eigen/src/Core/Solve.h	/^class SolveImpl<Decomposition,RhsType,Dense>$/;"	c	namespace:Eigen
SolveType	plugin/Eigen/src/Core/Solve.h	/^  typedef Solve<Decomposition,RhsType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveType	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<Decomposition,RhsType,GuessType> SolveType;$/;"	t	struct:Eigen::internal::evaluator
SolveWithGuess	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  SolveWithGuess(const Decomposition &dec, const RhsType &rhs, const GuessType &guess)$/;"	f	class:Eigen::SolveWithGuess
SolveWithGuess	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^class SolveWithGuess : public internal::generic_xpr_base<SolveWithGuess<Decomposition,RhsType,GuessType>, MatrixXpr, typename internal::traits<RhsType>::StorageKind>::type$/;"	c	namespace:Eigen
SolverBase	plugin/Eigen/src/Core/SolverBase.h	/^    SolverBase()$/;"	f	class:Eigen::SolverBase
SolverBase	plugin/Eigen/src/Core/SolverBase.h	/^class SolverBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
SolverShape	plugin/Eigen/src/Core/util/Constants.h	/^struct SolverShape            { static std::string debugName() { return "SolverShape"; } };$/;"	s	namespace:Eigen
SolverStorage	plugin/Eigen/src/Core/util/Constants.h	/^struct SolverStorage {};$/;"	s	namespace:Eigen
SortMaster3000	src/compare.c	/^void SortMaster3000(char *filename, char *weightfile)$/;"	f
Sparse	plugin/Eigen/src/Core/util/Constants.h	/^struct Sparse {};$/;"	s	namespace:Eigen
Sparse2Dense	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Dense  {};$/;"	s	namespace:Eigen::internal
Sparse2Sparse	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct Sparse2Sparse {};$/;"	s	namespace:Eigen::internal
SparseCompressedBase	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    SparseCompressedBase() {}$/;"	f	class:Eigen::SparseCompressedBase
SparseCompressedBase	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^class SparseCompressedBase$/;"	c	namespace:Eigen
SparseLU	plugin/Eigen/src/SparseLU/SparseLU.h	/^    SparseLU():m_lastError(""),m_Ustore(0,0,0,0,0,0),m_symmetricmode(false),m_diagpivotthresh(1.0),m_detPermR(1)$/;"	f	class:Eigen::SparseLU
SparseLU	plugin/Eigen/src/SparseLU/SparseLU.h	/^    explicit SparseLU(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
SparseLU	plugin/Eigen/src/SparseLU/SparseLU.h	/^class SparseLU : public SparseSolverBase<SparseLU<_MatrixType,_OrderingType> >, public internal::SparseLUImpl<typename _MatrixType::Scalar, typename _MatrixType::StorageIndex>$/;"	c	namespace:Eigen
SparseLUImpl	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^class SparseLUImpl$/;"	c	namespace:Eigen::internal
SparseLUMatrixLReturnType	plugin/Eigen/src/SparseLU/SparseLU.h	/^  explicit SparseLUMatrixLReturnType(const MappedSupernodalType& mapL) : m_mapL(mapL)$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
SparseLUMatrixLReturnType	plugin/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixLReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseLUMatrixUReturnType	plugin/Eigen/src/SparseLU/SparseLU.h	/^  SparseLUMatrixUReturnType(const MatrixLType& mapL, const MatrixUType& mapU)$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
SparseLUMatrixUReturnType	plugin/Eigen/src/SparseLU/SparseLU.h	/^struct SparseLUMatrixUReturnType : internal::no_assignment_operator$/;"	s	namespace:Eigen
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase() {}$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, IndexPointer outerIndexPtr, IndexPointer innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index rows, Index cols, Index nnz, StorageIndex* outerIndexPtr, StorageIndex* innerIndexPtr,$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index size, Index nnz, IndexPointer innerIndexPtr, ScalarPointer valuePtr)$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline SparseMapBase(Index size, Index nnz, StorageIndex* innerIndexPtr, Scalar* valuePtr)$/;"	f	class:Eigen::SparseMapBase
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,ReadOnlyAccessors>$/;"	c	namespace:Eigen
SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^class SparseMapBase<Derived,WriteAccessors>$/;"	c	namespace:Eigen
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    SparseMatrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    explicit SparseMatrix(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseSelfAdjointView<OtherDerived, UpLo>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix$/;"	c	namespace:Eigen
SparseMatrixBase	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseMatrixBase() : m_isRValue(false) { \/* TODO check flags *\/ }$/;"	f	class:Eigen::SparseMatrixBase
SparseMatrixBase	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^template<typename Derived> class SparseMatrixBase$/;"	c	namespace:Eigen
SparseMatrixType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseMatrix<Scalar,RowMajor,StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::PardisoImpl
SparseMatrixType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef const SparseMatrix<_Scalar, _Options, _StorageIndex> SparseMatrixType;$/;"	t	class:Eigen::BlockImpl
SparseMatrixType	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar,_Options,_StorageIndex> SparseMatrixType;$/;"	t	struct:Eigen::internal::evaluator
SparseQR	plugin/Eigen/src/SparseQR/SparseQR.h	/^    SparseQR () :  m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	plugin/Eigen/src/SparseQR/SparseQR.h	/^    explicit SparseQR(const MatrixType& mat) : m_analysisIsok(false), m_lastError(""), m_useDefaultThreshold(true),m_isQSorted(false),m_isEtreeOk(false)$/;"	f	class:Eigen::SparseQR
SparseQR	plugin/Eigen/src/SparseQR/SparseQR.h	/^class SparseQR : public SparseSolverBase<SparseQR<_MatrixType,_OrderingType> >$/;"	c	namespace:Eigen
SparseQRMatrixQReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
SparseQRMatrixQReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQReturnType : public EigenBase<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen
SparseQRMatrixQTransposeReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^  explicit SparseQRMatrixQTransposeReturnType(const SparseQRType& qr) : m_qr(qr) {}$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
SparseQRMatrixQTransposeReturnType	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQRMatrixQTransposeReturnType$/;"	s	namespace:Eigen
SparseQR_QProduct	plugin/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct(const SparseQRType& qr, const Derived& other, bool transpose) : $/;"	f	struct:Eigen::SparseQR_QProduct
SparseQR_QProduct	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct SparseQR_QProduct : ReturnByValue<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen
SparseRefBase	plugin/Eigen/src/SparseCore/SparseRef.h	/^  SparseRefBase()$/;"	f	class:Eigen::internal::SparseRefBase
SparseRefBase	plugin/Eigen/src/SparseCore/SparseRef.h	/^template<typename Derived> class SparseRefBase$/;"	c	namespace:Eigen::internal
SparseSelfAdjoint2Sparse	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct SparseSelfAdjoint2Sparse {};$/;"	s	namespace:Eigen::internal
SparseSelfAdjointShape	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	s	namespace:Eigen::internal
SparseSelfAdjointView	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    explicit inline SparseSelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SparseSelfAdjointView
SparseSelfAdjointView	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<typename MatrixType, unsigned int _Mode> class SparseSelfAdjointView$/;"	c	namespace:Eigen
SparseShape	plugin/Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	s	namespace:Eigen
SparseSolverBase	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
SparseSolverBase	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^class SparseSolverBase : internal::noncopyable$/;"	c	namespace:Eigen
SparseSymmetricPermutationProduct	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct(const MatrixType& mat, const Perm& perm)$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
SparseSymmetricPermutationProduct	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSymmetricPermutationProduct$/;"	c	namespace:Eigen
SparseTransposeImpl	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl$/;"	c	namespace:Eigen::internal
SparseTransposeImpl	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^  class SparseTransposeImpl<MatrixType,CompressedAccessBit>$/;"	c	namespace:Eigen::internal
SparseTriangularShape	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	s	namespace:Eigen::internal
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    explicit inline SparseVector(Index size) : m_size(0) { check_template_parameters(); resize(size); }$/;"	f	class:Eigen::SparseVector
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector() : m_size(0) { check_template_parameters(); resize(0); }$/;"	f	class:Eigen::SparseVector
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index rows, Index cols) : m_size(0) { check_template_parameters(); resize(rows,cols); }$/;"	f	class:Eigen::SparseVector
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector$/;"	c	namespace:Eigen
SparseVectorType	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef SparseVector<_Scalar,_Options,_Index> SparseVectorType;$/;"	t	struct:Eigen::internal::evaluator
SparseView	plugin/Eigen/src/SparseCore/SparseView.h	/^  explicit SparseView(const MatrixType& mat, const Scalar& reference = Scalar(0),$/;"	f	class:Eigen::SparseView
SparseView	plugin/Eigen/src/SparseCore/SparseView.h	/^class SparseView : public SparseMatrixBase<SparseView<MatrixType> >$/;"	c	namespace:Eigen
SparseXprInnerIterator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename evaluator<SparseXprType>::InnerIterator SparseXprInnerIterator;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
SparseXprIter	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename evaluator<SparseXprType>::InnerIterator SparseXprIter;$/;"	t	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
Specialized	plugin/Eigen/src/Core/util/Constants.h	/^  Specialized,$/;"	e	enum:Eigen::SpecializedType
SpecializedType	plugin/Eigen/src/Core/util/Constants.h	/^enum SpecializedType {$/;"	g	namespace:Eigen
SqrtReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_sqrt_op<Scalar>, const Derived> SqrtReturnType;$/;"	t
SquareMatrixType	plugin/Eigen/src/Core/MatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::MatrixBase
SquareMatrixType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
SquareReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_square_op<Scalar>, const Derived> SquareReturnType;$/;"	t
SquaredNormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_squaredNorm,RealScalar>::Type SquaredNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
SrcAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = Kernel::AssignmentTraits::SrcAlignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon498
SrcAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = Kernel::AssignmentTraits::SrcAlignment,$/;"	e	enum:Eigen::internal::dense_assignment_loop::__anon499
SrcAlignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^    SrcAlignment = SrcEvaluator::Alignment,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon489
SrcCoeffRatio	plugin/Eigen/src/Core/GenericPacketMath.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
SrcCoeffRatio	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon599
SrcCoeffRatio	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon600
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon659
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon660
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon661
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon662
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon663
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon664
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon665
SrcCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    SrcCoeffRatio = 2,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon658
SrcCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon581
SrcCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon582
SrcCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon584
SrcCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    SrcCoeffRatio = 2,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon583
SrcEvaluatorType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef SrcEvaluatorTypeT SrcEvaluatorType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcEvaluatorType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcEvaluatorType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcEvaluatorType SrcEvaluatorType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcFlags	plugin/Eigen/src/Core/AssignEvaluator.h	/^    SrcFlags = SrcEvaluator::Flags$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon488
SrcHasDirectAccess	plugin/Eigen/src/Core/Assign_MKL.h	/^      SrcHasDirectAccess = Src::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
SrcIsRowMajor	plugin/Eigen/src/Core/AssignEvaluator.h	/^    SrcIsRowMajor = SrcFlags&RowMajorBit,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
SrcStorageOrder	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^      SrcStorageOrder = MatrixTypeCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::permutation_matrix_product::__anon86
SrcXprType	plugin/Eigen/src/Core/AssignEvaluator.h	/^  typedef typename SrcEvaluatorTypeT::XprType SrcXprType;$/;"	t	class:Eigen::internal::generic_dense_assignment_kernel
SrcXprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^                        const Product<Lhs,Rhs,DefaultProduct> > SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs,Rhs,Options> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	plugin/Eigen/src/Core/Solve.h	/^  typedef Solve<CwiseUnaryOp<internal::scalar_conjugate_op<typename DecType::Scalar>, const Transpose<const DecType> >,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/Solve.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/Solve.h	/^  typedef Solve<Transpose<const DecType>,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef Product<Lhs,Rhs,DefaultProduct> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Base::SrcXprType SrcXprType;$/;"	t	class:Eigen::internal::triangular_dense_assignment_kernel
SrcXprType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Horizontal> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Vertical> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  typedef SolveWithGuess<DecType,RhsType,GuessType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/LU/FullPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/LU/InverseImpl.h	/^  typedef Inverse<XprType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef Inverse<LuType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef Inverse<CodType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef Inverse<QrType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef Solve<DecType,RhsType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  typedef Product<Lhs,Rhs,AliasFreeProduct> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef SparseSymmetricPermutationProduct<MatrixType,Mode> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
SrcXprType	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef SparseQRMatrixQReturnType<SparseQRType> SrcXprType;$/;"	t	struct:Eigen::internal::Assignment
StableNormReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_stableNorm,RealScalar>::Type StableNormReturnType;$/;"	t	class:Eigen::VectorwiseOp
StandardCompressedFormat	plugin/Eigen/src/SparseCore/SparseRef.h	/^  StandardCompressedFormat = 2 \/**< used by Ref<SparseMatrix> to specify whether the input storage must be in standard compressed form *\/$/;"	e	enum:Eigen::__anon94
StartIndex	plugin/Eigen/src/Core/SolveTriangular.h	/^    StartIndex = IsLower ? 0         : DiagIndex+1$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon342
StemFunction	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixBase
Storage	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseMatrix
Storage	plugin/Eigen/src/SparseCore/SparseVector.h	/^    typedef internal::CompressedStorage<Scalar,StorageIndex> Storage;$/;"	t	class:Eigen::SparseVector
StorageBaseType	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase StorageBaseType;$/;"	t	class:Eigen::ArrayBase
StorageBaseType	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef MatrixBase StorageBaseType;$/;"	t	class:Eigen::MatrixBase
StorageBaseType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrixBase StorageBaseType;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LDLT
StorageIndex	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::LLT
StorageIndex	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::CholmodBase
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::TridiagonalMatrix
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename DenseMatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixBase
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrix
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::BandMatrixWrapper
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/Block.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::traits<Arg1>::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DenseBase
StorageIndex	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalBase
StorageIndex	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalMatrix
StorageIndex	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	class:Eigen::Inverse
StorageIndex	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MapBase
StorageIndex	plugin/Eigen/src/Core/Matrix.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::MatrixBase
StorageIndex	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationBase
StorageIndex	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PermutationMatrix
StorageIndex	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/Product.h	/^                                      typename RhsTraits::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SelfAdjointView
StorageIndex	plugin/Eigen/src/Core/Solve.h	/^  typedef typename internal::traits<Solve>::StorageIndex StorageIndex;$/;"	t	class:Eigen::Solve
StorageIndex	plugin/Eigen/src/Core/Solve.h	/^  typedef typename promote_index_type<typename Decomposition::StorageIndex, typename RhsType::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Map
StorageIndex	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::Transpositions
StorageIndex	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsBase
StorageIndex	plugin/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar StorageIndex;$/;"	t	class:Eigen::TranspositionsWrapper
StorageIndex	plugin/Eigen/src/Core/Transpositions.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::TriangularBase
StorageIndex	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	class:Eigen::Transform
StorageIndex	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Eigen::Index StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename Vector::StorageIndex StorageIndex;$/;"	t	class:Eigen::DiagonalPreconditioner
StorageIndex	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef typename PermutationType::StorageIndex StorageIndex; $/;"	t	class:Eigen::IncompleteCholesky
StorageIndex	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::IncompleteLUT
StorageIndex	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::IterativeSolverBase
StorageIndex	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::KLU
StorageIndex	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixBase
StorageIndex	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::PastixLU
StorageIndex	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pastix_traits
StorageIndex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLDLT
StorageIndex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoLLT
StorageIndex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::StorageIndex StorageIndex;$/;"	t	class:Eigen::PardisoImpl
StorageIndex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;    $/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::pardiso_traits
StorageIndex	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::ColPivHouseholderQR
StorageIndex	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::CompleteOrthogonalDecomposition
StorageIndex	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::FullPivHouseholderQR
StorageIndex	plugin/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::HouseholderQR
StorageIndex	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    typedef SuiteSparse_long StorageIndex ;$/;"	t	class:Eigen::SPQR
StorageIndex	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  typedef typename SPQRType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::SPQR_QProduct
StorageIndex	plugin/Eigen/src/SVD/SVDBase.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SVDBase
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholesky
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialCholeskyBase
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLDLT
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SimplicialLLT
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                       StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::StorageIndex                   StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::AmbiVector
StorageIndex	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::CompressedStorage
StorageIndex	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::MappedSparseMatrix
StorageIndex	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::BlockImpl
StorageIndex	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::binary_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::sparse_conjunction_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename SparseXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::sparse_diagonal_product_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseMap.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMapBase
StorageIndex	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseMatrixBase
StorageIndex	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeCleaned::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::permutation_matrix_product
StorageIndex	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSelfAdjointView
StorageIndex	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
StorageIndex	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::SparseTransposeImpl
StorageIndex	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef _StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseCore/SparseView.h	/^    typedef typename XprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::unary_evaluator
StorageIndex	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^                                      typename traits<Rhs>::StorageIndex>::type StorageIndex;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
StorageIndex	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseLU
StorageIndex	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  typedef typename IndexVector::Scalar StorageIndex; $/;"	t	struct:Eigen::internal::LU_GlobalLU_t
StorageIndex	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    typedef _StorageIndex StorageIndex;$/;"	t	class:Eigen::internal::MappedSuperNodalMatrix
StorageIndex	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::column_dfs_traits
StorageIndex	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  typedef typename IndexVector::Scalar StorageIndex;$/;"	t	struct:Eigen::internal::panel_dfs_traits
StorageIndex	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SparseQR
StorageIndex	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::traits
StorageIndex	plugin/Eigen/src/SparseQR/SparseQR.h	/^  typedef typename DstXprType::StorageIndex StorageIndex;$/;"	t	struct:Eigen::internal::Assignment
StorageIndex	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLU
StorageIndex	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::SuperLUBase
StorageIndex	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::StorageIndex StorageIndex;$/;"	t	class:Eigen::UmfPackLU
StorageKind	plugin/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::ArrayBase
StorageKind	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^                                              BinaryOp>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::traits<Arg1>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseBase
StorageKind	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseCoeffsBase
StorageKind	plugin/Eigen/src/Core/Diagonal.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalBase
StorageKind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalMatrix
StorageKind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef DiagonalShape StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	struct:Eigen::EigenBase
StorageKind	plugin/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MapBase
StorageKind	plugin/Eigen/src/Core/Matrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MatrixBase
StorageKind	plugin/Eigen/src/Core/PermutationMatrix.h	/^  typedef PermutationStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::PlainObjectBase
StorageKind	plugin/Eigen/src/Core/Product.h	/^                                                internal::product_type<Lhs,Rhs>::ret>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/Select.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/Transpositions.h	/^  typedef TranspositionsStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularBase
StorageKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularView
StorageKind	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularViewType>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularViewImpl
StorageKind	plugin/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/LU/FullPivLU.h	/^  typedef SolverStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef SolverStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	plugin/Eigen/src/SparseQR/SparseQR.h	/^    typedef typename ReturnType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageOptions	plugin/Eigen/src/Core/util/Constants.h	/^enum StorageOptions {$/;"	g	namespace:Eigen
StorageOrder	plugin/Eigen/src/Core/ProductEvaluators.h	/^    StorageOrder = int(Rhs::Flags) & RowMajorBit ? RowMajor : ColMajor$/;"	e	enum:Eigen::internal::product_evaluator::__anon322
StorageOrder	plugin/Eigen/src/Core/ProductEvaluators.h	/^  enum { StorageOrder = int(Lhs::Flags) & RowMajorBit ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::product_evaluator::__anon323
StorageOrderMatch	plugin/Eigen/src/Core/Ref.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon561
StorageOrderMatch	plugin/Eigen/src/SparseCore/SparseRef.h	/^      StorageOrderMatch = PlainObjectType::IsVectorAtCompileTime || Derived::IsVectorAtCompileTime || ((PlainObjectType::Flags&RowMajorBit)==(Derived::Flags&RowMajorBit)),$/;"	e	enum:Eigen::internal::traits::match::__anon96
StorageOrdersAgree	plugin/Eigen/src/Core/AssignEvaluator.h	/^    StorageOrdersAgree = (int(DstIsRowMajor) == int(SrcIsRowMajor)),$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon493
StorageOrdersAgree	plugin/Eigen/src/Core/Assign_MKL.h	/^      StorageOrdersAgree = (int(Dst::IsRowMajor) == int(Src::IsRowMajor)),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
StorageOrdersAgree	plugin/Eigen/src/Core/CoreEvaluators.h	/^    StorageOrdersAgree = (int(Arg1Flags)&RowMajorBit)==(int(Arg2Flags)&RowMajorBit) && (int(Arg1Flags)&RowMajorBit)==(int(Arg3Flags)&RowMajorBit),$/;"	e	enum:Eigen::internal::ternary_evaluator::__anon506
StorageOrdersAgree	plugin/Eigen/src/Core/CoreEvaluators.h	/^    StorageOrdersAgree = (int(LhsFlags)&RowMajorBit)==(int(RhsFlags)&RowMajorBit),$/;"	e	enum:Eigen::internal::binary_evaluator::__anon507
StorageOrdersMatch	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon160
StorageOrdersMatch	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon161
StreamPrecision	plugin/Eigen/src/Core/IO.h	/^enum { StreamPrecision = -1,$/;"	e	enum:Eigen::__anon559
StrictlyLower	plugin/Eigen/src/Core/util/Constants.h	/^  StrictlyLower=ZeroDiag|Lower, $/;"	e	enum:Eigen::UpLoType
StrictlyUpper	plugin/Eigen/src/Core/util/Constants.h	/^  StrictlyUpper=ZeroDiag|Upper,$/;"	e	enum:Eigen::UpLoType
Stride	plugin/Eigen/src/Core/Stride.h	/^    Stride()$/;"	f	class:Eigen::Stride
Stride	plugin/Eigen/src/Core/Stride.h	/^    Stride(Index outerStride, Index innerStride)$/;"	f	class:Eigen::Stride
Stride	plugin/Eigen/src/Core/Stride.h	/^    Stride(const Stride& other)$/;"	f	class:Eigen::Stride
Stride	plugin/Eigen/src/Core/Stride.h	/^class Stride$/;"	c	namespace:Eigen
StrideBase	plugin/Eigen/src/Core/Ref.h	/^  typedef Stride<StrideType::OuterStrideAtCompileTime,StrideType::InnerStrideAtCompileTime> StrideBase;$/;"	t	class:Eigen::RefBase
StrideType	plugin/Eigen/src/Core/Ref.h	/^  typedef _StrideType StrideType;$/;"	t	struct:Eigen::internal::traits
StrideType	plugin/Eigen/src/Core/Ref.h	/^  typedef typename internal::traits<Derived>::StrideType StrideType;$/;"	t	class:Eigen::RefBase
StridedAlignedMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstAlignedMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedMapType	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
SubDiagonalReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type SubDiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
SubDiagonalType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename TridiagonalizationType::SubDiagonalType SubDiagonalType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
SubDiagonalType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<RealScalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> SubDiagonalType;$/;"	t	class:Eigen::Tridiagonalization
SubVector	plugin/Eigen/src/Core/VectorwiseOp.h	/^                               typename ExpressionType::RowXpr>::type SubVector;$/;"	t	class:Eigen::VectorwiseOp
Subs	plugin/Eigen/src/Core/BandMatrix.h	/^      Subs   = internal::traits<Derived>::Subs,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
Subs	plugin/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon365
Subs	plugin/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon366
Success	plugin/Eigen/src/Core/util/Constants.h	/^  Success = 0,        $/;"	e	enum:Eigen::ComputationInfo
SuiteSparse_long	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	17;"	d
SumReturnType	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ReturnType<internal::member_sum>::Type SumReturnType;$/;"	t	class:Eigen::VectorwiseOp
SuperDiagVectorType	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTimeMinusOne, 1> SuperDiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
SuperILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU() : Base() { init(); }$/;"	f	class:Eigen::SuperILU
SuperILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(SuperILU& ) { }$/;"	f	class:Eigen::SuperILU
SuperILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperILU
SuperILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperILU : public SuperLUBase<_MatrixType,SuperILU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU() : Base() { init(); }$/;"	f	class:Eigen::SuperLU
SuperLU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(SuperLU& ) { }$/;"	f	class:Eigen::SuperLU
SuperLU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    explicit SuperLU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperLU
SuperLU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLU : public SuperLUBase<_MatrixType,SuperLU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLUBase	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase() {}$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase(SuperLUBase& ) { }$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLUBase : public SparseSolverBase<Derived>$/;"	c	namespace:Eigen
Supers	plugin/Eigen/src/Core/BandMatrix.h	/^      Supers = internal::traits<Derived>::Supers,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon362
Supers	plugin/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon365
Supers	plugin/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon366
SupportedAccessPatterns	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon76
SupportedAccessPatterns	plugin/Eigen/src/SparseCore/SparseVector.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon89
SwappedTraits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<RhsScalar,LhsScalar,ConjugateRhs,ConjugateLhs> SwappedTraits;$/;"	t	struct:Eigen::internal::gebp_kernel
SymbolExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  SymbolExpr() {}$/;"	f	class:Eigen::Symbolic::SymbolExpr
SymbolExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class SymbolExpr : public BaseExpr<SymbolExpr<tag> >$/;"	c	namespace:Eigen::Symbolic
SymbolValue	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  SymbolValue(Index val) : m_value(val) {}$/;"	f	class:Eigen::Symbolic::SymbolValue
SymbolValue	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class SymbolValue$/;"	c	namespace:Eigen::Symbolic
Symbolic	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^namespace Symbolic {$/;"	n	namespace:Eigen
Symmetric	plugin/Eigen/src/Core/util/Constants.h	/^  Symmetric=0x20$/;"	e	enum:Eigen::UpLoType
TAG_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
TANH	include/darknet.h	/^    LOGISTIC, RELU, RELIE, LINEAR, RAMP, TANH, PLSE, LEAKY, ELU, LOGGY, STAIR, HARDTAN, LHTAN$/;"	e	enum:__anon726
THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIRD_PARTY_EIGEN3_EIGEN_SRC_CORE_ARCH_AVX512_MATHFUNCTIONS_H_	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	11;"	d
THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_INNER_OR_LAZY_PRODUCTS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THIS_TYPE_IS_NOT_SUPPORTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        THIS_TYPE_IS_NOT_SUPPORTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
THREADED_EIGEN	Makefile	/^THREADED_EIGEN=0$/;"	m
TIME	src/utils.h	8;"	d
TPlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseMatrix<MatScalar,MatOptions,MatIndex> TPlainObjectType;$/;"	t	class:Eigen::Ref
TPlainObjectType	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef SparseVector<MatScalar,MatOptions,MatIndex> TPlainObjectType;$/;"	t	class:Eigen::Ref
TREE_H	src/tree.h	2;"	d
TWO_PI	src/utils.h	15;"	d
Tag	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  typedef tag Tag;$/;"	t	class:Eigen::Symbolic::SymbolExpr
TanReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tan_op<Scalar>, const Derived> TanReturnType;$/;"	t
TanhReturnType	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_tanh_op<Scalar>, const Derived> TanhReturnType;$/;"	t
Target	plugin/Eigen/src/Core/util/Constants.h	/^    Target = SSE$/;"	e	enum:Eigen::Architecture::Type
TgtCoeffRatio	plugin/Eigen/src/Core/GenericPacketMath.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
TgtCoeffRatio	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon599
TgtCoeffRatio	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon600
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon658
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon660
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon661
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon662
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon663
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon664
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon665
TgtCoeffRatio	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    TgtCoeffRatio = 2$/;"	e	enum:Eigen::internal::type_casting_traits::__anon659
TgtCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon581
TgtCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon582
TgtCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 1$/;"	e	enum:Eigen::internal::type_casting_traits::__anon583
TgtCoeffRatio	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    TgtCoeffRatio = 2$/;"	e	enum:Eigen::internal::type_casting_traits::__anon584
ThenMatrixNested	plugin/Eigen/src/Core/Select.h	/^  typedef typename ThenMatrixType::Nested ThenMatrixNested;$/;"	t	struct:Eigen::internal::traits
Through	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
TmpFlags	plugin/Eigen/src/Geometry/Homogeneous.h	/^    TmpFlags = _MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon681
TmpMatrixType	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1, 0, MaxRowsAtCompileTime, 1> TmpMatrixType;$/;"	t	class:Eigen::LDLT
TopLeft	plugin/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopLeft	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftCeil	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftFloor	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRight	plugin/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopRight	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightCeil	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightFloor	plugin/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TrOptions	plugin/Eigen/src/SVD/JacobiSVD.h	/^    TrOptions = RowsAtCompileTime==1 ? (MatrixType::Options & ~(RowMajor))$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon135
TrOptions	plugin/Eigen/src/SVD/JacobiSVD.h	/^    TrOptions = RowsAtCompileTime==1 ? (MatrixType::Options & ~(RowMajor))$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon136
Traits	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef internal::LDLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LDLT
Traits	plugin/Eigen/src/Cholesky/LLT.h	/^    typedef internal::LLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LLT
Traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::PermutationBase
Traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationMatrix> Traits;$/;"	t	class:Eigen::PermutationMatrix
Traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationWrapper> Traits;$/;"	t	class:Eigen::PermutationWrapper
Traits	plugin/Eigen/src/Core/Ref.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
Traits	plugin/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::TranspositionsBase
Traits	plugin/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	plugin/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Transpositions> Traits;$/;"	t	class:Eigen::Transpositions
Traits	plugin/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<TranspositionsWrapper> Traits;$/;"	t	class:Eigen::TranspositionsWrapper
Traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> Traits;$/;"	t	struct:Eigen::internal::gebp_kernel
Traits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	class:Eigen::internal::gemm_blocking_space
Traits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef gebp_traits<RhsScalar,LhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename Gemm::Traits Traits;$/;"	t	struct:Eigen::internal::gemm_functor
Traits	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
Traits	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjLhs,ConjRhs> Traits;$/;"	t	struct:Eigen::internal::tribb_kernel
Traits	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  typedef gebp_traits<Scalar,Scalar> Traits;$/;"	t	struct:Eigen::internal::product_triangular_matrix_matrix
Traits	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef internal::pardiso_traits<Derived> Traits;$/;"	t	class:Eigen::PardisoImpl
Traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialCholesky> Traits;$/;"	t	class:Eigen::SimplicialCholesky
Traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT> Traits;$/;"	t	class:Eigen::SimplicialLDLT
Traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT> Traits;$/;"	t	class:Eigen::SimplicialLLT
Traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef internal::traits<Ref> Traits;$/;"	t	class:Eigen::Ref
TraitsBase	plugin/Eigen/src/Core/Map.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	plugin/Eigen/src/Geometry/Quaternion.h	/^    typedef traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> > TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Transform(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform()$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform<Scalar,Dim,Mode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform(const Transform<Scalar,Dim,OtherMode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const RotationBase<Derived, Dim>& r)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const Transform<OtherScalarType,Dim,Mode,Options>& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const TranslationType& t)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline explicit Transform(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	plugin/Eigen/src/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
TransformMatrix	plugin/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType TransformMatrix;$/;"	t	struct:Eigen::internal::transform_right_product_impl
TransformTimeDiagonalMode	plugin/Eigen/src/Geometry/Transform.h	/^  enum { TransformTimeDiagonalMode = ((Mode==int(Isometry))?Affine:int(Mode)) };$/;"	e	enum:Eigen::Transform::__anon703
TransformTimeDiagonalReturnType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,TransformTimeDiagonalMode> TransformTimeDiagonalReturnType;$/;"	t	class:Eigen::Transform
TransformTraits	plugin/Eigen/src/Core/util/Constants.h	/^enum TransformTraits {$/;"	g	namespace:Eigen
TransformType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Mode, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Projective, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::generic_product_impl
TransformType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,AffineCompact,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
TransformType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
Translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC Translation() {}$/;"	f	class:Eigen::Translation
Translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	plugin/Eigen/src/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation2d	plugin/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2f	plugin/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation3d	plugin/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3f	plugin/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
TranslationPart	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1,!(internal::traits<MatrixType>::Flags & RowMajorBit)> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
Transpose	plugin/Eigen/src/Core/Transpose.h	/^    explicit inline Transpose(MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Transpose
Transpose	plugin/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class Transpose$/;"	c	namespace:Eigen
Transpose	plugin/Eigen/src/Core/Transpositions.h	/^    explicit Transpose(const TranspositionType& t) : m_transpositions(t) {}$/;"	f	class:Eigen::Transpose
Transpose	plugin/Eigen/src/Core/Transpositions.h	/^class Transpose<TranspositionsBase<TranspositionsDerived> >$/;"	c	namespace:Eigen
Transpose	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon297
Transpose	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon295
TransposeImpl	plugin/Eigen/src/Core/Transpose.h	/^class TransposeImpl$/;"	c	namespace:Eigen
TransposeImpl	plugin/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Dense>$/;"	c	namespace:Eigen
TransposeImpl	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>$/;"	c	namespace:Eigen
TransposeImpl_base	plugin/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base$/;"	s	namespace:Eigen::internal
TransposeImpl_base	plugin/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base<MatrixType, false>$/;"	s	namespace:Eigen::internal
TransposeMode	plugin/Eigen/src/Core/SelfAdjointView.h	/^      TransposeMode = ((Mode & Upper) ? Lower : 0) | ((Mode & Lower) ? Upper : 0)$/;"	e	enum:Eigen::SelfAdjointView::__anon674
TransposeMode	plugin/Eigen/src/Core/TriangularMatrix.h	/^      TransposeMode = (Mode & Upper ? Lower : 0)$/;"	e	enum:Eigen::TriangularView::__anon179
TransposeMode	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^      TransposeMode = ((Mode & Upper) ? Lower : 0) | ((Mode & Lower) ? Upper : 0),$/;"	e	enum:Eigen::SparseSelfAdjointView::__anon57
TransposeReturnType	plugin/Eigen/src/Core/DenseBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::DenseBase
TransposeReturnType	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typedef SelfAdjointView<typename MatrixType::TransposeReturnType,TransposeMode> TransposeReturnType;$/;"	t	class:Eigen::SelfAdjointView
TransposeReturnType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<typename MatrixType::TransposeReturnType,TransposeMode> TransposeReturnType;$/;"	t	class:Eigen::TriangularView
TransposeReturnType	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    > TransposeReturnType;$/;"	t	class:Eigen::HouseholderSequence
TransposeReturnType	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Transpose<Derived> TransposeReturnType;$/;"	t	class:Eigen::SparseMatrixBase
TransposeTypeWithSameStorageOrder	plugin/Eigen/src/SVD/JacobiSVD.h	/^          TransposeTypeWithSameStorageOrder;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
TransposedSparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::SparseMatrix
TranspositionType	plugin/Eigen/src/Cholesky/LDLT.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::LDLT
TranspositionType	plugin/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsDerived TranspositionType;$/;"	t	class:Eigen::Transpose
TranspositionType	plugin/Eigen/src/LU/PartialPivLU.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::PartialPivLU
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    explicit inline Transpositions(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::Transpositions
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpositions() {}$/;"	f	class:Eigen::Transpositions
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(Index size) : m_indices(size)$/;"	f	class:Eigen::Transpositions
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const Transpositions& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::Transpositions
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
Transpositions	plugin/Eigen/src/Core/Transpositions.h	/^class Transpositions : public TranspositionsBase<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	c	namespace:Eigen
TranspositionsBase	plugin/Eigen/src/Core/Transpositions.h	/^class TranspositionsBase$/;"	c	namespace:Eigen
TranspositionsShape	plugin/Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	s	namespace:Eigen
TranspositionsStorage	plugin/Eigen/src/Core/util/Constants.h	/^struct TranspositionsStorage {};$/;"	s	namespace:Eigen
TranspositionsWrapper	plugin/Eigen/src/Core/Transpositions.h	/^    explicit inline TranspositionsWrapper(IndicesType& indices)$/;"	f	class:Eigen::TranspositionsWrapper
TranspositionsWrapper	plugin/Eigen/src/Core/Transpositions.h	/^class TranspositionsWrapper$/;"	c	namespace:Eigen
Traversal	plugin/Eigen/src/Core/AssignEvaluator.h	/^    Traversal = (int(MayLinearVectorize) && (LinearPacketSize>InnerPacketSize)) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon494
Traversal	plugin/Eigen/src/Core/Assign_MKL.h	/^      Traversal = MightLinearize ? LinearTraversal : DefaultTraversal$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon171
Traversal	plugin/Eigen/src/Core/Redux.h	/^    Traversal = int(MayLinearVectorize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::redux_traits::__anon370
TraversalSize	plugin/Eigen/src/Core/CoreEvaluators.h	/^    TraversalSize = Direction==int(Vertical) ? int(ArgType::RowsAtCompileTime) :  int(ArgType::ColsAtCompileTime)$/;"	e	enum:Eigen::internal::evaluator::__anon517
TraversalSize	plugin/Eigen/src/Core/VectorwiseOp.h	/^    TraversalSize = Direction==Vertical ? MatrixType::RowsAtCompileTime :  MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon379
TraversalType	plugin/Eigen/src/Core/util/Constants.h	/^enum TraversalType {$/;"	g	namespace:Eigen
Triangular2Dense	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Dense         {};$/;"	s	namespace:Eigen::internal
Triangular2Triangular	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct Triangular2Triangular    {};$/;"	s	namespace:Eigen::internal
TriangularBase	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularBase() { eigen_assert(!((Mode&UnitDiag) && (Mode&ZeroDiag))); }$/;"	f	class:Eigen::TriangularBase
TriangularBase	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<typename Derived> class TriangularBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
TriangularShape	plugin/Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	s	namespace:Eigen
TriangularView	plugin/Eigen/src/Core/TriangularMatrix.h	/^    explicit inline TriangularView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::TriangularView
TriangularView	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularView$/;"	c	namespace:Eigen
TriangularViewImpl	plugin/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularViewImpl<_MatrixType,_Mode,Dense>$/;"	c	namespace:Eigen
TriangularViewImpl	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^template<typename MatrixType, unsigned int Mode> class TriangularViewImpl<MatrixType,Mode,Sparse>$/;"	c	namespace:Eigen
TriangularViewReturnType	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
TriangularViewType	plugin/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularView<_MatrixType, _Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TriangularViewType	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef TriangularView<MatrixType,Mode> TriangularViewType;$/;"	t	class:Eigen::TriangularViewImpl
TridiagonalMatrix	plugin/Eigen/src/Core/BandMatrix.h	/^    explicit TridiagonalMatrix(Index size = Size) : Base(size,size,Options&SelfAdjoint?0:1,1) {}$/;"	f	class:Eigen::internal::TridiagonalMatrix
TridiagonalMatrix	plugin/Eigen/src/Core/BandMatrix.h	/^class TridiagonalMatrix : public BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor>$/;"	c	namespace:Eigen::internal
Tridiagonalization	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    explicit Tridiagonalization(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename _MatrixType> class Tridiagonalization$/;"	c	namespace:Eigen
TridiagonalizationMatrixTReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    TridiagonalizationMatrixTReturnType(const MatrixType& mat) : m_matrix(mat) { }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
TridiagonalizationMatrixTReturnType	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename MatrixType> struct TridiagonalizationMatrixTReturnType$/;"	s	namespace:Eigen::internal
TridiagonalizationType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Tridiagonalization<MatrixType> TridiagonalizationType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Triplet	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet() : m_row(0), m_col(0), m_value(0) {}$/;"	f	class:Eigen::Triplet
Triplet	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet(const StorageIndex& i, const StorageIndex& j, const Scalar& v = Scalar(0))$/;"	f	class:Eigen::Triplet
Triplet	plugin/Eigen/src/SparseCore/SparseUtil.h	/^class Triplet$/;"	c	namespace:Eigen
Type	plugin/Eigen/src/Core/BandMatrix.h	/^                 BuildType>::type Type;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstDiagonalIndexReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::DiagonalIndexReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstTriangularViewReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::TriangularViewReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstSelfAdjointViewReturnType
Type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::SelfAdjointViewReturnType
Type	plugin/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReduxReturnType
Type	plugin/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReturnType
Type	plugin/Eigen/src/Core/VectorwiseOp.h	/^                        isHorizontal ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::ExtendedType
Type	plugin/Eigen/src/Core/VectorwiseOp.h	/^                        isVertical   ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::OppositeExtendedType
Type	plugin/Eigen/src/Core/VectorwiseOp.h	/^      typedef PartialReduxExpr<ExpressionType, internal::member_lpnorm<p,RealScalar>,Direction> Type;$/;"	t	struct:Eigen::VectorwiseOp::LpNormReturnType
Type	plugin/Eigen/src/Core/util/Constants.h	/^  enum Type {$/;"	g	namespace:Eigen::Architecture
Type	plugin/Eigen/src/Householder/HouseholderSequence.h	/^                 0, MatrixType::MaxRowsAtCompileTime, MatrixType::MaxColsAtCompileTime> Type;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
Type	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    typedef ActualMatrixType Type;$/;"	t	struct:Eigen::internal::generic_matrix_wrapper::ConstSelfAdjointViewReturnType
Type	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^    typedef typename ActualMatrixType::template ConstSelfAdjointViewReturnType<UpLo>::Type Type;$/;"	t	struct:Eigen::internal::generic_matrix_wrapper::ConstSelfAdjointViewReturnType
Type	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^                          > Type;$/;"	t	struct:Eigen::SparseMatrixBase::CwiseProductDenseReturnType
Type	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SparseSelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::ConstSelfAdjointViewReturnType
Type	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SparseSelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::SparseMatrixBase::SelfAdjointViewReturnType
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:ConstNColsBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:ConstNRowsBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:NColsBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:NRowsBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct ConstFixedBlockXpr { typedef Block<const Derived,Rows,Cols> Type; };$/;"	t	struct:ConstFixedBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Rows, int Cols> struct FixedBlockXpr { typedef Block<Derived,Rows,Cols> Type; };$/;"	t	struct:FixedBlockXpr
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	t	struct:ConstFixedSegmentReturnType
Type	plugin/Eigen/src/plugins/BlockMethods.h	/^template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	t	struct:FixedSegmentReturnType
Type	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^template<class NewType> struct CastXpr { typedef typename internal::cast_return_type<Derived,const CwiseUnaryOp<internal::scalar_cast_op<Scalar, NewType>, const Derived> >::type Type; };$/;"	t	struct:CastXpr
UCOL	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
UIntPtr	plugin/Eigen/src/Core/util/Meta.h	/^typedef std::uintptr_t UIntPtr;$/;"	t	namespace:Eigen::internal
ULVL	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
UMatrixType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType,  Upper>          UMatrixType;$/;"	t	class:Eigen::SuperLU
UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC	plugin/Eigen/src/Core/util/StaticAssert.h	/^        UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
USET	src/lstm_layer.h	7;"	d
USET	src/rnn_layer.h	8;"	d
USUB	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^typedef enum {LUSUP, UCOL, LSUB, USUB, LLVL, ULVL} MemType; $/;"	e	enum:Eigen::internal::__anon117
UTILS_H	src/utils.h	2;"	d
UmfPackLU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(const UmfPackLU& ) { }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    explicit UmfPackLU(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^class UmfPackLU : public SparseSolverBase<UmfPackLU<_MatrixType> >$/;"	c	namespace:Eigen
UmfpackControl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Array<double, UMFPACK_CONTROL, 1> UmfpackControl;$/;"	t	class:Eigen::UmfPackLU
UmfpackInfo	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Array<double, UMFPACK_INFO, 1> UmfpackInfo;$/;"	t	class:Eigen::UmfPackLU
UmfpackMatrixRef	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Ref<const UmfpackMatrixType, StandardCompressedFormat> UmfpackMatrixRef;$/;"	t	class:Eigen::UmfPackLU
UmfpackMatrixType	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,StorageIndex> UmfpackMatrixType;$/;"	t	class:Eigen::UmfPackLU
Unaligned	plugin/Eigen/src/Core/util/Constants.h	/^  Unaligned=0,        \/**< Data pointer has no specific alignment. *\/$/;"	e	enum:Eigen::AlignmentType
UndefinedIncr	plugin/Eigen/src/Core/util/Constants.h	/^const int UndefinedIncr = 0xfffffe;$/;"	m	namespace:Eigen
UniformScaling	plugin/Eigen/src/Geometry/Scaling.h	/^  UniformScaling() {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	plugin/Eigen/src/Geometry/Scaling.h	/^  explicit inline UniformScaling(const Scalar& s) : m_factor(s) {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	plugin/Eigen/src/Geometry/Scaling.h	/^  inline explicit UniformScaling(const UniformScaling<OtherScalarType>& other)$/;"	f	class:Eigen::UniformScaling
UniformScaling	plugin/Eigen/src/Geometry/Scaling.h	/^class UniformScaling$/;"	c	namespace:Eigen
Unit	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index i)$/;"	f	class:Eigen::MatrixBase
Unit	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index newSize, Index i)$/;"	f	class:Eigen::MatrixBase
UnitDiag	plugin/Eigen/src/Core/util/Constants.h	/^  UnitDiag=0x4, $/;"	e	enum:Eigen::UpLoType
UnitLower	plugin/Eigen/src/Core/util/Constants.h	/^  UnitLower=UnitDiag|Lower, $/;"	e	enum:Eigen::UpLoType
UnitRandom	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC Quaternion<Scalar,Options> Quaternion<Scalar,Options>::UnitRandom()$/;"	f	class:Eigen::Quaternion
UnitUpper	plugin/Eigen/src/Core/util/Constants.h	/^  UnitUpper=UnitDiag|Upper,$/;"	e	enum:Eigen::UpLoType
UnitW	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitW()$/;"	f	class:Eigen::MatrixBase
UnitX	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitX()$/;"	f	class:Eigen::MatrixBase
UnitY	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitY()$/;"	f	class:Eigen::MatrixBase
UnitZ	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitZ()$/;"	f	class:Eigen::MatrixBase
Unroll	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Unroll = CoeffReadCost <= EIGEN_UNROLLING_LIMIT,$/;"	e	enum:Eigen::internal::product_evaluator::__anon319
Unrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^    Unrolling = (int(Traversal) == int(InnerVectorizedTraversal) || int(Traversal) == int(DefaultTraversal))$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon496
Unrolling	plugin/Eigen/src/Core/Redux.h	/^    Unrolling = Cost <= UnrollingLimit ? CompleteUnrolling : NoUnrolling$/;"	e	enum:Eigen::internal::redux_traits::__anon372
Unrolling	plugin/Eigen/src/Core/SolveTriangular.h	/^      Unrolling   = (RhsIsVectorAtCompileTime && Rhs::SizeAtCompileTime != Dynamic && Rhs::SizeAtCompileTime <= 8)$/;"	e	enum:Eigen::internal::trsolve_traits::__anon341
UnrollingLimit	plugin/Eigen/src/Core/AssignEvaluator.h	/^    UnrollingLimit      = EIGEN_UNROLLING_LIMIT * ActualPacketSize,$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon495
UnrollingLimit	plugin/Eigen/src/Core/Redux.h	/^    UnrollingLimit = EIGEN_UNROLLING_LIMIT * (int(Traversal) == int(DefaultTraversal) ? 1 : int(PacketSize))$/;"	e	enum:Eigen::internal::redux_traits::__anon371
UnrollingType	plugin/Eigen/src/Core/util/Constants.h	/^enum UnrollingType {$/;"	g	namespace:Eigen
Unusable	plugin/Eigen/src/Core/ReturnByValue.h	/^      Unusable(const Unusable&) {}$/;"	f	class:Eigen::ReturnByValue::Unusable
Unusable	plugin/Eigen/src/Core/ReturnByValue.h	/^    class Unusable{$/;"	c	class:Eigen::ReturnByValue
Unusable	plugin/Eigen/src/Core/ReturnByValue.h	67;"	d
Unusable	plugin/Eigen/src/Core/ReturnByValue.h	76;"	d
UpLo	plugin/Eigen/src/Cholesky/LDLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LDLT::__anon130
UpLo	plugin/Eigen/src/Cholesky/LLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LLT::__anon129
UpLo	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::CholmodBase::__anon141
UpLo	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^    UpLo = _UpLo$/;"	e	enum:Eigen::ConjugateGradient::__anon101
UpLo	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::IncompleteCholesky::__anon104
UpLo	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLDLT::__anon33
UpLo	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLLT::__anon32
UpLo	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = Options&(Upper|Lower) };$/;"	e	enum:Eigen::PardisoLDLT::__anon30
UpLo	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PardisoLLT::__anon29
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialCholesky::__anon169
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLDLT::__anon168
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLLT::__anon167
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = internal::traits<Derived>::UpLo };$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon162
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon164
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon165
UpLo	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon166
UpLoType	plugin/Eigen/src/Core/util/Constants.h	/^enum UpLoType {$/;"	g	namespace:Eigen
Upper	plugin/Eigen/src/Core/util/Constants.h	/^  Upper=0x2,                      $/;"	e	enum:Eigen::UpLoType
UpperBidiagonalization	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization() : m_householder(), m_bidiagonal(), m_isInitialized(false) {}$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    explicit UpperBidiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^template<typename _MatrixType> class UpperBidiagonalization$/;"	c	namespace:Eigen::internal
VPATH	Makefile	/^VPATH=.\/src\/:.\/examples$/;"	m
VSX	plugin/Eigen/src/Core/util/Constants.h	/^    VSX = 0x3,$/;"	e	enum:Eigen::Architecture::Type
ValueExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ValueExpr() {}$/;"	f	class:Eigen::Symbolic::ValueExpr
ValueExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ValueExpr(IndexType val) : m_value(val) {}$/;"	f	class:Eigen::Symbolic::ValueExpr
ValueExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class ValueExpr {$/;"	c	namespace:Eigen::Symbolic
ValueExpr	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^class ValueExpr<internal::FixedInt<N> > {$/;"	c	namespace:Eigen::Symbolic
VariableAndFixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  VariableAndFixedInt(int val) { m_value = val; }$/;"	f	class:Eigen::internal::VariableAndFixedInt
VariableAndFixedInt	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N> class VariableAndFixedInt$/;"	c	namespace:Eigen::internal
Vector	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::DiagonalPreconditioner
Vector	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLUT
Vector	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::KLU
Vector	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::PastixBase
Vector	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::SuperLUBase
Vector	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::UmfPackLU
Vector2	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Vector2	plugin/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2s	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,2,1> Vector2s;$/;"	t	class:Eigen::RealQZ
Vector3	plugin/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	plugin/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::QuaternionBase
Vector3s	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealQZ
Vector3s	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealSchur
VectorBlock	plugin/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start)$/;"	f	class:Eigen::VectorBlock
VectorBlock	plugin/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start, Index size)$/;"	f	class:Eigen::VectorBlock
VectorBlock	plugin/Eigen/src/Core/VectorBlock.h	/^template<typename VectorType, int Size> class VectorBlock$/;"	c	namespace:Eigen
VectorI	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::IncompleteLUT
VectorI	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorI	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSelfAdjointView
VectorI	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<StorageIndex,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
VectorIx	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<StorageIndex,Dynamic, 1> VectorIx;$/;"	t	class:Eigen::IncompleteCholesky
VectorList	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef std::vector<std::list<StorageIndex> > VectorList; $/;"	t	class:Eigen::IncompleteCholesky
VectorMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef BlasVectorMapper<Scalar, Index> VectorMapper;$/;"	t	class:Eigen::internal::blas_data_mapper
VectorRx	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<RealScalar,Dynamic,1> VectorRx;$/;"	t	class:Eigen::IncompleteCholesky
VectorSx	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorSx;$/;"	t	class:Eigen::IncompleteCholesky
VectorType	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::GeneralizedEigenSolver
VectorType	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, 1, Size, Options | RowMajor, 1, MaxSize> VectorType;$/;"	t	class:Eigen::HessenbergDecomposition
VectorType	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::RealVectorType VectorType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
VectorType	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1>  VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	plugin/Eigen/src/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename plain_matrix_type<Derived>::type VectorType;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
VectorType	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1,Options> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	plugin/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::RotationBase
VectorType	plugin/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	plugin/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::PardisoImpl
VectorType	plugin/Eigen/src/SVD/BDCSVD.h	/^  typedef Matrix<RealScalar, Dynamic, 1> VectorType;$/;"	t	class:Eigen::BDCSVD
VectorType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholesky
VectorType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLDLT
VectorType	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLLT
VectorTypeSum	plugin/Eigen/src/Geometry/AlignedBox.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<Scalar>, const VectorType, const VectorType> VectorTypeSum;$/;"	t	class:Eigen::AlignedBox
Vectorizable	plugin/Eigen/src/Core/GenericPacketMath.h	/^    Vectorizable = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon356
Vectorizable	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
Vectorizable	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
Vectorizable	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
Vectorizable	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
Vectorizable	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
Vectorizable	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
Vectorizable	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
Vectorizable	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
Vectorizable	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
Vectorizable	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
Vectorizable	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
Vectorizable	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^    Vectorizable = packet_traits<std::complex<T> >::HasDiv$/;"	e	enum:Eigen::internal::scalar_quotient_op::__anon651
Vectorizable	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^    Vectorizable = packet_traits<std::complex<T> >::HasMul$/;"	e	enum:Eigen::internal::scalar_product_op::__anon650
Vectorizable	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
Vectorizable	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
Vectorizable	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
Vectorizable	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
Vectorizable	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
Vectorizable	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
Vectorizable	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon602
Vectorizable	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
Vectorizable	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
Vectorizable	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
Vectorizable	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
Vectorizable	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
Vectorizable	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon571
Vectorizable	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
Vectorizable	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
Vectorizable	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
Vectorizable	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
Vectorizable	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
Vectorizable	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable  = Traits::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon311
Vectorizable	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
Vectorizable	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
Vectorizable	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
Vectorizable	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
Vectorizable	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon299
Vectorizable	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon300
Vectorized	plugin/Eigen/src/Core/AssignEvaluator.h	/^    Vectorized = int(Traversal) == InnerVectorizedTraversal$/;"	e	enum:Eigen::internal::copy_using_evaluator_traits::__anon494
VectorizedCast	plugin/Eigen/src/Core/GenericPacketMath.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon358
VectorizedCast	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon599
VectorizedCast	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^    VectorizedCast = 0,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon600
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon658
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon659
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon660
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon661
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon662
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon663
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon664
VectorizedCast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon665
VectorizedCast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon581
VectorizedCast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon582
VectorizedCast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon583
VectorizedCast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^    VectorizedCast = 1,$/;"	e	enum:Eigen::internal::type_casting_traits::__anon584
VectorizedSize	plugin/Eigen/src/Core/Redux.h	/^    VectorizedSize = (Size \/ PacketSize) * PacketSize$/;"	e	enum:Eigen::internal::redux_impl::__anon377
VectorwiseOp	plugin/Eigen/src/Core/VectorwiseOp.h	/^    explicit inline VectorwiseOp(ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::VectorwiseOp
VectorwiseOp	plugin/Eigen/src/Core/VectorwiseOp.h	/^template<typename ExpressionType, int Direction> class VectorwiseOp$/;"	c	namespace:Eigen
Vertical	plugin/Eigen/src/Core/util/Constants.h	/^  Vertical, $/;"	e	enum:Eigen::DirectionType
VmlSize	plugin/Eigen/src/Core/Assign_MKL.h	/^      VmlSize = MightLinearize ? MaxSizeAtCompileTime : InnerMaxSize,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon170
WORK	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	108;"	d
WORK	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	149;"	d
WORK	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	206;"	d
WORK	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	246;"	d
WRITING_DATA	include/darknet.h	/^    CLASSIFICATION_DATA, DETECTION_DATA, CAPTCHA_DATA, REGION_DATA, IMAGE_DATA, COMPARE_DATA, WRITING_DATA, SWAG_DATA, TAG_DATA, OLD_CLASSIFICATION_DATA, STUDY_DATA, DET_DATA, SUPER_DATA, LETTERBOX_DATA, REGRESSION_DATA, SEGMENTATION_DATA, INSTANCE_DATA$/;"	e	enum:__anon737
WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
WithFormat	plugin/Eigen/src/Core/IO.h	/^    WithFormat(const ExpressionType& matrix, const IOFormat& format)$/;"	f	class:Eigen::WithFormat
WithFormat	plugin/Eigen/src/Core/IO.h	/^class WithFormat$/;"	c	namespace:Eigen
WorkMatrixType	plugin/Eigen/src/SVD/JacobiSVD.h	/^            WorkMatrixType;$/;"	t	class:Eigen::JacobiSVD
WorkVectorType	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^                 MatrixType::MaxRowsAtCompileTime> WorkVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
WorkingRows	plugin/Eigen/src/Geometry/Transform.h	/^    WorkingRows = EIGEN_PLAIN_ENUM_MIN(TransformMatrix::RowsAtCompileTime,HDim)$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon707
WorkspaceType	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typedef Matrix<Scalar, 1, RowsAtCompileTime, RowMajor, 1, MaxRowsAtCompileTime> WorkspaceType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
WriteAccessors	plugin/Eigen/src/Core/util/Constants.h	/^  WriteAccessors, $/;"	e	enum:Eigen::AccessorLevels
X	include/darknet.h	/^    matrix X;$/;"	m	struct:__anon736
XNOR	include/darknet.h	/^    XNOR,$/;"	e	enum:__anon728
Xpr	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar,typename Rhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_left_product_refactoring_helper
Xpr	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef CwiseBinaryOp<internal::scalar_sum_op<typename Lhs::Scalar,typename Rhs::Scalar>, const LinearProduct, const ConstantBlock> Xpr;$/;"	t	struct:Eigen::internal::homogeneous_right_product_refactoring_helper
XprBase	plugin/Eigen/src/Core/Array.h	/^  typedef ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > XprBase;$/;"	t	struct:Eigen::internal::traits
XprInnerStride	plugin/Eigen/src/Core/IndexedView.h	/^    XprInnerStride = HasSameStorageOrderAsXprType ? int(inner_stride_at_compile_time<XprType>::ret) : int(outer_stride_at_compile_time<XprType>::ret),$/;"	e	enum:Eigen::internal::traits::__anon314
XprKind	plugin/Eigen/src/Core/Array.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/ArrayWrapper.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/ArrayWrapper.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename traits<DiagonalVectorType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Matrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Product.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/LU/FullPivLU.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	plugin/Eigen/src/SparseCore/SparseVector.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprOuterstride	plugin/Eigen/src/Core/IndexedView.h	/^    XprOuterstride = HasSameStorageOrderAsXprType ? int(outer_stride_at_compile_time<XprType>::ret) : int(inner_stride_at_compile_time<XprType>::ret),$/;"	e	enum:Eigen::internal::traits::__anon314
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef ArrayWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::block_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Block<ArgType, BlockRows, BlockCols, InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseNullaryOp<NullaryOp,PlainObjectType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> XprType;$/;"	t	struct:Eigen::internal::ternary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef CwiseUnaryView<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Derived  XprType;$/;"	t	struct:Eigen::internal::mapbase_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Diagonal<ArgType, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef EvalToTemp<ArgType>                   XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Map<PlainObjectType, MapOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef MatrixWrapper<TArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef PartialReduxExpr<ArgType, MemberOp, Direction> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Ref<PlainObjectType, RefOptions, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Replicate<ArgType, RowFactor, ColFactor> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Reverse<ArgType, Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/IndexedView.h	/^  typedef IndexedView<ArgType, RowIndices, ColIndices> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^                               const Product<Lhs, Rhs, DefaultProduct> > XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, Options> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typedef Product<Lhs, Rhs, ProductKind> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/Core/Redux.h	/^  typedef _XprType XprType;$/;"	t	class:Eigen::internal::redux_evaluator
XprType	plugin/Eigen/src/Core/ReturnByValue.h	/^  typedef ReturnByValue<Derived> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/Core/TriangularMatrix.h	/^  typedef TriangularView<MatrixType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseBinaryOp<scalar_product_op<Scalar>, NestedXpr, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain> > XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Homogeneous<ArgType,Direction> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef Product<Lhs, Rhs, LazyProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  typedef MappedSparseMatrix<_Scalar,_Options,_StorageIndex> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef Block<ArgType,BlockRows,BlockCols,InnerPanel> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  typedef Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  typedef CwiseBinaryOp<scalar_quotient_op<T1,T2>, Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::binary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryView<ViewOp, ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Product<Lhs, Rhs> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef Product<Lhs, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseMap.h	/^  typedef Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef Product<Lhs, Rhs, AliasFreeProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  typedef SparseView<Product<Lhs, Rhs, Options> > XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;  $/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseRef.h	/^  typedef Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> XprType;$/;"	t	struct:Eigen::internal::evaluator
XprType	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<Lhs, RhsView, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Product<LhsView, Rhs, DefaultProduct> XprType;$/;"	t	struct:Eigen::internal::product_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef Transpose<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  typedef TriangularView<ArgType,Mode> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprType	plugin/Eigen/src/SparseCore/SparseView.h	/^    typedef SparseView<ArgType> XprType;$/;"	t	struct:Eigen::internal::unary_evaluator
XprTypeIsRowMajor	plugin/Eigen/src/Core/Block.h	/^      XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0$/;"	e	enum:Eigen::internal::BlockImpl_dense::__anon563
XprTypeIsRowMajor	plugin/Eigen/src/Core/Block.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon562
XprTypeIsRowMajor	plugin/Eigen/src/Core/IndexedView.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon314
XprTypeNested	plugin/Eigen/src/Core/Block.h	/^    typedef typename internal::ref_selector<XprType>::non_const_type XprTypeNested;$/;"	t	class:Eigen::internal::BlockImpl_dense
XprTypeNested	plugin/Eigen/src/Core/Block.h	/^  typedef typename ref_selector<XprType>::type XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::ref_selector<XprType>::type XprTypeNested;$/;"	t	class:Eigen::CwiseUnaryOp
XprTypeNested	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename internal::ref_selector<XprType>::type      XprTypeNested;$/;"	t	class:Eigen::Inverse
XprTypeNestedCleaned	plugin/Eigen/src/Core/Inverse.h	/^  typedef typename internal::remove_all<XprTypeNested>::type  XprTypeNestedCleaned;$/;"	t	class:Eigen::Inverse
YCbCr_to_RGB_kernel	src/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon12
YOU_ALREADY_SPECIFIED_THIS_STRIDE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ALREADY_SPECIFIED_THIS_STRIDE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_CANNOT_MIX_ARRAYS_AND_MATRICES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CANNOT_MIX_ARRAYS_AND_MATRICES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_MADE_A_PROGRAMMING_MISTAKE	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MADE_A_PROGRAMMING_MISTAKE=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX	plugin/Eigen/src/Core/util/StaticAssert.h	/^        YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX=1,$/;"	e	enum:Eigen::internal::static_assertion::__anon487
Zero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero()$/;"	f	class:Eigen::DenseBase
Zero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Zero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index size)$/;"	f	class:Eigen::DenseBase
ZeroDiag	plugin/Eigen/src/Core/util/Constants.h	/^  ZeroDiag=0x8,$/;"	e	enum:Eigen::UpLoType
ZeroSign	plugin/Eigen/src/Cholesky/LDLT.h	/^  enum SignMatrix { PositiveSemiDef, NegativeSemiDef, ZeroSign, Indefinite };$/;"	e	enum:Eigen::internal::SignMatrix
_Arg1Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg1Nested>::type _Arg1Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg1Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg1Nested>::type _Arg1Nested;$/;"	t	struct:Eigen::internal::traits
_Arg2Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg2Nested>::type _Arg2Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg2Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg2Nested>::type _Arg2Nested;$/;"	t	struct:Eigen::internal::traits
_Arg3Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename internal::remove_reference<Arg3Nested>::type _Arg3Nested;$/;"	t	class:Eigen::CwiseTernaryOp
_Arg3Nested	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  typedef typename remove_reference<Arg3Nested>::type _Arg3Nested;$/;"	t	struct:Eigen::internal::traits
_EIGEN_ALIGNED_PTR	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	93;"	d
_EIGEN_ALIGNED_PTR	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	127;"	d
_EIGEN_DECLARE_CONST_FAST_Packet2d	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	76;"	d
_EIGEN_DECLARE_CONST_FAST_Packet2l	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	44;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	103;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	47;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	73;"	d
_EIGEN_DECLARE_CONST_Packet16f	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	20;"	d
_EIGEN_DECLARE_CONST_Packet16f_FROM_INT	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	23;"	d
_EIGEN_DECLARE_CONST_Packet2d	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	56;"	d
_EIGEN_DECLARE_CONST_Packet2d	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	82;"	d
_EIGEN_DECLARE_CONST_Packet2d	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	85;"	d
_EIGEN_DECLARE_CONST_Packet2l	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	59;"	d
_EIGEN_DECLARE_CONST_Packet2l	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	88;"	d
_EIGEN_DECLARE_CONST_Packet4d	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	42;"	d
_EIGEN_DECLARE_CONST_Packet4f	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	50;"	d
_EIGEN_DECLARE_CONST_Packet4f	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	76;"	d
_EIGEN_DECLARE_CONST_Packet4f	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_Packet4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	106;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	62;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	79;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	85;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	109;"	d
_EIGEN_DECLARE_CONST_Packet4i	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	53;"	d
_EIGEN_DECLARE_CONST_Packet4i	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	82;"	d
_EIGEN_DECLARE_CONST_Packet4i	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	88;"	d
_EIGEN_DECLARE_CONST_Packet4i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	82;"	d
_EIGEN_DECLARE_CONST_Packet8d	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	26;"	d
_EIGEN_DECLARE_CONST_Packet8d_FROM_INT64	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	29;"	d
_EIGEN_DECLARE_CONST_Packet8f	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	39;"	d
_EIGEN_DECLARE_CONST_Packet8f_FROM_INT	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	45;"	d
_EIGEN_DECLARE_CONST_Packet8i	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	48;"	d
_EIGEN_MASK_ALIGNMENT	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	88;"	d
_EIGEN_MASK_ALIGNMENT	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	90;"	d
_EIGEN_MASK_ALIGNMENT	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	125;"	d
_ExtractType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType> _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_ExtractType	plugin/Eigen/src/Core/util/BlasUtil.h	/^  typedef XprType _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_HasDirectAccess	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^      _HasDirectAccess = (int(Flags)&DirectAccessBit) ? 1 : 0 \/\/ workaround sunCC$/;"	e	enum:Eigen::SparseMatrixBase::__anon74
_LAPACKE_H_	plugin/Eigen/src/misc/lapacke.h	37;"	d
_Lhs	plugin/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::product_type
_LhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_LhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_LhsPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_LinearAccessMask	plugin/Eigen/src/Core/ProductEvaluators.h	/^    _LinearAccessMask = (MatrixType::RowsAtCompileTime==1 || MatrixType::ColsAtCompileTime==1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
_MatrixType	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename internal::pastix_traits<Derived>::MatrixType _MatrixType;$/;"	t	class:Eigen::PastixBase
_MatrixTypeNested	plugin/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/Core/Diagonal.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::Replicate
_MatrixTypeNested	plugin/Eigen/src/Core/Replicate.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/Core/Reverse.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename SparseMatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::internal::sparse_matrix_block_impl
_MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typedef typename internal::remove_all<typename XprType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::BlockImpl
_MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
_MatrixTypeNested	plugin/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseView
_Options	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Options = ((Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::sparse_eval::__anon59
_Options	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  enum { _Options = ((evaluator<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::plain_matrix_type::__anon60
_ResPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
_ResPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_Rhs	plugin/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::product_type
_RhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_RhsNested	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsPacket	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_RhsPacket	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_SameTypes	plugin/Eigen/src/Core/ProductEvaluators.h	/^    _SameTypes = is_same<typename MatrixType::Scalar, typename DiagonalType::Scalar>::value,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
_Scalar	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::sparse_eval
_Scalar	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::plain_matrix_type
_ScalarAccessOnDiag	plugin/Eigen/src/Core/ProductEvaluators.h	/^    _ScalarAccessOnDiag =  !((int(_StorageOrder) == ColMajor && int(ProductOrder) == OnTheLeft)$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
_StorageIndex	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::sparse_eval
_StorageIndex	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::StorageIndex _StorageIndex;$/;"	t	struct:Eigen::internal::plain_matrix_type
_StorageOrder	plugin/Eigen/src/Core/ProductEvaluators.h	/^    _StorageOrder = MatrixFlags & RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
_Vectorizable	plugin/Eigen/src/Core/ProductEvaluators.h	/^    _Vectorizable = bool(int(MatrixFlags)&PacketAccessBit) && _SameTypes && (_ScalarAccessOnDiag || (bool(int(DiagFlags)&PacketAccessBit))),$/;"	e	enum:Eigen::internal::diagonal_product_evaluator_base::__anon321
_XprTypeNested	plugin/Eigen/src/Core/Block.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
__DBL_EPSILON__	plugin/Eigen/src/Core/util/Meta.h	177;"	d
__FLT_EPSILON__	plugin/Eigen/src/Core/util/Meta.h	176;"	d
__half_raw	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^    typedef half_impl::__half_raw __half_raw;$/;"	t	struct:Eigen::half
__half_raw	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC __half_raw() : x(0) {}$/;"	f	struct:Eigen::half_impl::__half_raw
__half_raw	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC __half_raw(unsigned short raw) : x(raw) {}$/;"	f	struct:Eigen::half_impl::__half_raw
__half_raw	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct __half_raw {$/;"	s	namespace:Eigen::half_impl
__has_feature	plugin/Eigen/src/Core/util/Macros.h	354;"	d
__ldg	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half __ldg(const Eigen::half* ptr) {$/;"	f
__shfl_xor	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^__device__ EIGEN_STRONG_INLINE Eigen::half __shfl_xor(Eigen::half var, int laneMask, int width=warpSize) {$/;"	f
_assignProduct	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^EIGEN_DEVICE_FUNC TriangularView<MatrixType,UpLo>& TriangularViewImpl<MatrixType,UpLo,Dense>::_assignProduct(const ProductType& prod, const Scalar& alpha, bool beta)$/;"	f	class:Eigen::TriangularViewImpl
_check_template_params	plugin/Eigen/src/Core/PlainObjectBase.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::PlainObjectBase
_check_template_params	plugin/Eigen/src/Geometry/Quaternion.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::Quaternion
_compute	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^void HessenbergDecomposition<MatrixType>::_compute(MatrixType& matA, CoeffVectorType& hCoeffs, VectorType& temp)$/;"	f	class:Eigen::HessenbergDecomposition
_data	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Storage& _data() { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED const Storage& _data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
_expression	plugin/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& _expression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
_expression	plugin/Eigen/src/Core/VectorwiseOp.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::VectorwiseOp
_fields_	python/darknet.py	/^    _fields_ = [("classes", c_int),$/;"	v	class:METADATA
_fields_	python/darknet.py	/^    _fields_ = [("w", c_int),$/;"	v	class:IMAGE
_fields_	python/darknet.py	/^    _fields_ = [("x", c_float),$/;"	v	class:BOX
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(Index size, typename internal::enable_if<    (Base::SizeAtCompileTime!=1 || !internal::is_convertible<T, Scalar>::value)$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const DenseBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Derived& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const EigenBase<OtherDerived>& other){$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Index& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0, typename internal::enable_if<Base::SizeAtCompileTime==1 && internal::is_convertible<T, Scalar>::value,T>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar& val0,$/;"	f	class:Eigen::PlainObjectBase
_init1	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init1(const Scalar* data){$/;"	f	class:Eigen::PlainObjectBase
_init2	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(Index rows, Index cols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init2	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Index& val0, const Index& val1,$/;"	f	class:Eigen::PlainObjectBase
_init2	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const T0& val0, const T1& val1, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_resize_to_match	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_noalias	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_solve_impl	plugin/Eigen/src/Cholesky/LDLT.h	/^void LDLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LDLT
_solve_impl	plugin/Eigen/src/Cholesky/LLT.h	/^void LLT<_MatrixType,_UpLo>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::LLT
_solve_impl	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve_impl(const SparseMatrixBase<RhsDerived> &b, SparseMatrixBase<DestDerived> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve_impl	plugin/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DiagonalPreconditioner
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteCholesky
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    void _solve_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLUT
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void _solve_impl(const Rhs& b, SparseMatrixBase<DestDerived> &aDest) const$/;"	f	class:Eigen::IterativeSolverBase
_solve_impl	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_impl(const MatrixBase<Rhs>& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_solve_impl	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^bool KLU<MatrixType>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::KLU
_solve_impl	plugin/Eigen/src/LU/FullPivLU.h	/^void FullPivLU<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivLU
_solve_impl	plugin/Eigen/src/LU/PartialPivLU.h	/^    void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::PartialPivLU
_solve_impl	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^bool PastixBase<Base>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::PastixBase
_solve_impl	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^void PardisoImpl<Derived>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived>& x) const$/;"	f	class:Eigen::PardisoImpl
_solve_impl	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^void ColPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::ColPivHouseholderQR
_solve_impl	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<_MatrixType>::_solve_impl($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
_solve_impl	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^void FullPivHouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivHouseholderQR
_solve_impl	plugin/Eigen/src/QR/HouseholderQR.h	/^void HouseholderQR<_MatrixType>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::HouseholderQR
_solve_impl	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SPQR
_solve_impl	plugin/Eigen/src/SVD/SVDBase.h	/^void SVDBase<Derived>::_solve_impl(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::SVDBase
_solve_impl	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve_impl	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve_impl	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    void _solve_impl(const SparseMatrixBase<Rhs> &b, SparseMatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseSolverBase
_solve_impl	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE void _solve_impl(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::TriangularViewImpl
_solve_impl	plugin/Eigen/src/SparseLU/SparseLU.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &X_base) const$/;"	f	class:Eigen::SparseLU
_solve_impl	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool _solve_impl(const MatrixBase<Rhs> &B, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SparseQR
_solve_impl	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperILU
_solve_impl	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::_solve_impl(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperLU
_solve_impl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^bool UmfPackLU<MatrixType>::_solve_impl(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::UmfPackLU
_solve_impl_transposed	plugin/Eigen/src/LU/FullPivLU.h	/^void FullPivLU<_MatrixType>::_solve_impl_transposed(const RhsType &rhs, DstType &dst) const$/;"	f	class:Eigen::FullPivLU
_solve_impl_transposed	plugin/Eigen/src/LU/PartialPivLU.h	/^    void _solve_impl_transposed(const RhsType &rhs, DstType &dst) const {$/;"	f	class:Eigen::PartialPivLU
_solve_with_guess_impl	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve_with_guess_impl	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve_with_guess_impl	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  void _solve_with_guess_impl(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::LeastSquaresConjugateGradient
_sort_matrix_Q	plugin/Eigen/src/SparseQR/SparseQR.h	/^    inline void _sort_matrix_Q()$/;"	f	class:Eigen::SparseQR
_transformVector	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::_transformVector(const Vector3& v) const$/;"	f	class:Eigen::QuaternionBase
_transformVector	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline VectorType _transformVector(const OtherVectorType& v) const$/;"	f	class:Eigen::RotationBase
a	plugin/Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	m	struct:Eigen::internal::is_convertible_impl::no
a	plugin/Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	m	struct:Eigen::internal::is_convertible_impl::yes
a	plugin/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	m	struct:Eigen::internal::has_none
a	plugin/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	m	struct:Eigen::internal::has_std_result_type
a	plugin/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	m	struct:Eigen::internal::has_tr1_result
a	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_no  { char a[2]; };$/;"	m	struct:Eigen::internal::meta_no
a	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_yes { char a[1]; };$/;"	m	struct:Eigen::internal::meta_yes
a	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct no  {int a[2];};$/;"	m	struct:Eigen::internal::is_ref_compatible_impl::no
a	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct yes {int a[1];};$/;"	m	struct:Eigen::internal::is_ref_compatible_impl::yes
a	plugin/Eigen/src/SVD/JacobiSVD.h	/^  enum { a = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon133
a	src/convolutional_layer.c	/^	float *a;$/;"	m	struct:t_arg	file:
abs	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  abs(double x) { return cl::sycl::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   abs(float x) { return cl::sycl::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^abs(const T &x) {$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^double      abs(double      x) { return (fabs(x));  }$/;"	f	namespace:Eigen
abs	plugin/Eigen/src/Core/MathFunctions.h	/^double abs(const double &x) { return ::fabs(x); }$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^double abs(const std::complex<double>& x) {$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^float       abs(float       x) { return (fabsf(x)); }$/;"	f	namespace:Eigen
abs	plugin/Eigen/src/Core/MathFunctions.h	/^float abs(const float &x) { return ::fabsf(x); }$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^float abs(const std::complex<float>& x) {$/;"	f	namespace:Eigen::numext
abs	plugin/Eigen/src/Core/MathFunctions.h	/^long        abs(long        x) { return (labs(x));  }$/;"	f	namespace:Eigen
abs	plugin/Eigen/src/Core/MathFunctions.h	/^long double abs(long double x) { return (fabsl(x)); }$/;"	f	namespace:Eigen
abs	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half abs(const half& a) {$/;"	f	namespace:Eigen::half_impl
abs	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs() const$/;"	f
abs2	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)$/;"	f	namespace:Eigen::numext
abs2	plugin/Eigen/src/Core/MathFunctions.h	/^inline bool abs2(bool x) { return x; }$/;"	f	namespace:Eigen::numext
abs2	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs2() const$/;"	f
abs2_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl$/;"	s	namespace:Eigen::internal
abs2_impl_default	plugin/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl_default$/;"	s	namespace:Eigen::internal
abs2_impl_default	plugin/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl_default<Scalar, true> \/\/ IsComplex$/;"	s	namespace:Eigen::internal
abs2_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct abs2_retval$/;"	s	namespace:Eigen::internal
absDeterminant	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
absDeterminant	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::absDeterminant() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
absDeterminant	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
absDeterminant	plugin/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::HouseholderQR
absDeterminant	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Scalar absDeterminant()$/;"	f	class:Eigen::SparseLU
absDiagIndex	plugin/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
absDistance	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar absDistance(const VectorType& p) const { return numext::abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
abs_knowing_score	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar, typename=void> struct abs_knowing_score$/;"	s	namespace:Eigen::internal
abs_knowing_score	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct abs_knowing_score<Scalar, typename scalar_score_coeff_op<Scalar>::Score_is_abs>$/;"	s	namespace:Eigen::internal
abs_mean	examples/nightmare.c	/^float abs_mean(float *x, int n)$/;"	f
absolute	include/darknet.h	/^    int absolute;$/;"	m	struct:layer
ac	src/convolutional_layer.c	/^	unsigned int ac;$/;"	m	struct:t_arg	file:
acc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const DoublePacketType& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const ResPacketHalf& c, const ResPacketHalf& alpha, ResPacketHalf& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const Scalar& c, const Scalar& alpha, Scalar& r) const { r += alpha * c; }$/;"	f	class:Eigen::internal::gebp_traits
accessors_level	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct accessors_level$/;"	s	namespace:Eigen::internal
acos	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  acos(double x) { return cl::sycl::acos(x); }$/;"	f	namespace:Eigen::numext
acos	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   acos(float x) { return cl::sycl::acos(x); }$/;"	f	namespace:Eigen::numext
acos	plugin/Eigen/src/Core/MathFunctions.h	/^T acos(const T &x) {$/;"	f	namespace:Eigen::numext
acos	plugin/Eigen/src/Core/MathFunctions.h	/^double acos(const double &x) { return ::acos(x); }$/;"	f	namespace:Eigen::numext
acos	plugin/Eigen/src/Core/MathFunctions.h	/^float acos(const float &x) { return ::acosf(x); }$/;"	f	namespace:Eigen::numext
acos	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^acos() const$/;"	f
acosh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  acosh(double x) { return cl::sycl::acosh(x); }$/;"	f	namespace:Eigen::numext
acosh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   acosh(float x) { return cl::sycl::acosh(x); }$/;"	f	namespace:Eigen::numext
acosh	plugin/Eigen/src/Core/MathFunctions.h	/^T acosh(const T &x) {$/;"	f	namespace:Eigen::numext
activate	src/activations.c	/^float activate(float x, ACTIVATION a)$/;"	f
activate_array	src/activations.c	/^void activate_array(float *x, const int n, const ACTIVATION a)$/;"	f
activation	include/darknet.h	/^    ACTIVATION activation;$/;"	m	struct:layer
actual_alignment	plugin/Eigen/src/Core/Matrix.h	/^      actual_alignment = ((_Options&DontAlign)==0) ? default_alignment : 0,$/;"	e	enum:Eigen::internal::traits::__anon676
adam	include/darknet.h	/^    int adam;$/;"	m	struct:__anon730
adam	include/darknet.h	/^    int adam;$/;"	m	struct:network
add	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
addTo	plugin/Eigen/src/Core/EigenBase.h	/^  inline void addTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
addTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
addTo	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void addTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
addTo	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void addTo(Dest& dst, const ActualLhs& lhs, const Rhs& rhs, typename enable_if<is_same<typename evaluator_traits<Dest>::Shape,DenseShape>::value,int*>::type* = 0)$/;"	f	struct:Eigen::internal::generic_product_impl
add_assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct add_assign_op {$/;"	s	namespace:Eigen::internal
add_bias	src/convolutional_layer.c	/^void add_bias(float *output, float *biases, int batch, int n, int size)$/;"	f
add_const	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	s	namespace:Eigen::internal
add_const	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type_if_arithmetic	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^template<typename T> struct add_const_on_value_type_if_arithmetic$/;"	s	namespace:Eigen::internal
add_pixel	src/image.c	/^static void add_pixel(image m, int x, int y, int c, float val)$/;"	f	file:
adds	plugin/Eigen/src/Core/ProductEvaluators.h	/^    explicit adds(const Scalar& s) : m_scale(s) {}$/;"	f	struct:Eigen::internal::generic_product_impl::adds
adds	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct adds {$/;"	s	struct:Eigen::internal::generic_product_impl
adjoint	plugin/Eigen/src/Cholesky/LDLT.h	/^    const LDLT& adjoint() const { return *this; };$/;"	f	class:Eigen::LDLT
adjoint	plugin/Eigen/src/Cholesky/LLT.h	/^    const LLT& adjoint() const { return *this; };$/;"	f	class:Eigen::LLT
adjoint	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline const AdjointReturnType adjoint() const$/;"	f	class:Eigen::SelfAdjointView
adjoint	plugin/Eigen/src/Core/SolverBase.h	/^    inline AdjointReturnType adjoint() const$/;"	f	class:Eigen::SolverBase
adjoint	plugin/Eigen/src/Core/Transpose.h	/^MatrixBase<Derived>::adjoint() const$/;"	f	class:Eigen::MatrixBase
adjoint	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline const AdjointReturnType adjoint() const$/;"	f	class:Eigen::TriangularView
adjoint	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    AdjointReturnType adjoint() const$/;"	f	class:Eigen::HouseholderSequence
adjoint	plugin/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation adjoint() const { using numext::conj; return JacobiRotation(conj(m_c), -m_s); }$/;"	f	class:Eigen::JacobiRotation
adjoint	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> adjoint() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
adjoint	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const AdjointReturnType adjoint() const { return AdjointReturnType(transpose()); }$/;"	f	class:Eigen::SparseMatrixBase
adjoint	plugin/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> adjoint() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
adjointInPlace	plugin/Eigen/src/Core/Transpose.h	/^EIGEN_DEVICE_FUNC inline void MatrixBase<Derived>::adjointInPlace()$/;"	f	class:Eigen::MatrixBase
affine	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline AffinePart affine() { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
affine	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstAffinePart affine() const { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
aligned	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC bool aligned(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
aligned_allocator	plugin/Eigen/src/Core/util/Memory.h	/^  aligned_allocator() : std::allocator<T>() {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	plugin/Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	plugin/Eigen/src/Core/util/Memory.h	/^  aligned_allocator(const aligned_allocator<U>& other) : std::allocator<T>(other) {}$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	plugin/Eigen/src/Core/util/Memory.h	/^class aligned_allocator : public std::allocator<T>$/;"	c	namespace:Eigen
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<T>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection& ) : EIGEN_ALIGNED_ALLOCATOR<T>() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^  class aligned_allocator_indirection : public EIGEN_ALIGNED_ALLOCATOR<T>$/;"	c	namespace:Eigen
aligned_delete	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void aligned_delete(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_free	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
aligned_malloc	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void* aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_new	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* aligned_new(std::size_t size)$/;"	f	namespace:Eigen::internal
aligned_realloc	plugin/Eigen/src/Core/util/Memory.h	/^inline void* aligned_realloc(void *ptr, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
aligned_stack_memory_handler	plugin/Eigen/src/Core/util/Memory.h	/^    aligned_stack_memory_handler(T* ptr, std::size_t size, bool dealloc)$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
aligned_stack_memory_handler	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> class aligned_stack_memory_handler : noncopyable$/;"	c	namespace:Eigen::internal
alignment	plugin/Eigen/src/Core/Redux.h	/^    alignment = Derived::Alignment$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon376
alignment	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon598
alignment	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon596
alignment	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon593
alignment	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon592
alignment	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon594
alignment	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon629
alignment	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon631
alignment	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 8, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon630
alignment	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon641
alignment	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon639
alignment	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon637
alignment	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon634
alignment	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon635
alignment	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon649
alignment	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon648
alignment	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon654
alignment	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon610
alignment	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon608
alignment	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon606
alignment	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon603
alignment	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon604
alignment	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon580
alignment	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon578
alignment	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon573
alignment	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon572
alignment	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon574
alignment	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon623
alignment	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon622
alignment	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon618
alignment	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon617
alignment	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon616
all	plugin/Eigen/src/Core/BooleanRedux.h	/^EIGEN_DEVICE_FUNC inline bool DenseBase<Derived>::all() const$/;"	f	class:Eigen::DenseBase
all	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const AllReturnType all() const$/;"	f	class:Eigen::VectorwiseOp
all	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^static const Eigen::internal::all_t all;$/;"	m	namespace:Eigen::placeholders
allFinite	plugin/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::allFinite() const$/;"	f	class:Eigen::DenseBase
all_t	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct all_t { all_t() {} };$/;"	f	struct:Eigen::internal::all_t
all_t	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct all_t { all_t() {} };$/;"	s	namespace:Eigen::internal
all_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller$/;"	s	namespace:Eigen::internal
all_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, 0, Rows>$/;"	s	namespace:Eigen::internal
all_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, Dynamic, Rows>$/;"	s	namespace:Eigen::internal
allocate	plugin/Eigen/src/Core/util/Memory.h	/^  pointer allocate(size_type num, const void* \/*hint*\/ = 0)$/;"	f	class:Eigen::aligned_allocator
allocate	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::allocate(Eigen::Index rows, Eigen::Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::BDCSVD
allocate	plugin/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	plugin/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	plugin/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	plugin/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, QRPreconditioner>&) {}$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	plugin/Eigen/src/SVD/JacobiSVD.h	/^void JacobiSVD<MatrixType, QRPreconditioner>::allocate(Eigen::Index rows, Eigen::Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
allocate	plugin/Eigen/src/SVD/SVDBase.h	/^bool SVDBase<MatrixType>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::SVDBase
allocateA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateA() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateA()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateAll() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateAll()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateB() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateB()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocatedSize	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index allocatedSize() const { return m_allocatedSize; }$/;"	f	class:Eigen::internal::CompressedStorage
alpha	include/darknet.h	/^    float alpha;$/;"	m	struct:layer
alphabet	src/zcu102_api.cpp	/^static image **alphabet;$/;"	v	file:
alphanum_to_int	src/utils.c	/^int alphanum_to_int(char c)$/;"	f
alphas	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType alphas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
always_void	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	s	namespace:Eigen::internal
amd_flip	plugin/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_flip(const T& i) { return -i-2; }$/;"	f	namespace:Eigen::internal
amd_mark	plugin/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline void amd_mark(const T0* w, const T1& j) { return w[j] = amd_flip(w[j]); }$/;"	f	namespace:Eigen::internal
amd_marked	plugin/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline bool amd_marked(const T0* w, const T1& j) { return w[j]<0; }$/;"	f	namespace:Eigen::internal
amd_unflip	plugin/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_unflip(const T& i) { return i<0 ? amd_flip(i) : i; }$/;"	f	namespace:Eigen::internal
analyzePattern	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::DiagonalPreconditioner
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& analyzePattern(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::analyzePattern(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
analyzePattern	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& analyzePattern(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
analyzePattern	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void analyzePattern(const InputMatrixType& matrix)$/;"	f	class:Eigen::KLU
analyzePattern	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
analyzePattern	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
analyzePattern	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
analyzePattern	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::analyzePattern(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
analyzePattern	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
analyzePattern	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
analyzePattern	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
analyzePattern	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
analyzePattern	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
analyzePattern	plugin/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseLU
analyzePattern	plugin/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::analyzePattern(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
analyzePattern	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& \/*matrix*\/)$/;"	f	class:Eigen::SuperLUBase
analyzePattern	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperILU
analyzePattern	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLU
analyzePattern	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
analyzePattern_impl	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void analyzePattern_impl()$/;"	f	class:Eigen::KLU
analyzePattern_impl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern_impl()$/;"	f	class:Eigen::UmfPackLU
analyzePattern_preordered	plugin/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::analyzePattern_preordered(const CholMatrixType& ap, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
angle	include/darknet.h	/^    float angle;$/;"	m	struct:layer
angle	include/darknet.h	/^    float angle;$/;"	m	struct:load_args
angle	include/darknet.h	/^    float angle;$/;"	m	struct:network
angle	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angularDistance	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::angularDistance(const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
any	plugin/Eigen/src/Core/BooleanRedux.h	/^EIGEN_DEVICE_FUNC inline bool DenseBase<Derived>::any() const$/;"	f	class:Eigen::DenseBase
any	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const AnyReturnType any() const$/;"	f	class:Eigen::VectorwiseOp
any_conversion	plugin/Eigen/src/Core/util/Meta.h	/^  struct any_conversion$/;"	s	struct:Eigen::internal::is_convertible_impl
any_conversion	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct any_conversion$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
any_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller$/;"	s	namespace:Eigen::internal
any_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, 0, Rows>$/;"	s	namespace:Eigen::internal
any_unroller	plugin/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, Dynamic, Rows>$/;"	s	namespace:Eigen::internal
append	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void append(const Scalar& v, Index i)$/;"	f	class:Eigen::internal::CompressedStorage
applyHouseholderOnTheLeft	plugin/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheLeft($/;"	f	class:Eigen::MatrixBase
applyHouseholderOnTheRight	plugin/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheRight($/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	plugin/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	plugin/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	plugin/Eigen/src/Core/MatrixBase.h	/^inline void MatrixBase<Derived>::applyOnTheRight(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	plugin/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyThisOnTheLeft	plugin/Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheLeft	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheLeft(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheLeft	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	plugin/Eigen/src/Core/EigenBase.h	/^  EIGEN_DEVICE_FUNC inline void applyThisOnTheRight(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheRight	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheRight(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyTranspositionOnTheLeft	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheLeft(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyTranspositionOnTheRight	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheRight(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyZAdjointOnTheLeftInPlace	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<MatrixType>::applyZAdjointOnTheLeftInPlace($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
apply_block_householder_on_the_left	plugin/Eigen/src/Householder/BlockHouseholder.h	/^void apply_block_householder_on_the_left(MatrixType& mat, const VectorsType& vectors, const CoeffsType& hCoeffs, bool forward)$/;"	f	namespace:Eigen::internal
apply_rotation_in_the_plane	plugin/Eigen/src/Jacobi/Jacobi.h	/^void \/*EIGEN_DONT_INLINE*\/ apply_rotation_in_the_plane(DenseBase<VectorX>& xpr_x, DenseBase<VectorY>& xpr_y, const JacobiRotation<OtherScalar>& j)$/;"	f	namespace:Eigen::internal
apply_rotation_in_the_plane_selector	plugin/Eigen/src/Jacobi/Jacobi.h	/^struct apply_rotation_in_the_plane_selector$/;"	s	namespace:Eigen::internal
apply_rotation_in_the_plane_selector	plugin/Eigen/src/Jacobi/Jacobi.h	/^struct apply_rotation_in_the_plane_selector<Scalar,OtherScalar,SizeAtCompileTime,MinAlignment,true \/* vectorizable *\/>$/;"	s	namespace:Eigen::internal
ar	src/convolutional_layer.c	/^	unsigned int ar;$/;"	m	struct:t_arg	file:
arg	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& arg() const$/;"	f	class:Eigen::internal::EvalToTemp
arg	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(arg, Scalar) arg(const Scalar& x)$/;"	f	namespace:Eigen::numext
arg	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^arg() const$/;"	f
arg1	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg1Nested& arg1() const { return m_arg1; }$/;"	f	class:Eigen::CwiseTernaryOp
arg1Impl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<Arg1> arg1Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator::Data
arg2	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg2Nested& arg2() const { return m_arg2; }$/;"	f	class:Eigen::CwiseTernaryOp
arg2Impl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<Arg2> arg2Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator::Data
arg3	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  const _Arg3Nested& arg3() const { return m_arg3; }$/;"	f	class:Eigen::CwiseTernaryOp
arg3Impl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<Arg3> arg3Impl;$/;"	m	struct:Eigen::internal::ternary_evaluator::Data
argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<ArgType> argImpl;$/;"	m	class:Eigen::internal::unary_evaluator::Data
argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<ArgType> argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator::Data
arg_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl$/;"	s	namespace:Eigen::internal
arg_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  struct arg_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
arg_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  struct arg_impl {$/;"	s	namespace:Eigen::internal
arg_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  template<typename Scalar> struct arg_impl : arg_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
arg_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct arg_retval$/;"	s	namespace:Eigen::internal
arr	examples/detector-scipy-opencv.py	/^arr = cv2.imread('data\/dog.jpg')$/;"	v
arr	examples/detector-scipy-opencv.py	/^arr= imread('data\/dog.jpg')$/;"	v
array	plugin/Eigen/src/Core/ArrayBase.h	/^    ArrayBase<Derived>& array() { return *this; }$/;"	f	class:Eigen::ArrayBase
array	plugin/Eigen/src/Core/ArrayBase.h	/^    const ArrayBase<Derived>& array() const { return *this; }$/;"	f	class:Eigen::ArrayBase
array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(16) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(32) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(64) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALIGN_TO_BOUNDARY(8) T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/DenseStorage.h	/^  T array[1];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/DenseStorage.h	/^  T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ArrayWrapper<Derived> array() { return ArrayWrapper<Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
array	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const ArrayWrapper<const Derived> array() const { return ArrayWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::MatrixBase
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, int N> struct array_size<T (&)[N]> {$/;"	s	namespace:Eigen::internal
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, int N> struct array_size<const T (&)[N]> {$/;"	s	namespace:Eigen::internal
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, std::size_t N> struct array_size<const std::array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, std::size_t N> struct array_size<std::array<T,N> > {$/;"	s	namespace:Eigen::internal
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, typename EnableIf = void> struct array_size {$/;"	s	namespace:Eigen::internal
array_size	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct array_size<T,typename internal::enable_if<((T::SizeAtCompileTime&0)==0)>::type> {$/;"	s	namespace:Eigen::internal
array_to_image	examples/detector-scipy-opencv.py	/^def array_to_image(arr):$/;"	f
asDiagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^MatrixBase<Derived>::asDiagonal() const$/;"	f	class:Eigen::MatrixBase
asPermutation	plugin/Eigen/src/Core/PermutationMatrix.h	/^const PermutationWrapper<const Derived> MatrixBase<Derived>::asPermutation() const$/;"	f	class:Eigen::MatrixBase
asSluMatrix	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^SluMatrix asSluMatrix(MatrixType& mat)$/;"	f	namespace:Eigen::internal
aseq_negate	plugin/Eigen/src/Core/ArithmeticSequence.h	/^template<> struct aseq_negate<FixedInt<DynamicIndex> > {};$/;"	s	namespace:Eigen::internal
aseq_negate	plugin/Eigen/src/Core/ArithmeticSequence.h	/^template<> struct aseq_negate<Index> {$/;"	s	namespace:Eigen::internal
aseq_negate	plugin/Eigen/src/Core/ArithmeticSequence.h	/^template<int N> struct aseq_negate<FixedInt<N> > {$/;"	s	namespace:Eigen::internal
aseq_negate	plugin/Eigen/src/Core/ArithmeticSequence.h	/^template<typename T> struct aseq_negate {};$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type {$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type<FirstType,SizeType,IncrType,false,true> {$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type<FirstType,SizeType,IncrType,true,false> {$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type<FirstType,SizeType,IncrType,true,true> {$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type_aux	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type_aux {$/;"	s	namespace:Eigen::internal
aseq_reverse_first_type_aux	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct aseq_reverse_first_type_aux<SizeType,IncrType,typename internal::enable_if<bool((SizeType::value+IncrType::value)|0x1)>::type> {$/;"	s	namespace:Eigen::internal
asin	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  asin(double x) { return cl::sycl::asin(x); }$/;"	f	namespace:Eigen::numext
asin	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   asin(float x) { return cl::sycl::asin(x); }$/;"	f	namespace:Eigen::numext
asin	plugin/Eigen/src/Core/MathFunctions.h	/^T asin(const T &x) {$/;"	f	namespace:Eigen::numext
asin	plugin/Eigen/src/Core/MathFunctions.h	/^double asin(const double &x) { return ::asin(x); }$/;"	f	namespace:Eigen::numext
asin	plugin/Eigen/src/Core/MathFunctions.h	/^float asin(const float &x) { return ::asinf(x); }$/;"	f	namespace:Eigen::numext
asin	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^asin() const$/;"	f
asinh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  asinh(double x) { return cl::sycl::asinh(x); }$/;"	f	namespace:Eigen::numext
asinh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   asinh(float x) { return cl::sycl::asinh(x); }$/;"	f	namespace:Eigen::numext
asinh	plugin/Eigen/src/Core/MathFunctions.h	/^T asinh(const T &x) {$/;"	f	namespace:Eigen::numext
aspect	include/darknet.h	/^    float aspect;$/;"	m	struct:__anon734
aspect	include/darknet.h	/^    float aspect;$/;"	m	struct:load_args
aspect	include/darknet.h	/^    float aspect;$/;"	m	struct:network
assignCoeff	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignCoeff	plugin/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a *= b; }$/;"	f	struct:Eigen::internal::mul_assign_op
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a += b; }$/;"	f	struct:Eigen::internal::add_assign_op
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a -= b; }$/;"	f	struct:Eigen::internal::sub_assign_op
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a = b; }$/;"	f	struct:Eigen::internal::assign_op
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(DstScalar& a, const SrcScalar& b) const { a \/= b; }$/;"	f	struct:Eigen::internal::div_assign_op
assignCoeff	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeff(Scalar& a, const Scalar& b) const$/;"	f	struct:Eigen::internal::swap_assign_op
assignCoeffByOuterInner	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignCoeffByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignDiagonalCoeff	plugin/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignDiagonalCoeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignDiagonalCoeff(Index id)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignOppositeCoeff	plugin/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index, Index)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignOppositeCoeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC void assignOppositeCoeff(Index row, Index col)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
assignPacket	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	plugin/Eigen/src/Core/Swap.h	/^  void assignPacket(Index index)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	plugin/Eigen/src/Core/Swap.h	/^  void assignPacket(Index row, Index col)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacket	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::add_assign_op
assignPacket	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::assign_op
assignPacket	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::div_assign_op
assignPacket	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::mul_assign_op
assignPacket	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^  EIGEN_STRONG_INLINE void assignPacket(DstScalar* a, const Packet& b) const$/;"	f	struct:Eigen::internal::sub_assign_op
assignPacketByOuterInner	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignPacketByOuterInner	plugin/Eigen/src/Core/Swap.h	/^  void assignPacketByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
assignProduct	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void assignProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationBase
assignTranspose	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void assignTranspose(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct assign_op {$/;"	s	namespace:Eigen::internal
assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar> struct assign_op<DstScalar,void> {};$/;"	s	namespace:Eigen::internal
assign_sparse_to_sparse	plugin/Eigen/src/SparseCore/SparseAssign.h	/^void assign_sparse_to_sparse(DstXprType &dst, const SrcXprType &src)$/;"	f	namespace:Eigen::internal
assignment_from_xpr_op_product	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct assignment_from_xpr_op_product$/;"	s	namespace:Eigen::internal
at	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar at(Index key, const Scalar& defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atInRange	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar atInRange(Index start, Index end, Index key, const Scalar &defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atWithInsertion	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& atWithInsertion(Index key, const Scalar& defaultValue = Scalar(0))$/;"	f	class:Eigen::internal::CompressedStorage
atan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  atan(double x) { return cl::sycl::atan(x); }$/;"	f	namespace:Eigen::numext
atan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   atan(float x) { return cl::sycl::atan(x); }$/;"	f	namespace:Eigen::numext
atan	plugin/Eigen/src/Core/MathFunctions.h	/^T atan(const T &x) {$/;"	f	namespace:Eigen::numext
atan	plugin/Eigen/src/Core/MathFunctions.h	/^double atan(const double &x) { return ::atan(x); }$/;"	f	namespace:Eigen::numext
atan	plugin/Eigen/src/Core/MathFunctions.h	/^float atan(const float &x) { return ::atanf(x); }$/;"	f	namespace:Eigen::numext
atan	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^atan() const$/;"	f
atanh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  atanh(double x) { return cl::sycl::atanh(x); }$/;"	f	namespace:Eigen::numext
atanh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   atanh(float x) { return cl::sycl::atanh(x); }$/;"	f	namespace:Eigen::numext
atanh	plugin/Eigen/src/Core/MathFunctions.h	/^T atanh(const T &x) {$/;"	f	namespace:Eigen::numext
augment_args	include/darknet.h	/^} augment_args;$/;"	t	typeref:struct:__anon734
average	examples/darknet.c	/^void average(int argc, char *argv[])$/;"	f
avg	src/demo.c	/^static float *avg;$/;"	v	file:
avgpool_layer	src/avgpool_layer.h	/^typedef layer avgpool_layer;$/;"	t
axis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axpy_cpu	src/blas.c	/^void axpy_cpu(int N, float ALPHA, float *X, int INCX, float *Y, int INCY)$/;"	f
b	plugin/Eigen/src/SVD/JacobiSVD.h	/^         b = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon133
b	src/convolutional_layer.c	/^	float *b;$/;"	m	struct:t_arg	file:
back	include/darknet.h	/^    node *back;$/;"	m	struct:list
background	include/darknet.h	/^    int background;$/;"	m	struct:layer
background	include/darknet.h	/^    int background;$/;"	m	struct:load_args
backward	include/darknet.h	/^    void (*backward)  (struct layer, struct network);$/;"	m	struct:layer
backward_activation_layer	src/activation_layer.c	/^void backward_activation_layer(layer l, network net)$/;"	f
backward_activation_layer_gpu	src/activation_layer.c	/^void backward_activation_layer_gpu(layer l, network net)$/;"	f
backward_avgpool_layer	src/avgpool_layer.c	/^void backward_avgpool_layer(const avgpool_layer l, network net)$/;"	f
backward_batchnorm_layer	src/batchnorm_layer.c	/^void backward_batchnorm_layer(layer l, network net)$/;"	f
backward_batchnorm_layer_gpu	src/batchnorm_layer.c	/^void backward_batchnorm_layer_gpu(layer l, network net)$/;"	f
backward_bias	src/convolutional_layer.c	/^void backward_bias(float *bias_updates, float *delta, int batch, int n, int size)$/;"	f
backward_connected_layer	src/connected_layer.c	/^void backward_connected_layer(layer l, network net)$/;"	f
backward_connected_layer_gpu	src/connected_layer.c	/^void backward_connected_layer_gpu(layer l, network net)$/;"	f
backward_convolutional_layer	src/convolutional_layer.c	/^void backward_convolutional_layer(convolutional_layer l, network net)$/;"	f
backward_cost_layer	src/cost_layer.c	/^void backward_cost_layer(const cost_layer l, network net)$/;"	f
backward_cost_layer_gpu	src/cost_layer.c	/^void backward_cost_layer_gpu(const cost_layer l, network net)$/;"	f
backward_crnn_layer	src/crnn_layer.c	/^void backward_crnn_layer(layer l, network net)$/;"	f
backward_crnn_layer_gpu	src/crnn_layer.c	/^void backward_crnn_layer_gpu(layer l, network net)$/;"	f
backward_crop_layer	src/crop_layer.c	/^void backward_crop_layer(const crop_layer l, network net){}$/;"	f
backward_crop_layer_gpu	src/crop_layer.c	/^void backward_crop_layer_gpu(const crop_layer l, network net){}$/;"	f
backward_deconvolutional_layer	src/deconvolutional_layer.c	/^void backward_deconvolutional_layer(layer l, network net)$/;"	f
backward_detection_layer	src/detection_layer.c	/^void backward_detection_layer(const detection_layer l, network net)$/;"	f
backward_detection_layer_gpu	src/detection_layer.c	/^void backward_detection_layer_gpu(detection_layer l, network net)$/;"	f
backward_dropout_layer	src/dropout_layer.c	/^void backward_dropout_layer(dropout_layer l, network net)$/;"	f
backward_gpu	include/darknet.h	/^    void (*backward_gpu)  (struct layer, struct network);$/;"	m	struct:layer
backward_gru_layer	src/gru_layer.c	/^void backward_gru_layer(layer l, network net)$/;"	f
backward_gru_layer_gpu	src/gru_layer.c	/^void backward_gru_layer_gpu(layer l, network net)$/;"	f
backward_local_layer	src/local_layer.c	/^void backward_local_layer(local_layer l, network net)$/;"	f
backward_local_layer_gpu	src/local_layer.c	/^void backward_local_layer_gpu(local_layer l, network net)$/;"	f
backward_lstm_layer	src/lstm_layer.c	/^void backward_lstm_layer(layer l, network state)$/;"	f
backward_lstm_layer_gpu	src/lstm_layer.c	/^void backward_lstm_layer_gpu(layer l, network state)$/;"	f
backward_maxpool_layer	src/maxpool_layer.c	/^void backward_maxpool_layer(const maxpool_layer l, network net)$/;"	f
backward_network	src/network.c	/^void backward_network(network *netp)$/;"	f
backward_network_gpu	src/network.c	/^void backward_network_gpu(network *netp)$/;"	f
backward_normalization_layer	src/normalization_layer.c	/^void backward_normalization_layer(const layer layer, network net)$/;"	f
backward_normalization_layer_gpu	src/normalization_layer.c	/^void backward_normalization_layer_gpu(const layer layer, network net)$/;"	f
backward_region_layer	src/region_layer.c	/^void backward_region_layer(const layer l, network net)$/;"	f
backward_region_layer_gpu	src/region_layer.c	/^void backward_region_layer_gpu(const layer l, network net)$/;"	f
backward_reorg_layer	src/reorg_layer.c	/^void backward_reorg_layer(const layer l, network net)$/;"	f
backward_reorg_layer_gpu	src/reorg_layer.c	/^void backward_reorg_layer_gpu(layer l, network net)$/;"	f
backward_rnn_layer	src/rnn_layer.c	/^void backward_rnn_layer(layer l, network net)$/;"	f
backward_rnn_layer_gpu	src/rnn_layer.c	/^void backward_rnn_layer_gpu(layer l, network net)$/;"	f
backward_route_layer	src/route_layer.c	/^void backward_route_layer(const route_layer l, network net)$/;"	f
backward_route_layer_gpu	src/route_layer.c	/^void backward_route_layer_gpu(const route_layer l, network net)$/;"	f
backward_scale_cpu	src/batchnorm_layer.c	/^void backward_scale_cpu(float *x_norm, float *delta, int batch, int n, int size, float *scale_updates)$/;"	f
backward_shortcut_layer	src/shortcut_layer.c	/^void backward_shortcut_layer(const layer l, network net)$/;"	f
backward_shortcut_layer_gpu	src/shortcut_layer.c	/^void backward_shortcut_layer_gpu(const layer l, network net)$/;"	f
backward_softmax_layer	src/softmax_layer.c	/^void backward_softmax_layer(const softmax_layer l, network net)$/;"	f
backward_softmax_layer_gpu	src/softmax_layer.c	/^void backward_softmax_layer_gpu(const softmax_layer layer, network net)$/;"	f
base	plugin/Eigen/src/Core/PlainObjectBase.h	/^    Base& base() { return *static_cast<Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	plugin/Eigen/src/Core/PlainObjectBase.h	/^    const Base& base() const { return *static_cast<const Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
basecfg	src/utils.c	/^char *basecfg(char *cfgfile)$/;"	f
batch	include/darknet.h	/^    int batch;$/;"	m	struct:__anon730
batch	include/darknet.h	/^    int batch;$/;"	m	struct:layer
batch	include/darknet.h	/^    int batch;$/;"	m	struct:network
batch	src/parser.c	/^    int batch;$/;"	m	struct:size_params	file:
batch_normalize	include/darknet.h	/^    int batch_normalize;$/;"	m	struct:layer
bbox_comparator	src/compare.c	/^int bbox_comparator(const void *a, const void *b)$/;"	f
bbox_fight	src/compare.c	/^void bbox_fight(network net, sortable_bbox *a, sortable_bbox *b, int classes, int class)$/;"	f
bbox_update	src/compare.c	/^void bbox_update(sortable_bbox *a, sortable_bbox *b, int class, int result)$/;"	f
bc	src/convolutional_layer.c	/^	unsigned int bc;$/;"	m	struct:t_arg	file:
bd_algo	include/darknet.h	/^    cudnnConvolutionBwdDataAlgo_t bd_algo;$/;"	m	struct:layer
bdcSvd	plugin/Eigen/src/SVD/BDCSVD.h	/^MatrixBase<Derived>::bdcSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
best_3d_shift	src/image.c	/^int best_3d_shift(image a, image b, int min, int max)$/;"	f
best_3d_shift_r	src/image.c	/^int best_3d_shift_r(image a, image b, int min, int max)$/;"	f
beta	include/darknet.h	/^    float beta;$/;"	m	struct:layer
betas	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType betas() const$/;"	f	class:Eigen::GeneralizedEigenSolver
bf_algo	include/darknet.h	/^    cudnnConvolutionBwdFilterAlgo_t bf_algo;$/;"	m	struct:layer
bgindex	src/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon22
bias_change_gpu	include/darknet.h	/^    float * bias_change_gpu;$/;"	m	struct:layer
bias_m	include/darknet.h	/^    float * bias_m;$/;"	m	struct:layer
bias_m_gpu	include/darknet.h	/^    float *bias_m_gpu;$/;"	m	struct:layer
bias_match	include/darknet.h	/^    int bias_match;$/;"	m	struct:layer
bias_updates	include/darknet.h	/^    float * bias_updates;$/;"	m	struct:layer
bias_updates_gpu	include/darknet.h	/^    float * bias_updates_gpu;$/;"	m	struct:layer
bias_v	include/darknet.h	/^    float * bias_v;$/;"	m	struct:layer
bias_v_gpu	include/darknet.h	/^    float *bias_v_gpu;$/;"	m	struct:layer
biases	include/darknet.h	/^    float * biases;$/;"	m	struct:layer
biases_gpu	include/darknet.h	/^    float * biases_gpu;$/;"	m	struct:layer
bicgstab	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^bool bicgstab(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
bidiagonal	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    const BidiagonalType& bidiagonal() const { return m_bidiagonal; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
bilinear_interpolate	src/image.c	/^static float bilinear_interpolate(image im, float x, float y, int c)$/;"	f	file:
binarize_cpu	src/convolutional_layer.c	/^void binarize_cpu(float *input, int n, float *binary)$/;"	f
binarize_image	src/image.c	/^image binarize_image(image im)$/;"	f
binarize_input	src/convolutional_layer.c	/^void binarize_input(float *input, int n, int size, float *binary)$/;"	f
binarize_weights	src/convolutional_layer.c	/^void binarize_weights(float *weights, int n, int size, float *binary)$/;"	f
binary	include/darknet.h	/^    int binary;$/;"	m	struct:layer
binaryExpr	plugin/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const$/;"	f
binary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit binary_evaluator(const XprType& xpr) : m_d(xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IndexBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit binary_evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit binary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::binary_evaluator
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_boolean_and_op, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_product_op<T1,T2>, Lhs, Rhs>, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
binary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct binary_evaluator<CwiseBinaryOp<scalar_quotient_op<T1,T2>, Lhs, Rhs>, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
binary_input	include/darknet.h	/^    float * binary_input;$/;"	m	struct:layer
binary_input_gpu	include/darknet.h	/^    float * binary_input_gpu;$/;"	m	struct:layer
binary_op_base	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct binary_op_base$/;"	s	namespace:Eigen::internal
binary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	s	namespace:Eigen::internal
binary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
binary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
binary_weights	include/darknet.h	/^    float * binary_weights;$/;"	m	struct:layer
binary_weights_gpu	include/darknet.h	/^    float * binary_weights_gpu;$/;"	m	struct:layer
bind1st_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  bind1st_op(const first_argument_type &val) : m_value(val) {}$/;"	f	struct:Eigen::internal::bind1st_op
bind1st_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct bind1st_op : BinaryOp {$/;"	s	namespace:Eigen::internal
bind2nd_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  bind2nd_op(const second_argument_type &val) : m_value(val) {}$/;"	f	struct:Eigen::internal::bind2nd_op
bind2nd_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct bind2nd_op : BinaryOp {$/;"	s	namespace:Eigen::internal
blas_data_mapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::blas_data_mapper
blas_data_mapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^class blas_data_mapper {$/;"	c	namespace:Eigen::internal
blas_handle	src/cuda.c	/^cublasHandle_t blas_handle()$/;"	f
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, NestedXpr, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain> > >$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain1>,$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseBinaryOp<scalar_product_op<Scalar>, const CwiseNullaryOp<scalar_constant_op<Scalar>,Plain>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<Transpose<NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<const T>$/;"	s	namespace:Eigen::internal
blas_traits	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename XprType> struct blas_traits$/;"	s	namespace:Eigen::internal
blend_image	src/image.c	/^image blend_image(image fore, image back, float alpha)$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^block(Index startRow, Index startCol, NRowsType blockRows, NColsType blockCols) const$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^block(Index startRow, Index startCol, NRowsType blockRows, NColsType blockCols)$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol) const$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol,$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol)$/;"	f
block	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<NRows,NCols>::Type block(Index startRow, Index startCol,$/;"	f
blockA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline LhsScalar* blockA() { return m_blockA; }$/;"	f	class:Eigen::internal::level3_blocking
blockB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockB() { return m_blockB; }$/;"	f	class:Eigen::internal::level3_blocking
blockCols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
blockCols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockCols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockCols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
blockRows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
blockRows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
blockRows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index blockRows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
block_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit block_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::block_evaluator
block_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/* HasDirectAccess *\/ true>$/;"	s	namespace:Eigen::internal
block_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, \/*HasDirectAccess*\/ false>$/;"	s	namespace:Eigen::internal
block_evaluator_type	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typedef block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel> block_evaluator_type;$/;"	t	struct:Eigen::internal::evaluator
blocked	plugin/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index blocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
blocked	plugin/Eigen/src/Cholesky/LLT.h	/^  static Index blocked(MatrixType& m)$/;"	f	struct:Eigen::internal::llt_inplace
blocked_lu	plugin/Eigen/src/LU/PartialPivLU.h	/^  static Index blocked_lu(Index rows, Index cols, Scalar* lu_data, Index luStride, PivIndex* row_transpositions, PivIndex& nb_transpositions, Index maxBlockSize=256)$/;"	f	struct:Eigen::internal::partial_lu_impl
blueNorm	plugin/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::MatrixBase
blueNorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const BlueNormReturnType blueNorm() const$/;"	f	class:Eigen::VectorwiseOp
blueNorm	plugin/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::SparseMatrixBase
blueNorm_impl	plugin/Eigen/src/Core/StableNorm.h	/^blueNorm_impl(const EigenBase<Derived>& _vec)$/;"	f	namespace:Eigen::internal
board	examples/go.c	/^    float *board;$/;"	m	struct:mcts_tree	file:
board_to_string	examples/go.c	/^void board_to_string(char *s, float *board)$/;"	f
border_image	src/image.c	/^image border_image(image a, int border)$/;"	f
bottom	include/darknet.h	/^    float left, right, top, bottom;$/;"	m	struct:__anon738
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomLeftCorner(NRowsType cRows, NColsType cCols) const$/;"	f
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomLeftCorner(NRowsType cRows, NColsType cCols)$/;"	f
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomLeftCorner() const$/;"	f
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomLeftCorner()$/;"	f
bottomLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomRightCorner(NRowsType cRows, NColsType cCols) const$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomRightCorner(NRowsType cRows, NColsType cCols)$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomRightCorner() const$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomRightCorner()$/;"	f
bottomRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRows	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomRows(NRowsType n) const$/;"	f
bottomRows	plugin/Eigen/src/plugins/BlockMethods.h	/^bottomRows(NRowsType n)$/;"	f
bottomRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type bottomRows(Index n = N) const$/;"	f
bottomRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type bottomRows(Index n = N)$/;"	f
bound_image	src/data.c	/^box bound_image(image im)$/;"	f
box	include/darknet.h	/^} box;$/;"	t	typeref:struct:__anon735
box_intersection	src/box.c	/^float box_intersection(box a, box b)$/;"	f
box_iou	src/box.c	/^float box_iou(box a, box b)$/;"	f
box_label	include/darknet.h	/^} box_label;$/;"	t	typeref:struct:__anon738
box_rmse	src/box.c	/^float box_rmse(box a, box b)$/;"	f
box_union	src/box.c	/^float box_union(box a, box b)$/;"	f
boxes	include/darknet.h	/^    box **boxes;$/;"	m	struct:__anon736
boxes	src/demo.c	/^static box *boxes;$/;"	v	file:
br	src/convolutional_layer.c	/^	unsigned int br;$/;"	m	struct:t_arg	file:
broadcastRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, DoublePacketType& b0, DoublePacketType& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void broadcastRhs(const RhsScalar* b, RhsScalar& b0, RhsScalar& b1)$/;"	f	class:Eigen::internal::gebp_traits
broadcastRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void broadcastRhs(const RhsScalar* b, RhsPacket& b0, RhsPacket& b1, RhsPacket& b2, RhsPacket& b3)$/;"	f	class:Eigen::internal::gebp_traits
bruteforce_det3_helper	plugin/Eigen/src/LU/Determinant.h	/^inline const typename Derived::Scalar bruteforce_det3_helper$/;"	f	namespace:Eigen::internal
bruteforce_det4_helper	plugin/Eigen/src/LU/Determinant.h	/^const typename Derived::Scalar bruteforce_det4_helper$/;"	f	namespace:Eigen::internal
buff	src/demo.c	/^static image buff [3];$/;"	v	file:
buff_index	src/demo.c	/^static int buff_index = 0;$/;"	v	file:
buff_letter	src/demo.c	/^static image buff_letter[3];$/;"	v	file:
buffer_start	src/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon9
buflen	src/stb_image.h	/^   int buflen;$/;"	m	struct:__anon9
burn_in	include/darknet.h	/^    int burn_in;$/;"	m	struct:network
c	include/darknet.h	/^    int c;$/;"	m	struct:__anon733
c	include/darknet.h	/^    int h, w, c;$/;"	m	struct:network
c	include/darknet.h	/^    int h,w,c;$/;"	m	struct:layer
c	plugin/Eigen/src/Jacobi/Jacobi.h	/^    EIGEN_DEVICE_FUNC Scalar c() const { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	plugin/Eigen/src/Jacobi/Jacobi.h	/^    EIGEN_DEVICE_FUNC Scalar& c() { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	src/convolutional_layer.c	/^	float *c;$/;"	m	struct:t_arg	file:
c	src/parser.c	/^    int c;$/;"	m	struct:size_params	file:
c_array	python/darknet.py	/^def c_array(ctype, values):$/;"	f
c_cpu	include/darknet.h	/^    float *c_cpu;$/;"	m	struct:layer
c_gpu	include/darknet.h	/^    float *c_gpu;$/;"	m	struct:layer
c_to_fortran_numbering	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void c_to_fortran_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
c_type	include/darknet.h	/^	channel_type c_type;$/;"	m	struct:__anon733
calc_network_cost	src/network.c	/^void calc_network_cost(network *netp)$/;"	f
calculate_liberties	examples/go.c	/^static int *calculate_liberties(float *board)$/;"	f	file:
calculate_loss	examples/nightmare.c	/^void calculate_loss(float *output, float *delta, int n, float thresh)$/;"	f
call_assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if< evaluator_assume_aliasing<Src>::value, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(Dst& dst, const Src& src, const Func& func, typename enable_if<!evaluator_assume_aliasing<Src>::value, void*>::type = 0)$/;"	f	namespace:Eigen::internal
call_assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(NoAlias<Dst,StorageBase>& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment(const Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src)$/;"	f	namespace:Eigen::internal
call_assignment_no_alias_no_transpose	plugin/Eigen/src/Core/AssignEvaluator.h	/^void call_assignment_no_alias_no_transpose(Dst& dst, const Src& src, const Func& func)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void call_dense_assignment_loop(DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void call_dense_assignment_loop(DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
call_triangular_assignment_loop	plugin/Eigen/src/Core/TriangularMatrix.h	/^void call_triangular_assignment_loop(DstXprType& dst, const SrcXprType& src)$/;"	f	namespace:Eigen::internal
call_triangular_assignment_loop	plugin/Eigen/src/Core/TriangularMatrix.h	/^void call_triangular_assignment_loop(DstXprType& dst, const SrcXprType& src, const Functor &func)$/;"	f	namespace:Eigen::internal
cap	src/demo.c	/^static CvCapture * cap;$/;"	v	file:
cast	plugin/Eigen/src/Core/MathFunctions.h	/^inline NewType cast(const OldType& x)$/;"	f	namespace:Eigen::internal
cast	plugin/Eigen/src/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	plugin/Eigen/src/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Derived,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::QuaternionBase
cast	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	plugin/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling<NewScalarType> cast() const$/;"	f	class:Eigen::UniformScaling
cast	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim,Mode,Options> >::type cast() const$/;"	f	class:Eigen::Transform
cast	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^cast() const$/;"	f
cast_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct cast_impl$/;"	s	namespace:Eigen::internal
cast_to_pointer_type	plugin/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }$/;"	f	class:Eigen::Map
cd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    Packet1cd cd[2];$/;"	m	union:Eigen::internal::Packet2cf::__anon619
ceil	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  ceil(double x) { return cl::sycl::ceil(x); }$/;"	f	namespace:Eigen::numext
ceil	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   ceil(float x) { return cl::sycl::ceil(x); }$/;"	f	namespace:Eigen::numext
ceil	plugin/Eigen/src/Core/MathFunctions.h	/^T (ceil)(const T& x)$/;"	f	namespace:Eigen::numext
ceil	plugin/Eigen/src/Core/MathFunctions.h	/^double ceil(const double &x) { return ::ceil(x); }$/;"	f	namespace:Eigen::numext
ceil	plugin/Eigen/src/Core/MathFunctions.h	/^float ceil(const float &x) { return ::ceilf(x); }$/;"	f	namespace:Eigen::numext
ceil	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half ceil(const half& a) {$/;"	f	namespace:Eigen::half_impl
ceil	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^ceil() const$/;"	f
ceilh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half ceilh(const Eigen::half& a) {$/;"	f
cell_cpu	include/darknet.h	/^    float *cell_cpu;$/;"	m	struct:layer
cell_gpu	include/darknet.h	/^    float *cell_gpu;$/;"	m	struct:layer
center	include/darknet.h	/^    int center;$/;"	m	struct:load_args
center	include/darknet.h	/^    int center;$/;"	m	struct:network
center	plugin/Eigen/src/Geometry/AlignedBox.h	/^  center() const$/;"	f	class:Eigen::AlignedBox
center_crop_image	src/image.c	/^image center_crop_image(image im, int w, int h)$/;"	f
change_leaves	src/tree.c	/^void change_leaves(tree *t, char *leaf_list)$/;"	f
channel	src/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon20
channel_type	include/darknet.h	/^}channel_type;$/;"	t	typeref:enum:__anon732
checkSanity	plugin/Eigen/src/Core/MapBase.h	/^    void checkSanity(typename internal::enable_if<(internal::traits<T>::Alignment>0),void*>::type = 0) const$/;"	f	class:Eigen::MapBase
checkSanity	plugin/Eigen/src/Core/MapBase.h	/^    void checkSanity(typename internal::enable_if<internal::traits<T>::Alignment==0,void*>::type = 0) const$/;"	f	class:Eigen::MapBase
checkTransposeAliasing_impl	plugin/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl$/;"	s	namespace:Eigen::internal
checkTransposeAliasing_impl	plugin/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl<Derived, OtherDerived, false>$/;"	s	namespace:Eigen::internal
check_DenseIndex_is_signed	plugin/Eigen/src/Core/DenseBase.h	/^static inline void check_DenseIndex_is_signed() {$/;"	f	namespace:Eigen::internal
check_coordinates	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index , Index ) const {}$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_error	src/cuda.c	/^void check_error(cudaError_t status)$/;"	f
check_for_aliasing	plugin/Eigen/src/Core/Transpose.h	/^void check_for_aliasing(const Dst &dst, const Src &src)$/;"	f	namespace:Eigen::internal
check_ko	examples/go.c	/^int check_ko(float *x, float *ko)$/;"	f
check_rows_cols_for_overflow	plugin/Eigen/src/Core/PlainObjectBase.h	/^template<> struct check_rows_cols_for_overflow<Dynamic> {$/;"	s	namespace:Eigen::internal
check_rows_cols_for_overflow	plugin/Eigen/src/Core/PlainObjectBase.h	/^template<int MaxSizeAtCompileTime> struct check_rows_cols_for_overflow {$/;"	s	namespace:Eigen::internal
check_size_for_overflow	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void check_size_for_overflow(std::size_t size)$/;"	f	namespace:Eigen::internal
check_static_allocation_size	plugin/Eigen/src/Core/DenseStorage.h	/^void check_static_allocation_size()$/;"	f	namespace:Eigen::internal
check_template_parameters	plugin/Eigen/src/Cholesky/LDLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LDLT
check_template_parameters	plugin/Eigen/src/Cholesky/LLT.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::LLT
check_template_parameters	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ComplexEigenSolver
check_template_parameters	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::EigenSolver
check_template_parameters	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::GeneralizedEigenSolver
check_template_parameters	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SelfAdjointEigenSolver
check_template_parameters	plugin/Eigen/src/LU/FullPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivLU
check_template_parameters	plugin/Eigen/src/LU/PartialPivLU.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::PartialPivLU
check_template_parameters	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::ColPivHouseholderQR
check_template_parameters	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  static void check_template_parameters() {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
check_template_parameters	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::FullPivHouseholderQR
check_template_parameters	plugin/Eigen/src/QR/HouseholderQR.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::HouseholderQR
check_template_parameters	plugin/Eigen/src/SVD/SVDBase.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SVDBase
check_template_parameters	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SparseMatrix
check_template_parameters	plugin/Eigen/src/SparseCore/SparseVector.h	/^    static void check_template_parameters()$/;"	f	class:Eigen::SparseVector
check_template_params	plugin/Eigen/src/Geometry/Transform.h	/^    EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void check_template_params()$/;"	f	class:Eigen::Transform
check_that_malloc_is_allowed	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline void check_that_malloc_is_allowed()$/;"	f	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	plugin/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	plugin/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector<DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	plugin/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	plugin/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
child	include/darknet.h	/^    int *child;$/;"	m	struct:__anon725
children	examples/go.c	/^    struct mcts_tree **children;$/;"	m	struct:mcts_tree	typeref:struct:mcts_tree::mcts_tree	file:
cholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_common& cholmod() { return m_cholmod; }$/;"	f	class:Eigen::CholmodBase
cholmodCommon	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    cholmod_common *cholmodCommon() const { return &m_cc; }$/;"	f	class:Eigen::SPQR
cholmod_configure_matrix	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<> struct cholmod_configure_matrix<double> {$/;"	s	namespace:Eigen::internal
cholmod_configure_matrix	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<> struct cholmod_configure_matrix<std::complex<double> > {$/;"	s	namespace:Eigen::internal
cj	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,ConjLhs,false> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,false,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
clamp	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
class	src/box.c	/^    int class;$/;"	m	struct:__anon4	file:
class	src/compare.c	/^    int class;$/;"	m	struct:__anon23	file:
class_scale	include/darknet.h	/^    float class_scale;$/;"	m	struct:layer
classes	include/darknet.h	/^    int classes;$/;"	m	struct:__anon724
classes	include/darknet.h	/^    int classes;$/;"	m	struct:layer
classes	include/darknet.h	/^    int classes;$/;"	m	struct:load_args
classes	scripts/voc_label.py	/^classes = ["aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"]$/;"	v
classes	src/compare.c	/^    int classes;$/;"	m	struct:__anon23	file:
classes	voc_label.py	/^classes = ["aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"]$/;"	v
classfix	include/darknet.h	/^    int classfix;$/;"	m	struct:layer
classify	python/darknet.py	/^def classify(net, meta, im):$/;"	f
clean	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void clean()$/;"	f	class:Eigen::PastixBase
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int DynamicKey> struct cleanup_index_type<VariableAndFixedInt<DynamicKey>, DynamicKey> { typedef Index type; };$/;"	s	namespace:Eigen::internal
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<FixedInt<N> (*)(), DynamicKey> { typedef FixedInt<N> type; };$/;"	s	namespace:Eigen::internal
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<VariableAndFixedInt<N>, DynamicKey> { typedef FixedInt<N> type; };$/;"	s	namespace:Eigen::internal
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<std::integral_constant<int,N>, DynamicKey> { typedef FixedInt<N> type; };$/;"	s	namespace:Eigen::internal
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T, int DynamicKey=Dynamic, typename EnableIf=void> struct cleanup_index_type { typedef T type; };$/;"	s	namespace:Eigen::internal
cleanup_index_type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T, int DynamicKey> struct cleanup_index_type<T,DynamicKey,typename internal::enable_if<internal::is_integral<T>::value>::type> { typedef Index type; };$/;"	s	namespace:Eigen::internal
cleanup_seq_incr	plugin/Eigen/src/Core/ArithmeticSequence.h	/^template<typename T> struct cleanup_seq_incr {$/;"	s	namespace:Eigen::internal
clear	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void clear() { m_size = 0; }$/;"	f	class:Eigen::internal::CompressedStorage
clearFactors	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void clearFactors()$/;"	f	class:Eigen::SuperLUBase
clear_mark	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  IndexType clear_mark  \/* return the new value for tag_mark *\/$/;"	f	namespace:internal
cm_factorize_p	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^inline int  cm_factorize_p       (cholmod_sparse*  A, double beta[2], _StorageIndex* fset, std::size_t fsize, cholmod_factor* L, cholmod_common &Common) { return cholmod_factorize_p   (A, beta, fset, fsize, L, &Common); }$/;"	f	namespace:Eigen::internal
cm_factorize_p	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^inline int  cm_factorize_p<long> (cholmod_sparse*  A, double beta[2], long* fset,          std::size_t fsize, cholmod_factor* L, cholmod_common &Common) { return cholmod_l_factorize_p (A, beta, fset, fsize, L, &Common); }$/;"	f	namespace:Eigen::internal
cm_solve	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<>                       inline cholmod_dense*  cm_solve<long>   (int sys, cholmod_factor& L, cholmod_dense&  B, cholmod_common &Common) { return cholmod_l_solve   (sys, &L, &B, &Common); }$/;"	f	namespace:Eigen::internal
cm_solve	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<typename _StorageIndex> inline cholmod_dense*  cm_solve         (int sys, cholmod_factor& L, cholmod_dense&  B, cholmod_common &Common) { return cholmod_solve     (sys, &L, &B, &Common); }$/;"	f	namespace:Eigen::internal
cm_spsolve	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<>                       inline cholmod_sparse* cm_spsolve<long> (int sys, cholmod_factor& L, cholmod_sparse& B, cholmod_common &Common) { return cholmod_l_spsolve (sys, &L, &B, &Common); }$/;"	f	namespace:Eigen::internal
cm_spsolve	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^template<typename _StorageIndex> inline cholmod_sparse* cm_spsolve       (int sys, cholmod_factor& L, cholmod_sparse& B, cholmod_common &Common) { return cholmod_spsolve   (sys, &L, &B, &Common); }$/;"	f	namespace:Eigen::internal
cmp_EQ	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_EQ = 0,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_GE	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_GE = 6$/;"	e	enum:Eigen::internal::ComparisonName
cmp_GT	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_GT = 5,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LE	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_LE = 2,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_LT	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_LT = 1,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_NEQ	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_NEQ = 4,$/;"	e	enum:Eigen::internal::ComparisonName
cmp_UNORD	plugin/Eigen/src/Core/util/Constants.h	/^  cmp_UNORD = 3,$/;"	e	enum:Eigen::internal::ComparisonName
coco_classes	examples/coco.c	/^char *coco_classes[] = {"person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","dining table","toilet","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"};$/;"	v
coco_ids	examples/coco.c	/^int coco_ids[] = {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90};$/;"	v
coco_ids	examples/detector.c	/^static int coco_ids[] = {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,70,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90};$/;"	v	file:
code	src/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon11
code_bits	src/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon12
code_buffer	src/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon12
code_buffer	src/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon16
codes	src/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anon22
coeff	plugin/Eigen/src/Core/Block.h	/^    EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	plugin/Eigen/src/Core/Block.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::ternary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::ternary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(Index row, Index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(IndexType index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  CoeffReturnType coeff(IndexType row, IndexType col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const Scalar coeff(Index i, Index j) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const Scalar coeff(Index index) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    coeff(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	plugin/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index idx) const$/;"	f	class:Eigen::Diagonal
coeff	plugin/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeff	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	plugin/Eigen/src/Core/IndexedView.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
coeff	plugin/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index index) const$/;"	f	class:Eigen::MapBase
coeff	plugin/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeff	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::NestByValue
coeff	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
coeff	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeff	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeff	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar coeff(Index i) const$/;"	f	class:Eigen::ProductImpl
coeff	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::ProductImpl
coeff	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index idx) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
coeff	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC const CoeffReturnType coeff(Index index) const$/;"	f	struct:Eigen::internal::product_evaluator
coeff	plugin/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	plugin/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
coeff	plugin/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	plugin/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index,Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	plugin/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i) const$/;"	f	class:Eigen::Select
coeff	plugin/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::Select
coeff	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SelfAdjointView
coeff	plugin/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& coeff(Index i) const { return indices().coeff(i); }$/;"	f	class:Eigen::TranspositionsBase
coeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const  { return derived().coeff(row,col); }$/;"	f	class:Eigen::TriangularBase
coeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::TriangularViewImpl
coeff	plugin/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::visitor_evaluator
coeff	plugin/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeff(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeff	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::BlockImpl
coeff	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index index) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::BlockImpl
coeff	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeff	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Scalar& coeff(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
coeff	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMapBase
coeff	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMatrix
coeff	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index i) const$/;"	f	class:Eigen::SparseVector
coeff	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseVector
coeff	src/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon12::__anon13
coeffByOuterInner	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
coeffByOuterInner	plugin/Eigen/src/Core/Redux.h	/^  CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
coeffRef	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	plugin/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	plugin/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	plugin/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	plugin/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::mapbase_evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Scalar& coeffRef(Index row, Index)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typename XprType::Scalar& coeffRef(Index index)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRef(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	plugin/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index idx)$/;"	f	class:Eigen::Diagonal
coeffRef	plugin/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index row, Index)$/;"	f	class:Eigen::Diagonal
coeffRef	plugin/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index idx) const$/;"	f	class:Eigen::Diagonal
coeffRef	plugin/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeffRef	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	plugin/Eigen/src/Core/IndexedView.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::unary_evaluator
coeffRef	plugin/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::MapBase
coeffRef	plugin/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MapBase
coeffRef	plugin/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MapBase
coeffRef	plugin/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
coeffRef	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::NestByValue
coeffRef	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::NestByValue
coeffRef	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index rowId, Index colId)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	plugin/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	plugin/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index,Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfAdjointView
coeffRef	plugin/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	plugin/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index rowId, Index colId) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	plugin/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& coeffRef(Index i) { return indices().coeffRef(i); }$/;"	f	class:Eigen::TranspositionsBase
coeffRef	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) { return derived().coeffRef(row,col); }$/;"	f	class:Eigen::TriangularBase
coeffRef	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TriangularViewImpl
coeffRef	plugin/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_StorageIndex>::coeffRef(Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeffRef	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::BlockImpl
coeffRef	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::BlockImpl
coeffRef	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
coeffRef	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  Scalar& coeffRef(Index row, Index col)$/;"	f	struct:Eigen::internal::evaluator
coeffRef	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMapBase
coeffRef	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
coeffRef	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index i)$/;"	f	class:Eigen::SparseVector
coeffRef	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseVector
coeffRefByOuterInner	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRefByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DenseCoeffsBase
coeffSeparator	plugin/Eigen/src/Core/IO.h	/^  std::string coeffSeparator;$/;"	m	struct:Eigen::IOFormat
coeff_h	src/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon12::__anon13
coeff_visitor	plugin/Eigen/src/Core/Visitor.h	/^struct coeff_visitor$/;"	s	namespace:Eigen::internal
coeff_w	src/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon12::__anon13
coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrixWrapper
coeffs	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Map
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Coefficients& coeffs() { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const typename internal::traits<Derived>::Coefficients& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline typename internal::traits<Derived>::Coefficients& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Map<Array<Scalar,Dynamic,1> > coeffs() { eigen_assert(isCompressed()); return Array<Scalar,Dynamic,1>::Map(valuePtr(),nonZeros()); }$/;"	f	class:Eigen::SparseCompressedBase
coeffs	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Map<const Array<Scalar,Dynamic,1> > coeffs() const { eigen_assert(isCompressed()); return Array<Scalar,Dynamic,1>::Map(valuePtr(),nonZeros()); }$/;"	f	class:Eigen::SparseCompressedBase
cofactor_3x3	plugin/Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_3x3(const MatrixType& m)$/;"	f	namespace:Eigen::internal
cofactor_4x4	plugin/Eigen/src/LU/InverseImpl.h	/^inline typename MatrixType::Scalar cofactor_4x4(const MatrixType& matrix)$/;"	f	namespace:Eigen::internal
col	examples/go.c	/^    int col;$/;"	m	struct:__anon26	file:
col	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,Dynamic,1> col(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
col	plugin/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Rows,$/;"	e	enum:Eigen::internal::all_unroller::__anon329
col	plugin/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Rows,$/;"	e	enum:Eigen::internal::any_unroller::__anon330
col	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index col() const             { return m_iter.col(); }$/;"	f	class:Eigen::InnerIterator
col	plugin/Eigen/src/Core/CoreIterators.h	/^  inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::inner_iterator_selector
col	plugin/Eigen/src/Core/TriangularMatrix.h	/^    col = (UnrollCount-1) \/ DstXprType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon181
col	plugin/Eigen/src/Core/Visitor.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_impl::__anon285
col	plugin/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
col	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return EvalIterator::col()   - m_block.startCol(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
col	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index col()    const { return IsRowMajor ? index() : 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
col	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
col	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return IsRowMajor ? m_id : m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return IsRowMajor ? m_id : m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_rhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index col()   const { return NeedToTranspose ? LhsIterator::index() : m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index col() const    { return SparseXprType::IsRowMajor ? m_sparseIter.index() : m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^      Index col() const { return EvalIterator::row(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& col() const { return m_col; }$/;"	f	class:Eigen::Triplet
col	plugin/Eigen/src/SparseCore/SparseView.h	/^        inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
col	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
col	plugin/Eigen/src/plugins/BlockMethods.h	/^inline ColXpr col(Index i)$/;"	f
col	plugin/Eigen/src/plugins/BlockMethods.h	/^inline ConstColXpr col(Index i) const$/;"	f
col2im_add_pixel	src/col2im.c	/^void col2im_add_pixel(float *im, int height, int width, int channels,$/;"	f
col2im_cpu	src/col2im.c	/^void col2im_cpu(float* data_col,$/;"	f
colIndexByOuterInner	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
colIndexByOuterInner	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
colIndexPtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colIndexPtr()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colIndexPtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colIndices	plugin/Eigen/src/Core/IndexedView.h	/^  const ColIndices& colIndices() const { return m_colIndices; }$/;"	f	class:Eigen::IndexedView
colOffset	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value() > 0 ? m_index.value() : 0; }$/;"	f	struct:Eigen::internal::evaluator
colOffset	plugin/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }$/;"	f	class:Eigen::Diagonal
colPivHouseholderQr	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^MatrixBase<Derived>::colPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
colStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  inline Index colStride() const { return XprType::IsRowMajor ? m_innerStride.value() : m_outerStride.value(); }$/;"	f	struct:Eigen::internal::mapbase_evaluator
colStride	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index colStride() const$/;"	f	class:Eigen::DenseCoeffsBase
colToSup	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* colToSup()  { return m_col_to_sup; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colToSup	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* colToSup() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
colamd	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static bool colamd(IndexType n_row, IndexType n_col, IndexType Alen, IndexType *A, IndexType *p, double knobs[COLAMD_KNOBS], IndexType stats[COLAMD_STATS])$/;"	f	namespace:internal
colamd_c	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_c(IndexType n_col) $/;"	f	namespace:internal
colamd_col	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^struct colamd_col$/;"	s	namespace:internal
colamd_r	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType  colamd_r(IndexType n_row)$/;"	f	namespace:internal
colamd_recommended	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^inline IndexType colamd_recommended ( IndexType nnz, IndexType n_row, IndexType n_col)$/;"	f	namespace:internal
colamd_set_defaults	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline void colamd_set_defaults(double knobs[COLAMD_KNOBS])$/;"	f	namespace:internal
colblk	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index colblk; \/\/ The minimum column dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
coletree	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^int coletree(const MatrixType& mat, IndexVector& parent, IndexVector& firstRowElt, typename MatrixType::StorageIndex *perm=0)$/;"	f	namespace:Eigen::internal
collapseDuplicates	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::collapseDuplicates(DupFunctor dup_func)$/;"	f	class:Eigen::SparseMatrix
collapse_image_layers	src/image.c	/^image collapse_image_layers(image source, int border)$/;"	f
collapse_images_horz	src/image.c	/^image collapse_images_horz(image *ims, int n)$/;"	f
collapse_images_vert	src/image.c	/^image collapse_images_vert(image *ims, int n)$/;"	f
color_table	src/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon22
colors	src/image.c	/^float colors[6][3] = { {1,0,1}, {0,0,1},{0,1,1},{0,1,0},{1,1,0},{1,0,0} };$/;"	v
cols	include/darknet.h	/^    int rows, cols;$/;"	m	struct:matrix
cols	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LDLT
cols	plugin/Eigen/src/Cholesky/LLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LLT
cols	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex cols() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
cols	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ArrayWrapper
cols	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::MatrixWrapper
cols	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index cols() const        { return m_dstExpr.cols(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
cols	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrix
cols	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
cols	plugin/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
cols	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Index cols() const $/;"	f	class:Eigen::internal::EvalToTemp
cols	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseBinaryOp
cols	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
cols	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseTernaryOp
cols	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::CwiseUnaryOp
cols	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::CwiseUnaryView
cols	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols() const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index cols(void) const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index cols(void) {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	plugin/Eigen/src/Core/Diagonal.h	/^    inline Index cols() const { return 1; }$/;"	f	class:Eigen::Diagonal
cols	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index cols() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
cols	plugin/Eigen/src/Core/EigenBase.h	/^  inline Index cols() const { return derived().cols(); }$/;"	f	struct:Eigen::EigenBase
cols	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ForceAlignedAccess
cols	plugin/Eigen/src/Core/IndexedView.h	/^  Index cols() const { return internal::size(m_colIndices); }$/;"	f	class:Eigen::IndexedView
cols	plugin/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::Inverse
cols	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::MapBase
cols	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::NestByValue
cols	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
cols	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }$/;"	f	class:Eigen::PlainObjectBase
cols	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Product
cols	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::redux_evaluator
cols	plugin/Eigen/src/Core/Replicate.h	/^    inline Index cols() const { return m_matrix.cols() * m_colFactor.value(); }$/;"	f	class:Eigen::Replicate
cols	plugin/Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return static_cast<const Derived*>(this)->cols(); }$/;"	f	class:Eigen::ReturnByValue
cols	plugin/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Reverse
cols	plugin/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index cols() const { return m_condition.cols(); }$/;"	f	class:Eigen::Select
cols	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfAdjointView
cols	plugin/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::Solve
cols	plugin/Eigen/src/Core/SolveTriangular.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
cols	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Transpose
cols	plugin/Eigen/src/Core/Transpositions.h	/^    Index cols() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
cols	plugin/Eigen/src/Core/Transpositions.h	/^    Index cols() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
cols	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::TriangularBase
cols	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::TriangularView
cols	plugin/Eigen/src/Core/VectorwiseOp.h	/^    Index cols() const { return (Direction==Horizontal ? 1 : m_matrix.cols()); }$/;"	f	class:Eigen::PartialReduxExpr
cols	plugin/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::internal::visitor_evaluator
cols	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index cols() const { return m_hess.packedMatrix().cols(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
cols	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
cols	plugin/Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_matrix.cols() + (int(Direction)==Horizontal ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
cols	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
cols	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
cols	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transform
cols	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index cols() const { return rows(); }$/;"	f	class:Eigen::HouseholderSequence
cols	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index cols() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
cols	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    Index cols() const { return m_L.cols(); }$/;"	f	class:Eigen::IncompleteCholesky
cols	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLUT
cols	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index cols() const { return matrix().cols(); }$/;"	f	class:Eigen::IterativeSolverBase
cols	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SolveWithGuess
cols	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    inline Index cols() const { return mp_matrix.cols(); }$/;"	f	class:Eigen::KLU
cols	plugin/Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::FullPivLU
cols	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::PartialPivLU
cols	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PastixBase
cols	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
cols	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::ColPivHouseholderQR
cols	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index cols() const { return m_cpqr.cols(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
cols	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::FullPivHouseholderQR
cols	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  Index cols() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
cols	plugin/Eigen/src/QR/HouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::HouseholderQR
cols	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index cols() const { return m_cR->ncol; }$/;"	f	class:Eigen::SPQR
cols	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
cols	plugin/Eigen/src/SVD/SVDBase.h	/^  inline Index cols() const { return m_cols; }$/;"	f	class:Eigen::SVDBase
cols	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
cols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::BlockImpl
cols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
cols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::BlockImpl
cols	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
cols	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
cols	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::SparseMatrixBase
cols	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSelfAdjointView
cols	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
cols	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }$/;"	f	class:Eigen::SparseVector
cols	plugin/Eigen/src/SparseCore/SparseView.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseView
cols	plugin/Eigen/src/SparseLU/SparseLU.h	/^    inline Index cols() const { return m_mat.cols(); }$/;"	f	class:Eigen::SparseLU
cols	plugin/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
cols	plugin/Eigen/src/SparseLU/SparseLU.h	/^  Index cols() { return m_mapL.cols(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
cols	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index cols() { return m_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
cols	plugin/Eigen/src/SparseQR/SparseQR.h	/^    inline Index cols() const { return m_pmat.cols();}$/;"	f	class:Eigen::SparseQR
cols	plugin/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return (std::min)(m_qr.rows(),m_qr.cols()); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
cols	plugin/Eigen/src/SparseQR/SparseQR.h	/^  inline Index cols() const { return m_other.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
cols	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SuperLUBase
cols	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index cols() const { return mp_matrix.cols(); }$/;"	f	class:Eigen::UmfPackLU
cols	plugin/Eigen/src/misc/Image.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::image_retval_base
cols	plugin/Eigen/src/misc/Kernel.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::kernel_retval_base
colsPermutation	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::ColPivHouseholderQR
colsPermutation	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const PermutationType& colsPermutation() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
colsPermutation	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::FullPivHouseholderQR
colsPermutation	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    PermutationType colsPermutation() const$/;"	f	class:Eigen::SPQR
colsPermutation	plugin/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseLU
colsPermutation	plugin/Eigen/src/SparseQR/SparseQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::SparseQR
cols_select	plugin/Eigen/src/Core/GeneralProduct.h	/^    cols_select = product_size_category<Cols,MaxCols>::value,$/;"	e	enum:Eigen::internal::product_type::__anon529
column_bmod	plugin/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_bmod(const Index jcol, const Index nseg, BlockScalarVector dense, ScalarVector& tempv,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^Index SparseLUImpl<Scalar,StorageIndex>::column_dfs(const Index m, const Index jcol, IndexVector& perm_r, Index maxsuper, Index& nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
column_dfs_traits	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  column_dfs_traits(Index jcol, Index& jsuper, typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& glu, SparseLUImpl<Scalar, StorageIndex>& luImpl)$/;"	f	struct:Eigen::internal::column_dfs_traits
column_dfs_traits	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^struct column_dfs_traits : no_assignment_operator$/;"	s	namespace:Eigen::internal
colwise	plugin/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstColwiseReturnType colwise() const {$/;"	f	class:Eigen::DenseBase
colwise	plugin/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise()$/;"	f	class:Eigen::DenseBase
combine_cpu	include/darknet.h	/^    float * combine_cpu;$/;"	m	struct:layer
combine_delta_cpu	include/darknet.h	/^    float * combine_delta_cpu;$/;"	m	struct:layer
combine_delta_gpu	include/darknet.h	/^    float * combine_delta_gpu;$/;"	m	struct:layer
combine_gpu	include/darknet.h	/^    float * combine_gpu;$/;"	m	struct:layer
compare_board	examples/go.c	/^int compare_board(float *a, float *b)$/;"	f
compare_networks	src/network.c	/^void compare_networks(network *n1, network *n2, data test)$/;"	f
completeOrthogonalDecomposition	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^MatrixBase<Derived>::completeOrthogonalDecomposition() const {$/;"	f	class:Eigen::MatrixBase
complex_schur_reduce_to_hessenberg	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg$/;"	s	namespace:Eigen::internal
complex_schur_reduce_to_hessenberg	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg<MatrixType, false>$/;"	s	namespace:Eigen::internal
composite_3d	src/image.c	/^void composite_3d(char *f1, char *f2, char *out, int delta)$/;"	f
composite_image	src/image.c	/^void composite_image(image source, image dest, int dx, int dy)$/;"	f
compute	plugin/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::compute(const EigenBase<InputType>& a)$/;"	f	class:Eigen::LDLT
compute	plugin/Eigen/src/Cholesky/LLT.h	/^LLT<MatrixType,_UpLo>& LLT<MatrixType,_UpLo>::compute(const EigenBase<InputType>& a)$/;"	f	class:Eigen::LLT
compute	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& compute(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
compute	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^ComplexEigenSolver<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
compute	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeU)$/;"	f	class:Eigen::ComplexSchur
compute	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^EigenSolver<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::EigenSolver
compute	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^GeneralizedEigenSolver<MatrixType>::compute(const MatrixType& A, const MatrixType& B, bool computeEigenvectors)$/;"	f	class:Eigen::GeneralizedEigenSolver
compute	plugin/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^compute(const MatrixType& matA, const MatrixType& matB, int options)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
compute	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition& compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
compute	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    RealQZ<MatrixType>& RealQZ<MatrixType>::compute(const MatrixType& A_in, const MatrixType& B_in, bool computeQZ)$/;"	f	class:Eigen::RealQZ
compute	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::compute(const EigenBase<InputType>& matrix, bool computeU)$/;"	f	class:Eigen::RealSchur
compute	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::compute(const EigenBase<InputType>& a_matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization& compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::Tridiagonalization
compute	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
compute	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& compute(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
compute	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
compute	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
compute	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT& compute(const MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
compute	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& compute(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
compute	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void compute(const InputMatrixType& matrix)$/;"	f	class:Eigen::KLU
compute	plugin/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::FullPivLU
compute	plugin/Eigen/src/LU/PartialPivLU.h	/^    PartialPivLU& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::PartialPivLU
compute	plugin/Eigen/src/LU/PartialPivLU.h	/^void PartialPivLU<MatrixType>::compute()$/;"	f	class:Eigen::PartialPivLU
compute	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
compute	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
compute	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
compute	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::compute(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
compute	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::compute(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
compute	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^ColPivHouseholderQR<MatrixType>& ColPivHouseholderQR<MatrixType>::compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
compute	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
compute	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const EigenBase<InputType>& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
compute	plugin/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR& compute(const EigenBase<InputType>& matrix) {$/;"	f	class:Eigen::HouseholderQR
compute	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void compute(const _MatrixType& matrix)$/;"	f	class:Eigen::SPQR
compute	plugin/Eigen/src/SVD/BDCSVD.h	/^  BDCSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::BDCSVD
compute	plugin/Eigen/src/SVD/BDCSVD.h	/^BDCSVD<MatrixType>& BDCSVD<MatrixType>::compute(const MatrixType& matrix, unsigned int computationOptions) $/;"	f	class:Eigen::BDCSVD
compute	plugin/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::JacobiSVD
compute	plugin/Eigen/src/SVD/JacobiSVD.h	/^JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType& matrix, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
compute	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::compute(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
compute	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
compute	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
compute	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
compute	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
compute	plugin/Eigen/src/SparseLU/SparseLU.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
compute	plugin/Eigen/src/SparseQR/SparseQR.h	/^    void compute(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
compute	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLUBase
compute	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void compute(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
computeDirect	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeDirect(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFromHessenberg	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ, bool computeU)$/;"	f	class:Eigen::ComplexSchur
computeFromHessenberg	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::computeFromHessenberg(const HessMatrixType& matrixH, const OrthMatrixType& matrixQ,  bool computeU)$/;"	f	class:Eigen::RealSchur
computeFromTridiagonal	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeFromTridiagonal(const RealVectorType& diag, const SubDiagonalType& subdiag , int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeFromTridiagonal_impl	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^ComputationInfo computeFromTridiagonal_impl(DiagType& diag, SubDiagType& subdiag, const Index maxIterations, bool computeEigenvectors, MatrixType& eivec)$/;"	f	namespace:Eigen::internal
computeInPlace	plugin/Eigen/src/LU/FullPivLU.h	/^void FullPivLU<MatrixType>::computeInPlace()$/;"	f	class:Eigen::FullPivLU
computeInPlace	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^void ColPivHouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::ColPivHouseholderQR
computeInPlace	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^void CompleteOrthogonalDecomposition<MatrixType>::computeInPlace()$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
computeInPlace	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^void FullPivHouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::FullPivHouseholderQR
computeInPlace	plugin/Eigen/src/QR/HouseholderQR.h	/^void HouseholderQR<MatrixType>::computeInPlace()$/;"	f	class:Eigen::HouseholderQR
computeInverseAndDetWithCheck	plugin/Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseAndDetWithCheck($/;"	f	class:Eigen::MatrixBase
computeInverseWithCheck	plugin/Eigen/src/LU/InverseImpl.h	/^inline void MatrixBase<Derived>::computeInverseWithCheck($/;"	f	class:Eigen::MatrixBase
computeNormOfT	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Scalar RealSchur<MatrixType>::computeNormOfT()$/;"	f	class:Eigen::RealSchur
computeNorms	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::computeNorms()$/;"	f	class:Eigen::RealQZ
computeProductBlockingSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeProductBlockingSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void computeProductBlockingSizes(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
computeRoots	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void computeRoots(const MatrixType& m, VectorType& roots)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
computeRotationScaling	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC void Transform<Scalar,Dim,Mode,Options>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeSVDofM	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSVDofM(Eigen::Index firstCol, Eigen::Index n, MatrixXr& U, VectorType& singVals, MatrixXr& V)$/;"	f	class:Eigen::BDCSVD
computeScalingRotation	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC void Transform<Scalar,Dim,Mode,Options>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeShift	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^typename ComplexSchur<MatrixType>::ComplexScalar ComplexSchur<MatrixType>::computeShift(Index iu, Index iter)$/;"	f	class:Eigen::ComplexSchur
computeShift	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::computeShift(Index iu, Index iter, Scalar& exshift, Vector3s& shiftInfo)$/;"	f	class:Eigen::RealSchur
computeSingVals	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVals(const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm,$/;"	f	class:Eigen::BDCSVD
computeSingVecs	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::computeSingVecs$/;"	f	class:Eigen::BDCSVD
computeU	plugin/Eigen/src/SVD/SVDBase.h	/^  inline bool computeU() const { return m_computeFullU || m_computeThinU; }$/;"	f	class:Eigen::SVDBase
computeUnblocked	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::computeUnblocked(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
computeV	plugin/Eigen/src/SVD/SVDBase.h	/^  inline bool computeV() const { return m_computeFullV || m_computeThinV; }$/;"	f	class:Eigen::SVDBase
compute_inverse	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse$/;"	s	namespace:Eigen::internal
compute_inverse	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check { \/* nothing! general case not supported. *\/ };$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_size2_helper	plugin/Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size2_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size3_helper	plugin/Eigen/src/LU/InverseImpl.h	/^inline void compute_inverse_size3_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size4	plugin/Eigen/src/LU/InverseImpl.h	/^struct compute_inverse_size4$/;"	s	namespace:Eigen::internal
compute_inverse_size4	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, double, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_inverse_size4	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, float, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
concat	include/darknet.h	/^    float * concat;$/;"	m	struct:layer
concat_data	src/data.c	/^data concat_data(data d1, data d2)$/;"	f
concat_datas	src/data.c	/^data concat_datas(data *d, int n)$/;"	f
concat_delta	include/darknet.h	/^    float * concat_delta;$/;"	m	struct:layer
concat_delta_gpu	include/darknet.h	/^    float * concat_delta_gpu;$/;"	m	struct:layer
concat_gpu	include/darknet.h	/^    float * concat_gpu;$/;"	m	struct:layer
concat_matrix	src/data.c	/^matrix concat_matrix(matrix m1, matrix m2)$/;"	f
conditionMatrix	plugin/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ConditionMatrixType& conditionMatrix() const$/;"	f	class:Eigen::Select
conditional	plugin/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	s	namespace:Eigen::internal
conditional	plugin/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	s	namespace:Eigen::internal
conditional_aligned_delete	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_delete_auto	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_delete_auto(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	plugin/Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void conditional_aligned_free<false>(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	plugin/Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	plugin/Eigen/src/Core/util/Memory.h	/^template<> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc<false>(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	plugin/Eigen/src/Core/util/Memory.h	/^template<bool Align> EIGEN_DEVICE_FUNC inline void* conditional_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new_auto	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_new_auto(std::size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	plugin/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_realloc<false>(void* ptr, std::size_t new_size, std::size_t)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	plugin/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_realloc(void* ptr, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> EIGEN_DEVICE_FUNC inline T* conditional_aligned_realloc_new(T* pts, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new_auto	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, std::size_t new_size, std::size_t old_size)$/;"	f	namespace:Eigen::internal
conj	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)$/;"	f	namespace:Eigen::numext
conj_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct conj_default_impl$/;"	s	namespace:Eigen::internal
conj_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct conj_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
conj_expr_if	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^template<bool Cond, typename T> struct conj_expr_if$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet2cd, Packet2cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct conj_helper<Packet4cf, Packet4cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct conj_helper$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<RealScalar, std::complex<RealScalar>, false,Conj>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<std::complex<RealScalar>, RealScalar, Conj,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>$/;"	s	namespace:Eigen::internal
conj_if	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<false> {$/;"	s	namespace:Eigen::internal
conj_if	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<true> {$/;"	s	namespace:Eigen::internal
conj_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct conj_impl<std::complex<T> >$/;"	s	namespace:Eigen::internal
conj_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct conj_impl : conj_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
conj_prod	plugin/Eigen/src/Core/Dot.h	/^  typedef scalar_conj_product_op<typename traits<T>::Scalar,typename traits<U>::Scalar> conj_prod;$/;"	t	struct:Eigen::internal::dot_nocheck
conj_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct conj_retval$/;"	s	namespace:Eigen::internal
conjugate	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline const ConjugateReturnType conjugate() const$/;"	f	class:Eigen::SelfAdjointView
conjugate	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline const ConjugateReturnType conjugate() const$/;"	f	class:Eigen::TriangularView
conjugate	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::conjugate() const$/;"	f	class:Eigen::QuaternionBase
conjugate	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType conjugate() const$/;"	f	class:Eigen::HouseholderSequence
conjugate	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^conjugate() const$/;"	f
conjugate_gradient	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^void conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void conservativeResize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/DenseStorage.h	/^    void conservativeResize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index size)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void conservativeResize(Index rows, Index cols) $/;"	f	class:Eigen::SparseMatrix
conservativeResize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    void conservativeResize(Index newSize)$/;"	f	class:Eigen::SparseVector
conservativeResizeLike	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResizeLike(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
conservative_resize_like_impl	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl$/;"	s	namespace:Eigen::internal
conservative_resize_like_impl	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl<Derived,OtherDerived,true>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_impl	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, bool sortedInsertion = false)$/;"	f	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
const_blas_data_mapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper(const Scalar *data, Index stride) : blas_data_mapper<const Scalar, Index, StorageOrder>(data, stride) {}$/;"	f	class:Eigen::internal::const_blas_data_mapper
const_blas_data_mapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^class const_blas_data_mapper : public blas_data_mapper<const Scalar, Index, StorageOrder> {$/;"	c	namespace:Eigen::internal
const_cast_derived	plugin/Eigen/src/Core/EigenBase.h	/^  inline Derived& const_cast_derived() const$/;"	f	struct:Eigen::EigenBase
const_cast_derived	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& const_cast_derived() const$/;"	f	class:Eigen::SparseMatrixBase
const_cpu	src/blas.c	/^void const_cpu(int N, float ALPHA, float *X, int INCX)$/;"	f
const_derived	plugin/Eigen/src/Core/EigenBase.h	/^  inline const Derived& const_derived() const$/;"	f	struct:Eigen::EigenBase
const_pointer	plugin/Eigen/src/Core/util/Memory.h	/^  typedef const T*        const_pointer;$/;"	t	class:Eigen::aligned_allocator
const_pointer	plugin/Eigen/src/StlSupport/details.h	/^    typedef const T*        const_pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
const_reference	plugin/Eigen/src/Core/util/Memory.h	/^  typedef const T&        const_reference;$/;"	t	class:Eigen::aligned_allocator
const_reference	plugin/Eigen/src/StlSupport/details.h	/^    typedef const T&        const_reference;$/;"	t	class:Eigen::aligned_allocator_indirection
constrain	src/utils.c	/^float constrain(float min, float max, float a)$/;"	f
constrain_image	src/image.c	/^void constrain_image(image im)$/;"	f
constrain_int	src/utils.c	/^int constrain_int(int a, int min, int max)$/;"	f
construct	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	plugin/Eigen/src/Core/Ref.h	/^    EIGEN_DEVICE_FUNC void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	plugin/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC void construct(Expression& expr)$/;"	f	class:Eigen::RefBase
construct	plugin/Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr, internal::false_type)$/;"	f	class:Eigen::Ref
construct	plugin/Eigen/src/SparseCore/SparseRef.h	/^    void construct(const Expression& expr,internal::true_type)$/;"	f	class:Eigen::Ref
construct	plugin/Eigen/src/SparseCore/SparseRef.h	/^  void construct(Expression& expr)$/;"	f	class:Eigen::internal::SparseRefBase
construct_elements_of_array	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline T* construct_elements_of_array(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
constructor_without_unaligned_array_assert	plugin/Eigen/src/Core/DenseStorage.h	/^struct constructor_without_unaligned_array_assert {};$/;"	s	namespace:Eigen::internal
contains	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool contains(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
convDesc	include/darknet.h	/^    cudnnConvolutionDescriptor_t convDesc;$/;"	m	struct:layer
convert	scripts/voc_label.py	/^def convert(size, box):$/;"	f
convert	voc_label.py	/^def convert(size, box):$/;"	f
convert_annotation	scripts/voc_label.py	/^def convert_annotation(year, image_id):$/;"	f
convert_annotation	voc_label.py	/^def convert_annotation(year, image_id):$/;"	f
convert_index	plugin/Eigen/src/Core/util/XprHelper.h	/^inline IndexDest convert_index(const IndexSrc& idx) {$/;"	f	namespace:Eigen::internal
convert_index	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex convert_index(Index idx)$/;"	f	class:Eigen::internal::AmbiVector
convert_index	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    static inline StorageIndex convert_index(const Index idx) {$/;"	f	class:Eigen::SparseMatrixBase
convolutional_layer	src/convolutional_layer.h	/^typedef layer convolutional_layer;$/;"	t
convolutional_out_height	src/convolutional_layer.c	/^int convolutional_out_height(convolutional_layer l)$/;"	f
convolutional_out_width	src/convolutional_layer.c	/^int convolutional_out_width(convolutional_layer l)$/;"	f
coord_scale	include/darknet.h	/^    float coord_scale;$/;"	m	struct:layer
coords	include/darknet.h	/^    int coords;$/;"	m	struct:layer
coords	include/darknet.h	/^    int coords;$/;"	m	struct:load_args
copyCoeff	plugin/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, Other& other)$/;"	f	class:Eigen::TriangularBase
copyUV	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::copyUV(const HouseholderU &householderU, const HouseholderV &householderV, const NaiveU &naiveU, const NaiveV &naiveV)$/;"	f	class:Eigen::BDCSVD
copy_board	examples/go.c	/^float *copy_board(float *board)$/;"	f
copy_bool	plugin/Eigen/src/Core/util/Macros.h	/^    inline bool copy_bool(bool b) { return b; }$/;"	f	namespace:Eigen::internal
copy_cpu	src/blas.c	/^void copy_cpu(int N, float *X, int INCX, float *Y, int INCY)$/;"	f
copy_data	src/data.c	/^data copy_data(data d)$/;"	f
copy_image	src/image.c	/^image copy_image(image p)$/;"	f
copy_image_into	src/image.c	/^void copy_image_into(image src, image dest)$/;"	f
copy_matrix	src/matrix.c	/^matrix copy_matrix(matrix m)$/;"	f
copy_string	src/utils.c	/^char *copy_string(char *s)$/;"	f
copy_to_ucol	plugin/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^Index SparseLUImpl<Scalar,StorageIndex>::copy_to_ucol(const Index jcol, const Index nseg, IndexVector& segrep,$/;"	f	class:Eigen::internal::SparseLUImpl
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_DefaultTraversal_InnerUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_DefaultTraversal_InnerUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_LinearTraversal_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_CompleteUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_CompleteUnrolling<Kernel, Stop, Stop>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling$/;"	s	namespace:Eigen::internal
copy_using_evaluator_innervec_InnerUnrolling	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_innervec_InnerUnrolling<Kernel, Stop, Stop, SrcAlignment, DstAlignment>$/;"	s	namespace:Eigen::internal
copy_using_evaluator_traits	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct copy_using_evaluator_traits$/;"	s	namespace:Eigen::internal
corner	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType corner(CornerType corner) const$/;"	f	class:Eigen::AlignedBox
correct_boxes	src/data.c	/^void correct_boxes(box_label *boxes, int n, float dx, float dy, float sx, float sy, int flip)$/;"	f
correct_region_boxes	src/region_layer.c	/^void correct_region_boxes(box *boxes, int n, int w, int h, int netw, int neth, int relative)$/;"	f
cos	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  cos(double x) { return cl::sycl::cos(x); }$/;"	f	namespace:Eigen::numext
cos	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   cos(float x) { return cl::sycl::cos(x); }$/;"	f	namespace:Eigen::numext
cos	plugin/Eigen/src/Core/MathFunctions.h	/^T cos(const T &x) {$/;"	f	namespace:Eigen::numext
cos	plugin/Eigen/src/Core/MathFunctions.h	/^double cos(const double &x) { return ::cos(x); }$/;"	f	namespace:Eigen::numext
cos	plugin/Eigen/src/Core/MathFunctions.h	/^float cos(const float &x) { return ::cosf(x); }$/;"	f	namespace:Eigen::numext
cos	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half cos(const half& a) {$/;"	f	namespace:Eigen::half_impl
cos	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cos() const$/;"	f
cosh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  cosh(double x) { return cl::sycl::cosh(x); }$/;"	f	namespace:Eigen::numext
cosh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   cosh(float x) { return cl::sycl::cosh(x); }$/;"	f	namespace:Eigen::numext
cosh	plugin/Eigen/src/Core/MathFunctions.h	/^T cosh(const T &x) {$/;"	f	namespace:Eigen::numext
cosh	plugin/Eigen/src/Core/MathFunctions.h	/^double cosh(const double &x) { return ::cosh(x); }$/;"	f	namespace:Eigen::numext
cosh	plugin/Eigen/src/Core/MathFunctions.h	/^float cosh(const float &x) { return ::coshf(x); }$/;"	f	namespace:Eigen::numext
cosh	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cosh() const$/;"	f
cost	include/darknet.h	/^    float * cost;$/;"	m	struct:layer
cost	include/darknet.h	/^    float *cost;$/;"	m	struct:network
cost_layer	src/cost_layer.h	/^typedef layer cost_layer;$/;"	t
cost_type	include/darknet.h	/^    COST_TYPE cost_type;$/;"	m	struct:layer
count	plugin/Eigen/src/Core/BooleanRedux.h	/^EIGEN_DEVICE_FUNC inline Eigen::Index DenseBase<Derived>::count() const$/;"	f	class:Eigen::DenseBase
count	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const CountReturnType count() const$/;"	f	class:Eigen::VectorwiseOp
count_fields	src/utils.c	/^int count_fields(char *line)$/;"	f
countnz	plugin/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::countnz(const Index n, Index& nnzL, Index& nnzU, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
covert_float2quan	src/convolutional_layer.c	/^quant_t* covert_float2quan(float *weights, unsigned int size)$/;"	f
covert_quan2float	src/convolutional_layer.c	/^float* covert_quan2float(quant_t *weights, unsigned int size)$/;"	f
cpuid_is_vendor	plugin/Eigen/src/Core/util/Memory.h	/^inline bool cpuid_is_vendor(int abcd[4], const int vendor[3])$/;"	f	namespace:Eigen::internal
crop_image	src/image.c	/^image crop_image(image im, int dx, int dy, int w, int h)$/;"	f
crop_layer	src/crop_layer.h	/^typedef layer crop_layer;$/;"	t
cross	plugin/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross	plugin/Eigen/src/Geometry/OrthoMethods.h	/^VectorwiseOp<ExpressionType,Direction>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
cross3	plugin/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross3(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross3_impl	plugin/Eigen/src/Geometry/OrthoMethods.h	/^struct cross3_impl {$/;"	s	namespace:Eigen::internal
cross3_impl	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct cross3_impl<Architecture::SSE,VectorLhs,VectorRhs,float,true>$/;"	s	namespace:Eigen::internal
cross_product_return_type	plugin/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> struct cross_product_return_type {$/;"	s	class:Eigen::MatrixBase
cs_tdfs	plugin/Eigen/src/OrderingMethods/Amd.h	/^StorageIndex cs_tdfs(StorageIndex j, StorageIndex k, StorageIndex *head, const StorageIndex *next, StorageIndex *post, StorageIndex *stack)$/;"	f	namespace:Eigen::internal
cs_wclear	plugin/Eigen/src/OrderingMethods/Amd.h	/^static StorageIndex cs_wclear (StorageIndex mark, StorageIndex lemax, StorageIndex *w, StorageIndex n)$/;"	f	namespace:Eigen::internal
csv_to_matrix	src/matrix.c	/^matrix csv_to_matrix(char *filename)$/;"	f
cube	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cube() const$/;"	f
cuda_compare	src/cuda.c	/^float cuda_compare(float *x_gpu, float *x, size_t n, char *s)$/;"	f
cuda_free	src/cuda.c	/^void cuda_free(float *x_gpu)$/;"	f
cuda_get_device	src/cuda.c	/^int cuda_get_device()$/;"	f
cuda_gridsize	src/cuda.c	/^dim3 cuda_gridsize(size_t n){$/;"	f
cuda_mag_array	src/cuda.c	/^float cuda_mag_array(float *x_gpu, size_t n)$/;"	f
cuda_make_array	src/cuda.c	/^float *cuda_make_array(float *x, size_t n)$/;"	f
cuda_make_int_array	src/cuda.c	/^int *cuda_make_int_array(int *x, size_t n)$/;"	f
cuda_pull_array	src/cuda.c	/^void cuda_pull_array(float *x_gpu, float *x, size_t n)$/;"	f
cuda_push_array	src/cuda.c	/^void cuda_push_array(float *x_gpu, float *x, size_t n)$/;"	f
cuda_random	src/cuda.c	/^void cuda_random(float *x_gpu, size_t n)$/;"	f
cuda_set_device	src/cuda.c	/^void cuda_set_device(int n)$/;"	f
cuda_set_device	src/cuda.c	/^void cuda_set_device(int n){}$/;"	f
cudnn_convolutional_setup	src/convolutional_layer.c	/^void cudnn_convolutional_setup(layer *l)$/;"	f
cudnn_handle	src/cuda.c	/^cudnnHandle_t cudnn_handle()$/;"	f
cur_im	include/darknet.h	/^    image cur_im;$/;"	m	struct:network
cur_x	src/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon22
cur_y	src/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon22
current_class	src/compare.c	/^int current_class = 0;$/;"	v
cweights	include/darknet.h	/^    char  * cweights;$/;"	m	struct:layer
cwiseAbs	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs() const { return CwiseAbsReturnType(derived()); }$/;"	f
cwiseAbs2	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs2() const { return CwiseAbs2ReturnType(derived()); }$/;"	f
cwiseEqual	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseEqual	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const Scalar& s) const$/;"	f
cwiseInverse	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseInverse() const { return CwiseInverseReturnType(derived()); }$/;"	f
cwiseMax	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMax	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const Scalar &other) const$/;"	f
cwiseMin	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMin	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const Scalar &other) const$/;"	f
cwiseNotEqual	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseNotEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseProduct	plugin/Eigen/src/Core/MatrixBase.h	/^    cwiseProduct(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
cwiseProduct	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::cwiseProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
cwiseProduct	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseQuotient	plugin/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseQuotient(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseSign	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSign() const { return CwiseSignReturnType(derived()); }$/;"	f
cwiseSqrt	plugin/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSqrt() const { return CwiseSqrtReturnType(derived()); }$/;"	f
d	include/darknet.h	/^    data *d;$/;"	m	struct:load_args
d	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  double    d[2];$/;"	m	union:Eigen::internal::__anon612
d	src/network.c	/^    data d;$/;"	m	struct:__anon1	file:
data	examples/go.c	/^    char **data;$/;"	m	struct:__anon25	file:
data	include/darknet.h	/^    float *data;$/;"	m	struct:__anon733
data	include/darknet.h	/^} data;$/;"	t	typeref:struct:__anon736
data	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const Scalar *data;$/;"	m	class:Eigen::internal::plainobjectbase_evaluator_data
data	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Scalar* data() { return &(this->coeffRef(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return &(this->coeff(0)); }$/;"	f	class:Eigen::CwiseUnaryViewImpl
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return 0; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC T *data() { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return 0; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC const T *data() const { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	plugin/Eigen/src/Core/Diagonal.h	/^    inline ScalarWithConstIfNotLvalue* data() { return &(m_matrix.coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	plugin/Eigen/src/Core/Diagonal.h	/^    inline const Scalar* data() const { return &(m_matrix.coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	plugin/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	plugin/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	plugin/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return m_data.array; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	plugin/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() {$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::MapBase
data	plugin/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } \/\/ no const-cast here so non-const-correct code will give a compile error$/;"	f	class:Eigen::MapBase
data	plugin/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return this->m_data; }$/;"	f	class:Eigen::MapBase
data	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar *data()$/;"	f	class:Eigen::PlainObjectBase
data	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar *data() const$/;"	f	class:Eigen::PlainObjectBase
data	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline const Scalar* data() const { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::internal::blas_data_mapper
data	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseVector
data	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
data	src/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon12::__anon13
data_type	include/darknet.h	/^} data_type;$/;"	t	typeref:enum:__anon737
dbox	src/box.h	/^} dbox;$/;"	t	typeref:struct:__anon3
dc_cpu	include/darknet.h	/^    float *dc_cpu; $/;"	m	struct:layer
dc_gpu	include/darknet.h	/^    float *dc_gpu; $/;"	m	struct:layer
dc_pred	src/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon12::__anon13
dcgan_batch	examples/lsd.c	/^void dcgan_batch(network gnet, network anet)$/;"	f
dcomplex	plugin/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<double> dcomplex;$/;"	t	namespace:Eigen
dct_bfly32o	src/stb_image.h	2044;"	d
dct_bfly32o	src/stb_image.h	2178;"	d
dct_bfly32o	src/stb_image.h	2230;"	d
dct_bfly32o	src/stb_image.h	2388;"	d
dct_const	src/stb_image.h	2016;"	d
dct_const	src/stb_image.h	2173;"	d
dct_interleave16	src/stb_image.h	2061;"	d
dct_interleave16	src/stb_image.h	2180;"	d
dct_interleave8	src/stb_image.h	2055;"	d
dct_interleave8	src/stb_image.h	2179;"	d
dct_long_mac	src/stb_image.h	2211;"	d
dct_long_mac	src/stb_image.h	2384;"	d
dct_long_mul	src/stb_image.h	2207;"	d
dct_long_mul	src/stb_image.h	2383;"	d
dct_pass	src/stb_image.h	2066;"	d
dct_pass	src/stb_image.h	2181;"	d
dct_pass	src/stb_image.h	2238;"	d
dct_pass	src/stb_image.h	2389;"	d
dct_rot	src/stb_image.h	2020;"	d
dct_rot	src/stb_image.h	2174;"	d
dct_trn16	src/stb_image.h	2298;"	d
dct_trn16	src/stb_image.h	2320;"	d
dct_trn32	src/stb_image.h	2299;"	d
dct_trn32	src/stb_image.h	2321;"	d
dct_trn64	src/stb_image.h	2300;"	d
dct_trn64	src/stb_image.h	2322;"	d
dct_trn8_16	src/stb_image.h	2344;"	d
dct_trn8_16	src/stb_image.h	2379;"	d
dct_trn8_32	src/stb_image.h	2345;"	d
dct_trn8_32	src/stb_image.h	2380;"	d
dct_trn8_8	src/stb_image.h	2343;"	d
dct_trn8_8	src/stb_image.h	2378;"	d
dct_wadd	src/stb_image.h	2034;"	d
dct_wadd	src/stb_image.h	2176;"	d
dct_wadd	src/stb_image.h	2220;"	d
dct_wadd	src/stb_image.h	2386;"	d
dct_widen	src/stb_image.h	2029;"	d
dct_widen	src/stb_image.h	2175;"	d
dct_widen	src/stb_image.h	2215;"	d
dct_widen	src/stb_image.h	2385;"	d
dct_wsub	src/stb_image.h	2039;"	d
dct_wsub	src/stb_image.h	2177;"	d
dct_wsub	src/stb_image.h	2225;"	d
dct_wsub	src/stb_image.h	2387;"	d
ddstTensorDesc	include/darknet.h	/^    cudnnTensorDescriptor_t dsrcTensorDesc, ddstTensorDesc;$/;"	m	struct:layer
deallocate	plugin/Eigen/src/Core/util/Memory.h	/^  void deallocate(pointer p, size_type \/*num*\/)$/;"	f	class:Eigen::aligned_allocator
debug	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static void debug()$/;"	f	struct:Eigen::internal::copy_using_evaluator_traits
debug	plugin/Eigen/src/Core/GeneralProduct.h	/^  static void debug()$/;"	f	struct:Eigen::internal::product_type
debug	plugin/Eigen/src/Core/Redux.h	/^  static void debug()$/;"	f	struct:Eigen::internal::redux_traits
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct BandShape              { static std::string debugName() { return "BandShape"; } };$/;"	f	struct:Eigen::BandShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct DenseShape             { static std::string debugName() { return "DenseShape"; } };$/;"	f	struct:Eigen::DenseShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct DiagonalShape          { static std::string debugName() { return "DiagonalShape"; } };$/;"	f	struct:Eigen::DiagonalShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct HomogeneousShape       { static std::string debugName() { return "HomogeneousShape"; } };$/;"	f	struct:Eigen::HomogeneousShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct PermutationShape       { static std::string debugName() { return "PermutationShape"; } };$/;"	f	struct:Eigen::PermutationShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct SelfAdjointShape       { static std::string debugName() { return "SelfAdjointShape"; } };$/;"	f	struct:Eigen::SelfAdjointShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct SolverShape            { static std::string debugName() { return "SolverShape"; } };$/;"	f	struct:Eigen::SolverShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct SparseShape            { static std::string debugName() { return "SparseShape"; } };$/;"	f	struct:Eigen::SparseShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct TranspositionsShape    { static std::string debugName() { return "TranspositionsShape"; } };$/;"	f	struct:Eigen::TranspositionsShape
debugName	plugin/Eigen/src/Core/util/Constants.h	/^struct TriangularShape        { static std::string debugName() { return "TriangularShape"; } };$/;"	f	struct:Eigen::TriangularShape
debugName	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseSelfAdjointShape { static std::string debugName() { return "SparseSelfAdjointShape"; } };$/;"	f	struct:Eigen::internal::SparseSelfAdjointShape
debugName	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct SparseTriangularShape  { static std::string debugName() { return "SparseTriangularShape"; } };$/;"	f	struct:Eigen::internal::SparseTriangularShape
dec	plugin/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec() const { return m_dec; }$/;"	f	class:Eigen::Solve
dec	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const Decomposition& dec()   const { return m_dec; }$/;"	f	class:Eigen::SolveWithGuess
dec	plugin/Eigen/src/misc/Image.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::image_retval_base
dec	plugin/Eigen/src/misc/Kernel.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::kernel_retval_base
decay	include/darknet.h	/^    float decay;$/;"	m	struct:__anon730
decay	include/darknet.h	/^    float decay;$/;"	m	struct:network
decode_box	src/box.c	/^box decode_box(box b, box anchor)$/;"	f
decrement_size	plugin/Eigen/src/Householder/Householder.h	/^template<int n> struct decrement_size$/;"	s	namespace:Eigen::internal
defaultL1CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 16*1024;$/;"	m	namespace:Eigen::internal
defaultL1CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL1CacheSize = 32*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 256*1024;$/;"	m	namespace:Eigen::internal
defaultL2CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL2CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 2*1024*1024;$/;"	m	namespace:Eigen::internal
defaultL3CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const std::ptrdiff_t defaultL3CacheSize = 512*1024;$/;"	m	namespace:Eigen::internal
default_alignment	plugin/Eigen/src/Core/Matrix.h	/^      default_alignment = compute_default_alignment<_Scalar,max_size>::value,$/;"	e	enum:Eigen::internal::traits::__anon676
default_digits10_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl$/;"	s	namespace:Eigen::internal
default_digits10_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl<T,false,false> \/\/ Floating point$/;"	s	namespace:Eigen::internal
default_digits10_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits10_impl<T,false,true> \/\/ Integer$/;"	s	namespace:Eigen::internal
default_digits_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits_impl$/;"	s	namespace:Eigen::internal
default_digits_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits_impl<T,false,false> \/\/ Floating point$/;"	s	namespace:Eigen::internal
default_digits_impl	plugin/Eigen/src/Core/NumTraits.h	/^struct default_digits_impl<T,false,true> \/\/ Integer$/;"	s	namespace:Eigen::internal
default_mr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    default_mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
default_packet_traits	plugin/Eigen/src/Core/GenericPacketMath.h	/^struct default_packet_traits$/;"	s	namespace:Eigen::internal
default_prunning_func	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    default_prunning_func(const Scalar& ref, const RealScalar& eps) : reference(ref), epsilon(eps) {}$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
default_prunning_func	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  struct default_prunning_func {$/;"	s	class:Eigen::SparseMatrix
deflation	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation(Eigen::Index firstCol, Eigen::Index lastCol, Eigen::Index k, Eigen::Index firstRowW, Eigen::Index firstColW, Eigen::Index shift)$/;"	f	class:Eigen::BDCSVD
deflation43	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation43(Eigen::Index firstCol, Eigen::Index shift, Eigen::Index i, Eigen::Index size)$/;"	f	class:Eigen::BDCSVD
deflation44	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::deflation44(Eigen::Index firstColu , Eigen::Index firstColm, Eigen::Index firstRowW, Eigen::Index firstColW, Eigen::Index i, Eigen::Index j, Eigen::Index size)$/;"	f	class:Eigen::BDCSVD
degree	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree ;  \/* number of principal & non-principal columns in row *\/$/;"	m	union:internal::Colamd_Row::__anon126
degree_next	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType degree_next ; \/* next column, if col is in a degree list *\/$/;"	m	union:internal::colamd_col::__anon125
deinter_cpu	src/blas.c	/^void deinter_cpu(int NX, float *X, int NY, float *Y, int B, float *OUT)$/;"	f
del_arg	src/utils.c	/^void del_arg(int argc, char **argv, int index)$/;"	f
delta	include/darknet.h	/^    float * delta;$/;"	m	struct:layer
delta	include/darknet.h	/^    float *delta;$/;"	m	struct:network
delta	src/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon11
delta_gpu	include/darknet.h	/^    float * delta_gpu;$/;"	m	struct:layer
delta_gpu	include/darknet.h	/^    float *delta_gpu;$/;"	m	struct:network
delta_region_box	src/region_layer.c	/^float delta_region_box(box truth, float *x, float *biases, int n, int index, int i, int j, int w, int h, float *delta, float scale, int stride)$/;"	f
delta_region_class	src/region_layer.c	/^void delta_region_class(float *output, float *delta, int index, int class, int classes, tree *hier, float scale, int stride, float *avg_cat, int tag)$/;"	f
delta_region_mask	src/region_layer.c	/^void delta_region_mask(float *truth, float *x, int n, int index, float *delta, int stride, int scale)$/;"	f
demo	src/demo.c	/^void demo(char *cfgfile, char *weightfile, float thresh, int cam_index, const char *filename, char **names, int classes, int delay, char *prefix, int avg, float hier, int w, int h, int frames, int fullscreen)$/;"	f
demo	src/demo.c	/^void demo(char *cfgfile, char *weightfile, float thresh, int cam_index, const char *filename, char **names, int classes, int delay, char *prefix, int avg_frames, float hier, int w, int h, int frames, int fullscreen)$/;"	f
demo_alphabet	src/demo.c	/^static image **demo_alphabet;$/;"	v	file:
demo_art	examples/art.c	/^void demo_art(char *cfgfile, char *weightfile, int cam_index)$/;"	f
demo_classes	src/demo.c	/^static int demo_classes;$/;"	v	file:
demo_classifier	examples/classifier.c	/^void demo_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
demo_compare	src/demo.c	/^void demo_compare(char *cfg1, char *weight1, char *cfg2, char *weight2, float thresh, int cam_index, const char *filename, char **names, int classes, int delay, char *prefix, int avg_frames, float hier, int w, int h, int frames, int fullscreen)$/;"	f
demo_detections	src/demo.c	/^static int demo_detections = 0;$/;"	v	file:
demo_done	src/demo.c	/^static int demo_done = 0;$/;"	v	file:
demo_frame	src/demo.c	/^static int demo_frame = 3;$/;"	v	file:
demo_hier	src/demo.c	/^static float demo_hier = .5;$/;"	v	file:
demo_index	src/demo.c	/^static int demo_index = 0;$/;"	v	file:
demo_names	src/demo.c	/^static char **demo_names;$/;"	v	file:
demo_regressor	examples/regressor.c	/^void demo_regressor(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
demo_segmenter	examples/segmenter.c	/^void demo_segmenter(char *datacfg, char *cfg, char *weights, int cam_index, const char *filename)$/;"	f
demo_thresh	src/demo.c	/^static float demo_thresh = 0;$/;"	v	file:
demo_time	src/demo.c	/^double demo_time;$/;"	v
denorm_min	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half denorm_min() { return Eigen::half_impl::raw_uint16_to_half(0x1); }$/;"	f	struct:std::numeric_limits
denormalize_connected_layer	src/connected_layer.c	/^void denormalize_connected_layer(layer l)$/;"	f
denormalize_convolutional_layer	src/convolutional_layer.c	/^void denormalize_convolutional_layer(convolutional_layer l)$/;"	f
denormalize_deconvolutional_layer	src/deconvolutional_layer.c	/^void denormalize_deconvolutional_layer(layer l)$/;"	f
denormalize_net	examples/darknet.c	/^void denormalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, InnerVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, SliceVectorizedTraversal, InnerUnrolling>$/;"	s	namespace:Eigen::internal
dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct dense_assignment_loop<Kernel, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
dense_product_base	plugin/Eigen/src/Core/Product.h	/^class dense_product_base$/;"	c	namespace:Eigen::internal
dense_product_base	plugin/Eigen/src/Core/Product.h	/^class dense_product_base<Lhs, Rhs, Option, InnerProduct>$/;"	c	namespace:Eigen::internal
dense_xpr_base_dispatcher	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::doxygen
dense_xpr_base_dispatcher	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::doxygen
depth_select	plugin/Eigen/src/Core/GeneralProduct.h	/^    depth_select = product_size_category<Depth,MaxDepth>::value$/;"	e	enum:Eigen::internal::product_type::__anon529
dequant	src/stb_image.h	/^   stbi_uc dequant[4][64];$/;"	m	struct:__anon12
deque	plugin/Eigen/src/StlSupport/StdDeque.h	/^  class deque<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
deque_base	plugin/Eigen/src/StlSupport/StdDeque.h	/^                Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > deque_base;$/;"	t	class:std::deque
derivative	src/box.c	/^dbox derivative(box a, box b)$/;"	f
derived	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	plugin/Eigen/src/Core/EigenBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	plugin/Eigen/src/Core/EigenBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	plugin/Eigen/src/Core/Transpositions.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	plugin/Eigen/src/Core/Transpositions.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::Symbolic::BaseExpr
derived	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	plugin/Eigen/src/SVD/SVDBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	plugin/Eigen/src/SVD/SVDBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SVDBase
derived	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
derived	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseSolverBase
destruct_elements_of_array	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC inline void destruct_elements_of_array(T *ptr, std::size_t size)$/;"	f	namespace:Eigen::internal
detect	python/darknet.py	/^def detect(net, meta, image, thresh=.5, hier_thresh=.5, nms=.45):$/;"	f
detect	python/darknet.py	/^detect = lib.network_predict$/;"	v
detect2	examples/detector-scipy-opencv.py	/^def detect2(net, meta, image, thresh=.5, hier_thresh=.5, nms=.45):$/;"	f
detect_in_thread	src/demo.c	/^void *detect_in_thread(void *ptr)$/;"	f
detect_loop	src/demo.c	/^void *detect_loop(void *ptr)$/;"	f
detect_super_cols	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void detect_super_cols$/;"	f	namespace:internal
detection_layer	src/detection_layer.h	/^typedef layer detection_layer;$/;"	t
determinant	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Scalar determinant() const$/;"	f	class:Eigen::CholmodBase
determinant	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Index determinant() const$/;"	f	class:Eigen::PermutationBase
determinant	plugin/Eigen/src/Core/TriangularMatrix.h	/^    Scalar determinant() const$/;"	f	class:Eigen::TriangularView
determinant	plugin/Eigen/src/LU/Determinant.h	/^inline typename internal::traits<Derived>::Scalar MatrixBase<Derived>::determinant() const$/;"	f	class:Eigen::MatrixBase
determinant	plugin/Eigen/src/LU/FullPivLU.h	/^typename internal::traits<MatrixType>::Scalar FullPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::FullPivLU
determinant	plugin/Eigen/src/LU/PartialPivLU.h	/^typename PartialPivLU<MatrixType>::Scalar PartialPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::PartialPivLU
determinant	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialCholesky
determinant	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLDLT
determinant	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLLT
determinant	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Scalar determinant()$/;"	f	class:Eigen::SparseLU
determinant	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^typename SuperLU<MatrixType>::Scalar SuperLU<MatrixType>::determinant() const$/;"	f	class:Eigen::SuperLU
determinant	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^typename UmfPackLU<MatrixType>::Scalar UmfPackLU<MatrixType>::determinant() const$/;"	f	class:Eigen::UmfPackLU
determinant_impl	plugin/Eigen/src/LU/Determinant.h	/^> struct determinant_impl$/;"	s	namespace:Eigen::internal
determinant_impl	plugin/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 1>$/;"	s	namespace:Eigen::internal
determinant_impl	plugin/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 2>$/;"	s	namespace:Eigen::internal
determinant_impl	plugin/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 3>$/;"	s	namespace:Eigen::internal
determinant_impl	plugin/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 4>$/;"	s	namespace:Eigen::internal
device	plugin/Eigen/src/Core/util/Meta.h	/^namespace device {$/;"	n	namespace:Eigen::internal
dfs_kernel	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::dfs_kernel(const StorageIndex jj, IndexVector& perm_r,$/;"	f	class:Eigen::internal::SparseLUImpl
dh	src/box.h	/^    float dx, dy, dw, dh;$/;"	m	struct:__anon3
dh_cpu	include/darknet.h	/^    float *dh_cpu;$/;"	m	struct:layer
dh_gpu	include/darknet.h	/^    float *dh_gpu;$/;"	m	struct:layer
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,Dynamic> diagonal(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,SizeAtCompileTime> diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,Dynamic> diagonal(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,SizeAtCompileTime> diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline const typename DiagonalIntReturnType<N>::Type diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline typename DiagonalIntReturnType<N>::Type diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	plugin/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal() const$/;"	f	class:Eigen::MatrixBase
diagonal	plugin/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal()$/;"	f	class:Eigen::MatrixBase
diagonal	plugin/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index) const$/;"	f	class:Eigen::MatrixBase
diagonal	plugin/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index)$/;"	f	class:Eigen::MatrixBase
diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalWrapper
diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	plugin/Eigen/src/Core/SelfAdjointView.h	/^    typename MatrixType::ConstDiagonalReturnType diagonal() const$/;"	f	class:Eigen::SelfAdjointView
diagonal	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::diagonal() const$/;"	f	class:Eigen::Tridiagonalization
diagonal	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline CwiseBinaryOp< internal::scalar_difference_op<Scalar,Scalar>, const VectorType, const VectorType> diagonal() const$/;"	f	class:Eigen::AlignedBox
diagonal	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    DiagonalReturnType diagonal() { return DiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonal	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    const ConstDiagonalReturnType diagonal() const { return ConstDiagonalReturnType(*this); }$/;"	f	class:Eigen::SparseMatrix
diagonalLength	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index diagonalLength(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonalSize	plugin/Eigen/src/Core/MatrixBase.h	/^    inline Index diagonalSize() const { return (numext::mini)(rows(),cols()); }$/;"	f	class:Eigen::MatrixBase
diagonal_product_evaluator_base	plugin/Eigen/src/Core/ProductEvaluators.h	/^  diagonal_product_evaluator_base(const MatrixType &mat, const DiagonalType &diag)$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
diagonal_product_evaluator_base	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct diagonal_product_evaluator_base$/;"	s	namespace:Eigen::internal
dice_labels	examples/dice.c	/^char *dice_labels[] = {"face1","face2","face3","face4","face5","face6"};$/;"	v
difference_type	plugin/Eigen/src/Core/util/Memory.h	/^  typedef std::ptrdiff_t  difference_type;$/;"	t	class:Eigen::aligned_allocator
difference_type	plugin/Eigen/src/StlSupport/details.h	/^    typedef std::ptrdiff_t  difference_type;$/;"	t	class:Eigen::aligned_allocator_indirection
digamma	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^digamma() const$/;"	f
digits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int digits = 11;$/;"	m	struct:std::numeric_limits
digits10	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int digits10 = 3;      \/\/ according to http:\/\/half.sourceforge.net\/structstd_1_1numeric__limits_3_01half__float_1_1half_01_4.html$/;"	m	struct:std::numeric_limits
dim	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size() : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::AlignedBox
dim	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_coeffs.size()-1 : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline Index dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dimensionOfKernel	plugin/Eigen/src/LU/FullPivLU.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivLU
dimensionOfKernel	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::ColPivHouseholderQR
dimensionOfKernel	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index dimensionOfKernel() const { return m_cpqr.dimensionOfKernel(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
dimensionOfKernel	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivHouseholderQR
dintersect	src/box.c	/^dbox dintersect(box a, box b)$/;"	f
diou	src/box.c	/^dbox diou(box a, box b)$/;"	f
direct_selfadjoint_eigenvalues	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^struct direct_selfadjoint_eigenvalues<SolverType,2,false>$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,3,false>$/;"	s	namespace:Eigen::internal
direction	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
display_in_thread	src/demo.c	/^void *display_in_thread(void *ptr)$/;"	f
display_loop	src/demo.c	/^void *display_loop(void *ptr)$/;"	f
dist_array	src/utils.c	/^float dist_array(float *a, float *b, int n, int sub)$/;"	f
distance	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC RealScalar distance(const VectorType& p) const { EIGEN_USING_STD_MATH(sqrt) return sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
distance_from_edge	src/data.h	/^static inline float distance_from_edge(int x, int max)$/;"	f
distort_image	src/image.c	/^void distort_image(image im, float hue, float sat, float val)$/;"	f
distribute_weights	src/network.c	/^void distribute_weights(layer l, layer base)$/;"	f
div_assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar, typename SrcScalar=DstScalar> struct div_assign_op {$/;"	s	namespace:Eigen::internal
div_ceil	plugin/Eigen/src/Core/util/Meta.h	/^T div_ceil(const T &a, const T &b)$/;"	f	namespace:numext
divide	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::divide (Eigen::Index firstCol, Eigen::Index lastCol, Eigen::Index firstRowW, Eigen::Index firstColW, Eigen::Index shift)$/;"	f	class:Eigen::BDCSVD
doComputeEigenvectors	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::doComputeEigenvectors(RealScalar matrixnorm)$/;"	f	class:Eigen::ComplexEigenSolver
doComputeEigenvectors	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^void EigenSolver<MatrixType>::doComputeEigenvectors()$/;"	f	class:Eigen::EigenSolver
do_nms	src/box.c	/^void do_nms(box *boxes, float **probs, int total, int classes, float thresh)$/;"	f
do_nms_obj	src/box.c	/^void do_nms_obj(box *boxes, float **probs, int total, int classes, float thresh)$/;"	f
do_nms_sort	src/box.c	/^void do_nms_sort(box *boxes, float **probs, int total, int classes, float thresh)$/;"	f
does_cost	include/darknet.h	/^    int does_cost;$/;"	m	struct:layer
done	examples/go.c	/^    int done;$/;"	m	struct:mcts_tree	file:
dontload	include/darknet.h	/^    int dontload;$/;"	m	struct:layer
dontloadscales	include/darknet.h	/^    int dontloadscales;$/;"	m	struct:layer
dot	include/darknet.h	/^    float dot;$/;"	m	struct:layer
dot	plugin/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
dot	plugin/Eigen/src/Geometry/Quaternion.h	/^  template<class OtherDerived> EIGEN_DEVICE_FUNC inline Scalar dot(const QuaternionBase<OtherDerived>& other) const { return coeffs().dot(other.coeffs()); }$/;"	f	class:Eigen::QuaternionBase
dot	plugin/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	plugin/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot_cpu	src/blas.c	/^float dot_cpu(int N, float *X, int INCX, float *Y, int INCY)$/;"	f
dot_nocheck	plugin/Eigen/src/Core/Dot.h	/^struct dot_nocheck$/;"	s	namespace:Eigen::internal
dot_nocheck	plugin/Eigen/src/Core/Dot.h	/^struct dot_nocheck<T, U, true>$/;"	s	namespace:Eigen::internal
doxygen	plugin/Eigen/src/Core/PlainObjectBase.h	/^namespace doxygen {$/;"	n	namespace:Eigen
dparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<double,DPARM_SIZE,1>& dparm()$/;"	f	class:Eigen::PastixBase
dparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    double& dparm(int idxparam)$/;"	f	class:Eigen::PastixBase
draw_bbox	src/image.c	/^void draw_bbox(image a, box bbox, int w, float r, float g, float b)$/;"	f
draw_box	src/image.c	/^void draw_box(image a, int x1, int y1, int x2, int y2, float r, float g, float b)$/;"	f
draw_box_inter	src/zcu102_api.cpp	/^void draw_box_inter(image a, int x1, int y1, int x2, int y2, float r, float g, float b)$/;"	f
draw_box_width	src/image.c	/^void draw_box_width(image a, int x1, int y1, int x2, int y2, int w, float r, float g, float b)$/;"	f
draw_detections	src/image.c	/^void draw_detections(image im, int num, float thresh, box *boxes, float **probs, float **masks, char **names, image **alphabet, int classes)$/;"	f
draw_label	src/image.c	/^void draw_label(image a, int r, int c, image label, const float *rgb)$/;"	f
draw_label_inter	src/zcu102_api.cpp	/^void draw_label_inter(image a, int r, int c, image label, const float *rgb)$/;"	f
dropout_layer	src/dropout_layer.h	/^typedef layer dropout_layer;$/;"	t
dsrcTensorDesc	include/darknet.h	/^    cudnnTensorDescriptor_t dsrcTensorDesc, ddstTensorDesc;$/;"	m	struct:layer
dstDataPtr	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC const Scalar* dstDataPtr() const$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dstEvaluator	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC DstEvaluatorType& dstEvaluator() { return m_dst; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
dstTensorDesc	include/darknet.h	/^    cudnnTensorDescriptor_t srcTensorDesc, dstTensorDesc;$/;"	m	struct:layer
dummy_precision	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half dummy_precision() { return Eigen::half(1e-2f); }$/;"	f	struct:Eigen::NumTraits
dumpMemory	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::CholmodBase
dumpMemory	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SimplicialCholeskyBase
dumpMemory	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void dumpMemory(Stream& \/*s*\/)$/;"	f	class:Eigen::SuperLUBase
dunion	src/box.c	/^dbox dunion(box a, box b)$/;"	f
dw	src/box.h	/^    float dx, dy, dw, dh;$/;"	m	struct:__anon3
dweightDesc	include/darknet.h	/^    cudnnFilterDescriptor_t dweightDesc;$/;"	m	struct:layer
dx	include/darknet.h	/^    float dx;$/;"	m	struct:__anon734
dx	src/box.h	/^    float dx, dy, dw, dh;$/;"	m	struct:__anon3
dy	include/darknet.h	/^    float dy;$/;"	m	struct:__anon734
dy	src/box.h	/^    float dx, dy, dw, dh;$/;"	m	struct:__anon3
eflags	src/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon22
ei_declare_aligned_stack_constructed_variable	plugin/Eigen/src/Core/util/Memory.h	634;"	d
eigen_assert	plugin/Eigen/src/Core/util/Macros.h	611;"	d
eigen_gemm	src/vec_gemm.cpp	/^void eigen_gemm(float *a, unsigned int ar, unsigned int ac,$/;"	f
eigen_internal_assert	plugin/Eigen/src/Core/util/Macros.h	615;"	d
eigen_internal_assert	plugin/Eigen/src/SVD/BDCSVD.h	26;"	d
eigen_internal_assert	plugin/Eigen/src/SVD/BDCSVD.h	27;"	d
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  eigen_packet_wrapper() {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  eigen_packet_wrapper(const T &v) : m_val(v) {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^struct eigen_packet_wrapper$/;"	s	namespace:Eigen::internal
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper() {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper(const T &v) : m_val(v) {}$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
eigen_packet_wrapper	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct eigen_packet_wrapper$/;"	s	namespace:Eigen::internal
eigen_pastix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  inline void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, double *vals, int *perm, int * invp, double *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  inline void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, float *vals, int *perm, int * invp, float *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  inline void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<double> *vals, int *perm, int * invp, std::complex<double> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  inline void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<float> *vals, int *perm, int * invp, std::complex<float> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_plain_assert	plugin/Eigen/src/Core/util/Macros.h	573;"	d
eigen_plain_assert	plugin/Eigen/src/Core/util/Macros.h	581;"	d
eigen_unaligned_array_assert_workaround_gcc47	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_ALWAYS_INLINE PtrType eigen_unaligned_array_assert_workaround_gcc47(PtrType array) { return array; }$/;"	f	namespace:Eigen::internal
eigen_vectorize_status	src/vec_gemm.cpp	/^void eigen_vectorize_status(void)$/;"	f
eigenvalues	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvalues	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::EigenSolver
eigenvalues	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvalueType eigenvalues() const$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvalues	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::eigenvalues() const$/;"	f	class:Eigen::MatrixBase
eigenvalues	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::eigenvalues() const$/;"	f	class:Eigen::SelfAdjointView
eigenvalues	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const RealVectorType& eigenvalues() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvalues_selector	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector$/;"	s	namespace:Eigen::internal
eigenvalues_selector	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector<Derived, false>$/;"	s	namespace:Eigen::internal
eigenvectors	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvectorType& eigenvectors() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvectors	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^typename EigenSolver<MatrixType>::EigenvectorsType EigenSolver<MatrixType>::eigenvectors() const$/;"	f	class:Eigen::EigenSolver
eigenvectors	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvectorsType eigenvectors() const {$/;"	f	class:Eigen::GeneralizedEigenSolver
eigenvectors	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const EigenvectorsType& eigenvectors() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
elo	src/compare.c	/^    float elo;$/;"	m	struct:__anon23	file:
elo_comparator	src/compare.c	/^int elo_comparator(const void*a, const void *b)$/;"	f
elos	src/compare.c	/^    float *elos;$/;"	m	struct:__anon23	file:
elseMatrix	plugin/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ElseMatrixType& elseMatrix() const$/;"	f	class:Eigen::Select
elu_activate	src/activations.h	/^static inline float elu_activate(float x){return (x >= 0)*x + (x < 0)*(exp(x)-1);}$/;"	f
elu_gradient	src/activations.h	/^static inline float elu_gradient(float x){return (x >= 0) + (x < 0)*(x + 1);}$/;"	f
embed_image	src/image.c	/^void embed_image(image source, image dest, int dx, int dy)$/;"	f
emptyIdxLU	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^enum {emptyIdxLU = -1};$/;"	e	enum:Eigen::internal::__anon115
enable_if	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct enable_if<true,T>$/;"	s	namespace:Eigen::internal
enable_if_ref	plugin/Eigen/src/LU/PartialPivLU.h	/^struct enable_if_ref<Ref<T>,Derived> {$/;"	s	namespace:Eigen::internal
encode_box	src/box.c	/^box encode_box(box b, box anchor)$/;"	f
end	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^static const auto end = last+1;$/;"	m	namespace:Eigen::placeholders
endFill	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::SparseVector
engine_go	examples/go.c	/^void engine_go(char *filename, char *weightfile, int mcts_iters, float secs, float temp, float cpuct, int anon, int resign)$/;"	f
entry_index	src/region_layer.c	/^int entry_index(layer l, int batch, int location, int entry)$/;"	f
eob_run	src/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon12
eof	src/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon8
epoch	include/darknet.h	/^    float epoch;$/;"	m	struct:network
eps	include/darknet.h	/^    float eps;$/;"	m	struct:__anon730
eps	include/darknet.h	/^    float eps;$/;"	m	struct:network
epsilon	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half epsilon() {$/;"	f	struct:Eigen::NumTraits
epsilon	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half epsilon() { return Eigen::half_impl::raw_uint16_to_half(0x0800); }$/;"	f	struct:std::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static T epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static double epsilon() { return __DBL_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static float epsilon() { return __FLT_EPSILON__; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static int epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static long long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned int epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long long epsilon() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
epsilon	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    RealScalar epsilon;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
epsilon	plugin/Eigen/src/SparseCore/SparseView.h	/^  RealScalar epsilon() const { return m_epsilon; }$/;"	f	class:Eigen::SparseView
equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool equal_strict(const X& x,const Y& y) { return x == y; }$/;"	f	namespace:numext
equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool equal_strict(const double& x,const double& y) { return std::equal_to<double>()(x,y); }$/;"	f	namespace:numext
equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool equal_strict(const float& x,const float& y) { return std::equal_to<float>()(x,y); }$/;"	f	namespace:numext
erf	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^erf() const$/;"	f
erfc	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^erfc() const$/;"	f
err	src/network.c	/^    float *err;$/;"	m	struct:__anon1	file:
error	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar error() const$/;"	f	class:Eigen::IterativeSolverBase
error	src/utils.c	/^void error(const char *s)$/;"	f
essentialVector	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    const EssentialVectorType essentialVector(Index k) const$/;"	f	class:Eigen::HouseholderSequence
essentialVector	plugin/Eigen/src/Householder/HouseholderSequence.h	/^  static inline const EssentialVectorType essentialVector(const HouseholderSequenceType& h, Index k)$/;"	f	struct:Eigen::internal::hseq_side_dependent_impl
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<ColMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, 1, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etor_product_packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct etor_product_packet_impl<RowMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
etree_find	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^Index etree_find (Index i, IndexVector& pp)$/;"	f	namespace:Eigen::internal
eulerAngles	plugin/Eigen/src/Geometry/EulerAngles.h	/^MatrixBase<Derived>::eulerAngles(Index a0, Index a1, Index a2) const$/;"	f	class:Eigen::MatrixBase
eval	plugin/Eigen/src/Core/DenseBase.h	/^    EIGEN_STRONG_INLINE EvalReturnType eval() const$/;"	f	class:Eigen::DenseBase
eval	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PlainPermutationType eval() const { return derived(); }$/;"	f	class:Eigen::InverseImpl
eval	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval(Types&&... values) const { return derived().eval_impl(std::make_tuple(values...)); }$/;"	f	class:Eigen::Symbolic::BaseExpr
eval	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval(const T& values) const { return derived().eval_impl(values); }$/;"	f	class:Eigen::Symbolic::BaseExpr
eval	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const typename internal::eval<Derived>::type eval() const$/;"	f	class:Eigen::SparseMatrixBase
eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct eval<T,Sparse>$/;"	s	namespace:Eigen::internal
evalTo	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline void evalTo(Dest& dst) const { dst = m_expression; }$/;"	f	class:Eigen::ArrayWrapper
evalTo	plugin/Eigen/src/Core/BandMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::internal::BandMatrixBase
evalTo	plugin/Eigen/src/Core/DenseBase.h	/^    inline void evalTo(Dest& ) const$/;"	f	class:Eigen::DenseBase
evalTo	plugin/Eigen/src/Core/EigenBase.h	/^  inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
evalTo	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::InverseImpl
evalTo	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::PermutationBase
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Inverse<Lhs>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Inverse<Rhs>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Transpose<Rhs>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void evalTo(Dest& dst, const Transpose<Lhs>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Core/ReturnByValue.h	/^    inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::ReturnByValue
evalTo	plugin/Eigen/src/Core/SolveTriangular.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::triangular_solve_retval
evalTo	plugin/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void TriangularBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTo	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void evalTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
evalTo	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const Homogeneous<LhsArg,Horizontal>& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const Lhs& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void evalTo(Dest& dst, const TransformType& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Homogeneous<RhsArg,Vertical>& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> EIGEN_DEVICE_FUNC void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
evalTo	plugin/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> EIGEN_DEVICE_FUNC void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
evalTo	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename DestType> inline void evalTo(DestType& dst) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    void evalTo(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	plugin/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval
evalTo	plugin/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval
evalTo	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result, WorkVectorType& workspace) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  void evalTo(ResType& res) const$/;"	f	struct:Eigen::SPQR_QProduct
evalTo	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, DenseShape)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void evalTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, SparseShape)$/;"	f	struct:Eigen::internal::generic_product_impl
evalTo	plugin/Eigen/src/SparseQR/SparseQR.h	/^  void evalTo(DesType& res) const$/;"	f	struct:Eigen::SparseQR_QProduct
evalTo	plugin/Eigen/src/misc/Image.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval_base
evalTo	plugin/Eigen/src/misc/Kernel.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval_base
evalToLazy	plugin/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void TriangularBase<Derived>::evalToLazy(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
eval_cifar_csv	examples/cifar.c	/^void eval_cifar_csv()$/;"	f
eval_expr_given_size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^FixedInt<N> eval_expr_given_size(FixedInt<N> x, Index \/*size*\/)   { return x; }$/;"	f	namespace:Eigen::internal
eval_expr_given_size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^Index eval_expr_given_size(const Symbolic::BaseExpr<Derived> &x, Index size)$/;"	f	namespace:Eigen::internal
eval_expr_given_size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^inline Index eval_expr_given_size(Index x, Index \/* size *\/)   { return x; }$/;"	f	namespace:Eigen::internal
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const SymbolValue<Tag> &values) const { return values.value(); }$/;"	f	class:Eigen::Symbolic::SymbolExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const T& values) const { return -m_arg0.eval_impl(values); }$/;"	f	class:Eigen::Symbolic::NegateExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const T& values) const { return m_arg0.eval_impl(values) * m_arg1.eval_impl(values); }$/;"	f	class:Eigen::Symbolic::ProductExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const T& values) const { return m_arg0.eval_impl(values) + m_arg1.eval_impl(values); }$/;"	f	class:Eigen::Symbolic::AddExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const T& values) const { return m_arg0.eval_impl(values) \/ m_arg1.eval_impl(values); }$/;"	f	class:Eigen::Symbolic::QuotientExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const T&) const { return N; }$/;"	f	class:Eigen::Symbolic::ValueExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index eval_impl(const std::tuple<Types...>& values) const { return std::get<SymbolValue<Tag> >(values).value(); }$/;"	f	class:Eigen::Symbolic::SymbolExpr
eval_impl	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  IndexType eval_impl(const T&) const { return m_value; }$/;"	f	class:Eigen::Symbolic::ValueExpr
evaluateProductBlockingSizesHeuristic	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void evaluateProductBlockingSizesHeuristic(Index& k, Index& m, Index& n, Index num_threads = 1)$/;"	f	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator()$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC evaluator(const ArgType& arg)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const PlainObjectType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const T& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& block) : block_evaluator_type(block)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& diagonal)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& m)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& n)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& ref)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& select)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  explicit evaluator(const T& xpr) : evaluator<T>(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator : public unary_evaluator<T>$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Array<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseNullaryOp<NullaryOp,PlainObjectType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Diagonal<ArgType, DiagIndex> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Matrix<Scalar, Rows, Cols, Options, MaxRows, MaxCols> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PartialReduxExpr<ArgType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<PlainObjectBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Ref<PlainObjectType, RefOptions, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator<const T>$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE explicit evaluator(const XprType& xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<CwiseBinaryOp<internal::scalar_product_op<Scalar1,Scalar2>,$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Diagonal<const Product<Lhs, Rhs, DefaultProduct>, DiagIndex> > $/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator<Product<Lhs, Rhs, Options> > $/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/ReturnByValue.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/ReturnByValue.h	/^struct evaluator<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC explicit evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/Core/Solve.h	/^struct evaluator<Solve<Decomposition,RhsType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  evaluator(const SolveType& solve)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct evaluator<SolveWithGuess<Decomposition,RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct evaluator<MappedSparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  evaluator() : m_matrix(0), m_zero(0)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  explicit evaluator(const Derived &mat) : m_matrix(&mat), m_zero(0)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^struct evaluator<SparseCompressedBase<Derived> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseMap.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseMap.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseMap.h	/^struct evaluator<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^  explicit evaluator(const SparseMatrixType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^struct evaluator<SparseMatrix<_Scalar,_Options,_StorageIndex> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^  explicit evaluator(const XprType &mat) : Base(mat) {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct evaluator<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
evaluator	plugin/Eigen/src/SparseCore/SparseVector.h	/^  evaluator() : Base() {}$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseVector.h	/^  explicit evaluator(const SparseVectorType &mat) : m_matrix(&mat)$/;"	f	struct:Eigen::internal::evaluator
evaluator	plugin/Eigen/src/SparseCore/SparseVector.h	/^struct evaluator<SparseVector<_Scalar,_Options,_Index> >$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_assume_aliasing {$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_difference_op<typename OtherXpr::Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, const OtherXpr,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_product_op<Scalar1,Scalar2>,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<CwiseBinaryOp<internal::scalar_sum_op<typename OtherXpr::Scalar,typename Product<Lhs,Rhs,DefaultProduct>::Scalar>, const OtherXpr,$/;"	s	namespace:Eigen::internal
evaluator_assume_aliasing	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct evaluator_assume_aliasing<Product<Lhs, Rhs, DefaultProduct> > {$/;"	s	namespace:Eigen::internal
evaluator_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE evaluator_base() {}$/;"	f	struct:Eigen::internal::evaluator_base
evaluator_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_base$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Core/BandMatrix.h	/^struct evaluator_traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits : public evaluator_traits_base<T>$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Core/SelfAdjointView.h	/^struct evaluator_traits<SelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct evaluator_traits<TriangularView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct evaluator_traits<Homogeneous<ArgType,Direction> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/Householder/HouseholderSequence.h	/^struct evaluator_traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct evaluator_traits<SparseSelfAdjointView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
evaluator_traits	plugin/Eigen/src/SparseQR/SparseQR.h	/^struct evaluator_traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
evaluator_traits_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_traits_base$/;"	s	namespace:Eigen::internal
evaluator_wrapper_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit evaluator_wrapper_base(const ArgType& arg) : m_argImpl(arg) {}$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
evaluator_wrapper_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct evaluator_wrapper_base$/;"	s	namespace:Eigen::internal
exclusive_image	src/data.c	/^void exclusive_image(image src)$/;"	f
exp	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  exp(double x) { return cl::sycl::exp(x); }$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   exp(float x) { return cl::sycl::exp(x); }$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^T exp(const T &x) {$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^double exp(const double &x) { return ::exp(x); }$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^float exp(const float &x) { return ::expf(x); }$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^std::complex<double> exp(const std::complex<double>& x) {$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/MathFunctions.h	/^std::complex<float> exp(const std::complex<float>& x) {$/;"	f	namespace:Eigen::numext
exp	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half exp(const half& a) {$/;"	f	namespace:Eigen::half_impl
exp	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^exp() const$/;"	f
expand	examples/go.c	/^mcts_tree *expand(float *next, float *ko, network *net)$/;"	f
expand	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index  SparseLUImpl<Scalar,StorageIndex>::expand(VectorType& vec, Index& length, Index nbElts, Index keep_prev, Index& num_expansions) $/;"	f	class:Eigen::internal::SparseLUImpl
expanded	src/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon18
exph	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half exph(const Eigen::half& a) {$/;"	f
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^  EIGEN_DEVICE_FUNC inline Scalar expm1(const Scalar& x) {$/;"	f	namespace:Eigen::internal::std_fallback
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  expm1(double x) { return cl::sycl::expm1(x); }$/;"	f	namespace:Eigen::numext
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   expm1(float x) { return cl::sycl::expm1(x); }$/;"	f	namespace:Eigen::numext
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^double expm1(const double &x) { return ::expm1(x); }$/;"	f	namespace:Eigen::numext
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^float expm1(const float &x) { return ::expm1f(x); }$/;"	f	namespace:Eigen::numext
expm1	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(expm1, Scalar) expm1(const Scalar& x)$/;"	f	namespace:Eigen::numext
expm1	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half expm1(const half& a) {$/;"	f	namespace:Eigen::half_impl
expm1	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^expm1() const$/;"	f
expm1_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct expm1_impl {$/;"	s	namespace:Eigen::internal
expm1_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct expm1_retval$/;"	s	namespace:Eigen::internal
exposure	include/darknet.h	/^    float exposure;$/;"	m	struct:layer
exposure	include/darknet.h	/^    float exposure;$/;"	m	struct:load_args
exposure	include/darknet.h	/^    float exposure;$/;"	m	struct:network
exposure_image	src/image.c	/^void exposure_image(image im, float sat)$/;"	f
expression	plugin/Eigen/src/Core/NoAlias.h	/^    ExpressionType& expression() const$/;"	f	class:Eigen::NoAlias
extend	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& extend(const MatrixBase<Derived>& p)$/;"	f	class:Eigen::AlignedBox
extend_data_truth	examples/attention.c	/^void extend_data_truth(data *d, int n, float val)$/;"	f
extendedTo	plugin/Eigen/src/Core/VectorwiseOp.h	/^    extendedTo(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
extendedToOpposite	plugin/Eigen/src/Core/VectorwiseOp.h	/^    extendedToOpposite(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
exteriorDistance	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline NonInteger exteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline NonInteger exteriorDistance(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
extra	include/darknet.h	/^    int extra;$/;"	m	struct:layer
extract	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.lhs()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.rhs()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return ExtractType(Base::extract(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extract	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extractData	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLUBase<MatrixType,Derived>::extractData() const$/;"	f	class:Eigen::SuperLUBase
extractData	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^void UmfPackLU<MatrixType>::extractData() const$/;"	f	class:Eigen::UmfPackLU
extractScalarFactor	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return conj(Base::extractScalarFactor(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x)$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }$/;"	f	struct:Eigen::internal::blas_traits
extract_cifar	examples/cifar.c	/^void extract_cifar()$/;"	f
extract_data	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename T> const typename T::Scalar* extract_data(const T& m)$/;"	f	namespace:Eigen::internal
extract_data_selector	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector {$/;"	s	namespace:Eigen::internal
extract_data_selector	plugin/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector<T,false> {$/;"	s	namespace:Eigen::internal
extract_kernel	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline bool extract_kernel(MatrixType& mat, Ref<VectorType> res, Ref<VectorType> representative)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
extract_voxel	examples/voxel.c	/^void extract_voxel(char *lfile, char *rfile, char *prefix)$/;"	f
f	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  float f;$/;"	m	union:Eigen::half_impl::FP32
f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  float     f[4];$/;"	m	union:Eigen::internal::__anon612
f_cpu	include/darknet.h	/^    float *f_cpu;$/;"	m	struct:layer
f_gpu	include/darknet.h	/^    float *f_gpu;$/;"	m	struct:layer
fabsh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half fabsh(const Eigen::half& a) {$/;"	f
factor	plugin/Eigen/src/Geometry/Scaling.h	/^  inline Scalar& factor() { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	plugin/Eigen/src/Geometry/Scaling.h	/^  inline const Scalar& factor() const { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factorize	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
factorize	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
factorize	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& factorize(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
factorize	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    LeastSquareDiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
factorize	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^void IncompleteCholesky<Scalar,_UpLo, OrderingType>::factorize(const _MatrixType& mat)$/;"	f	class:Eigen::IncompleteCholesky
factorize	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::factorize(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
factorize	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& factorize(const EigenBase<MatrixDerived>& A)$/;"	f	class:Eigen::IterativeSolverBase
factorize	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void factorize(const InputMatrixType& matrix)$/;"	f	class:Eigen::KLU
factorize	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
factorize	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
factorize	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
factorize	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::factorize(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
factorize	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::factorize(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
factorize	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
factorize	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholeskyBase
factorize	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
factorize	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
factorize	plugin/Eigen/src/SparseLU/SparseLU.h	/^void SparseLU<MatrixType, OrderingType>::factorize(const MatrixType& matrix)$/;"	f	class:Eigen::SparseLU
factorize	plugin/Eigen/src/SparseQR/SparseQR.h	/^void SparseQR<MatrixType,OrderingType>::factorize(const MatrixType& mat)$/;"	f	class:Eigen::SparseQR
factorize	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperILU
factorize	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperLU
factorize	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize(const InputMatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
factorize_impl	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void factorize_impl()$/;"	f	class:Eigen::KLU
factorize_impl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize_impl()$/;"	f	class:Eigen::UmfPackLU
factorize_preordered	plugin/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h	/^void SimplicialCholeskyBase<Derived>::factorize_preordered(const CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
false_type	plugin/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
fast	src/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon15
fast	src/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon11
fast_ac	src/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon12
fetch_in_thread	src/demo.c	/^void *fetch_in_thread(void *ptr)$/;"	f
fgetgo	examples/go.c	/^char *fgetgo(FILE *fp)$/;"	f
fgetl	src/utils.c	/^char *fgetl(FILE *fp)$/;"	f
file_error	src/utils.c	/^void file_error(char *s)$/;"	f
filename	src/compare.c	/^    char *filename;$/;"	m	struct:__anon23	file:
fill	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void DenseBase<Derived>::fill(const Scalar& val)$/;"	f	class:Eigen::DenseBase
fill	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void fill(const Scalar& value) { setConstant(value); }$/;"	f	class:Eigen::TriangularViewImpl
fill	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index i)$/;"	f	class:Eigen::SparseVector
fill	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fill_cpu	src/blas.c	/^void fill_cpu(int N, float ALPHA, float *X, int INCX)$/;"	f
fill_hierarchy	src/data.c	/^void fill_hierarchy(float *truth, int k, tree *hierarchy)$/;"	f
fill_image	src/image.c	/^void fill_image(image m, float s)$/;"	f
fill_image_from_stream	src/image.c	/^int fill_image_from_stream(CvCapture *cap, image im)$/;"	f
fill_truth	src/data.c	/^void fill_truth(char *path, char **labels, int k, float *truth)$/;"	f
fill_truth_captcha	src/data.c	/^void fill_truth_captcha(char *path, int n, float *truth)$/;"	f
fill_truth_detection	src/data.c	/^void fill_truth_detection(char *path, int num_boxes, float *truth, int classes, int flip, float dx, float dy, float sx, float sy)$/;"	f
fill_truth_iseg	src/data.c	/^void fill_truth_iseg(char *path, int num_boxes, float *truth, int classes, int w, int h, augment_args aug, int flip, int mw, int mh)$/;"	f
fill_truth_region	src/data.c	/^void fill_truth_region(char *path, float *truth, int classes, int num_boxes, int flip, float dx, float dy, float sx, float sy)$/;"	f
fill_truth_swag	src/data.c	/^void fill_truth_swag(char *path, float *truth, int classes, int flip, float dx, float dy, float sx, float sy)$/;"	f
fillfactor	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index fillfactor; \/\/ The estimated fills factors for L and U, compared with A$/;"	m	struct:Eigen::internal::perfvalues
fillrand	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index i)$/;"	f	class:Eigen::SparseVector
fillrand	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index r, Index c)$/;"	f	class:Eigen::SparseVector
finalize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void finalize()$/;"	f	class:Eigen::SparseMatrix
finalize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void finalize() {}$/;"	f	class:Eigen::SparseVector
find	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  Index find(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
findSmallDiagEntry	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallDiagEntry(Index f, Index l)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline Index RealQZ<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealQZ
findSmallSubdiagEntry	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline Index RealSchur<MatrixType>::findSmallSubdiagEntry(Index iu)$/;"	f	class:Eigen::RealSchur
find_arg	src/utils.c	/^int find_arg(int argc, char* argv[], char *arg)$/;"	f
find_char_arg	src/utils.c	/^char *find_char_arg(int argc, char **argv, char *arg, char *def)$/;"	f
find_float_arg	src/utils.c	/^float find_float_arg(int argc, char **argv, char *arg, float def)$/;"	f
find_int_arg	src/utils.c	/^int find_int_arg(int argc, char **argv, char *arg, int def)$/;"	f
find_ordering	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType find_ordering \/* return the number of garbage collections *\/$/;"	f	namespace:internal
find_replace	src/utils.c	/^void find_replace(char *str, char *orig, char *rep, char *output)$/;"	f
find_replace_paths	src/data.c	/^char **find_replace_paths(char **paths, int n, char *find, char *replace)$/;"	f
finished	plugin/Eigen/src/Core/CommaInitializer.h	/^  inline XprType& finished() {$/;"	f	struct:Eigen::CommaInitializer
first	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  Index first()  const { return m_first; }$/;"	f	class:Eigen::ArithmeticSequence
first	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet first;$/;"	m	struct:Eigen::internal::DoublePacket
first	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index first() const { return 0; }$/;"	f	struct:Eigen::internal::AllRange
first	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index first() const { return m_value; }$/;"	f	struct:Eigen::internal::SingleRange
first	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^Index first(const T& x) { return x.first(); }$/;"	f	namespace:Eigen::internal
first	src/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon21
firstAligned	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC Index firstAligned(Index size) const {$/;"	f	class:Eigen::internal::blas_data_mapper
firstObject	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  const FirstType& firstObject() const { return m_first; }$/;"	f	class:Eigen::ArithmeticSequence
first_aligned	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_aligned	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline Index first_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_aligned_impl	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl$/;"	s	namespace:Eigen::internal
first_aligned_impl	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl<Alignment, Derived, false>$/;"	s	namespace:Eigen::internal
first_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef Arg1 first_argument_type;$/;"	t	struct:Eigen::internal::binary_op_base
first_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::first_argument_type  first_argument_type;$/;"	t	struct:Eigen::internal::bind1st_op
first_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::first_argument_type  first_argument_type;$/;"	t	struct:Eigen::internal::bind2nd_op
first_column	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType first_column ;\/* first column in row (used in garbage collection) *\/$/;"	m	union:internal::Colamd_Row::__anon127
first_default_aligned	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^static inline Index first_default_aligned(const DenseBase<Derived>& m)$/;"	f	namespace:Eigen::internal
first_default_aligned	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline Index first_default_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_multiple	plugin/Eigen/src/Core/util/Memory.h	/^inline Index first_multiple(Index size, Index base)$/;"	f	namespace:Eigen::internal
first_row_filter	src/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
firstcode	src/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon15
firstsymbol	src/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon15
fix_data_captcha	examples/captcha.c	/^void fix_data_captcha(data d, int mask)$/;"	f
fixupL	plugin/Eigen/src/SparseLU/SparseLU_Utils.h	/^void SparseLUImpl<Scalar,StorageIndex>::fixupL(const Index n, const IndexVector& perm_r, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
flagged	plugin/Eigen/src/Core/DenseBase.h	/^    const Derived& flagged() const$/;"	f	class:Eigen::DenseBase
flags	plugin/Eigen/src/Core/IO.h	/^  int flags;$/;"	m	struct:Eigen::IOFormat
flags	src/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon22
flatten	include/darknet.h	/^    int flatten;$/;"	m	struct:layer
flatten	src/blas.c	/^void flatten(float *x, int size, int layers, int batch, int forward)$/;"	f
flip	include/darknet.h	/^    int flip;$/;"	m	struct:layer
flip_board	examples/go.c	/^void flip_board(float *board)$/;"	f
flip_image	src/image.c	/^void flip_image(image a)$/;"	f
flipped	include/darknet.h	/^    int flipped;$/;"	m	struct:layer
float2fixed	src/stb_image.h	3043;"	d
float2fixed	src/stb_image.h	3071;"	d
float_abs_compare	src/cost_layer.c	/^int float_abs_compare (const void * a, const void * b)$/;"	f
float_pair	examples/rnn.c	/^} float_pair;$/;"	t	typeref:struct:__anon27	file:
float_pair	examples/rnn_vid.c	/^} float_pair;$/;"	t	typeref:struct:__anon24	file:
float_to_box	src/box.c	/^box float_to_box(float *f, int stride)$/;"	f
float_to_half_rtne	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC __half_raw float_to_half_rtne(float ff) {$/;"	f	namespace:Eigen::half_impl
float_to_image	src/image.c	/^image float_to_image(int w, int h, int c, float *data)$/;"	f
floor	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  floor(double x) { return cl::sycl::floor(x); }$/;"	f	namespace:Eigen::numext
floor	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   floor(float x) { return cl::sycl::floor(x); }$/;"	f	namespace:Eigen::numext
floor	plugin/Eigen/src/Core/MathFunctions.h	/^T (floor)(const T& x)$/;"	f	namespace:Eigen::numext
floor	plugin/Eigen/src/Core/MathFunctions.h	/^double floor(const double &x) { return ::floor(x); }$/;"	f	namespace:Eigen::numext
floor	plugin/Eigen/src/Core/MathFunctions.h	/^float floor(const float &x) { return ::floorf(x); }$/;"	f	namespace:Eigen::numext
floor	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half floor(const half& a) {$/;"	f	namespace:Eigen::half_impl
floor	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^floor() const$/;"	f
floorh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half floorh(const Eigen::half& a) {$/;"	f
flush_stream_buffer	src/image.c	/^void flush_stream_buffer(CvCapture *cap, int n)$/;"	f
fmod	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  fmod(double x, double y) { return cl::sycl::fmod(x, y); }$/;"	f	namespace:Eigen::numext
fmod	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   fmod(float x, float y) { return cl::sycl::fmod(x, y); }$/;"	f	namespace:Eigen::numext
fmod	plugin/Eigen/src/Core/MathFunctions.h	/^T fmod(const T& a, const T& b) {$/;"	f	namespace:Eigen::numext
fmod	plugin/Eigen/src/Core/MathFunctions.h	/^double fmod(const double& a, const double& b) {$/;"	f	namespace:Eigen::numext
fmod	plugin/Eigen/src/Core/MathFunctions.h	/^float fmod(const float& a, const float& b) {$/;"	f	namespace:Eigen::numext
font	data/labels/make_labels.py	/^font = 'futura-normal'$/;"	v
forceAlignedAccess	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	plugin/Eigen/src/Core/MatrixBase.h	/^    inline Derived& forceAlignedAccess() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	plugin/Eigen/src/Core/MatrixBase.h	/^    inline const Derived& forceAlignedAccess() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	plugin/Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline Derived& forceAlignedAccessIf() { return derived(); }$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	plugin/Eigen/src/Core/MatrixBase.h	/^    template<bool Enable> inline const Derived& forceAlignedAccessIf() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
forced	include/darknet.h	/^    int forced;$/;"	m	struct:layer
forgot_delta	include/darknet.h	/^    float * forgot_delta;$/;"	m	struct:layer
forgot_delta_gpu	include/darknet.h	/^    float * forgot_delta_gpu;$/;"	m	struct:layer
forgot_state	include/darknet.h	/^    float * forgot_state;$/;"	m	struct:layer
forgot_state_gpu	include/darknet.h	/^    float * forgot_state_gpu;$/;"	m	struct:layer
format	plugin/Eigen/src/Core/DenseBase.h	/^    inline const WithFormat<Derived> format(const IOFormat& fmt) const$/;"	f	class:Eigen::DenseBase
fortran_to_c_numbering	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void fortran_to_c_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
forward	include/darknet.h	/^    void (*forward)   (struct layer, struct network);$/;"	m	struct:layer
forward_activation_layer	src/activation_layer.c	/^void forward_activation_layer(layer l, network net)$/;"	f
forward_activation_layer_gpu	src/activation_layer.c	/^void forward_activation_layer_gpu(layer l, network net)$/;"	f
forward_avgpool_layer	src/avgpool_layer.c	/^void forward_avgpool_layer(const avgpool_layer l, network net)$/;"	f
forward_batchnorm_layer	src/batchnorm_layer.c	/^void forward_batchnorm_layer(layer l, network net)$/;"	f
forward_batchnorm_layer_gpu	src/batchnorm_layer.c	/^void forward_batchnorm_layer_gpu(layer l, network net)$/;"	f
forward_connected_layer	src/connected_layer.c	/^void forward_connected_layer(layer l, network net)$/;"	f
forward_connected_layer_gpu	src/connected_layer.c	/^void forward_connected_layer_gpu(layer l, network net)$/;"	f
forward_convolutional_layer	src/convolutional_layer.c	/^void forward_convolutional_layer(convolutional_layer l, network net)$/;"	f
forward_cost_layer	src/cost_layer.c	/^void forward_cost_layer(cost_layer l, network net)$/;"	f
forward_cost_layer_gpu	src/cost_layer.c	/^void forward_cost_layer_gpu(cost_layer l, network net)$/;"	f
forward_crnn_layer	src/crnn_layer.c	/^void forward_crnn_layer(layer l, network net)$/;"	f
forward_crnn_layer_gpu	src/crnn_layer.c	/^void forward_crnn_layer_gpu(layer l, network net)$/;"	f
forward_crop_layer	src/crop_layer.c	/^void forward_crop_layer(const crop_layer l, network net)$/;"	f
forward_deconvolutional_layer	src/deconvolutional_layer.c	/^void forward_deconvolutional_layer(const layer l, network net)$/;"	f
forward_detection_layer	src/detection_layer.c	/^void forward_detection_layer(const detection_layer l, network net)$/;"	f
forward_detection_layer_gpu	src/detection_layer.c	/^void forward_detection_layer_gpu(const detection_layer l, network net)$/;"	f
forward_dropout_layer	src/dropout_layer.c	/^void forward_dropout_layer(dropout_layer l, network net)$/;"	f
forward_gpu	include/darknet.h	/^    void (*forward_gpu)   (struct layer, struct network);$/;"	m	struct:layer
forward_gru_layer	src/gru_layer.c	/^void forward_gru_layer(layer l, network net)$/;"	f
forward_gru_layer_gpu	src/gru_layer.c	/^void forward_gru_layer_gpu(layer l, network net)$/;"	f
forward_local_layer	src/local_layer.c	/^void forward_local_layer(const local_layer l, network net)$/;"	f
forward_local_layer_gpu	src/local_layer.c	/^void forward_local_layer_gpu(const local_layer l, network net)$/;"	f
forward_lstm_layer	src/lstm_layer.c	/^void forward_lstm_layer(layer l, network state)$/;"	f
forward_lstm_layer_gpu	src/lstm_layer.c	/^void forward_lstm_layer_gpu(layer l, network state)$/;"	f
forward_maxpool_layer	src/maxpool_layer.c	/^void forward_maxpool_layer(const maxpool_layer l, network net)$/;"	f
forward_network	src/network.c	/^void forward_network(network *netp)$/;"	f
forward_network_gpu	src/network.c	/^void forward_network_gpu(network *netp)$/;"	f
forward_normalization_layer	src/normalization_layer.c	/^void forward_normalization_layer(const layer layer, network net)$/;"	f
forward_normalization_layer_gpu	src/normalization_layer.c	/^void forward_normalization_layer_gpu(const layer layer, network net)$/;"	f
forward_region_layer	src/region_layer.c	/^void forward_region_layer(const layer l, network net)$/;"	f
forward_region_layer_gpu	src/region_layer.c	/^void forward_region_layer_gpu(const layer l, network net)$/;"	f
forward_reorg_layer	src/reorg_layer.c	/^void forward_reorg_layer(const layer l, network net)$/;"	f
forward_reorg_layer_gpu	src/reorg_layer.c	/^void forward_reorg_layer_gpu(layer l, network net)$/;"	f
forward_rnn_layer	src/rnn_layer.c	/^void forward_rnn_layer(layer l, network net)$/;"	f
forward_rnn_layer_gpu	src/rnn_layer.c	/^void forward_rnn_layer_gpu(layer l, network net)$/;"	f
forward_route_layer	src/route_layer.c	/^void forward_route_layer(const route_layer l, network net)$/;"	f
forward_route_layer_gpu	src/route_layer.c	/^void forward_route_layer_gpu(const route_layer l, network net)$/;"	f
forward_shortcut_layer	src/shortcut_layer.c	/^void forward_shortcut_layer(const layer l, network net)$/;"	f
forward_shortcut_layer_gpu	src/shortcut_layer.c	/^void forward_shortcut_layer_gpu(const layer l, network net)$/;"	f
forward_softmax_layer	src/softmax_layer.c	/^void forward_softmax_layer(const softmax_layer l, network net)$/;"	f
forward_softmax_layer_gpu	src/softmax_layer.c	/^void forward_softmax_layer_gpu(const softmax_layer l, network net)$/;"	f
fps	src/demo.c	/^static float fps = 0;$/;"	v	file:
free_data	src/data.c	/^void free_data(data d)$/;"	f
free_image	python/darknet.py	/^free_image = lib.free_image$/;"	v
free_image	src/image.c	/^void free_image(image m)$/;"	f
free_layer	src/layer.c	/^void free_layer(layer l)$/;"	f
free_list	src/list.c	/^void free_list(list *l)$/;"	f
free_list_contents	src/list.c	/^void free_list_contents(list *l)$/;"	f
free_matrix	src/matrix.c	/^void free_matrix(matrix m)$/;"	f
free_mcts	examples/go.c	/^void free_mcts(mcts_tree *root)$/;"	f
free_network	src/network.c	/^void free_network(network *net)$/;"	f
free_node	src/list.c	/^void free_node(node *n)$/;"	f
free_ptrs	python/darknet.py	/^free_ptrs = lib.free_ptrs$/;"	v
free_ptrs	src/utils.c	/^void free_ptrs(void **ptrs, int n)$/;"	f
free_section	src/parser.c	/^void free_section(section *s)$/;"	f
fromPositionOrientationScale	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromRotationMatrix	plugin/Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
fromRotationMatrix	plugin/Eigen/src/Geometry/Rotation2D.h	/^EIGEN_DEVICE_FUNC Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
front	include/darknet.h	/^    node *front;$/;"	m	struct:list
fullPivHouseholderQr	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^MatrixBase<Derived>::fullPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
fullPivLu	plugin/Eigen/src/LU/FullPivLU.h	/^MatrixBase<Derived>::fullPivLu() const$/;"	f	class:Eigen::MatrixBase
func	plugin/Eigen/src/Core/CoreEvaluators.h	/^    const BinaryOp& func() const { return static_cast<const BinaryOp&>(*this); }$/;"	f	struct:Eigen::internal::binary_evaluator::Data
func	plugin/Eigen/src/Core/CoreEvaluators.h	/^    const TernaryOp& func() const { return static_cast<const TernaryOp&>(*this); }$/;"	f	struct:Eigen::internal::ternary_evaluator::Data
func	plugin/Eigen/src/Core/CoreEvaluators.h	/^    const UnaryOp& func() const { return static_cast<const UnaryOp&>(*this); }$/;"	f	class:Eigen::internal::unary_evaluator::Data
func	plugin/Eigen/src/Core/CoreEvaluators.h	/^    const UnaryOp& func() const { return static_cast<const UnaryOp&>(*this); }$/;"	f	struct:Eigen::internal::unary_evaluator::Data
functor	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseBinaryOp
functor	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseNullaryOp
functor	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  const TernaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseTernaryOp
functor	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryOp
functor	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    const ViewOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryView
functor	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp& functor() const { return m_functor; }$/;"	f	class:Eigen::PartialReduxExpr
functor_has_linear_access	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = !has_binary_operator<Functor>::value }; };$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/Random.h	/^struct functor_traits<scalar_random_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/Visitor.h	/^struct functor_traits<max_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/Visitor.h	/^struct functor_traits<min_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<Eigen::half, float> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<float, Eigen::half> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct functor_traits<scalar_cast_op<int, Eigen::half> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<add_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<div_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<mul_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<sub_assign_op<DstScalar,SrcScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct functor_traits<swap_assign_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_cmp_op<LhsScalar,RhsScalar, cmp> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_difference_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_hypot_op<Scalar,Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_max_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_min_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_pow_op<Scalar,Exponent> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_quotient_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct functor_traits<scalar_sum_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_and_op> {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_or_op> {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct functor_traits<scalar_boolean_xor_op> {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct functor_traits<bind1st_op<BinaryOp> > : functor_traits<BinaryOp> {};$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<typename BinaryOp> struct functor_traits<bind2nd_op<BinaryOp> > : functor_traits<BinaryOp> {};$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_constant_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct functor_traits<scalar_identity_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType> struct functor_traits< linspaced_op<Scalar,PacketType> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_compose<T0,T1,T2> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder1st<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::binder2nd<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::divides<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::greater_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::less_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_and<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_not<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::logical_or<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::minus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::multiplies<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::not_equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::plus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project1st<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::project2nd<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select1st<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::select2nd<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_compose<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/StlFunctors.h	/^struct functor_traits<std::unary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs2_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_abs_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_acos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_arg_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_asin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_atan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_boolean_not_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cast_op<Scalar,NewType> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_ceil_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_conjugate_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cosh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_cube_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_exp_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_expm1_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_floor_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_imag_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_inverse_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isfinite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isinf_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_isnan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log10_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log1p_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_log_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_opposite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_real_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_round_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_rsqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_score_coeff_op<Scalar> > : functor_traits<scalar_abs_op<Scalar> > {};$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sign_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sinh_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_sqrt_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_square_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct functor_traits<scalar_tanh_op<Scalar> > {$/;"	s	namespace:Eigen::internal
fw_algo	include/darknet.h	/^    cudnnConvolutionFwdAlgo_t fw_algo;$/;"	m	struct:layer
g_cpu	include/darknet.h	/^    float *g_cpu;$/;"	m	struct:layer
g_gpu	include/darknet.h	/^    float *g_gpu;$/;"	m	struct:layer
gamma	include/darknet.h	/^    float gamma;$/;"	m	struct:network
garbage_collection	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType garbage_collection  \/* returns the new value of pfree *\/$/;"	f	namespace:internal
gate_delta_gpu	include/darknet.h	/^    float * gate_delta_gpu;$/;"	m	struct:layer
gate_gpu	include/darknet.h	/^    float * gate_gpu;$/;"	m	struct:layer
gatherPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE SubPacket gatherPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
gebp_kernel	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gebp_kernel$/;"	s	namespace:Eigen::internal
gebp_madd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)$/;"	f	namespace:Eigen::internal
gebp_madd_selector	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename A, typename B, typename C, typename T> struct gebp_madd_selector {$/;"	s	namespace:Eigen::internal
gebp_madd_selector	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {$/;"	s	namespace:Eigen::internal
gebp_traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits$/;"	c	namespace:Eigen::internal
gebp_traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<RealScalar, std::complex<RealScalar>, false, _ConjRhs >$/;"	c	namespace:Eigen::internal
gebp_traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>$/;"	c	namespace:Eigen::internal
gebp_traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, std::complex<RealScalar>, _ConjLhs, _ConjRhs >$/;"	c	namespace:Eigen::internal
gemm	src/gemm.c	/^void gemm(int TA, int TB, int M, int N, int K, float ALPHA, $/;"	f
gemm_bin	src/gemm.c	/^void gemm_bin(int M, int N, int K, float ALPHA, $/;"	f
gemm_blocking_space	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index \/*rows*\/, Index \/*cols*\/, Index \/*depth*\/, Index \/*num_threads*\/, bool \/*full_rows = false*\/)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(Index rows, Index cols, Index depth, Index num_threads, bool l3_blocking)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, false>$/;"	c	namespace:Eigen::internal
gemm_blocking_space	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, true \/* == FiniteAtCompileTime *\/>$/;"	c	namespace:Eigen::internal
gemm_cpu	src/gemm.c	/^void gemm_cpu(int TA, int TB, int M, int N, int K, float ALPHA, $/;"	f
gemm_functor	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  gemm_functor(const Lhs& lhs, const Rhs& rhs, Dest& dest, const Scalar& actualAlpha, BlockingType& blocking)$/;"	f	struct:Eigen::internal::gemm_functor
gemm_functor	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct gemm_functor$/;"	s	namespace:Eigen::internal
gemm_gpu	src/gemm.c	/^void gemm_gpu(int TA, int TB, int M, int N, int K, float ALPHA, $/;"	f
gemm_nn	src/gemm.c	/^void gemm_nn(int M, int N, int K, float ALPHA, $/;"	f
gemm_nn_quantize	src/gemm.c	/^void gemm_nn_quantize(int M, int N, int K, quant_t ALPHA, $/;"	f
gemm_nt	src/gemm.c	/^void gemm_nt(int M, int N, int K, float ALPHA, $/;"	f
gemm_pack_lhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs<Scalar, Index, DataMapper, Pack1, Pack2, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, DataMapper, nr, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_quantize	src/gemm.c	/^void gemm_quantize(int TA, int TB, int M, int N, int K, quant_t ALPHA,$/;"	f
gemm_tn	src/gemm.c	/^void gemm_tn(int M, int N, int K, float ALPHA, $/;"	f
gemm_tt	src/gemm.c	/^void gemm_tt(int M, int N, int K, float ALPHA, $/;"	f
gemv_dense_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^struct gemv_dense_selector<OnTheLeft,StorageOrder,BlasCompatible>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,ColMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,ColMajor,true>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,RowMajor,false>$/;"	s	namespace:Eigen::internal
gemv_dense_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_dense_selector<OnTheRight,RowMajor,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	plugin/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,Dynamic,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	plugin/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,false>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	plugin/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,true>$/;"	s	namespace:Eigen::internal
general_det3_helper	plugin/Eigen/src/LU/InverseImpl.h	/^inline const typename Derived::Scalar general_det3_helper$/;"	f	namespace:Eigen::internal
general_matrix_matrix_product	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_product	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_rankupdate	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^struct general_matrix_matrix_rankupdate :$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_product_to_triangular_selector	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,false>$/;"	s	namespace:Eigen
general_product_to_triangular_selector	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_product_to_triangular_selector<MatrixType,ProductType,UpLo,true>$/;"	s	namespace:Eigen
generate_vid_rnn	examples/rnn_vid.c	/^void generate_vid_rnn(char *cfgfile, char *weightfile)$/;"	f
generic_dense_assignment_kernel	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	plugin/Eigen/src/Core/AssignEvaluator.h	/^class generic_dense_assignment_kernel$/;"	c	namespace:Eigen::internal
generic_dense_assignment_kernel	plugin/Eigen/src/Core/Swap.h	/^  EIGEN_DEVICE_FUNC generic_dense_assignment_kernel(DstEvaluatorTypeT &dst, const SrcEvaluatorTypeT &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
generic_dense_assignment_kernel	plugin/Eigen/src/Core/Swap.h	/^class generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, swap_assign_op<typename DstEvaluatorTypeT::Scalar>, Specialized>$/;"	c	namespace:Eigen::internal
generic_fast_tanh_float	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^T generic_fast_tanh_float(const T& a_x)$/;"	f	namespace:Eigen::internal
generic_matrix_wrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper()$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper(const InputType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  generic_matrix_wrapper(const MatrixType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
generic_matrix_wrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class generic_matrix_wrapper<MatrixType,false>$/;"	c	namespace:Eigen::internal
generic_matrix_wrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class generic_matrix_wrapper<MatrixType,true>$/;"	c	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Inverse<Lhs>, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Inverse<Rhs>, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, PermutationShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, PermutationShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs, Transpose<Rhs>, MatrixShape, TranspositionsShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> $/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemvProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,InnerProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,OuterProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,SelfAdjointShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,TriangularShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,SelfAdjointShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Lhs,Rhs,TriangularShape,DenseShape,ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl<Transpose<Lhs>, Rhs, TranspositionsShape, MatrixShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,GemmProduct>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Homogeneous<LhsArg,Horizontal>, Rhs, HomogeneousShape, DenseShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Lhs, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Lhs, Homogeneous<RhsArg,Vertical>, TriangularShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct generic_product_impl<Transform<Scalar,Dim,Mode,Options>, Homogeneous<RhsArg,Vertical>, DenseShape, HomogeneousShape, ProductTag>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, DenseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseShape, SparseTriangularShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct generic_product_impl<Lhs, Rhs, SparseTriangularShape, SparseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<Lhs, RhsView, DenseShape, SparseSelfAdjointShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct generic_product_impl<LhsView, Rhs, SparseSelfAdjointShape, DenseShape, ProductType>$/;"	s	namespace:Eigen::internal
generic_product_impl_base	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct generic_product_impl_base$/;"	s	namespace:Eigen::internal
generic_xpr_base	plugin/Eigen/src/Core/SolverBase.h	/^struct generic_xpr_base<Derived, MatrixXpr, SolverStorage>$/;"	s	namespace:Eigen::internal
generic_xpr_base	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct generic_xpr_base<Derived, MatrixXpr, Sparse>$/;"	s	namespace:Eigen::internal
get	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Dense = Dense()) const$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
get	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar get(const RhsEval &rhs, Index outer, Sparse = Sparse())$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
getL	plugin/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	plugin/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	plugin/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	plugin/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixL getL(const MatrixType& m) { return MatrixL(m); }$/;"	f	struct:Eigen::internal::traits
getLinearMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC  EIGEN_ALWAYS_INLINE LinearMapper getLinearMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getMatrix	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
getMatrix	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
getMatrix	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
getMaxIterations	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexEigenSolver
getMaxIterations	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::ComplexSchur
getMaxIterations	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::EigenSolver
getMaxIterations	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    Index getMaxIterations()$/;"	f	class:Eigen::RealSchur
getSubMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE const_blas_data_mapper<Scalar, Index, StorageOrder> getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::const_blas_data_mapper
getSubMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  getSubMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
getU	plugin/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	plugin/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	plugin/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	plugin/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixU getU(const MatrixType& m) { return MatrixU(m.adjoint()); }$/;"	f	struct:Eigen::internal::traits
getVectorMapper	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC  EIGEN_ALWAYS_INLINE VectorMapper getVectorMapper(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
get_activation	src/activations.c	/^ACTIVATION get_activation(char *s)$/;"	f
get_activation_string	src/activations.c	/^char *get_activation_string(ACTIVATION a)$/;"	f
get_base_args	src/network.c	/^load_args get_base_args(network *net)$/;"	f
get_coco_image_id	examples/coco.c	/^int get_coco_image_id(char *filename)$/;"	f
get_coco_image_id	examples/detector.c	/^static int get_coco_image_id(char *filename)$/;"	f	file:
get_color	src/image.c	/^float get_color(int c, int x, int max)$/;"	f
get_compile_time_incr	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct get_compile_time_incr<ArithmeticSequence<FirstType,SizeType,IncrType> > {$/;"	s	namespace:Eigen::internal
get_compile_time_incr	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^template<> struct get_compile_time_incr<SingleRange> {$/;"	s	namespace:Eigen::internal
get_compile_time_incr	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^template<int Size> struct get_compile_time_incr<AllRange<Size> > {$/;"	s	namespace:Eigen::internal
get_compile_time_incr	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^template<typename T, typename EnableIf = void> struct get_compile_time_incr {$/;"	s	namespace:Eigen::internal
get_convolutional_delta	src/convolutional_layer.c	/^image get_convolutional_delta(convolutional_layer l)$/;"	f
get_convolutional_image	src/convolutional_layer.c	/^image get_convolutional_image(convolutional_layer l)$/;"	f
get_convolutional_weight	src/convolutional_layer.c	/^image get_convolutional_weight(convolutional_layer l, int i)$/;"	f
get_cost_string	src/cost_layer.c	/^char *get_cost_string(COST_TYPE a)$/;"	f
get_cost_type	src/cost_layer.c	/^COST_TYPE get_cost_type(char *s)$/;"	f
get_crop_image	src/crop_layer.c	/^image get_crop_image(crop_layer l)$/;"	f
get_current_batch	src/network.c	/^size_t get_current_batch(network *net)$/;"	f
get_current_rate	src/network.c	/^float get_current_rate(network *net)$/;"	f
get_data_part	src/data.c	/^data get_data_part(data d, int part, int total)$/;"	f
get_detection_boxes	src/detection_layer.c	/^void get_detection_boxes(layer l, int w, int h, float thresh, float **probs, box *boxes, int only_objectness)$/;"	f
get_factor	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename From,typename To> struct get_factor {$/;"	s	namespace:Eigen::internal
get_factor	plugin/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {$/;"	s	namespace:Eigen::internal
get_fixed_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^struct get_fixed_value<variable_if_dynamic<T,N>,Default> {$/;"	s	namespace:Eigen::internal
get_fixed_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N,int Default> struct get_fixed_value<FixedInt<N> (*)(),Default> {$/;"	s	namespace:Eigen::internal
get_fixed_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N,int Default> struct get_fixed_value<FixedInt<N>,Default> {$/;"	s	namespace:Eigen::internal
get_fixed_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N,int Default> struct get_fixed_value<VariableAndFixedInt<N>,Default> {$/;"	s	namespace:Eigen::internal
get_fixed_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T, int Default=Dynamic> struct get_fixed_value {$/;"	s	namespace:Eigen::internal
get_hierarchy_probability	src/tree.c	/^float get_hierarchy_probability(float *x, tree *hier, int c, int stride)$/;"	f
get_image_from_stream	src/image.c	/^image get_image_from_stream(CvCapture *cap)$/;"	f
get_image_layer	src/image.c	/^image get_image_layer(image m, int l)$/;"	f
get_label	src/image.c	/^image get_label(image **characters, char *string, int size)$/;"	f
get_labels	src/data.c	/^char **get_labels(char *filename)$/;"	f
get_layer_string	src/network.c	/^char *get_layer_string(LAYER_TYPE a)$/;"	f
get_maxpool_delta	src/maxpool_layer.c	/^image get_maxpool_delta(maxpool_layer l)$/;"	f
get_maxpool_image	src/maxpool_layer.c	/^image get_maxpool_image(maxpool_layer l)$/;"	f
get_metadata	src/option_list.c	/^metadata get_metadata(char *file)$/;"	f
get_network_detection_layer	src/network.c	/^layer get_network_detection_layer(network *net)$/;"	f
get_network_image	src/network.c	/^image get_network_image(network *net)$/;"	f
get_network_image_layer	src/network.c	/^image get_network_image_layer(network *net, int i)$/;"	f
get_network_output_layer	src/network.c	/^layer get_network_output_layer(network *net)$/;"	f
get_next_batch	src/data.c	/^void get_next_batch(data d, int n, int offset, float *X, float *y)$/;"	f
get_paths	src/data.c	/^list *get_paths(char *filename)$/;"	f
get_pixel	src/image.c	/^static float get_pixel(image m, int x, int y, int c)$/;"	f	file:
get_pixel	src/zcu102_api.cpp	/^static float get_pixel(image m, int x, int y, int c)$/;"	f	file:
get_pixel_extend	src/image.c	/^static float get_pixel_extend(image m, int x, int y, int c)$/;"	f	file:
get_policy	src/parser.c	/^learning_rate_policy get_policy(char *s)$/;"	f
get_predicted_class_network	src/network.c	/^int get_predicted_class_network(network *net)$/;"	f
get_random_batch	src/data.c	/^void get_random_batch(data d, int n, float *X, float *y)$/;"	f
get_random_data	src/data.c	/^data get_random_data(data d, int num)$/;"	f
get_random_paths	src/data.c	/^char **get_random_paths(char **paths, int n, int m)$/;"	f
get_region_box	src/region_layer.c	/^box get_region_box(float *x, float *biases, int n, int index, int i, int j, int w, int h, int stride)$/;"	f
get_region_boxes	src/region_layer.c	/^void get_region_boxes(layer l, int w, int h, int netw, int neth, float thresh, float **probs, box *boxes, float **masks, int only_objectness, int *map, float tree_thresh, int relative)$/;"	f
get_regression_values	examples/classifier.c	/^float *get_regression_values(char **labels, int n)$/;"	f
get_rnn_data	examples/rnn.c	/^float_pair get_rnn_data(unsigned char *text, size_t *offsets, int characters, size_t len, int batch, int steps)$/;"	f
get_rnn_token_data	examples/rnn.c	/^float_pair get_rnn_token_data(int *tokens, size_t *offsets, int characters, size_t len, int batch, int steps)$/;"	f
get_rnn_vid_data	examples/rnn_vid.c	/^float_pair get_rnn_vid_data(network net, char **files, int n, int batch, int steps)$/;"	f
get_runtime_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N> EIGEN_DEVICE_FUNC Index get_runtime_value(FixedInt<N> (*)()) { return N; }$/;"	f	namespace:Eigen::internal
get_runtime_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T> EIGEN_DEVICE_FUNC Index get_runtime_value(const T &x) { return x; }$/;"	f	namespace:Eigen::internal
get_segmentation_image	src/data.c	/^image get_segmentation_image(char *path, int w, int h, int classes)$/;"	f
get_segmentation_image2	src/data.c	/^image get_segmentation_image2(char *path, int w, int h, int classes)$/;"	f
get_seq2seq_data	examples/rnn.c	/^float_pair get_seq2seq_data(char **source, char **dest, int n, int characters, size_t len, int batch, int steps)$/;"	f
get_symmetrized_graph	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^  void get_symmetrized_graph(const MatrixType& A)$/;"	f	class:Eigen::MetisOrdering
get_weights	src/convolutional_layer.c	/^image *get_weights(convolutional_layer l)$/;"	f
get_workspace_size	src/convolutional_layer.c	/^static size_t get_workspace_size(layer l){$/;"	f	file:
get_workspace_size	src/deconvolutional_layer.c	/^static size_t get_workspace_size(layer l){$/;"	f	file:
ghost_image	src/image.c	/^void ghost_image(image source, image dest, int dx, int dy)$/;"	f
global_math_functions_filtering_base	plugin/Eigen/src/Core/MathFunctions.h	/^struct global_math_functions_filtering_base$/;"	s	namespace:Eigen::internal
glue_shapes	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	s	namespace:Eigen::internal
glue_shapes	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	s	namespace:Eigen::internal
gpu_index	include/darknet.h	/^    int gpu_index;$/;"	m	struct:network
gpu_index	src/cuda.c	/^int gpu_index = 0;$/;"	v
grab	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const EigenBase<MatrixDerived> &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const InputType &A)$/;"	f	class:Eigen::IterativeSolverBase
grab	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const MatrixType &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void grab(const Ref<const MatrixType> &mat)$/;"	f	class:Eigen::internal::generic_matrix_wrapper
grab	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void grab(const EigenBase<MatrixDerived> &A)$/;"	f	class:Eigen::KLU
grab	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void grab(const KLUMatrixRef &A)$/;"	f	class:Eigen::KLU
grab	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const EigenBase<MatrixDerived> &A)$/;"	f	class:Eigen::UmfPackLU
grab	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grab(const UmfpackMatrixRef &A)$/;"	f	class:Eigen::UmfPackLU
grabMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLDLT
grabMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLLT
grabMatrix	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLU
gradient	src/activations.c	/^float gradient(float x, ACTIVATION a)$/;"	f
gradient_array	src/activations.c	/^void gradient_array(const float *x, const int n, const ACTIVATION a, float *delta)$/;"	f
grayscale_image	src/image.c	/^image grayscale_image(image im)$/;"	f
grayscale_image_3c	src/image.c	/^void grayscale_image_3c(image im)$/;"	f
group	include/darknet.h	/^    int *group;$/;"	m	struct:__anon725
group_offset	include/darknet.h	/^    int *group_offset;$/;"	m	struct:__anon725
group_size	include/darknet.h	/^    int *group_size;$/;"	m	struct:__anon725
groups	include/darknet.h	/^    int groups;$/;"	m	struct:__anon725
groups	include/darknet.h	/^    int groups;$/;"	m	struct:layer
guess	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const GuessType&     guess() const { return m_guess; }$/;"	f	class:Eigen::SolveWithGuess
gun_classifier	examples/classifier.c	/^void gun_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
h	include/darknet.h	/^    float x, y, w, h;$/;"	m	struct:__anon735
h	include/darknet.h	/^    float x,y,w,h;$/;"	m	struct:__anon738
h	include/darknet.h	/^    int h, w, c;$/;"	m	struct:network
h	include/darknet.h	/^    int h,w,c;$/;"	m	struct:layer
h	include/darknet.h	/^    int h;$/;"	m	struct:__anon733
h	include/darknet.h	/^    int h;$/;"	m	struct:__anon734
h	include/darknet.h	/^    int h;$/;"	m	struct:load_args
h	include/darknet.h	/^    int w, h;$/;"	m	struct:__anon736
h	src/parser.c	/^    int h;$/;"	m	struct:size_params	file:
h	src/stb_image.h	/^      int h,v;$/;"	m	struct:__anon12::__anon13
h	src/stb_image.h	/^   int w,h;$/;"	m	struct:__anon22
h2	src/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon12::__anon13
hCoeffs	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::ColPivHouseholderQR
hCoeffs	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const HCoeffsType& hCoeffs() const { return m_cpqr.hCoeffs(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
hCoeffs	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::FullPivHouseholderQR
hCoeffs	plugin/Eigen/src/QR/HouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::HouseholderQR
h_cpu	include/darknet.h	/^    float *h_cpu;$/;"	m	struct:layer
h_gpu	include/darknet.h	/^    float *h_gpu;$/;"	m	struct:layer
ha	src/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon12::__anon13
half	plugin/Eigen/src/Core/GenericPacketMath.h	/^  typedef T half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet4d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet4d half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8f half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8f half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8i half;$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half() {}$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half(const __half& h) : half_impl::half_base(h) {}$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half(const __half_raw& h) : half_impl::half_base(h) {}$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half(const half& h) : half_impl::half_base(h) {}$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(bool b)$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(const T& val)$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  explicit EIGEN_DEVICE_FUNC half(float f)$/;"	f	struct:Eigen::half
half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct half : public half_impl::half_base {$/;"	s	namespace:Eigen
half	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^  typedef half2 half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f half; \/\/ Packet2f intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i half; \/\/ Packet2i intrinsics not implemented yet$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet1cd half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet2cf half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet2d half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4f half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4i half;$/;"	t	struct:Eigen::internal::packet_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	t	struct:Eigen::internal::unpacket_traits
half_base	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base() {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base(const __half& h) : __half_raw(*(__half_raw*)&h) {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base(const __half_raw& h) : __half_raw(h) {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half_base(const half_base& h) : __half_raw(h) {}$/;"	f	struct:Eigen::half_impl::half_base
half_base	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct half_base : public __half_raw {$/;"	s	namespace:Eigen::half_impl
half_impl	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^namespace half_impl {$/;"	n	namespace:Eigen
half_to_float	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC float half_to_float(__half_raw h) {$/;"	f	namespace:Eigen::half_impl
handmade_aligned_free	plugin/Eigen/src/Core/util/Memory.h	/^inline void handmade_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
handmade_aligned_malloc	plugin/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_malloc(std::size_t size)$/;"	f	namespace:Eigen::internal
handmade_aligned_realloc	plugin/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_realloc(void* ptr, std::size_t size, std::size_t = 0)$/;"	f	namespace:Eigen::internal
hardtan_activate	src/activations.h	/^static inline float hardtan_activate(float x)$/;"	f
hardtan_gradient	src/activations.h	/^static inline float hardtan_gradient(float x)$/;"	f
harmless_update_network_gpu	src/network.c	/^void harmless_update_network_gpu(network *netp)$/;"	f
hasNaN	plugin/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::hasNaN() const$/;"	f	class:Eigen::DenseBase
has_ReturnType	plugin/Eigen/src/Core/util/Meta.h	/^struct has_ReturnType$/;"	s	namespace:Eigen::internal
has_binary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_binary_operator	plugin/Eigen/src/Core/util/Meta.h	/^struct has_binary_operator$/;"	s	namespace:Eigen::internal
has_denorm	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const float_denorm_style has_denorm = denorm_present;$/;"	m	struct:std::numeric_limits
has_denorm_loss	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_denorm_loss = false;$/;"	m	struct:std::numeric_limits
has_direct_access	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { has_direct_access = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon393
has_direct_access	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct has_direct_access$/;"	s	namespace:Eigen::internal
has_infinity	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_infinity = true;$/;"	m	struct:std::numeric_limits
has_none	plugin/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	s	namespace:Eigen::internal
has_nullary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_nullary_operator	plugin/Eigen/src/Core/util/Meta.h	/^struct has_nullary_operator$/;"	s	namespace:Eigen::internal
has_quiet_NaN	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_quiet_NaN = true;$/;"	m	struct:std::numeric_limits
has_signaling_NaN	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool has_signaling_NaN = true;$/;"	m	struct:std::numeric_limits
has_std_result_type	plugin/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	s	namespace:Eigen::internal
has_tr1_result	plugin/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	s	namespace:Eigen::internal
has_unary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 1}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	s	namespace:Eigen::internal
has_unary_operator	plugin/Eigen/src/Core/util/Meta.h	/^struct has_unary_operator$/;"	s	namespace:Eigen::internal
has_write_access	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^         has_write_access = (traits<Derived>::Flags & LvalueBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon393
hash	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct hash<Eigen::half> {$/;"	s	namespace:std
hash	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash ;  \/* hash value, if col is not in a degree list *\/$/;"	m	union:internal::colamd_col::__anon124
hash_next	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType hash_next ;   \/* next column, if col is in a hash list *\/$/;"	m	union:internal::colamd_col::__anon125
hd	src/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon12::__anon13
head	plugin/Eigen/src/plugins/BlockMethods.h	/^head(NType n) const$/;"	f
head	plugin/Eigen/src/plugins/BlockMethods.h	/^head(NType n)$/;"	f
head	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type head(Index n = N) const$/;"	f
head	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type head(Index n = N)$/;"	f
headhash	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType headhash ;  \/* head of a hash bucket, if col is at the head of *\/$/;"	m	union:internal::colamd_col::__anon124
heap_relax_snode	plugin/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::heap_relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
helper	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_left_product_refactoring_helper<Lhs,typename Rhs::NestedExpression> helper;$/;"	t	struct:Eigen::internal::product_evaluator
helper	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef homogeneous_right_product_refactoring_helper<typename Lhs::NestedExpression,Rhs> helper;$/;"	t	struct:Eigen::internal::product_evaluator
hessenbergTriangular	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    void RealQZ<MatrixType>::hessenbergTriangular()$/;"	f	class:Eigen::RealQZ
hh_cpu	include/darknet.h	/^    float *hh_cpu;$/;"	m	struct:layer
hh_gpu	include/darknet.h	/^    float *hh_gpu;$/;"	m	struct:layer
hidden	include/darknet.h	/^    int hidden;$/;"	m	struct:layer
hierarchy	include/darknet.h	/^    tree *hierarchy;$/;"	m	struct:load_args
hierarchy	include/darknet.h	/^    tree *hierarchy;$/;"	m	struct:network
hierarchy_predictions	src/tree.c	/^void hierarchy_predictions(float *predictions, int n, tree *hier, int only_leaves, int stride)$/;"	f
hierarchy_top_prediction	src/tree.c	/^int hierarchy_top_prediction(float *predictions, tree *hier, float thresh, int stride)$/;"	f
highest	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half highest() {$/;"	f	struct:Eigen::NumTraits
hnormalized	plugin/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::hnormalized() const$/;"	f	class:Eigen::MatrixBase
hnormalized	plugin/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::hnormalized() const$/;"	f	class:Eigen::VectorwiseOp
hold_out_matrix	src/matrix.c	/^matrix hold_out_matrix(matrix *m, int n)$/;"	f
homogeneous	plugin/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::homogeneous() const$/;"	f	class:Eigen::MatrixBase
homogeneous	plugin/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::homogeneous() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous_left_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC homogeneous_left_product_impl(const Lhs& lhs, const MatrixType& rhs)$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
homogeneous_left_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs>$/;"	s	namespace:Eigen::internal
homogeneous_left_product_refactoring_helper	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_refactoring_helper$/;"	s	namespace:Eigen::internal
homogeneous_right_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC homogeneous_right_product_impl(const MatrixType& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
homogeneous_right_product_impl	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs>$/;"	s	namespace:Eigen::internal
homogeneous_right_product_refactoring_helper	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_refactoring_helper$/;"	s	namespace:Eigen::internal
householder	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    const MatrixType& householder() const { return m_householder; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderCoefficients	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const CoeffVectorType& householderCoefficients() const$/;"	f	class:Eigen::HessenbergDecomposition
householderCoefficients	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline CoeffVectorType householderCoefficients() const$/;"	f	class:Eigen::Tridiagonalization
householderQ	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^  ::householderQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
householderQ	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::householderQ() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
householderQ	plugin/Eigen/src/QR/HouseholderQR.h	/^    HouseholderSequenceType householderQ() const$/;"	f	class:Eigen::HouseholderQR
householderQr	plugin/Eigen/src/QR/HouseholderQR.h	/^MatrixBase<Derived>::householderQr() const$/;"	f	class:Eigen::MatrixBase
householderSequence	plugin/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType> householderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
householderU	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderUSequenceType householderU() const$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderV	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderVSequenceType householderV() \/\/ const here gives nasty errors and i'm lazy$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder_qr_inplace_blocked	plugin/Eigen/src/QR/HouseholderQR.h	/^struct householder_qr_inplace_blocked$/;"	s	namespace:Eigen::internal
householder_qr_inplace_unblocked	plugin/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_unblocked(MatrixQR& mat, HCoeffs& hCoeffs, typename MatrixQR::Scalar* tempData = 0)$/;"	f	namespace:Eigen::internal
hs	src/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon14
hseq_side_dependent_impl	plugin/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl$/;"	s	namespace:Eigen::internal
hseq_side_dependent_impl	plugin/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl<VectorsType, CoeffsType, OnTheRight>$/;"	s	namespace:Eigen::internal
hsv_to_rgb	src/image.c	/^void hsv_to_rgb(image im)$/;"	f
hue	include/darknet.h	/^    float hue;$/;"	m	struct:load_args
hue	include/darknet.h	/^    float hue;$/;"	m	struct:network
hue_image	src/image.c	/^void hue_image(image im, float hue)$/;"	f
huff_ac	src/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon12
huff_dc	src/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon12
hypot	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::numext
hypotNorm	plugin/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::hypotNorm() const$/;"	f	class:Eigen::MatrixBase
hypotNorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const HypotNormReturnType hypotNorm() const$/;"	f	class:Eigen::VectorwiseOp
hypot_impl	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^struct hypot_impl$/;"	s	namespace:Eigen::internal
hypot_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct hypot_retval$/;"	s	namespace:Eigen::internal
i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  int32_t   i[4];$/;"	m	union:Eigen::internal::__anon612
i_cpu	include/darknet.h	/^    float *i_cpu;$/;"	m	struct:layer
i_gpu	include/darknet.h	/^    float *i_gpu;$/;"	m	struct:layer
icc_11_workaround	plugin/Eigen/src/Geometry/Transform.h	/^  template<int OtherMode,int OtherOptions> struct icc_11_workaround$/;"	s	class:Eigen::Transform
id	include/darknet.h	/^    int id;$/;"	m	struct:__anon738
id	src/stb_image.h	/^      int id;$/;"	m	struct:__anon12::__anon13
idata	src/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon18
idct_block_kernel	src/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon12
ignore_unused_variable	plugin/Eigen/src/Core/util/Macros.h	/^    template<typename T> EIGEN_DEVICE_FUNC void ignore_unused_variable(const T&) {}$/;"	f	namespace:Eigen::internal
im	examples/detector-scipy-opencv.py	/^im = array_to_image(arr)$/;"	v
im	include/darknet.h	/^    image *im;$/;"	m	struct:load_args
im2col_cpu	src/im2col.c	/^void im2col_cpu(float* data_im,$/;"	f
im2col_cpu_quant	src/im2col.c	/^void im2col_cpu_quant(float* data_im,$/;"	f
im2col_get_pixel	src/im2col.c	/^float im2col_get_pixel(float *im, int height, int width, int channels,$/;"	f
imag	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() const { return ImagReturnType(derived()); }$/;"	f
imag	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() { return NonConstImagReturnType(derived()); }$/;"	f
imag_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl$/;"	s	namespace:Eigen::internal
imag_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
imag_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_impl<std::complex<T> >$/;"	s	namespace:Eigen::internal
imag_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct imag_impl : imag_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
imag_ref	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref	plugin/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
imag_ref_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl$/;"	s	namespace:Eigen::internal
imag_ref_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
imag_ref_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_impl : imag_ref_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
imag_ref_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_retval$/;"	s	namespace:Eigen::internal
imag_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct imag_retval$/;"	s	namespace:Eigen::internal
image	include/darknet.h	/^} image;$/;"	t	typeref:struct:__anon733
image	plugin/Eigen/src/LU/FullPivLU.h	/^      image(const MatrixType& originalMatrix) const$/;"	f	class:Eigen::FullPivLU
image_denormalize	src/zcu102_api.cpp	/^static image_denormalize(image *im)$/;"	f	file:
image_distance	src/image.c	/^image image_distance(image a, image b)$/;"	f
image_ids	scripts/voc_label.py	/^    image_ids = open('VOCdevkit\/VOC%s\/ImageSets\/Main\/%s.txt'%(year, image_set)).read().strip().split()$/;"	v
image_ids	voc_label.py	/^    image_ids = open('VOCdevkit\/VOC%s\/ImageSets\/Main\/%s.txt'%(year, image_set)).read().strip().split()$/;"	v
image_normalization	src/zcu102_api.cpp	/^static float *image_normalization(void *p, int w, int h, int c)$/;"	f	file:
image_retval	plugin/Eigen/src/LU/FullPivLU.h	/^struct image_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
image_retval_base	plugin/Eigen/src/misc/Image.h	/^  image_retval_base(const DecompositionType& dec, const MatrixType& originalMatrix)$/;"	f	struct:Eigen::internal::image_retval_base
image_retval_base	plugin/Eigen/src/misc/Image.h	/^template<typename _DecompositionType> struct image_retval_base$/;"	s	namespace:Eigen::internal
img_buffer	src/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon9
img_buffer_end	src/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon9
img_buffer_original	src/stb_image.h	/^   stbi_uc *img_buffer_original;$/;"	m	struct:__anon9
img_comp	src/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon12	typeref:struct:__anon12::__anon13
img_h_max	src/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon12
img_mcu_h	src/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon12
img_mcu_w	src/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon12
img_mcu_x	src/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon12
img_mcu_y	src/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon12
img_n	src/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon9
img_out_n	src/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon9
img_v_max	src/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon12
img_x	src/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon9
img_y	src/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon9
impl	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const linspaced_op_impl<Scalar,PacketType,NumTraits<Scalar>::IsInteger> impl;$/;"	m	struct:Eigen::internal::linspaced_op
incrObject	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  const IncrType&  incrObject()  const { return m_incr; }$/;"	f	class:Eigen::ArithmeticSequence
incrementToNonZero	plugin/Eigen/src/SparseCore/SparseView.h	/^        void incrementToNonZero()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
increment_layer	src/crnn_layer.c	/^static void increment_layer(layer *l, int steps)$/;"	f	file:
increment_layer	src/gru_layer.c	/^static void increment_layer(layer *l, int steps)$/;"	f	file:
increment_layer	src/lstm_layer.c	/^static void increment_layer(layer *l, int steps)$/;"	f	file:
increment_layer	src/rnn_layer.c	/^static void increment_layer(layer *l, int steps)$/;"	f	file:
index	include/darknet.h	/^    int index;$/;"	m	struct:layer
index	include/darknet.h	/^    int index;$/;"	m	struct:network
index	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const           { return m_iter.index(); }$/;"	f	class:Eigen::InnerIterator
index	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index index() const { return m_inner; }$/;"	f	class:Eigen::internal::inner_iterator_selector
index	plugin/Eigen/src/Core/Diagonal.h	/^    inline Index index() const$/;"	f	class:Eigen::Diagonal
index	plugin/Eigen/src/Core/Redux.h	/^    index = Start * redux_traits<Func, Derived>::PacketSize,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon376
index	plugin/Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex index;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
index	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex index() const { return m_cachedIndex; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
index	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline StorageIndex& index(Index i) { eigen_internal_assert(m_indices!=0); return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const StorageIndex& index(Index i) const { eigen_internal_assert(m_indices!=0); return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return EvalIterator::index() - convert_index<StorageIndex>(IsRowMajor ? m_block.startCol() : m_block.startRow()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
index	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline StorageIndex index() const { return convert_index<StorageIndex>(m_outerPos - (IsRowMajor ? m_eval.m_block.startCol() : m_eval.m_block.startRow())); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
index	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
index	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex index() const { return m_indices[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_lhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE StorageIndex index() const { return m_rhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline StorageIndex index() const  { return m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      inline StorageIndex index() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	plugin/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE StorageIndex index() const { return m_inner; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
index	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index index() const { return m_matrix.rowIndex()[m_idrow]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
index	src/box.c	/^    int index;$/;"	m	struct:__anon4	file:
index	src/parser.c	/^    int index;$/;"	m	struct:size_params	file:
indexPtr	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    StorageIndex* indexPtr() { return m_indices; }$/;"	f	class:Eigen::internal::CompressedStorage
indexPtr	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    const StorageIndex* indexPtr() const { return m_indices; }$/;"	f	class:Eigen::internal::CompressedStorage
indexes	include/darknet.h	/^    int   * indexes;$/;"	m	struct:layer
indexes_gpu	include/darknet.h	/^    int *indexes_gpu;$/;"	m	struct:layer
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationWrapper
indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	plugin/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	plugin/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	plugin/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	plugin/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
infinity	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half infinity() {$/;"	f	struct:Eigen::NumTraits
infinity	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half infinity() { return Eigen::half_impl::raw_uint16_to_half(0x7c00); }$/;"	f	struct:std::numeric_limits
infinity	plugin/Eigen/src/Core/util/Meta.h	/^  static T infinity() { assert(false && "Infinity not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
infinity	plugin/Eigen/src/Core/util/Meta.h	/^  static double infinity() { return CUDART_INF; }$/;"	f	struct:Eigen::internal::device::numeric_limits
infinity	plugin/Eigen/src/Core/util/Meta.h	/^  static float infinity() { return CUDART_INF_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
info	plugin/Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LDLT
info	plugin/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LLT
info	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::CholmodBase
info	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexEigenSolver
info	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexSchur
info	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::EigenSolver
info	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::GeneralizedEigenSolver
info	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo info() const$/;"	f	class:Eigen::RealQZ
info	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::RealSchur
info	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
info	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::DiagonalPreconditioner
info	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::IdentityPreconditioner
info	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    ComputationInfo info() { return Success; }$/;"	f	class:Eigen::LeastSquareDiagonalPreconditioner
info	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteCholesky
info	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteLUT
info	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::IterativeSolverBase
info	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::KLU
info	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PastixBase
info	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PardisoImpl
info	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ColPivHouseholderQR
info	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  ComputationInfo info() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
info	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SPQR
info	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SimplicialCholeskyBase
info	plugin/Eigen/src/SparseLU/SparseLU.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseLU
info	plugin/Eigen/src/SparseQR/SparseQR.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SparseQR
info	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SuperLUBase
info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::UmfPackLU
init	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodDecomposition
init	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLDLT
init	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLLT
init	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSupernodalLLT
init	plugin/Eigen/src/Core/Block.h	/^    void init()$/;"	f	class:Eigen::internal::BlockImpl_dense
init	plugin/Eigen/src/Core/Visitor.h	/^  inline void init(const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::coeff_visitor
init	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void init()$/;"	f	class:Eigen::IterativeSolverBase
init	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    void init()$/;"	f	class:Eigen::KLU
init	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLDLT
init	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLLT
init	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLU
init	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::init()$/;"	f	class:Eigen::PastixBase
init	plugin/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(double estimatedDensity)$/;"	f	class:Eigen::internal::AmbiVector
init	plugin/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::init(int mode)$/;"	f	class:Eigen::internal::AmbiVector
init	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperILU
init	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLU
init	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLUBase
init	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void init()$/;"	f	class:Eigen::UmfPackLU
initAcc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(AccPacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(DoublePacketType& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(Scalar& p) { p = Scalar(0); }$/;"	f	class:Eigen::internal::gebp_traits
initAssignment	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void initAssignment(const Other& other)$/;"	f	class:Eigen::SparseMatrix
initFactorization	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void initFactorization(const MatrixType& a)$/;"	f	class:Eigen::SuperLUBase
initFrancisQRStep	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::initFrancisQRStep(Index il, Index iu, const Vector3s& shiftInfo, Index& im, Vector3s& firstHouseholderVector)$/;"	f	class:Eigen::RealSchur
initParallel	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index rows, Index cols, Index depth, Index num_threads)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void initParallel(Index, Index, Index, Index)$/;"	f	class:Eigen::internal::gemm_blocking_space
initParallel	plugin/Eigen/src/Core/products/Parallelizer.h	/^inline void initParallel()$/;"	f	namespace:Eigen
initParallelSession	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void initParallelSession(Index num_threads) const$/;"	f	struct:Eigen::internal::gemm_functor
init_rows_cols	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static IndexType init_rows_cols  \/* returns true if OK, or false otherwise *\/$/;"	f	namespace:internal
init_scoring	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static void init_scoring$/;"	f	namespace:internal
initperfvalues	plugin/Eigen/src/SparseLU/SparseLU.h	/^    void initperfvalues()$/;"	f	class:Eigen::SparseLU
inner	plugin/Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon497
inner	plugin/Eigen/src/Core/AssignEvaluator.h	/^    inner = Index % DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon498
inner	plugin/Eigen/src/Core/Redux.h	/^    inner = Start % Derived::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon374
inner	plugin/Eigen/src/Core/Redux.h	/^    inner = index % int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon376
inner	plugin/Eigen/src/Core/Stride.h	/^    inline Index inner() const { return m_inner.value(); }$/;"	f	class:Eigen::Stride
innerInd	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *innerInd;$/;"	m	struct:Eigen::SluMatrix::__anon35
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerIndexPtr() { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().innerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerIndexPtr()   { return Base::m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerIndexPtr() const { return m_innerIndices; }$/;"	f	class:Eigen::SparseMapBase
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerIndexPtr() { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerIndexPtr() const { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerIndexPtr() { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerIndexPtr() const { return derived().nestedExpression().innerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE StorageIndex* innerIndexPtr() { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const StorageIndex* innerIndexPtr() const { return m_data.indexPtr(); }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* innerNonZeroPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* innerNonZeroPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().innerNonZeroPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* innerNonZeroPtr() { return Base::m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMapBase
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* innerNonZeroPtr() { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* innerNonZeroPtr() { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return derived().nestedExpression().innerNonZeroPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex* innerNonZeroPtr() { return 0; }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline const StorageIndex* innerNonZeroPtr() const { return 0; }$/;"	f	class:Eigen::SparseVector
innerNonZeros	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Eigen::Map<IndexVector> innerNonZeros() { return Eigen::Map<IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerNonZeros	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const  Eigen::Map<const IndexVector> innerNonZeros() const { return Eigen::Map<const IndexVector>(innerNonZeroPtr(), isCompressed()?0:derived().outerSize()); }$/;"	f	class:Eigen::SparseCompressedBase
innerSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const   { return m_dstExpr.innerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
innerSize	plugin/Eigen/src/Core/DenseBase.h	/^    Index innerSize() const$/;"	f	class:Eigen::DenseBase
innerSize	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index innerSize() const { return m_xpr.innerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
innerSize	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
innerSize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
innerSize	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }$/;"	f	class:Eigen::SparseMatrixBase
innerSize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }$/;"	f	class:Eigen::SparseVector
innerSize	plugin/Eigen/src/SparseCore/SparseView.h	/^  inline Index innerSize() const { return m_matrix.innerSize(); }$/;"	f	class:Eigen::SparseView
innerStride	plugin/Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Array
innerStride	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ArrayWrapper
innerStride	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::MatrixWrapper
innerStride	plugin/Eigen/src/Core/Block.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
innerStride	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
innerStride	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
innerStride	plugin/Eigen/src/Core/Diagonal.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Diagonal
innerStride	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
innerStride	plugin/Eigen/src/Core/Map.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Map
innerStride	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Matrix
innerStride	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::NestByValue
innerStride	plugin/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::RefBase
innerStride	plugin/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const$/;"	f	class:Eigen::Reverse
innerStride	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfAdjointView
innerStride	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TransposeImpl
innerStride	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().innerStride(); }$/;"	f	class:Eigen::TriangularBase
innerStride	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
innerVector	plugin/Eigen/src/plugins/BlockMethods.h	/^InnerVectorReturnType innerVector(Index outer)$/;"	f
innerVector	plugin/Eigen/src/plugins/BlockMethods.h	/^const ConstInnerVectorReturnType innerVector(Index outer) const$/;"	f
innerVectors	plugin/Eigen/src/plugins/BlockMethods.h	/^innerVectors(Index outerStart, Index outerSize) const$/;"	f
innerVectors	plugin/Eigen/src/plugins/BlockMethods.h	/^innerVectors(Index outerStart, Index outerSize)$/;"	f
inner_iterator_selector	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &\/*innerSize*\/)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector(const EvaluatorType &eval, const Index &outerId, const Index &innerSize)$/;"	f	class:Eigen::internal::inner_iterator_selector
inner_iterator_selector	plugin/Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IndexBased>$/;"	c	namespace:Eigen::internal
inner_iterator_selector	plugin/Eigen/src/Core/CoreIterators.h	/^class inner_iterator_selector<XprType, IteratorBased>$/;"	c	namespace:Eigen::internal
inner_stride_at_compile_time	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time$/;"	s	namespace:Eigen::internal
inner_stride_at_compile_time	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
inplace_decomposition	plugin/Eigen/src/Cholesky/LLT.h	/^  static bool inplace_decomposition(MatrixType& m)$/;"	f	struct:Eigen::internal::LLT_Traits
inplace_transpose_selector	plugin/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,false,MatchPacketSize> { \/\/ non square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	plugin/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,false> { \/\/ square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	plugin/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true,true> { \/\/ PacketSize x PacketSize$/;"	s	namespace:Eigen::internal
input	include/darknet.h	/^    float *input;$/;"	m	struct:network
input_gate_layer	include/darknet.h	/^    struct layer *input_gate_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_gpu	include/darknet.h	/^    float *input_gpu;$/;"	m	struct:network
input_h_layer	include/darknet.h	/^    struct layer *input_h_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_layer	include/darknet.h	/^    struct layer *input_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_layers	include/darknet.h	/^    int   * input_layers;$/;"	m	struct:layer
input_r_layer	include/darknet.h	/^    struct layer *input_r_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_save_layer	include/darknet.h	/^    struct layer *input_save_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_sizes	include/darknet.h	/^    int   * input_sizes;$/;"	m	struct:layer
input_state_layer	include/darknet.h	/^    struct layer *input_state_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
input_z_layer	include/darknet.h	/^    struct layer *input_z_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
inputs	include/darknet.h	/^    int inputs;$/;"	m	struct:layer
inputs	include/darknet.h	/^    int inputs;$/;"	m	struct:network
inputs	src/parser.c	/^    int inputs;$/;"	m	struct:size_params	file:
insert	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insert(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insert(Index i)$/;"	f	class:Eigen::SparseVector
insert	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseVector
insert	plugin/Eigen/src/StlSupport/StdDeque.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::deque
insert	plugin/Eigen/src/StlSupport/StdDeque.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::deque
insert	plugin/Eigen/src/StlSupport/StdList.h	/^    iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::list
insert	plugin/Eigen/src/StlSupport/StdList.h	/^    void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::list
insert	plugin/Eigen/src/StlSupport/StdVector.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::vector
insert	plugin/Eigen/src/StlSupport/StdVector.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::vector
insertBack	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBack	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBack(Index i)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInner	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInner	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInnerUnordered	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInnerUnordered	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackUncompressed	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_STRONG_INLINE Scalar& insertBackUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBackUnordered	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackUnordered(Index i)$/;"	f	class:Eigen::SparseVector
insertByOuterInner	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar& insertByOuterInner(Index j, Index i)$/;"	f	class:Eigen::SparseMatrix
insertCompressed	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insertCompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertUncompressed	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE typename SparseMatrix<_Scalar,_Options,_StorageIndex>::Scalar& SparseMatrix<_Scalar,_Options,_StorageIndex>::insertUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
int_to_alphanum	src/utils.c	/^char int_to_alphanum(int i)$/;"	f
inter_cpu	src/blas.c	/^void inter_cpu(int NX, float *X, int NY, float *Y, int B, float *OUT)$/;"	f
internal	plugin/Eigen/src/Cholesky/LDLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Cholesky/LLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Cholesky/LLT.h	/^namespace internal{$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Cholesky/LLT_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ArithmeticSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Array.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ArrayWrapper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/AssignEvaluator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Assign_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/BandMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Block.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/BooleanRedux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ConditionEstimator.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CoreEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CoreIterators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/CwiseUnaryView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/DenseBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/DenseStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Diagonal.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Dot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Fuzzy.h	/^namespace internal$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/GeneralProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/GenericPacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/GlobalFunctions.h	/^  namespace internal$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/IO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/IndexedView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Inverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Map.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Matrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/NestByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/NumTraits.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/PermutationMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/PlainObjectBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Product.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ProductEvaluators.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Random.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Redux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Ref.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Replicate.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/ReturnByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Reverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Select.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/SelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Solve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/SolveTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/SolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/StableNorm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Swap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Transpose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Transpositions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/TriangularMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/VectorBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/VectorwiseOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/Visitor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/NEON/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/StlFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/TernaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/GeneralMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/Parallelizer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularSolverMatrix_BLAS.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/BlasUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/Constants.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^namespace internal {$/;"	n	namespace:Eigen::placeholders
internal	plugin/Eigen/src/Core/util/IntegralConstant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/Macros.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/Macros.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/StaticAssert.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Core/util/XprHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/AngleAxis.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Homogeneous.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/OrthoMethods.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Quaternion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Rotation2D.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/RotationBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Scaling.h	/^namespace internal$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Transform.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/Umeyama.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Householder/BlockHouseholder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Householder/Householder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Householder/HouseholderSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/Jacobi/Jacobi.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/Determinant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/FullPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/InverseImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/PartialPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/PartialPivLU_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/OrderingMethods/Amd.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^namespace internal {$/;"	n
internal	plugin/Eigen/src/OrderingMethods/Ordering.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/QR/HouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/QR/HouseholderQR_LAPACKE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SVD/BDCSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SVD/JacobiSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/AmbiVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseAssign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseMap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseRef.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/SparseView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLUImpl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_Utils.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_column_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_pivotL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_pruneL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SparseQR/SparseQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/StlSupport/details.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/misc/Image.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/misc/Kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	plugin/Eigen/src/misc/RealSvd2x2.h	/^namespace internal {$/;"	n	namespace:Eigen
intersection	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox intersection(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intersection	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC VectorType intersection(const Hyperplane& other) const$/;"	f	class:Eigen::Hyperplane
intersection	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersection(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionParameter	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^EIGEN_DEVICE_FUNC inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionParameter(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionPoint	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionPoint(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersects	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool intersects(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
inverse	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inverse() const$/;"	f	class:Eigen::DiagonalBase
inverse	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline InverseReturnType inverse() const$/;"	f	class:Eigen::PermutationBase
inverse	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> inverse() const$/;"	f	class:Eigen::TranspositionsBase
inverse	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const$/;"	f	class:Eigen::QuaternionBase
inverse	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D inverse() const { return Rotation2D(-m_angle); }$/;"	f	class:Eigen::Rotation2D
inverse	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	plugin/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling inverse() const$/;"	f	class:Eigen::UniformScaling
inverse	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::inverse(TransformTraits hint) const$/;"	f	class:Eigen::Transform
inverse	plugin/Eigen/src/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    AdjointReturnType inverse() const { return adjoint(); }$/;"	f	class:Eigen::HouseholderSequence
inverse	plugin/Eigen/src/LU/FullPivLU.h	/^    inline const Inverse<FullPivLU> inverse() const$/;"	f	class:Eigen::FullPivLU
inverse	plugin/Eigen/src/LU/InverseImpl.h	/^inline const Inverse<Derived> MatrixBase<Derived>::inverse() const$/;"	f	class:Eigen::MatrixBase
inverse	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline const Inverse<PartialPivLU> inverse() const$/;"	f	class:Eigen::PartialPivLU
inverse	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline const Inverse<ColPivHouseholderQR> inverse() const$/;"	f	class:Eigen::ColPivHouseholderQR
inverse	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline const Inverse<FullPivHouseholderQR> inverse() const$/;"	f	class:Eigen::FullPivHouseholderQR
inverse	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^inverse() const$/;"	f
inverted	examples/go.c	/^int inverted = 1;$/;"	v
io	src/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon9
io_user_data	src/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon9
iparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<StorageIndex,IPARM_SIZE,1>& iparm()$/;"	f	class:Eigen::PastixBase
iparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int& iparm(int idxparam)$/;"	f	class:Eigen::PastixBase
ipl	src/demo.c	/^static IplImage  * ipl;$/;"	v	file:
ipl_into_image	src/image.c	/^void ipl_into_image(IplImage* src, image im)$/;"	f
ipl_to_image	src/image.c	/^image ipl_to_image(IplImage* src)$/;"	f
isApprox	plugin/Eigen/src/Core/Fuzzy.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isApprox($/;"	f	class:Eigen::DenseBase
isApprox	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(bool x, bool y, bool)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApprox	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	plugin/Eigen/src/Core/MathFunctions.h	/^inline bool isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApprox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const AlignedBox& other, const RealScalar& prec = ScalarTraits::dummy_precision()) const$/;"	f	class:Eigen::AlignedBox
isApprox	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const AngleAxis& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::AngleAxis
isApprox	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Hyperplane
isApprox	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const ParametrizedLine& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const QuaternionBase<OtherDerived>& other, const RealScalar& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::QuaternionBase
isApprox	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Rotation2D& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Rotation2D
isApprox	plugin/Eigen/src/Geometry/Scaling.h	/^  bool isApprox(const UniformScaling& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::UniformScaling
isApprox	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Transform& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Transform
isApprox	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC bool isApprox(const Translation& other, const typename NumTraits<Scalar>::Real& prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Translation
isApprox	plugin/Eigen/src/SparseCore/SparseFuzzy.h	/^bool SparseMatrixBase<Derived>::isApprox(const SparseMatrixBase<OtherDerived>& other, const RealScalar &prec) const$/;"	f	class:Eigen::SparseMatrixBase
isApprox	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApproxOrLessThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const bool& x, const bool& y, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApproxOrLessThan	plugin/Eigen/src/Core/MathFunctions.h	/^inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApproxToConstant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isApproxToConstant$/;"	f	class:Eigen::DenseBase
isApprox_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector$/;"	s	namespace:Eigen::internal
isApprox_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isCompressed	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    bool isCompressed() const { return m_matrix.innerNonZeroPtr()==0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
isCompressed	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline bool isCompressed() const { return innerNonZeroPtr()==0; }$/;"	f	class:Eigen::SparseCompressedBase
isCompressed	plugin/Eigen/src/SparseCore/SparseMap.h	/^    bool isCompressed() const { return m_innerNonZeros==0; }$/;"	f	class:Eigen::SparseMapBase
isConstant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isConstant$/;"	f	class:Eigen::DenseBase
isDiagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^bool MatrixBase<Derived>::isDiagonal(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isEmpty	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool isEmpty() const { return (m_min.array() > m_max.array()).any(); }$/;"	f	class:Eigen::AlignedBox
isFinite	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isFinite() const$/;"	f
isHorizontal	plugin/Eigen/src/Core/VectorwiseOp.h	/^      isHorizontal = (Direction==Horizontal) ? 1 : 0$/;"	e	enum:Eigen::VectorwiseOp::__anon382
isIdentity	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^bool MatrixBase<Derived>::isIdentity$/;"	f	class:Eigen::MatrixBase
isInf	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isInf() const$/;"	f
isInjective	plugin/Eigen/src/LU/FullPivLU.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivLU
isInjective	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInjective	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isInjective() const { return m_cpqr.isInjective(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isInjective	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isInvertible	plugin/Eigen/src/LU/FullPivLU.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivLU
isInvertible	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInvertible	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isInvertible() const { return m_cpqr.isInvertible(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isInvertible	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivHouseholderQR
isLowerTriangular	plugin/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isLowerTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isMuchSmallerThan	plugin/Eigen/src/Core/Fuzzy.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isMuchSmallerThan($/;"	f	class:Eigen::DenseBase
isMuchSmallerThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const Scalar&, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const bool& x, const bool&, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isMuchSmallerThan	plugin/Eigen/src/Core/MathFunctions.h	/^inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen::internal
isMuchSmallerThan_object_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_object_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	plugin/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector<Derived, true>$/;"	s	namespace:Eigen::internal
isNaN	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^isNaN() const$/;"	f
isNegative	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline bool isNegative(void) const$/;"	f	class:Eigen::LDLT
isNull	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline bool isNull() const { return isEmpty(); }$/;"	f	class:Eigen::AlignedBox
isOnes	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isOnes$/;"	f	class:Eigen::DenseBase
isOrthogonal	plugin/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isOrthogonal$/;"	f	class:Eigen::MatrixBase
isPositive	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositive() const$/;"	f	class:Eigen::LDLT
isRValue	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isRValue() const { return m_isRValue; }$/;"	f	class:Eigen::SparseMatrixBase
isSurjective	plugin/Eigen/src/LU/FullPivLU.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivLU
isSurjective	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isSurjective	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline bool isSurjective() const { return m_cpqr.isSurjective(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
isSurjective	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isSymmetric	plugin/Eigen/src/SparseLU/SparseLU.h	/^    void isSymmetric(bool sym)$/;"	f	class:Eigen::SparseLU
isUnitary	plugin/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isUnitary(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isUpperTriangular	plugin/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isUpperTriangular(const RealScalar& prec) const$/;"	f	class:Eigen::MatrixBase
isVector	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline bool isVector() const { return rows()==1 || cols()==1; }$/;"	f	class:Eigen::SparseMatrixBase
isVertical	plugin/Eigen/src/Core/VectorwiseOp.h	/^      isVertical   = (Direction==Vertical) ? 1 : 0,$/;"	e	enum:Eigen::VectorwiseOp::__anon382
isZero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC bool DenseBase<Derived>::isZero(const RealScalar& prec) const$/;"	f	class:Eigen::DenseBase
is_arithmetic	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512> {$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512d> {$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct is_arithmetic<__m512i> {$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct is_arithmetic<half> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct is_arithmetic<half2> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_bounded	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_bounded = false;$/;"	m	struct:std::numeric_limits
is_const	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_const	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_convertible	plugin/Eigen/src/Core/util/Meta.h	/^struct is_convertible$/;"	s	namespace:Eigen::internal
is_convertible_impl	plugin/Eigen/src/Core/util/Meta.h	/^struct is_convertible_impl$/;"	s	namespace:Eigen::internal
is_dynamic_size_storage	plugin/Eigen/src/Core/Matrix.h	/^      is_dynamic_size_storage = _MaxRows==Dynamic || _MaxCols==Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon676
is_exact	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_exact = false;$/;"	m	struct:std::numeric_limits
is_iec559	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_iec559 = false;$/;"	m	struct:std::numeric_limits
is_integer	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_integer = false;$/;"	m	struct:std::numeric_limits
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<bool>                   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<char>                   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed char>            { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed int>             { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed long>            { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed short>           { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned int>           { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned long>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned short>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_integral	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_integral               { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_large	plugin/Eigen/src/Core/GeneralProduct.h	/^    is_large = MaxSize == Dynamic ||$/;"	e	enum:Eigen::internal::product_size_category::__anon527
is_malloc_allowed	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }$/;"	f	namespace:Eigen::internal
is_malloc_allowed_impl	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool is_malloc_allowed_impl(bool update, bool new_value = false)$/;"	f	namespace:Eigen::internal
is_modulo	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_modulo = false;$/;"	m	struct:std::numeric_limits
is_network	src/parser.c	/^int is_network(section *s)$/;"	f
is_ref_compatible	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct is_ref_compatible$/;"	s	namespace:Eigen::internal
is_ref_compatible_impl	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct is_ref_compatible_impl$/;"	s	namespace:Eigen::internal
is_row_major	plugin/Eigen/src/Core/ProductEvaluators.h	/^  template<typename T> struct is_row_major : internal::conditional<(int(T::Flags)&RowMajorBit), internal::true_type, internal::false_type>::type {};$/;"	s	struct:Eigen::internal::generic_product_impl
is_same	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_same	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_signed	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_signed = true;$/;"	m	struct:std::numeric_limits
is_specialized	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool is_specialized = true;$/;"	m	struct:std::numeric_limits
is_symbolic	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^struct is_symbolic {$/;"	s	namespace:Eigen::Symbolic
is_symbolic	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^struct is_symbolic<T (*)()> {$/;"	s	namespace:Eigen::Symbolic
is_valid_index_type	plugin/Eigen/src/Core/util/XprHelper.h	/^template<typename T> struct is_valid_index_type$/;"	s	namespace:Eigen::internal
isfinite	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  isfinite(double x) { return cl::sycl::isfinite(x); }$/;"	f	namespace:Eigen::numext
isfinite	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   isfinite(float x) { return cl::sycl::isfinite(x); }$/;"	f	namespace:Eigen::numext
isfinite	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isfinite)(const T &x) { return internal::isfinite_impl(x); }$/;"	f	namespace:Eigen::numext
isfinite	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isfinite)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isfinite	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^bool (isfinite)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isfinite_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isfinite_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isfinite_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isfinite_impl(const T& x)$/;"	f	namespace:Eigen::internal
isfinite_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isfinite_impl(const T&) { return true; }$/;"	f	namespace:Eigen::internal
isinf	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  isinf(double x) { return cl::sycl::isinf(x); }$/;"	f	namespace:Eigen::numext
isinf	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   isinf(float x) { return cl::sycl::isinf(x); }$/;"	f	namespace:Eigen::numext
isinf	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isinf)   (const T &x) { return internal::isinf_impl(x); }$/;"	f	namespace:Eigen::numext
isinf	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isinf)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isinf	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^bool (isinf)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isinf_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const double& x)      { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const float& x)       { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isinf_impl(const long double& x) { return isinf_msvc_helper(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isinf_impl(const T& x)$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isinf_impl(const T&) { return false; }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const double& x)      { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const float& x)       { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isinf_impl(const long double& x) { return __builtin_isinf(x); }$/;"	f	namespace:Eigen::internal
isinf_msvc_helper	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool isinf_msvc_helper(T x)$/;"	f	namespace:Eigen::internal
isnan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  isnan(double x) { return cl::sycl::isnan(x); }$/;"	f	namespace:Eigen::numext
isnan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   isnan(float x) { return cl::sycl::isnan(x); }$/;"	f	namespace:Eigen::numext
isnan	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> EIGEN_DEVICE_FUNC bool (isnan)   (const T &x) { return internal::isnan_impl(x); }$/;"	f	namespace:Eigen::numext
isnan	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC bool (isnan)(const half& a) {$/;"	f	namespace:Eigen::half_impl
isnan	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^bool (isnan)(const Eigen::half& h) {$/;"	f	namespace:Eigen::numext
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC bool isnan_impl(const std::complex<T>& x)$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const double& x)      { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const float& x)       { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_DEVICE_FUNC inline bool isnan_impl(const long double& x) { return _isnan(x)!=0; }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isnan_impl(const T& x)$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^isnan_impl(const T&) { return false; }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const double& x)      { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const float& x)       { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
isnan_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> EIGEN_TMP_NOOPT_ATTRIB bool isnan_impl(const long double& x) { return __builtin_isnan(x); }$/;"	f	namespace:Eigen::internal
iterations	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Index iterations() const$/;"	f	class:Eigen::RealQZ
iterations	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index iterations() const$/;"	f	class:Eigen::IterativeSolverBase
ivcCol	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^ivcCol(const Indices& indices) const {$/;"	f
ivcRow	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^ivcRow(const Indices& indices) const {$/;"	f
ivcSize	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^ivcSize(const Indices& indices) const {$/;"	f
j	src/network.c	/^    int j;$/;"	m	struct:__anon2	file:
jacobiSvd	plugin/Eigen/src/SVD/JacobiSVD.h	/^MatrixBase<Derived>::jacobiSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
jitter	include/darknet.h	/^    float jitter;$/;"	m	struct:layer
jitter	include/darknet.h	/^    float jitter;$/;"	m	struct:load_args
joint	include/darknet.h	/^    int joint;$/;"	m	struct:layer
kappa	include/darknet.h	/^    float kappa;$/;"	m	struct:layer
kc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index kc() const { return m_kc; }$/;"	f	class:Eigen::internal::level3_blocking
keep_diag	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    struct keep_diag {$/;"	s	class:Eigen::IncompleteLUT
keep_diag	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    struct keep_diag {$/;"	s	class:Eigen::SimplicialCholeskyBase
kernel	plugin/Eigen/src/LU/FullPivLU.h	/^    inline const internal::kernel_retval<FullPivLU> kernel() const$/;"	f	class:Eigen::FullPivLU
kernel_retval	plugin/Eigen/src/LU/FullPivLU.h	/^struct kernel_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
kernel_retval_base	plugin/Eigen/src/misc/Kernel.h	/^  explicit kernel_retval_base(const DecompositionType& dec)$/;"	f	struct:Eigen::internal::kernel_retval_base
kernel_retval_base	plugin/Eigen/src/misc/Kernel.h	/^template<typename _DecompositionType> struct kernel_retval_base$/;"	s	namespace:Eigen::internal
key	src/option_list.h	/^    char *key;$/;"	m	struct:__anon5
kluCommon	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    inline const klu_common& kluCommon() const$/;"	f	class:Eigen::KLU
kluCommon	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    inline klu_common& kluCommon()$/;"	f	class:Eigen::KLU
klu_factor	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline klu_numeric* klu_factor(int Ap [ ], int Ai [ ], double Ax [ ], klu_symbolic *Symbolic, klu_common *Common, double) {$/;"	f	namespace:Eigen
klu_factor	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline klu_numeric* klu_factor(int Ap[], int Ai[], std::complex<double> Ax[], klu_symbolic *Symbolic, klu_common *Common, std::complex<double>) {$/;"	f	namespace:Eigen
klu_solve	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline int klu_solve(klu_symbolic *Symbolic, klu_numeric *Numeric, Index ldim, Index nrhs, double B [ ], klu_common *Common, double) {$/;"	f	namespace:Eigen
klu_solve	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline int klu_solve(klu_symbolic *Symbolic, klu_numeric *Numeric, Index ldim, Index nrhs, std::complex<double>B[], klu_common *Common, std::complex<double>) {$/;"	f	namespace:Eigen
klu_tsolve	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline int klu_tsolve(klu_symbolic *Symbolic, klu_numeric *Numeric, Index ldim, Index nrhs, double B[], klu_common *Common, double) {$/;"	f	namespace:Eigen
klu_tsolve	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^inline int klu_tsolve(klu_symbolic *Symbolic, klu_numeric *Numeric, Index ldim, Index nrhs, std::complex<double>B[], klu_common *Common, std::complex<double>) {$/;"	f	namespace:Eigen
kvp	src/option_list.h	/^} kvp;$/;"	t	typeref:struct:__anon5
l	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  int64_t   l[2];$/;"	m	union:Eigen::internal::__anon612
l1CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l1CacheSize()$/;"	f	namespace:Eigen
l1_cpu	src/blas.c	/^void l1_cpu(int n, float *pred, float *truth, float *delta, float *error)$/;"	f
l2CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l2CacheSize()$/;"	f	namespace:Eigen
l2_cpu	src/blas.c	/^void l2_cpu(int n, float *pred, float *truth, float *delta, float *error)$/;"	f
l3CacheSize	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l3CacheSize()$/;"	f	namespace:Eigen
label_classifier	examples/classifier.c	/^void label_classifier(char *datacfg, char *filename, char *weightfile)$/;"	f
labels	include/darknet.h	/^    char **labels;$/;"	m	struct:load_args
lapack_complex_double	plugin/Eigen/src/misc/lapacke.h	92;"	d
lapack_complex_double_imag	plugin/Eigen/src/misc/lapacke.h	100;"	d
lapack_complex_double_real	plugin/Eigen/src/misc/lapacke.h	96;"	d
lapack_complex_float	plugin/Eigen/src/misc/lapacke.h	76;"	d
lapack_complex_float_imag	plugin/Eigen/src/misc/lapacke.h	84;"	d
lapack_complex_float_real	plugin/Eigen/src/misc/lapacke.h	80;"	d
lapack_int	plugin/Eigen/src/misc/lapacke.h	49;"	d
lapack_logical	plugin/Eigen/src/misc/lapacke.h	53;"	d
last	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^static const Symbolic::SymbolExpr<internal::symbolic_last_tag> last;$/;"	m	namespace:Eigen::placeholders
lastCoeff	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
lastErrorMessage	plugin/Eigen/src/SparseLU/SparseLU.h	/^    std::string lastErrorMessage() const$/;"	f	class:Eigen::SparseLU
lastErrorMessage	plugin/Eigen/src/SparseQR/SparseQR.h	/^    std::string lastErrorMessage() const { return m_lastError; }$/;"	f	class:Eigen::SparseQR
layer	include/darknet.h	/^struct layer{$/;"	s
layer	include/darknet.h	/^typedef struct layer layer;$/;"	t	typeref:struct:layer
layer_names	src/network.c	/^static char *layer_names[] =$/;"	v	file:
layers	include/darknet.h	/^    layer *layers;$/;"	m	struct:network
lazyAssign	plugin/Eigen/src/Core/Assign.h	/^  ::lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
lazyAssign	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
lazyAssign	plugin/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyAssign	plugin/Eigen/src/Core/TriangularMatrix.h	/^EIGEN_DEVICE_FUNC void TriangularViewImpl<MatrixType, Mode, Dense>::lazyAssign(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
lazyProduct	plugin/Eigen/src/Core/GeneralProduct.h	/^EIGEN_DEVICE_FUNC MatrixBase<Derived>::lazyProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
lazyproduct	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef generic_product_impl<Lhs,Rhs,DenseShape,DenseShape,CoeffBasedProductMode> lazyproduct;$/;"	t	struct:Eigen::internal::generic_product_impl
lda	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon35::__anon36
ldlt	plugin/Eigen/src/Cholesky/LDLT.h	/^MatrixBase<Derived>::ldlt() const$/;"	f	class:Eigen::MatrixBase
ldlt	plugin/Eigen/src/Cholesky/LDLT.h	/^SelfAdjointView<MatrixType, UpLo>::ldlt() const$/;"	f	class:Eigen::SelfAdjointView
ldlt_inplace	plugin/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Lower>$/;"	s	namespace:Eigen::internal
ldlt_inplace	plugin/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Upper>$/;"	s	namespace:Eigen::internal
leaf	include/darknet.h	/^    int *leaf;$/;"	m	struct:__anon725
leaky_activate	src/activations.h	/^static inline float leaky_activate(float x){return (x>0) ? x : .1*x;}$/;"	f
leaky_gradient	src/activations.h	/^static inline float leaky_gradient(float x){return (x>0) ? 1 : .1;}$/;"	f
learning_rate	include/darknet.h	/^    float learning_rate;$/;"	m	struct:__anon730
learning_rate	include/darknet.h	/^    float learning_rate;$/;"	m	struct:network
learning_rate_policy	include/darknet.h	/^} learning_rate_policy;$/;"	t	typeref:enum:__anon731
learning_rate_scale	include/darknet.h	/^    float learning_rate_scale;$/;"	m	struct:layer
least_square_conjugate_gradient	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^void least_square_conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
left	include/darknet.h	/^    float left, right, top, bottom;$/;"	m	struct:__anon738
leftCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type leftCols(Index n = N) const$/;"	f
leftCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type leftCols(Index n = N)$/;"	f
leftCols	plugin/Eigen/src/plugins/BlockMethods.h	/^leftCols(NColsType n) const$/;"	f
leftCols	plugin/Eigen/src/plugins/BlockMethods.h	/^leftCols(NColsType n)$/;"	f
legal_go	examples/go.c	/^int legal_go(float *b, float *ko, int p, int r, int c)$/;"	f
length	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index length() const { return m_length; }  \/**< \\brief Returns the length of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
length	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of principal columns in this row *\/$/;"	m	struct:internal::Colamd_Row
length	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType length ;  \/* number of rows in this column *\/$/;"	m	struct:internal::colamd_col
length	src/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon17
letterbox_image	python/darknet.py	/^letterbox_image = lib.letterbox_image$/;"	v
letterbox_image	src/image.c	/^image letterbox_image(image im, int w, int h)$/;"	f
letterbox_image_into	src/image.c	/^void letterbox_image_into(image im, int w, int h, image boxed)$/;"	f
level3_blocking	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    level3_blocking()$/;"	f	class:Eigen::internal::level3_blocking
level3_blocking	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class level3_blocking$/;"	c	namespace:Eigen::internal
lflags	src/stb_image.h	/^   int lflags;$/;"	m	struct:__anon22
lgamma	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^lgamma() const$/;"	f
lhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CwiseBinaryOp
lhs	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const LhsNestedCleaned& lhs() const { return m_lhs; }$/;"	f	class:Eigen::Product
lhsImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<Lhs> lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator::Data
lhs_length	plugin/Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_length;$/;"	m	struct:Eigen::internal::GemmParallelInfo
lhs_start	plugin/Eigen/src/Core/products/Parallelizer.h	/^  Index lhs_start;$/;"	m	struct:Eigen::internal::GemmParallelInfo
lhtan_activate	src/activations.h	/^static inline float lhtan_activate(float x)$/;"	f
lhtan_gradient	src/activations.h	/^static inline float lhtan_gradient(float x)$/;"	f
lib	python/darknet.py	/^lib = CDLL("libdarknet.so", RTLD_GLOBAL)$/;"	v
line0	src/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon14
line1	src/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon14
line_size	src/stb_image.h	/^   int line_size;$/;"	m	struct:__anon22
linear	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstLinearPart linear() const { return ConstLinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linear	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline LinearPart linear() { return LinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linearExt	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt()$/;"	f	class:Eigen::Transform
linearExt	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt() const$/;"	f	class:Eigen::Transform
linear_activate	src/activations.h	/^static inline float linear_activate(float x){return x;}$/;"	f
linear_gradient	src/activations.h	/^static inline float linear_gradient(float x){return 1;}$/;"	f
linebuf	src/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon12::__anon13
linspaced_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op(const Scalar& low, const Scalar& high, Index num_steps)$/;"	f	struct:Eigen::internal::linspaced_op
linspaced_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^template <typename Scalar, typename PacketType> struct linspaced_op$/;"	s	namespace:Eigen::internal
linspaced_op_impl	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  linspaced_op_impl(const Scalar& low, const Scalar& high, Index num_steps) :$/;"	f	struct:Eigen::internal::linspaced_op_impl
linspaced_op_impl	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,\/*IsInteger*\/false>$/;"	s	namespace:Eigen::internal
linspaced_op_impl	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct linspaced_op_impl<Scalar,Packet,\/*IsInteger*\/true>$/;"	s	namespace:Eigen::internal
list	include/darknet.h	/^typedef struct list{$/;"	s
list	include/darknet.h	/^} list;$/;"	t	typeref:struct:list
list	plugin/Eigen/src/StlSupport/StdList.h	/^  class list<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
list_base	plugin/Eigen/src/StlSupport/StdList.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > list_base;$/;"	t	class:std::list
list_file	scripts/voc_label.py	/^    list_file = open('%s_%s.txt'%(year, image_set), 'w')$/;"	v
list_file	voc_label.py	/^    list_file = open('%s_%s.txt'%(year, image_set), 'w')$/;"	v
list_insert	src/list.c	/^void list_insert(list *l, void *val)$/;"	f
list_pop	src/list.c	/^void *list_pop(list *l){$/;"	f
list_to_array	src/list.c	/^void **list_to_array(list *l)$/;"	f
llt	plugin/Eigen/src/Cholesky/LLT.h	/^MatrixBase<Derived>::llt() const$/;"	f	class:Eigen::MatrixBase
llt	plugin/Eigen/src/Cholesky/LLT.h	/^SelfAdjointView<MatrixType, UpLo>::llt() const$/;"	f	class:Eigen::SelfAdjointView
llt_inplace	plugin/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Lower>$/;"	s	namespace:Eigen::internal
llt_inplace	plugin/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Upper>$/;"	s	namespace:Eigen::internal
llt_rank_update_lower	plugin/Eigen/src/Cholesky/LLT.h	/^static Index llt_rank_update_lower(MatrixType& mat, const VectorType& vec, const typename MatrixType::RealScalar& sigma)$/;"	f	namespace:Eigen::internal
load	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet load(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
load	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE PacketT load(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadHalfPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadHalfPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE HalfPacket loadHalfPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadLhsUnaligned	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhsUnaligned(const LhsScalar* a, LhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
loadPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet loadPacket(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
loadRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, DoublePacketType& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, ResPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhsQuad	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhsQuad(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
load_all_cifar10	src/data.c	/^data load_all_cifar10()$/;"	f
load_alphabet	src/image.c	/^image **load_alphabet()$/;"	f
load_args	include/darknet.h	/^typedef struct load_args{$/;"	s
load_args	include/darknet.h	/^} load_args;$/;"	t	typeref:struct:load_args
load_batchnorm_weights	src/parser.c	/^void load_batchnorm_weights(layer l, FILE *fp)$/;"	f
load_categorical_data_csv	src/data.c	/^data load_categorical_data_csv(char *filename, int target, int k)$/;"	f
load_cifar10_data	src/data.c	/^data load_cifar10_data(char *filename)$/;"	f
load_connected_weights	src/parser.c	/^void load_connected_weights(layer l, FILE *fp, int transpose)$/;"	f
load_convolutional_weights	src/parser.c	/^void load_convolutional_weights(layer l, FILE *fp)$/;"	f
load_convolutional_weights_binary	src/parser.c	/^void load_convolutional_weights_binary(layer l, FILE *fp)$/;"	f
load_data	src/data.c	/^pthread_t load_data(load_args args)$/;"	f
load_data_augment	src/data.c	/^data load_data_augment(char **paths, int n, int m, char **labels, int k, tree *hierarchy, int min, int max, int size, float angle, float aspect, float hue, float saturation, float exposure, int center)$/;"	f
load_data_blocking	src/data.c	/^void load_data_blocking(load_args args)$/;"	f
load_data_captcha	src/data.c	/^data load_data_captcha(char **paths, int n, int m, int k, int w, int h)$/;"	f
load_data_captcha_encode	src/data.c	/^data load_data_captcha_encode(char **paths, int n, int m, int w, int h)$/;"	f
load_data_compare	src/data.c	/^data load_data_compare(int n, char **paths, int m, int classes, int w, int h)$/;"	f
load_data_detection	src/data.c	/^data load_data_detection(int n, char **paths, int m, int w, int h, int boxes, int classes, float jitter, float hue, float saturation, float exposure)$/;"	f
load_data_in_thread	src/data.c	/^pthread_t load_data_in_thread(load_args args)$/;"	f
load_data_iseg	src/data.c	/^data load_data_iseg(int n, char **paths, int m, int w, int h, int classes, int boxes, int coords, int min, int max, float angle, float aspect, float hue, float saturation, float exposure)$/;"	f
load_data_old	src/data.c	/^data load_data_old(char **paths, int n, int m, char **labels, int k, int w, int h)$/;"	f
load_data_region	src/data.c	/^data load_data_region(int n, char **paths, int m, int w, int h, int size, int classes, float jitter, float hue, float saturation, float exposure)$/;"	f
load_data_regression	src/data.c	/^data load_data_regression(char **paths, int n, int m, int min, int max, int size, float angle, float aspect, float hue, float saturation, float exposure)$/;"	f
load_data_seg	src/data.c	/^data load_data_seg(int n, char **paths, int m, int w, int h, int classes, int min, int max, float angle, float aspect, float hue, float saturation, float exposure, int div)$/;"	f
load_data_super	src/data.c	/^data load_data_super(char **paths, int n, int m, int w, int h, int scale)$/;"	f
load_data_swag	src/data.c	/^data load_data_swag(char **paths, int n, int classes, float jitter)$/;"	f
load_data_tag	src/data.c	/^data load_data_tag(char **paths, int n, int m, int k, int min, int max, int size, float angle, float aspect, float hue, float saturation, float exposure)$/;"	f
load_data_writing	src/data.c	/^data load_data_writing(char **paths, int n, int m, int w, int h, int out_w, int out_h)$/;"	f
load_files	examples/rnn.c	/^unsigned char **load_files(char *filename, int *n)$/;"	f
load_go	src/data.c	/^data load_go(char *filename)$/;"	f
load_go_moves	examples/go.c	/^moves load_go_moves(char *filename)$/;"	f
load_image	python/darknet.py	/^load_image = lib.load_image_color$/;"	v
load_image	src/image.c	/^image load_image(char *filename, int w, int h, int c)$/;"	f
load_image_augment_paths	src/data.c	/^matrix load_image_augment_paths(char **paths, int n, int min, int max, int size, float angle, float aspect, float hue, float saturation, float exposure, int center)$/;"	f
load_image_color	src/image.c	/^image load_image_color(char *filename, int w, int h)$/;"	f
load_image_cv	src/image.c	/^image load_image_cv(char *filename, int channels)$/;"	f
load_image_paths	src/data.c	/^matrix load_image_paths(char **paths, int n, int w, int h)$/;"	f
load_image_paths_gray	src/data.c	/^matrix load_image_paths_gray(char **paths, int n, int w, int h)$/;"	f
load_image_stb	src/image.c	/^image load_image_stb(char *filename, int channels)$/;"	f
load_jpeg_image	src/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f
load_labels_paths	src/data.c	/^matrix load_labels_paths(char **paths, int n, char **labels, int k, tree *hierarchy)$/;"	f
load_meta	python/darknet.py	/^load_meta = lib.get_metadata$/;"	v
load_net	python/darknet.py	/^load_net = lib.load_network$/;"	v
load_network	src/network.c	/^network *load_network(char *cfg, char *weights, int clear)$/;"	f
load_regression_labels_paths	src/data.c	/^matrix load_regression_labels_paths(char **paths, int n)$/;"	f
load_rle	src/data.c	/^void load_rle(image im, int *rle, int n)$/;"	f
load_tags_paths	src/data.c	/^matrix load_tags_paths(char **paths, int n, int k)$/;"	f
load_thread	src/data.c	/^void *load_thread(void *ptr)$/;"	f
load_threads	src/data.c	/^void *load_threads(void *ptr)$/;"	f
load_weights	src/parser.c	/^void load_weights(network *net, char *filename)$/;"	f
load_weights_upto	src/parser.c	/^void load_weights_upto(network *net, char *filename, int start, int cutoff)$/;"	f
local_layer	src/local_layer.h	/^typedef layer local_layer;$/;"	t
local_out_height	src/local_layer.c	/^int local_out_height(local_layer l)$/;"	f
local_out_width	src/local_layer.c	/^int local_out_width(local_layer l)$/;"	f
log	include/darknet.h	/^    int log;$/;"	m	struct:layer
log	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  log(double x) { return cl::sycl::log(x); }$/;"	f	namespace:Eigen::numext
log	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   log(float x) { return cl::sycl::log(x); }$/;"	f	namespace:Eigen::numext
log	plugin/Eigen/src/Core/MathFunctions.h	/^T log(const T &x) {$/;"	f	namespace:Eigen::numext
log	plugin/Eigen/src/Core/MathFunctions.h	/^double log(const double &x) { return ::log(x); }$/;"	f	namespace:Eigen::numext
log	plugin/Eigen/src/Core/MathFunctions.h	/^float log(const float &x) { return ::logf(x); }$/;"	f	namespace:Eigen::numext
log	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log(const half& a) {$/;"	f	namespace:Eigen::half_impl
log	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log() const$/;"	f
log10	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log10(const half& a) {$/;"	f	namespace:Eigen::half_impl
log10	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log10() const$/;"	f
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^  EIGEN_DEVICE_FUNC inline Scalar log1p(const Scalar& x) {$/;"	f	namespace:Eigen::internal::std_fallback
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  log1p(double x) { return cl::sycl::log1p(x); }$/;"	f	namespace:Eigen::numext
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   log1p(float x) { return cl::sycl::log1p(x); }$/;"	f	namespace:Eigen::numext
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^double log1p(const double &x) { return ::log1p(x); }$/;"	f	namespace:Eigen::numext
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^float log1p(const float &x) { return ::log1pf(x); }$/;"	f	namespace:Eigen::numext
log1p	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(log1p, Scalar) log1p(const Scalar& x)$/;"	f	namespace:Eigen::numext
log1p	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half log1p(const half& a) {$/;"	f	namespace:Eigen::half_impl
log1p	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log1p() const$/;"	f
log1p_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct log1p_impl {$/;"	s	namespace:Eigen::internal
log1p_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct log1p_retval$/;"	s	namespace:Eigen::internal
log2	plugin/Eigen/src/Core/MathFunctions.h	/^inline int log2(int x)$/;"	f	namespace:Eigen::numext
logAbsDeterminant	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
logAbsDeterminant	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^CompleteOrthogonalDecomposition<MatrixType>::logAbsDeterminant() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
logAbsDeterminant	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
logAbsDeterminant	plugin/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::HouseholderQR
logAbsDeterminant	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Scalar logAbsDeterminant() const$/;"	f	class:Eigen::SparseLU
logDeterminant	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Scalar logDeterminant() const$/;"	f	class:Eigen::CholmodBase
loggy_activate	src/activations.h	/^static inline float loggy_activate(float x){return 2.\/(1. + exp(-x)) - 1;}$/;"	f
loggy_gradient	src/activations.h	/^static inline float loggy_gradient(float x)$/;"	f
logh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half logh(const Eigen::half& a) {$/;"	f
logistic_activate	src/activations.h	/^static inline float logistic_activate(float x){return 1.\/(1. + exp(-x));}$/;"	f
logistic_gradient	src/activations.h	/^static inline float logistic_gradient(float x){return (1-x)*x;}$/;"	f
logit	src/region_layer.c	/^float logit(float x)$/;"	f
lowest	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half lowest() {$/;"	f	struct:Eigen::NumTraits
lowest	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half lowest() { return Eigen::half_impl::raw_uint16_to_half(0xfbff); }$/;"	f	struct:std::numeric_limits
lpNorm	plugin/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::lpNorm() const$/;"	f	class:Eigen::MatrixBase
lpNorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const typename LpNormReturnType<p>::Type lpNorm() const$/;"	f	class:Eigen::VectorwiseOp
lpNorm_selector	plugin/Eigen/src/Core/Dot.h	/^struct lpNorm_selector$/;"	s	namespace:Eigen::internal
lpNorm_selector	plugin/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 1>$/;"	s	namespace:Eigen::internal
lpNorm_selector	plugin/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 2>$/;"	s	namespace:Eigen::internal
lpNorm_selector	plugin/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, Infinity>$/;"	s	namespace:Eigen::internal
lpal	src/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon22
lsub	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector lsub; \/\/ Compressed row indices of L rectangular supernodes. $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
lu	plugin/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lusup	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  lusup; \/\/ nonzero values of L ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
m	include/darknet.h	/^    float * m;$/;"	m	struct:layer
m	include/darknet.h	/^    int m;$/;"	m	struct:load_args
m_E	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_E; \/\/ The permutation applied to columns$/;"	m	class:Eigen::SPQR
m_H	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_H;  \/\/The householder vectors$/;"	m	class:Eigen::SPQR
m_HPinv	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable StorageIndex *m_HPinv; \/\/ The row permutation of H$/;"	m	class:Eigen::SPQR
m_HTau	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_dense *m_HTau; \/\/ The Householder coefficients$/;"	m	class:Eigen::SPQR
m_L	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    FactorType m_L;              \/\/ The lower part stored in CSC$/;"	m	class:Eigen::IncompleteCholesky
m_LDLT	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_LDLT;$/;"	m	class:Eigen::SimplicialCholesky
m_Lstore	plugin/Eigen/src/SparseLU/SparseLU.h	/^    SCMatrix m_Lstore; \/\/ The lower triangular matrix (supernodal)$/;"	m	class:Eigen::SparseLU
m_P	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ Fill-reducing permutation$/;"	m	class:Eigen::IncompleteLUT
m_P	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_P;     \/\/ the permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Pinv	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ Inverse permutation$/;"	m	class:Eigen::IncompleteLUT
m_Pinv	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,StorageIndex> m_Pinv;  \/\/ the inverse permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Q	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Q	plugin/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_Q;               \/\/ The orthogonal reflectors$/;"	m	class:Eigen::SparseQR
m_R	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable MatrixType m_R; \/\/ The sparse matrix R in Eigen format$/;"	m	class:Eigen::SPQR
m_R	plugin/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_R;               \/\/ The triangular factor matrix$/;"	m	class:Eigen::SparseQR
m_S	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_T	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_Ustore	plugin/Eigen/src/SparseLU/SparseLU.h	/^    MappedSparseMatrix<Scalar,ColMajor,StorageIndex> m_Ustore; \/\/ The upper triangular matrix$/;"	m	class:Eigen::SparseLU
m_Z	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      MatrixType m_S, m_T, m_Q, m_Z;$/;"	m	class:Eigen::RealQZ
m_actualAlpha	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Scalar m_actualAlpha;$/;"	m	struct:Eigen::internal::gemm_functor
m_adjoint	plugin/Eigen/src/SVD/JacobiSVD.h	/^  TransposeTypeWithSameStorageOrder m_adjoint;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_algoswap	plugin/Eigen/src/SVD/BDCSVD.h	/^  int m_algoswap;$/;"	m	class:Eigen::BDCSVD
m_allocatedElements	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedElements;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_allocatedSize;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::internal::CompressedStorage
m_allow_tol	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_allow_tol; \/\/ Allow to use some tolerance during numerical factorization.$/;"	m	class:Eigen::SPQR
m_alphas	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_alphas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_analysisIsOk	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::CholmodBase
m_analysisIsOk	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    bool m_analysisIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_analysisIsOk	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_analysisIsOk	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_analysisIsOk	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::KLU
m_analysisIsOk	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::PastixBase
m_analysisIsOk	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_analysisIsOk	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SPQR
m_analysisIsOk	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_analysisIsOk	plugin/Eigen/src/SparseLU/SparseLU.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SparseLU
m_analysisIsOk	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::SuperLUBase
m_analysisIsOk	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::UmfPackLU
m_analysisIsok	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool m_analysisIsok;$/;"	m	class:Eigen::SparseQR
m_angle	plugin/Eigen/src/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	plugin/Eigen/src/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_arg	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const ArgType& m_arg;$/;"	m	class:Eigen::internal::EvalToTemp
m_arg	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const ArgTypeNested m_arg;$/;"	m	struct:Eigen::internal::unary_evaluator
m_arg	plugin/Eigen/src/Core/CoreEvaluators.h	/^  typename internal::add_const_on_value_type<ArgTypeNested>::type m_arg;$/;"	m	struct:Eigen::internal::evaluator
m_arg	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  const ArgType& m_arg;$/;"	m	struct:Eigen::internal::unary_evaluator
m_arg0	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg0 m_arg0;$/;"	m	class:Eigen::Symbolic::AddExpr
m_arg0	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg0 m_arg0;$/;"	m	class:Eigen::Symbolic::NegateExpr
m_arg0	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg0 m_arg0;$/;"	m	class:Eigen::Symbolic::ProductExpr
m_arg0	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg0 m_arg0;$/;"	m	class:Eigen::Symbolic::QuotientExpr
m_arg1	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  Arg1Nested m_arg1;$/;"	m	class:Eigen::CwiseTernaryOp
m_arg1	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg1 m_arg1;$/;"	m	class:Eigen::Symbolic::AddExpr
m_arg1	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg1 m_arg1;$/;"	m	class:Eigen::Symbolic::ProductExpr
m_arg1	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Arg1 m_arg1;$/;"	m	class:Eigen::Symbolic::QuotientExpr
m_arg2	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  Arg2Nested m_arg2;$/;"	m	class:Eigen::CwiseTernaryOp
m_arg3	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  Arg3Nested m_arg3;$/;"	m	class:Eigen::CwiseTernaryOp
m_argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator
m_argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::evaluator_wrapper_base
m_argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ArgTypeNestedCleaned> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/Core/IndexedView.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_argImpl	plugin/Eigen/src/SparseCore/SparseView.h	/^    evaluator<ArgType> m_argImpl;$/;"	m	struct:Eigen::internal::unary_evaluator
m_axis	plugin/Eigen/src/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_betas	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    VectorType m_betas;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_bidiagonal	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    BidiagonalType m_bidiagonal;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_block	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const XprType &m_block;$/;"	m	struct:Eigen::internal::unary_evaluator
m_block	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  const XprType& m_block;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_blockA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    LhsScalar* m_blockA;$/;"	m	class:Eigen::internal::level3_blocking
m_blockB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockB;$/;"	m	class:Eigen::internal::level3_blocking
m_blockCols	plugin/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockCols	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::BlockImpl
m_blockRows	plugin/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_blockRows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::BlockImpl
m_blocking	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    BlockingType& m_blocking;$/;"	m	struct:Eigen::internal::gemm_functor
m_buffer	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar* m_buffer;$/;"	m	class:Eigen::internal::AmbiVector
m_c	plugin/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_cR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_sparse *m_cR; \/\/ The sparse R factor in cholmod format$/;"	m	class:Eigen::SPQR
m_cachedIndex	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_cachedIndex; \/\/ current coordinate$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cachedValue	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_cachedValue;       \/\/ current value$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cc	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable cholmod_common m_cc; \/\/ Workspace and parameters$/;"	m	class:Eigen::SPQR
m_cholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable cholmod_common m_cholmod;$/;"	m	class:Eigen::CholmodBase
m_cholmodFactor	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_factor* m_cholmodFactor;$/;"	m	class:Eigen::CholmodBase
m_coeff	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typename DiagonalCoeffType::Scalar m_coeff;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    CoefficientsType m_coeffs;$/;"	m	class:Eigen::internal::BandMatrix
m_coeffs	plugin/Eigen/src/Core/BandMatrix.h	/^    const CoefficientsType& m_coeffs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_coeffs	plugin/Eigen/src/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^    Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^    const Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	plugin/Eigen/src/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	plugin/Eigen/src/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    typename CoeffsType::Nested m_coeffs;$/;"	m	class:Eigen::HouseholderSequence
m_col	plugin/Eigen/src/Core/CommaInitializer.h	/^  Index m_col;              \/\/ current col id$/;"	m	struct:Eigen::CommaInitializer
m_col	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_col	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_col; \/\/ Number of columns$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_colFactor	plugin/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, ColFactor> m_colFactor;$/;"	m	class:Eigen::Replicate
m_colIndices	plugin/Eigen/src/Core/IndexedView.h	/^  ColIndices m_colIndices;$/;"	m	class:Eigen::IndexedView
m_colNormsDirect	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colNormsDirect;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colNormsUpdated	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colNormsUpdated;$/;"	m	class:Eigen::ColPivHouseholderQR
m_col_to_sup	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_col_to_sup; \/\/ col_to_sup[j] is the supernode number to which column j belongs$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_cols	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::ColsAtCompileTime> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseCol ? ArgType::ColsAtCompileTime : 1> m_cols;$/;"	m	struct:Eigen::internal::unary_evaluator
m_cols	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::CwiseNullaryOp
m_cols	plugin/Eigen/src/Core/DenseStorage.h	/^    Index m_cols;$/;"	m	class:Eigen::DenseStorage
m_cols	plugin/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::MapBase
m_cols	plugin/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_cols	plugin/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_cols	plugin/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_colsPermutation	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    PermutationType m_colsPermutation;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colsTranspositions	plugin/Eigen/src/LU/FullPivLU.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_colsTranspositions	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::ColPivHouseholderQR
m_cols_permutation	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    PermutationType m_cols_permutation;$/;"	m	class:Eigen::FullPivHouseholderQR
m_cols_transpositions	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_cols_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_comm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_comm; \/\/ The MPI communicator identifier$/;"	m	class:Eigen::PastixBase
m_common	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    klu_common m_common;$/;"	m	class:Eigen::KLU
m_compU	plugin/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_compV	plugin/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_computationOptions	plugin/Eigen/src/SVD/SVDBase.h	/^  unsigned int m_computationOptions;$/;"	m	class:Eigen::SVDBase
m_computeFullU	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeFullV	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computeQZ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_computeQZ;$/;"	m	class:Eigen::RealQZ
m_computeThinU	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::SVDBase
m_computeThinV	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::SVDBase
m_computed	plugin/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_computed;$/;"	m	class:Eigen::BDCSVD
m_condition	plugin/Eigen/src/Core/Select.h	/^    typename ConditionMatrixType::Nested m_condition;$/;"	m	class:Eigen::Select
m_conditionImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ConditionMatrixType> m_conditionImpl;$/;"	m	struct:Eigen::internal::evaluator
m_containsDiag	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      bool m_containsDiag;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_control	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackControl m_control;$/;"	m	class:Eigen::UmfPackLU
m_cpqr	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  ColPivHouseholderQR<MatrixType> m_cpqr;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_currentBlockRows	plugin/Eigen/src/Core/CommaInitializer.h	/^  Index m_currentBlockRows; \/\/ current block height$/;"	m	struct:Eigen::CommaInitializer
m_currentEl	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_currentEl;   \/\/ the current element in sparse\/linked-list mode$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_d	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Data m_d;$/;"	m	struct:Eigen::internal::binary_evaluator
m_d	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Data m_d;$/;"	m	struct:Eigen::internal::ternary_evaluator
m_d	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Data m_d;$/;"	m	struct:Eigen::internal::unary_evaluator
m_d	plugin/Eigen/src/Core/CoreEvaluators.h	/^  plainobjectbase_evaluator_data<Scalar,OuterStrideAtCompileTime> m_d;$/;"	m	struct:Eigen::internal::evaluator
m_data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PointerType m_data;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_data	plugin/Eigen/src/Core/DenseStorage.h	/^    T *m_data;$/;"	m	class:Eigen::DenseStorage
m_data	plugin/Eigen/src/Core/DenseStorage.h	/^    internal::plain_array<T,Size,_Options> m_data;$/;"	m	class:Eigen::DenseStorage
m_data	plugin/Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize)+(ForceAlignment?EIGEN_MAX_ALIGN_BYTES:0),0> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	plugin/Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize),0,EIGEN_PLAIN_ENUM_MIN(AlignedMax,PacketSize)> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	plugin/Eigen/src/Core/MapBase.h	/^    PointerType m_data;$/;"	m	class:Eigen::MapBase
m_data	plugin/Eigen/src/Core/util/BlasUtil.h	/^  Scalar *m_data;$/;"	m	class:Eigen::internal::BlasLinearMapper
m_data	plugin/Eigen/src/Core/util/BlasUtil.h	/^  Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::blas_data_mapper
m_data	plugin/Eigen/src/Core/util/BlasUtil.h	/^  Scalar* m_data;$/;"	m	class:Eigen::internal::BlasVectorMapper
m_data	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseMatrix
m_data	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseVector
m_deallocate	plugin/Eigen/src/Core/util/Memory.h	/^    bool m_deallocate;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_dec	plugin/Eigen/src/Core/Solve.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::Solve
m_dec	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const Decomposition &m_dec;$/;"	m	class:Eigen::SolveWithGuess
m_dec	plugin/Eigen/src/misc/Image.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::image_retval_base
m_dec	plugin/Eigen/src/misc/Kernel.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_dest	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Dest& m_dest;$/;"	m	struct:Eigen::internal::gemm_functor
m_detPermC	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_detPermR	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Index m_detPermR, m_detPermC; \/\/ Determinants of the permutation matrices$/;"	m	class:Eigen::SparseLU
m_det_p	plugin/Eigen/src/LU/PartialPivLU.h	/^    signed char m_det_p;$/;"	m	class:Eigen::PartialPivLU
m_det_pq	plugin/Eigen/src/LU/FullPivLU.h	/^    signed char m_det_pq;$/;"	m	class:Eigen::FullPivLU
m_det_pq	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::ColPivHouseholderQR
m_det_pq	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::FullPivHouseholderQR
m_diag	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorType m_diag;                                \/\/ the diagonal coefficients (LDLT mode)$/;"	m	class:Eigen::SimplicialCholeskyBase
m_diagCoeffImpl	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<DiagonalCoeffType> m_diagCoeffImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagCoeffNested	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    DiagCoeffNested m_diagCoeffNested;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_diagCoeffNested	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  DiagCoeffNested m_diagCoeffNested;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_diagImpl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  evaluator<DiagonalType> m_diagImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_diagSize	plugin/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalVectorType m_diagonal;$/;"	m	class:Eigen::DiagonalMatrix
m_diagonal	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    typename DiagonalVectorType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalWrapper
m_diagpivotthresh	plugin/Eigen/src/SparseLU/SparseLU.h	/^    RealScalar m_diagpivotthresh; \/\/ Specifies the threshold used for a diagonal entry to be an acceptable pivot$/;"	m	class:Eigen::SparseLU
m_direction	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_divisor	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_divisor;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_dparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Array<double,DPARM_SIZE,1> m_dparm; \/\/ Scalar vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_droptol	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    RealScalar m_droptol;$/;"	m	class:Eigen::IncompleteLUT
m_dst	plugin/Eigen/src/Core/AssignEvaluator.h	/^  DstEvaluatorType& m_dst;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dstExpr	plugin/Eigen/src/Core/AssignEvaluator.h	/^  DstXprType& m_dstExpr;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_dummy	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  MatrixType m_dummy; \/\/ used to default initialize the Ref<> object$/;"	m	class:Eigen::internal::generic_matrix_wrapper
m_dummy	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    KLUMatrixType m_dummy;$/;"	m	class:Eigen::KLU
m_dummy	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixType m_dummy;$/;"	m	class:Eigen::UmfPackLU
m_eigenvectorsOk	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::ComplexEigenSolver
m_eigenvectorsOk	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::EigenSolver
m_eigenvectorsOk	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivalues	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivalues	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::EigenSolver
m_eivalues	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    RealVectorType m_eivalues;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivec	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_eivec;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivec	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::EigenSolver
m_eivec	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    EigenvectorsType m_eivec;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_eivec	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    EigenvectorsType m_eivec;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_else	plugin/Eigen/src/Core/Select.h	/^    typename ElseMatrixType::Nested m_else;$/;"	m	class:Eigen::Select
m_elseImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ElseMatrixType> m_elseImpl;$/;"	m	struct:Eigen::internal::evaluator
m_empty	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    bool m_empty;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_end	plugin/Eigen/src/Core/CoreIterators.h	/^  const Index m_end;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_end	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_end;$/;"	m	class:Eigen::internal::AmbiVector
m_end	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
m_end	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_end	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_end;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_end	plugin/Eigen/src/SparseCore/SparseView.h	/^        const Index m_end;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_endidrow	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_endidrow;                       \/\/ End index of row indices of the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_endidval	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_endidval;                 \/\/ End of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_epsilon	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    RealScalar m_epsilon;       \/\/ epsilon used to prune zero coefficients$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_epsilon	plugin/Eigen/src/SparseCore/SparseView.h	/^  RealScalar m_epsilon;$/;"	m	class:Eigen::SparseView
m_error	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable RealScalar m_error;$/;"	m	class:Eigen::IterativeSolverBase
m_etree	plugin/Eigen/src/SparseLU/SparseLU.h	/^    IndexVector m_etree; \/\/ Column elimination tree $/;"	m	class:Eigen::SparseLU
m_etree	plugin/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_etree;            \/\/ Column elimination tree$/;"	m	class:Eigen::SparseQR
m_eval	plugin/Eigen/src/Core/CoreIterators.h	/^  EvaluatorType m_eval;$/;"	m	class:Eigen::InnerIterator
m_eval	plugin/Eigen/src/Core/CoreIterators.h	/^  const EvaluatorType& m_eval;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_eval	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  const unary_evaluator& m_eval;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_evaluator	plugin/Eigen/src/Core/Redux.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::redux_evaluator
m_evaluator	plugin/Eigen/src/Core/Visitor.h	/^  internal::evaluator<XprType> m_evaluator;$/;"	m	class:Eigen::internal::visitor_evaluator
m_expr	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const XprType &m_expr;$/;"	m	struct:Eigen::internal::binary_evaluator
m_expression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::ArrayWrapper
m_expression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::MatrixWrapper
m_expression	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    const ExpressionType& m_expression;$/;"	m	class:Eigen::ForceAlignedAccess
m_expression	plugin/Eigen/src/Core/NestByValue.h	/^    const ExpressionType m_expression;$/;"	m	class:Eigen::NestByValue
m_expression	plugin/Eigen/src/Core/NoAlias.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::NoAlias
m_extractedDataAreDirty	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::KLU
m_extractedDataAreDirty	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::SuperLUBase
m_extractedDataAreDirty	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::UmfPackLU
m_fact_errorCode	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    StorageIndex m_fact_errorCode;$/;"	m	class:Eigen::UmfPackLU
m_factor	plugin/Eigen/src/Geometry/Scaling.h	/^  Scalar m_factor;$/;"	m	class:Eigen::UniformScaling
m_factor	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar m_factor;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_factorizationIsOk	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::CholmodBase
m_factorizationIsOk	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    bool m_factorizationIsOk; $/;"	m	class:Eigen::IncompleteCholesky
m_factorizationIsOk	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_factorizationIsOk	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_factorizationIsOk	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::KLU
m_factorizationIsOk	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::PastixBase
m_factorizationIsOk	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_factorizationIsOk	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SPQR
m_factorizationIsOk	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_factorizationIsOk	plugin/Eigen/src/SparseLU/SparseLU.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SparseLU
m_factorizationIsOk	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::SuperLUBase
m_factorizationIsOk	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::UmfPackLU
m_factorizationIsok	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool m_factorizationIsok;$/;"	m	class:Eigen::SparseQR
m_fillfactor	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    int m_fillfactor;$/;"	m	class:Eigen::IncompleteLUT
m_first	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  FirstType m_first;$/;"	m	class:Eigen::ArithmeticSequence
m_firstRowElt	plugin/Eigen/src/SparseQR/SparseQR.h	/^    IndexVector m_firstRowElt;      \/\/ First element in each row$/;"	m	class:Eigen::SparseQR
m_flip	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const bool m_flip;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_format	plugin/Eigen/src/Core/IO.h	/^    IOFormat m_format;$/;"	m	class:Eigen::WithFormat
m_functor	plugin/Eigen/src/Core/AssignEvaluator.h	/^  const Functor &m_functor;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_functor	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const MemberOp m_functor;$/;"	m	struct:Eigen::internal::evaluator
m_functor	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const NullaryOp m_functor;$/;"	m	struct:Eigen::internal::evaluator
m_functor	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::CwiseBinaryOp
m_functor	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::CwiseNullaryOp
m_functor	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  const TernaryOp m_functor;$/;"	m	class:Eigen::CwiseTernaryOp
m_functor	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOp
m_functor	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryView
m_functor	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp m_functor;$/;"	m	class:Eigen::PartialReduxExpr
m_functor	plugin/Eigen/src/Core/VectorwiseOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::member_redux
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::binary_evaluator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_functor	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	struct:Eigen::internal::unary_evaluator
m_global_iter	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_global_iter;$/;"	m	class:Eigen::RealQZ
m_glu	plugin/Eigen/src/SparseLU/SparseLU.h	/^    typename Base::GlobalLU_t m_glu; $/;"	m	class:Eigen::SparseLU
m_glu	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  typename SparseLUImpl<Scalar, StorageIndex>::GlobalLU_t& m_glu;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_gpu	include/darknet.h	/^    float *m_gpu;$/;"	m	struct:layer
m_guess	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const GuessType     &m_guess;$/;"	m	class:Eigen::SolveWithGuess
m_hCoeffs	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::HessenbergDecomposition
m_hCoeffs	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::Tridiagonalization
m_hCoeffs	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::ColPivHouseholderQR
m_hCoeffs	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::FullPivHouseholderQR
m_hCoeffs	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename HCoeffsType::Nested m_hCoeffs;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_hCoeffs	plugin/Eigen/src/QR/HouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::HouseholderQR
m_hasCopy	plugin/Eigen/src/SparseCore/SparseRef.h	/^    bool m_hasCopy;$/;"	m	class:Eigen::Ref
m_hcoeffs	plugin/Eigen/src/SparseQR/SparseQR.h	/^    ScalarVector m_hcoeffs;         \/\/ The Householder coefficients$/;"	m	class:Eigen::SparseQR
m_hess	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::ComplexSchur
m_hess	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const HessenbergDecomposition<MatrixType>& m_hess;$/;"	m	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
m_hess	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::RealSchur
m_high	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_high;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_householder	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    MatrixType m_householder;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_id	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_id	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_id;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_id	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    StorageIndex m_id;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_idrow	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idrow;                          \/\/ Index to browse the row indices $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_idval	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_idval;                          \/\/ Index to browse the values in the current column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_incr	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  IncrType  m_incr;$/;"	m	class:Eigen::ArithmeticSequence
m_index	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamicindex<Index, XprType::DiagIndex> m_index;$/;"	m	struct:Eigen::internal::evaluator
m_index	plugin/Eigen/src/Core/Diagonal.h	/^    const internal::variable_if_dynamicindex<Index, DiagIndex> m_index;$/;"	m	class:Eigen::Diagonal
m_index	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_index;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_indexPtr	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_indexPtr; \/\/ Pointer to the adjacenccy list of each row\/column$/;"	m	class:Eigen::MetisOrdering
m_indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::PermutationMatrix
m_indices	plugin/Eigen/src/Core/PermutationMatrix.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::PermutationWrapper
m_indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	plugin/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Transpositions
m_indices	plugin/Eigen/src/Core/Transpositions.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::TranspositionsWrapper
m_indices	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    StorageIndex* m_indices;$/;"	m	class:Eigen::internal::CompressedStorage
m_indices	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_indices	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const StorageIndex* m_indices;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_info	plugin/Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LDLT
m_info	plugin/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LLT
m_info	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::CholmodBase
m_info	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::ComplexSchur
m_info	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::EigenSolver
m_info	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      ComputationInfo m_info;$/;"	m	class:Eigen::RealQZ
m_info	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::RealSchur
m_info	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_info	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteCholesky
m_info	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteLUT
m_info	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable ComputationInfo m_info;$/;"	m	class:Eigen::IterativeSolverBase
m_info	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::KLU
m_info	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::PastixBase
m_info	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::PardisoImpl
m_info	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SPQR
m_info	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_info	plugin/Eigen/src/SparseLU/SparseLU.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseLU
m_info	plugin/Eigen/src/SparseQR/SparseQR.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SparseQR
m_info	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SuperLUBase
m_info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::UmfPackLU
m_initialShift	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    RealScalar m_initialShift;   \/\/ The initial shift parameter$/;"	m	class:Eigen::IncompleteCholesky
m_initisOk	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_initisOk; $/;"	m	class:Eigen::PastixBase
m_inner	plugin/Eigen/src/Core/CoreIterators.h	/^  Index m_inner;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_inner	plugin/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;$/;"	m	class:Eigen::Stride
m_inner	plugin/Eigen/src/SparseCore/SparseView.h	/^        Index m_inner;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_innerDim	plugin/Eigen/src/Core/ProductEvaluators.h	/^  Index m_innerDim;$/;"	m	struct:Eigen::internal::product_evaluator
m_innerIndex	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  const Index m_innerIndex;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_innerIndices	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^    IndexVector m_innerIndices; \/\/ Adjacency list $/;"	m	class:Eigen::MetisOrdering
m_innerIndices	plugin/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerIndices;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	plugin/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_innerNonZeros;$/;"	m	class:Eigen::SparseMapBase
m_innerNonZeros	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_innerNonZeros;     \/\/ optional, if null then the data is compressed$/;"	m	class:Eigen::SparseMatrix
m_innerSize	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    StorageIndex m_innerSize;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_innerSize	plugin/Eigen/src/SparseCore/SparseMap.h	/^    Index   m_innerSize;$/;"	m	class:Eigen::SparseMapBase
m_innerSize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SparseMatrix
m_innerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamic<Index, XprType::InnerStrideAtCompileTime> m_innerStride;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_invdiag	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Vector m_invdiag;$/;"	m	class:Eigen::DiagonalPreconditioner
m_invp	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_invp;  \/\/ Inverse permutation vector$/;"	m	class:Eigen::PastixBase
m_iparm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Array<int,IPARM_SIZE,1> m_iparm; \/\/ integer vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_iparm	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ParameterType m_iparm;$/;"	m	class:Eigen::PardisoImpl
m_isAllocated	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isDense	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    bool m_isDense;             \/\/ mode of the vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_isEtreeOk	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isEtreeOk;               \/\/ whether the elimination tree match the initial input matrix$/;"	m	class:Eigen::SparseQR
m_isInitialized	plugin/Eigen/src/Cholesky/LDLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LDLT
m_isInitialized	plugin/Eigen/src/Cholesky/LLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LLT
m_isInitialized	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexEigenSolver
m_isInitialized	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexSchur
m_isInitialized	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::EigenSolver
m_isInitialized	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HessenbergDecomposition
m_isInitialized	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      bool m_isInitialized;$/;"	m	class:Eigen::RealQZ
m_isInitialized	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::RealSchur
m_isInitialized	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_isInitialized	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::Tridiagonalization
m_isInitialized	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::DiagonalPreconditioner
m_isInitialized	plugin/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_isInitialized	plugin/Eigen/src/LU/PartialPivLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PartialPivLU
m_isInitialized	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_isInitialized	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_isInitialized	plugin/Eigen/src/QR/HouseholderQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HouseholderQR
m_isInitialized	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_isInitialized	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_isInitialized	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    mutable bool m_isInitialized;$/;"	m	class:Eigen::SparseSolverBase
m_isQSorted	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool m_isQSorted;               \/\/ whether Q is sorted or not$/;"	m	class:Eigen::SparseQR
m_isRUpToDate	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable bool m_isRUpToDate;$/;"	m	class:Eigen::SPQR
m_isRValue	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SparseMatrixBase
m_isTranspose	plugin/Eigen/src/SVD/BDCSVD.h	/^  bool m_isTranspose, m_compU, m_compV;$/;"	m	class:Eigen::BDCSVD
m_it	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  EvalIterator m_it;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_iter	plugin/Eigen/src/Core/CoreIterators.h	/^  IteratorType m_iter;$/;"	m	class:Eigen::InnerIterator
m_iterations	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable Index m_iterations;$/;"	m	class:Eigen::IterativeSolverBase
m_jcol	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_jcol	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  Index m_jcol;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_jsuper_ref	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  Index& m_jsuper_ref;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_kc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_kc;$/;"	m	class:Eigen::internal::level3_blocking
m_l	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::SuperLUBase
m_l	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::UmfPackLU
m_l1	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l1;$/;"	m	struct:Eigen::internal::CacheSizes
m_l1_norm	plugin/Eigen/src/Cholesky/LDLT.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::LDLT
m_l1_norm	plugin/Eigen/src/Cholesky/LLT.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::LLT
m_l1_norm	plugin/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::FullPivLU
m_l1_norm	plugin/Eigen/src/LU/PartialPivLU.h	/^    RealScalar m_l1_norm;$/;"	m	class:Eigen::PartialPivLU
m_l2	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l2;$/;"	m	struct:Eigen::internal::CacheSizes
m_l3	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  std::ptrdiff_t m_l3;$/;"	m	struct:Eigen::internal::CacheSizes
m_lastError	plugin/Eigen/src/SparseLU/SparseLU.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseLU
m_lastError	plugin/Eigen/src/SparseQR/SparseQR.h	/^    std::string m_lastError;$/;"	m	class:Eigen::SparseQR
m_length	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_length;$/;"	m	class:Eigen::HouseholderSequence
m_lhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_lhs	plugin/Eigen/src/Core/Product.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::Product
m_lhs	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typename internal::add_const_on_value_type<LhsNested>::type m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhs	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Lhs& m_lhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_lhs	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typename LhsMatrixTypeCleaned::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_lhs	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_lhs	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  const LhsArg m_lhs;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_lhs	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Rhs::PlainObject m_lhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhsEval	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const LhsEvaluator &m_lhsEval;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_lhsEval	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<Lhs> &m_lhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsImpl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  LhsEtorType m_lhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_lhsImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Lhs> m_lhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_lhsImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<LhsArg> m_lhsImpl;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_lhsIter	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_lhsIter	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_lhsXprImpl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualLhs> m_lhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_linear_offset	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, InnerPanel ? Dynamic : 0> m_linear_offset;$/;"	m	struct:Eigen::internal::unary_evaluator
m_llCurrent	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llCurrent;$/;"	m	class:Eigen::internal::AmbiVector
m_llSize	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llSize;$/;"	m	class:Eigen::internal::AmbiVector
m_llStart	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_llStart;$/;"	m	class:Eigen::internal::AmbiVector
m_low	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_low;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lu	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLUT
m_lu	plugin/Eigen/src/LU/FullPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::FullPivLU
m_lu	plugin/Eigen/src/LU/PartialPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::PartialPivLU
m_luImpl	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  SparseLUImpl<Scalar, StorageIndex>& m_luImpl;$/;"	m	struct:Eigen::internal::column_dfs_traits
m_mapL	plugin/Eigen/src/SparseLU/SparseLU.h	/^  const MappedSupernodalType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixLReturnType
m_mapL	plugin/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixLType& m_mapL;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_mapU	plugin/Eigen/src/SparseLU/SparseLU.h	/^  const MatrixUType& m_mapU;$/;"	m	struct:Eigen::SparseLUMatrixUReturnType
m_marker	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  StorageIndex* m_marker;$/;"	m	struct:Eigen::internal::panel_dfs_traits
m_mat	plugin/Eigen/src/SparseLU/SparseLU.h	/^    NCMatrix m_mat; \/\/ The input (permuted ) matrix $/;"	m	class:Eigen::SparseLU
m_matImpl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  evaluator<MatrixType>   m_matImpl;$/;"	m	struct:Eigen::internal::diagonal_product_evaluator_base
m_matT	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matT	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::EigenSolver
m_matT	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::RealSchur
m_matU	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matU	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matU;$/;"	m	class:Eigen::RealSchur
m_matUisUptodate	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::ComplexSchur
m_matUisUptodate	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::RealSchur
m_matX	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_matX;$/;"	m	class:Eigen::ComplexEigenSolver
m_matrix	plugin/Eigen/src/Cholesky/LDLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LDLT
m_matrix	plugin/Eigen/src/Cholesky/LLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LLT
m_matrix	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::CwiseUnaryView
m_matrix	plugin/Eigen/src/Core/Diagonal.h	/^    typename internal::ref_selector<MatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::Diagonal
m_matrix	plugin/Eigen/src/Core/IO.h	/^    typename ExpressionType::Nested m_matrix;$/;"	m	class:Eigen::WithFormat
m_matrix	plugin/Eigen/src/Core/Replicate.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::Replicate
m_matrix	plugin/Eigen/src/Core/Reverse.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Reverse
m_matrix	plugin/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SelfAdjointView
m_matrix	plugin/Eigen/src/Core/Transpose.h	/^    typename internal::ref_selector<MatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::Transpose
m_matrix	plugin/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::TriangularView
m_matrix	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::VectorwiseOp
m_matrix	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::PartialReduxExpr
m_matrix	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::HessenbergDecomposition
m_matrix	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::Tridiagonalization
m_matrix	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
m_matrix	plugin/Eigen/src/Geometry/Homogeneous.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Homogeneous
m_matrix	plugin/Eigen/src/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ActualMatrixType m_matrix;$/;"	m	class:Eigen::internal::generic_matrix_wrapper
m_matrix	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable SparseMatrixType m_matrix;$/;"	m	class:Eigen::PardisoImpl
m_matrix	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    CholMatrixType m_matrix;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_matrix	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typename internal::ref_selector<SparseMatrixType>::non_const_type m_matrix;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_matrix	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    typename internal::ref_selector<XprType>::non_const_type m_matrix;$/;"	m	class:Eigen::BlockImpl
m_matrix	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Derived *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSelfAdjointView
m_matrix	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_matrix	plugin/Eigen/src/SparseCore/SparseVector.h	/^  const SparseVectorType *m_matrix;$/;"	m	struct:Eigen::internal::evaluator
m_matrix	plugin/Eigen/src/SparseCore/SparseView.h	/^  MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseView
m_matrix	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const MappedSuperNodalMatrix& m_matrix; \/\/ Supernodal lower triangular matrix $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_matrix	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_matrix;  \/\/ copy of the factorized matrix$/;"	m	class:Eigen::SuperLUBase
m_matrixU	plugin/Eigen/src/SVD/SVDBase.h	/^  MatrixUType m_matrixU;$/;"	m	class:Eigen::SVDBase
m_matrixV	plugin/Eigen/src/SVD/SVDBase.h	/^  MatrixVType m_matrixV;$/;"	m	class:Eigen::SVDBase
m_matrixWrapper	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  MatrixWrapper m_matrixWrapper;$/;"	m	class:Eigen::IterativeSolverBase
m_max	plugin/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_maxIterations	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_maxIterations	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index m_maxIterations;$/;"	m	class:Eigen::IterativeSolverBase
m_maxIterationsPerRow	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    static const int m_maxIterationsPerRow = 30;$/;"	m	class:Eigen::ComplexSchur
m_maxIterationsPerRow	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    static const int m_maxIterationsPerRow = 40;$/;"	m	class:Eigen::RealSchur
m_maxIters	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::ComplexSchur
m_maxIters	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Index m_maxIters;$/;"	m	class:Eigen::RealQZ
m_maxIters	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    Index m_maxIters;$/;"	m	class:Eigen::RealSchur
m_maxpivot	plugin/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_maxpivot	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_maxpivot	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_mc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_mc;$/;"	m	class:Eigen::internal::level3_blocking
m_min	plugin/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_mode	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_mode;$/;"	m	class:Eigen::internal::AmbiVector
m_msglvl	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    StorageIndex m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_multiplier	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_multiplier;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_nRec	plugin/Eigen/src/SVD/BDCSVD.h	/^  Index m_nRec;$/;"	m	class:Eigen::BDCSVD
m_naiveU	plugin/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_naiveV	plugin/Eigen/src/SVD/BDCSVD.h	/^  MatrixXr m_naiveU, m_naiveV;$/;"	m	class:Eigen::BDCSVD
m_nc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_nc;$/;"	m	class:Eigen::internal::level3_blocking
m_nnzL	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nnzU	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Index m_nnzL, m_nnzU; \/\/ Nonzeros in L and U factors$/;"	m	class:Eigen::SparseLU
m_nonZerosPerCol	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_nonZerosPerCol;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_nonzeroSingularValues	plugin/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_nonzero_pivots	plugin/Eigen/src/LU/FullPivLU.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_nonzero_pivots	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::ColPivHouseholderQR
m_nonzero_pivots	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivHouseholderQR
m_nonzeropivots	plugin/Eigen/src/SparseQR/SparseQR.h	/^    Index m_nonzeropivots;          \/\/ Number of non zero pivots found$/;"	m	class:Eigen::SparseQR
m_normOfS	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_normOfT	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Scalar m_normOfT, m_normOfS;$/;"	m	class:Eigen::RealQZ
m_nsuper	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_nsuper; \/\/ Number of supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_numIters	plugin/Eigen/src/SVD/BDCSVD.h	/^  int m_numIters;$/;"	m	class:Eigen::BDCSVD
m_numeric	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    klu_numeric* m_numeric;$/;"	m	class:Eigen::KLU
m_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_numeric;$/;"	m	class:Eigen::UmfPackLU
m_nzval	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* m_nzval; \/\/array of nonzero values packed by column$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_nzval_colptr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_nzval_colptr; \/\/nzval_colptr[j] Stores the location in nzval[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_object	plugin/Eigen/src/Core/Ref.h	/^    TPlainObjectType m_object;$/;"	m	class:Eigen::Ref
m_object_bytes	plugin/Eigen/src/SparseCore/SparseRef.h	/^    char m_object_bytes[sizeof(TPlainObjectType)];$/;"	m	class:Eigen::Ref
m_ordering	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    int m_ordering; \/\/ Ordering method to use, see SPQR's manual$/;"	m	class:Eigen::SPQR
m_origin	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_originalMatrix	plugin/Eigen/src/misc/Image.h	/^    const MatrixType& m_originalMatrix;$/;"	m	struct:Eigen::internal::image_retval_base
m_other	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_constant_op
m_other	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const Derived& m_other; $/;"	m	struct:Eigen::SPQR_QProduct
m_other	plugin/Eigen/src/SparseQR/SparseQR.h	/^  const Derived& m_other;$/;"	m	struct:Eigen::SparseQR_QProduct
m_outer	plugin/Eigen/src/Core/CoreIterators.h	/^  const Index m_outer;$/;"	m	class:Eigen::internal::inner_iterator_selector
m_outer	plugin/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;$/;"	m	class:Eigen::Stride
m_outer	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const OuterType m_outer;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_outer	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const OuterType m_outer;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_outer	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const Index m_outer;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_outer	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
m_outer	plugin/Eigen/src/SparseCore/SparseView.h	/^        const Index m_outer;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_outer	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_outer;                    \/\/ Current column $/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_outerIndex	plugin/Eigen/src/SparseCore/SparseMap.h	/^    IndexPointer  m_outerIndex;$/;"	m	class:Eigen::SparseMapBase
m_outerIndex	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    StorageIndex* m_outerIndex;$/;"	m	class:Eigen::SparseMatrix
m_outerPos	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  Index m_outerPos;$/;"	m	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
m_outerSize	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::BlockImpl
m_outerSize	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, OuterSize> m_outerSize;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerSize	plugin/Eigen/src/SparseCore/SparseMap.h	/^    Index   m_outerSize;$/;"	m	class:Eigen::SparseMapBase
m_outerSize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SparseMatrix
m_outerStart	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::BlockImpl
m_outerStart	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::internal::sparse_matrix_block_impl
m_outerStride	plugin/Eigen/src/Core/Block.h	/^    Index m_outerStride;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_outerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Index m_outerStride;$/;"	m	class:Eigen::internal::plainobjectbase_evaluator_data
m_outerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const internal::variable_if_dynamic<Index, XprType::OuterStrideAtCompileTime> m_outerStride;$/;"	m	struct:Eigen::internal::mapbase_evaluator
m_outputPerm_c	plugin/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_outputPerm_c; \/\/ The final column permutation$/;"	m	class:Eigen::SparseQR
m_p	plugin/Eigen/src/LU/FullPivLU.h	/^    PermutationPType m_p;$/;"	m	class:Eigen::FullPivLU
m_p	plugin/Eigen/src/LU/PartialPivLU.h	/^    PermutationType m_p;$/;"	m	class:Eigen::PartialPivLU
m_p	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::SuperLUBase
m_p	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::UmfPackLU
m_parent	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorI m_parent;                                 \/\/ elimination tree$/;"	m	class:Eigen::SimplicialCholeskyBase
m_pastixdata	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable pastix_data_t *m_pastixdata; \/\/ Data structure for pastix$/;"	m	class:Eigen::PastixBase
m_perfv	plugin/Eigen/src/SparseLU/SparseLU.h	/^    internal::perfvalues m_perfv;$/;"	m	class:Eigen::SparseLU
m_perm	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    PermutationType m_perm; $/;"	m	class:Eigen::IncompleteCholesky
m_perm	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<StorageIndex,Dynamic,1> m_perm;  \/\/ Permutation vector$/;"	m	class:Eigen::PastixBase
m_perm	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable IntColVectorType m_perm;$/;"	m	class:Eigen::PardisoImpl
m_perm	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& m_perm;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_perm_c	plugin/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_c; \/\/ Column permutation $/;"	m	class:Eigen::SparseLU
m_perm_c	plugin/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_perm_c;       \/\/ Fill-reducing  Column  permutation$/;"	m	class:Eigen::SparseQR
m_perm_r	plugin/Eigen/src/SparseLU/SparseLU.h	/^    PermutationType m_perm_r ; \/\/ Row permutation$/;"	m	class:Eigen::SparseLU
m_pivotperm	plugin/Eigen/src/SparseQR/SparseQR.h	/^    PermutationType m_pivotperm;    \/\/ The permutation for rank revealing$/;"	m	class:Eigen::SparseQR
m_pmat	plugin/Eigen/src/SparseQR/SparseQR.h	/^    QRMatrixType m_pmat;            \/\/ Temporary matrix$/;"	m	class:Eigen::SparseQR
m_precision	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::FullPivHouseholderQR
m_preconditioner	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner m_preconditioner;$/;"	m	class:Eigen::IterativeSolverBase
m_prescribedThreshold	plugin/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_prescribedThreshold	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_prescribedThreshold	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_prescribedThreshold	plugin/Eigen/src/SVD/SVDBase.h	/^  RealScalar m_prescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_pt	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable void *m_pt[64];$/;"	m	class:Eigen::PardisoImpl
m_ptr	plugin/Eigen/src/Core/util/Memory.h	/^    T* m_ptr;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_ptr	plugin/Eigen/src/Core/util/Memory.h	/^  T* m_ptr;$/;"	m	class:Eigen::internal::scoped_array
m_q	plugin/Eigen/src/LU/FullPivLU.h	/^    PermutationQType m_q;$/;"	m	class:Eigen::FullPivLU
m_q	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::SuperLUBase
m_q	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::UmfPackLU
m_qr	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::ColPivHouseholderQR
m_qr	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::FullPivHouseholderQR
m_qr	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename MatrixType::Nested m_qr;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_qr	plugin/Eigen/src/QR/HouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::HouseholderQR
m_qr	plugin/Eigen/src/SVD/JacobiSVD.h	/^  QRType m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	plugin/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQReturnType
m_qr	plugin/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQRMatrixQTransposeReturnType
m_qr	plugin/Eigen/src/SparseQR/SparseQR.h	/^  const SparseQRType& m_qr;$/;"	m	struct:Eigen::SparseQR_QProduct
m_qr_precond_morecols	plugin/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreColsThanRows> m_qr_precond_morecols;$/;"	m	class:Eigen::JacobiSVD
m_qr_precond_morerows	plugin/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreRowsThanCols> m_qr_precond_morerows;$/;"	m	class:Eigen::JacobiSVD
m_rank	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    mutable Index m_rank; \/\/ The rank of the matrix$/;"	m	class:Eigen::SPQR
m_rank	plugin/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_rank	plugin/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_realQZ	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    RealQZ<MatrixType> m_realQZ;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_realSchur	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    RealSchur<MatrixType> m_realSchur;$/;"	m	class:Eigen::EigenSolver
m_reference	plugin/Eigen/src/SparseCore/SparseView.h	/^  Scalar m_reference;$/;"	m	class:Eigen::SparseView
m_result	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	plugin/Eigen/src/Core/Inverse.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::unary_evaluator
m_result	plugin/Eigen/src/Core/ProductEvaluators.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	plugin/Eigen/src/Core/ReturnByValue.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	plugin/Eigen/src/Core/Solve.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::evaluator
m_result	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_result	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::unary_evaluator
m_result	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  PlainObject m_result;$/;"	m	struct:Eigen::internal::product_evaluator
m_returnOne	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      bool m_returnOne;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_reverse	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    bool m_reverse;$/;"	m	class:Eigen::HouseholderSequence
m_rhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_rhs	plugin/Eigen/src/Core/Product.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::Product
m_rhs	plugin/Eigen/src/Core/ProductEvaluators.h	/^  typename internal::add_const_on_value_type<RhsNested>::type m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhs	plugin/Eigen/src/Core/Solve.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::Solve
m_rhs	plugin/Eigen/src/Core/SolveTriangular.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_rhs	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Rhs& m_rhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_rhs	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_rhs	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_rhs	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  const RhsType       &m_rhs;$/;"	m	class:Eigen::SolveWithGuess
m_rhs	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typename Lhs::PlainObject m_rhs;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhsEval	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<Rhs> &m_rhsEval;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsEval	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const evaluator<RhsArg> &m_rhsEval;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_rhsImpl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  RhsEtorType m_rhsImpl;$/;"	m	struct:Eigen::internal::product_evaluator
m_rhsImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<Rhs> m_rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator
m_rhsImpl	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  evaluator<RhsArg> m_rhsImpl;$/;"	m	struct:Eigen::internal::sparse_conjunction_evaluator
m_rhsIter	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_rhsIter	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
m_rhsXprImpl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  evaluator<ActualRhs> m_rhsXprImpl;$/;"	m	struct:Eigen::internal::sparse_dense_outer_product_evaluator
m_row	plugin/Eigen/src/Core/CommaInitializer.h	/^  Index m_row;              \/\/ current row id$/;"	m	struct:Eigen::CommaInitializer
m_row	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  StorageIndex m_row, m_col;$/;"	m	class:Eigen::Triplet
m_row	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index m_row; \/\/ Number of rows$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowFactor	plugin/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, RowFactor> m_rowFactor;$/;"	m	class:Eigen::Replicate
m_rowIndices	plugin/Eigen/src/Core/IndexedView.h	/^  RowIndices m_rowIndices;$/;"	m	class:Eigen::IndexedView
m_rowind	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind; \/\/ Array of compressed row indices of rectangular supernodes$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rowind_colptr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_rowind_colptr; \/\/rowind_colptr[j] stores the location in rowind[] which starts column j$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_rows	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrix
m_rows	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_rows	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ArgType::RowsAtCompileTime> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, ReverseRow ? ArgType::RowsAtCompileTime : 1> m_rows;$/;"	m	struct:Eigen::internal::unary_evaluator
m_rows	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::CwiseNullaryOp
m_rows	plugin/Eigen/src/Core/DenseStorage.h	/^    Index m_rows;$/;"	m	class:Eigen::DenseStorage
m_rows	plugin/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::MapBase
m_rows	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index m_rows;$/;"	m	class:Eigen::SPQR
m_rows	plugin/Eigen/src/SVD/SVDBase.h	/^  Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::SVDBase
m_rowsTranspositions	plugin/Eigen/src/LU/FullPivLU.h	/^    IntColVectorType m_rowsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_rowsTranspositions	plugin/Eigen/src/LU/PartialPivLU.h	/^    TranspositionType m_rowsTranspositions;$/;"	m	class:Eigen::PartialPivLU
m_rowsTranspositions	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename IntDiagSizeVectorType::Nested m_rowsTranspositions;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_rows_transpositions	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntDiagSizeVectorType m_rows_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_s	plugin/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_scale	plugin/Eigen/src/Core/ProductEvaluators.h	/^    Scalar m_scale;$/;"	m	struct:Eigen::internal::generic_product_impl::adds
m_scale	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    VectorRx m_scale;            \/\/ The vector for scaling the matrix $/;"	m	class:Eigen::IncompleteCholesky
m_scaledMatrix	plugin/Eigen/src/SVD/JacobiSVD.h	/^    MatrixType m_scaledMatrix;$/;"	m	class:Eigen::JacobiSVD
m_schur	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexSchur<MatrixType> m_schur;$/;"	m	class:Eigen::ComplexEigenSolver
m_shift	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_shift;$/;"	m	class:Eigen::HouseholderSequence
m_shiftOffset	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    double m_shiftOffset[2];$/;"	m	class:Eigen::CholmodBase
m_shiftOffset	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftOffset;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shiftScale	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftScale;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_sign	plugin/Eigen/src/Cholesky/LDLT.h	/^    internal::SignMatrix m_sign;$/;"	m	class:Eigen::LDLT
m_singularValues	plugin/Eigen/src/SVD/SVDBase.h	/^  SingularValuesType m_singularValues;$/;"	m	class:Eigen::SVDBase
m_size	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  SizeType  m_size;$/;"	m	class:Eigen::ArithmeticSequence
m_size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  variable_if_dynamic<Index,XprSize> m_size;$/;"	m	struct:Eigen::internal::AllRange
m_size	plugin/Eigen/src/Core/util/Memory.h	/^    std::size_t m_size;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_size	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_size; \/\/ Size of the matrix $/;"	m	class:Eigen::PastixBase
m_size	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_size;$/;"	m	class:Eigen::PardisoImpl
m_size	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_size;$/;"	m	class:Eigen::internal::AmbiVector
m_size	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    Index m_size;$/;"	m	class:Eigen::internal::CompressedStorage
m_size	plugin/Eigen/src/SparseCore/SparseVector.h	/^    Index m_size;$/;"	m	class:Eigen::SparseVector
m_size1	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Index m_size1;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_sizeA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeA;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Index m_sizeB;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sluA	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluA;$/;"	m	class:Eigen::SuperLUBase
m_sluB	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sluBerr	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluCscale	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluEqued	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable char m_sluEqued;$/;"	m	class:Eigen::SuperLUBase
m_sluEtree	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable std::vector<int> m_sluEtree;$/;"	m	class:Eigen::SuperLUBase
m_sluFerr	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluL	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluOptions	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable superlu_options_t m_sluOptions;$/;"	m	class:Eigen::SuperLUBase
m_sluRscale	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluStat	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperLUStat_t m_sluStat;$/;"	m	class:Eigen::SuperLUBase
m_sluU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluX	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sparseIter	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    SparseXprIter m_sparseIter;$/;"	m	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
m_sparseXprEval	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprEval;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_sparseXprImpl	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  evaluator<SparseXprType> m_sparseXprImpl;$/;"	m	struct:Eigen::internal::sparse_diagonal_product_evaluator
m_spqr	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr; $/;"	m	struct:Eigen::SPQR_QProduct
m_spqr	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQReturnType
m_spqr	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  const SPQRType& m_spqr;$/;"	m	struct:Eigen::SPQRMatrixQTransposeReturnType
m_src	plugin/Eigen/src/Core/AssignEvaluator.h	/^  const SrcEvaluatorType& m_src;$/;"	m	class:Eigen::internal::generic_dense_assignment_kernel
m_start	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex m_start;$/;"	m	class:Eigen::internal::AmbiVector
m_start	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    Index m_start;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_startCol	plugin/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, (XprType::ColsAtCompileTime == 1 && BlockCols==1) ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startCol	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, (ArgType::ColsAtCompileTime == 1 && BlockCols==1) ? 0 : Dynamic> m_startCol;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startCol	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::BlockImpl
m_startRow	plugin/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<StorageIndex, (XprType::RowsAtCompileTime == 1 && BlockRows==1) ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_startRow	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const variable_if_dynamic<Index, (ArgType::RowsAtCompileTime == 1 && BlockRows==1) ? 0 : Dynamic> m_startRow;$/;"	m	struct:Eigen::internal::unary_evaluator
m_startRow	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::BlockImpl
m_startidval	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_startidval;               \/\/ Start of the column value$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_staticA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX LhsScalar m_staticA[SizeA];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticA	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticA[SizeA * sizeof(LhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX RhsScalar m_staticB[SizeB];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN_MAX char m_staticB[SizeB * sizeof(RhsScalar) + EIGEN_DEFAULT_ALIGN_BYTES-1];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_step	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar m_step;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_storage	plugin/Eigen/src/Core/PlainObjectBase.h	/^    DenseStorage<Scalar, Base::MaxSizeAtCompileTime, Base::RowsAtCompileTime, Base::ColsAtCompileTime, Options> m_storage;$/;"	m	class:Eigen::PlainObjectBase
m_stride	plugin/Eigen/src/Core/Map.h	/^    StrideType m_stride;$/;"	m	class:Eigen::Map
m_stride	plugin/Eigen/src/Core/Ref.h	/^  StrideBase m_stride;$/;"	m	class:Eigen::RefBase
m_stride	plugin/Eigen/src/Core/util/BlasUtil.h	/^  const Index m_stride;$/;"	m	class:Eigen::internal::blas_data_mapper
m_structureIsUptodate	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_structureIsUptodate;$/;"	m	class:Eigen::PastixLU
m_subdiag	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typename TridiagonalizationType::SubDiagonalType m_subdiag;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_subs	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrix
m_subs	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_sup_to_col	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* m_sup_to_col; \/\/sup_to_col[s] points to the starting column of the s-th supernode$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix
m_supers	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrix
m_supers	plugin/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_supno	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Index m_supno;                    \/\/ Current SuperNode number$/;"	m	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
m_sve	plugin/Eigen/src/SparseCore/SparseView.h	/^        const unary_evaluator &m_sve;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_symbolic	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    klu_symbolic* m_symbolic;$/;"	m	class:Eigen::KLU
m_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_symbolic;$/;"	m	class:Eigen::UmfPackLU
m_symmetricmode	plugin/Eigen/src/SparseLU/SparseLU.h	/^    bool m_symmetricmode;$/;"	m	class:Eigen::SparseLU
m_temp	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    VectorType m_temp;$/;"	m	class:Eigen::HessenbergDecomposition
m_temp	plugin/Eigen/src/Geometry/Homogeneous.h	/^  PlainObject m_temp;$/;"	m	struct:Eigen::internal::unary_evaluator
m_temp	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::ColPivHouseholderQR
m_temp	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  RowVectorType m_temp;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_temp	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::FullPivHouseholderQR
m_temp	plugin/Eigen/src/QR/HouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::HouseholderQR
m_temporary	plugin/Eigen/src/Cholesky/LDLT.h	/^    TmpMatrixType m_temporary;$/;"	m	class:Eigen::LDLT
m_then	plugin/Eigen/src/Core/Select.h	/^    typename ThenMatrixType::Nested m_then;$/;"	m	class:Eigen::Select
m_thenImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^  evaluator<ThenMatrixType> m_thenImpl;$/;"	m	struct:Eigen::internal::evaluator
m_threshold	plugin/Eigen/src/SparseQR/SparseQR.h	/^    RealScalar m_threshold;         \/\/ Threshold to determine null Householder reflections$/;"	m	class:Eigen::SparseQR
m_tmp	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::EigenSolver
m_tmp	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    ComplexVectorType m_tmp;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_tolerance	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar m_tolerance;$/;"	m	class:Eigen::IterativeSolverBase
m_tolerance	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    RealScalar m_tolerance; \/\/ treat columns with 2-norm below this tolerance as zero$/;"	m	class:Eigen::SPQR
m_transpose	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  bool m_transpose; $/;"	m	struct:Eigen::SPQR_QProduct
m_transpose	plugin/Eigen/src/SparseQR/SparseQR.h	/^  bool m_transpose;$/;"	m	struct:Eigen::SparseQR_QProduct
m_transpositions	plugin/Eigen/src/Cholesky/LDLT.h	/^    TranspositionType m_transpositions;$/;"	m	class:Eigen::LDLT
m_transpositions	plugin/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	class:Eigen::Transpose
m_triangularMatrix	plugin/Eigen/src/Core/SolveTriangular.h	/^    const TriangularType& m_triangularMatrix;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_type	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    StorageIndex m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_u	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::SuperLUBase
m_u	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::UmfPackLU
m_umfpackInfo	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable UmfpackInfo m_umfpackInfo;$/;"	m	class:Eigen::UmfPackLU
m_useDefaultThreshold	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SPQR
m_useDefaultThreshold	plugin/Eigen/src/SparseQR/SparseQR.h	/^    bool m_useDefaultThreshold;     \/\/ Use default threshold$/;"	m	class:Eigen::SparseQR
m_usePrescribedThreshold	plugin/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_usePrescribedThreshold	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_usePrescribedThreshold	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_usePrescribedThreshold	plugin/Eigen/src/SVD/SVDBase.h	/^  bool m_isInitialized, m_isAllocated, m_usePrescribedThreshold;$/;"	m	class:Eigen::SVDBase
m_use_divisor	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const bool m_use_divisor;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_val	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  T m_val;$/;"	m	struct:Eigen::internal::eigen_packet_wrapper
m_val	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  T m_val;$/;"	m	struct:Eigen::internal::eigen_packet_wrapper
m_value	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  first_argument_type m_value;$/;"	m	struct:Eigen::internal::bind1st_op
m_value	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  second_argument_type m_value;$/;"	m	struct:Eigen::internal::bind2nd_op
m_value	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index m_value;$/;"	m	struct:Eigen::internal::SingleRange
m_value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  int m_value;$/;"	m	class:Eigen::internal::VariableAndFixedInt
m_value	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index m_value;$/;"	m	class:Eigen::Symbolic::SymbolValue
m_value	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  IndexType m_value;$/;"	m	class:Eigen::Symbolic::ValueExpr
m_value	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Scalar m_value;$/;"	m	class:Eigen::internal::binary_evaluator::InnerIterator
m_value	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex m_value;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_value	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  Scalar m_value;$/;"	m	class:Eigen::Triplet
m_values	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* m_values;$/;"	m	class:Eigen::internal::CompressedStorage
m_values	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::InnerIterator
m_values	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseCompressedBase::ReverseInnerIterator
m_values	plugin/Eigen/src/SparseCore/SparseMap.h	/^    ScalarPointer m_values;$/;"	m	class:Eigen::SparseMapBase
m_valuesOkay	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_valuesOkay, m_vectorsOkay;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_vector	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    const AmbiVector& m_vector; \/\/ the target vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_vectors	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    typename VectorsType::Nested m_vectors;$/;"	m	class:Eigen::HouseholderSequence
m_vectorsOkay	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    bool m_valuesOkay, m_vectorsOkay;$/;"	m	class:Eigen::GeneralizedEigenSolver
m_view	plugin/Eigen/src/SparseCore/SparseView.h	/^        const XprType &m_view;$/;"	m	class:Eigen::internal::unary_evaluator::InnerIterator
m_view	plugin/Eigen/src/SparseCore/SparseView.h	/^    const XprType &m_view;$/;"	m	struct:Eigen::internal::unary_evaluator
m_workspace	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      Matrix<Scalar,Dynamic,1> m_workspace;$/;"	m	class:Eigen::RealQZ
m_workspace	plugin/Eigen/src/SVD/BDCSVD.h	/^  ArrayXr m_workspace;$/;"	m	class:Eigen::BDCSVD
m_workspace	plugin/Eigen/src/SVD/JacobiSVD.h	/^  WorkspaceType m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_col_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	plugin/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_row_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspaceI	plugin/Eigen/src/SVD/BDCSVD.h	/^  ArrayXi m_workspaceI;$/;"	m	class:Eigen::BDCSVD
m_workspaceVector	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    ColumnVectorType m_workspaceVector;$/;"	m	class:Eigen::RealSchur
m_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^  const internal::nullary_wrapper<CoeffReturnType,NullaryOp> m_wrapper;$/;"	m	struct:Eigen::internal::evaluator
m_xpr	plugin/Eigen/src/Core/Block.h	/^    XprTypeNested m_xpr;$/;"	m	class:Eigen::internal::BlockImpl_dense
m_xpr	plugin/Eigen/src/Core/CommaInitializer.h	/^  XprType& m_xpr;           \/\/ target expression$/;"	m	struct:Eigen::CommaInitializer
m_xpr	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    XprTypeNested m_xpr;$/;"	m	class:Eigen::CwiseUnaryOp
m_xpr	plugin/Eigen/src/Core/IndexedView.h	/^  MatrixTypeNested m_xpr;$/;"	m	class:Eigen::IndexedView
m_xpr	plugin/Eigen/src/Core/IndexedView.h	/^  const XprType& m_xpr;$/;"	m	struct:Eigen::internal::unary_evaluator
m_xpr	plugin/Eigen/src/Core/Inverse.h	/^  XprTypeNested m_xpr;$/;"	m	class:Eigen::Inverse
m_xpr	plugin/Eigen/src/Core/Redux.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::redux_evaluator
m_xpr	plugin/Eigen/src/Core/Visitor.h	/^  const XprType &m_xpr;$/;"	m	class:Eigen::internal::visitor_evaluator
m_zCoeffs	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  HCoeffsType m_zCoeffs;$/;"	m	class:Eigen::CompleteOrthogonalDecomposition
m_zero	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_zero;$/;"	m	class:Eigen::internal::AmbiVector
m_zero	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  const Scalar m_zero;$/;"	m	struct:Eigen::internal::evaluator
m_zero_nnz	plugin/Eigen/src/SparseCore/SparseMap.h	/^    Array<StorageIndex,2,1>  m_zero_nnz;$/;"	m	class:Eigen::SparseMapBase
madd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, DoublePacketType& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, ResPacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacketType& a, const RhsPacketType& b, AccPacketType& c, AccPacketType& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp, const true_type&) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsScalar& a, const RhsScalar& b, ResScalar& c, RhsScalar& \/*tmp*\/, const false_type&) const$/;"	f	class:Eigen::internal::gebp_traits
mag_array	src/utils.c	/^float mag_array(float *a, int n)$/;"	f
main	examples/darknet.c	/^int main(int argc, char **argv)$/;"	f
makeAffine	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC void makeAffine()$/;"	f	class:Eigen::Transform
makeCompressed	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void makeCompressed()$/;"	f	class:Eigen::SparseMatrix
makeGivens	plugin/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	plugin/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	plugin/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)$/;"	f	class:Eigen::JacobiRotation
makeHouseholder	plugin/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholder($/;"	f	class:Eigen::MatrixBase
makeHouseholderInPlace	plugin/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)$/;"	f	class:Eigen::MatrixBase
makeIndexedViewCompatible	plugin/Eigen/src/Core/ArithmeticSequence.h	/^makeIndexedViewCompatible(const ArithmeticSequence<FirstType,SizeType,IncrType>& ids, Index size,SpecializedType) {$/;"	f	namespace:Eigen::internal
makeIndexedViewCompatible	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^const T& makeIndexedViewCompatible(const T& x, Index \/*size*\/, Q) { return x; }$/;"	f	namespace:Eigen::internal
makeIndexedViewCompatible	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^inline AllRange<get_fixed_value<XprSizeType>::value> makeIndexedViewCompatible(all_t , XprSizeType size, SpecializedType) {$/;"	f	namespace:Eigen::internal
makeIndexedViewCompatible	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^makeIndexedViewCompatible(const T& id, Index size, SpecializedType) {$/;"	f	namespace:Eigen::internal
makeJacobi	plugin/Eigen/src/Jacobi/Jacobi.h	/^bool JacobiRotation<Scalar>::makeJacobi(const RealScalar& x, const Scalar& y, const RealScalar& z)$/;"	f	class:Eigen::JacobiRotation
makeJacobi	plugin/Eigen/src/Jacobi/Jacobi.h	/^inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, Index p, Index q)$/;"	f	class:Eigen::JacobiRotation
make_activation_layer	src/activation_layer.c	/^layer make_activation_layer(int batch, int inputs, ACTIVATION activation)$/;"	f
make_avgpool_layer	src/avgpool_layer.c	/^avgpool_layer make_avgpool_layer(int batch, int w, int h, int c)$/;"	f
make_batchnorm_layer	src/batchnorm_layer.c	/^layer make_batchnorm_layer(int batch, int w, int h, int c)$/;"	f
make_block_householder_triangular_factor	plugin/Eigen/src/Householder/BlockHouseholder.h	/^void make_block_householder_triangular_factor(TriangularFactorType& triFactor, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
make_boxes	python/darknet.py	/^make_boxes = lib.make_boxes$/;"	v
make_boxes	src/network.c	/^box *make_boxes(network *net)$/;"	f
make_connected_layer	src/connected_layer.c	/^layer make_connected_layer(int batch, int inputs, int outputs, ACTIVATION activation, int batch_normalize, int adam)$/;"	f
make_convolutional_layer	src/convolutional_layer.c	/^convolutional_layer make_convolutional_layer(int batch, int h, int w, int c, int n, int groups, int size, int stride, int padding, ACTIVATION activation, int batch_normalize, int binary, int xnor, int adam)$/;"	f
make_cost_layer	src/cost_layer.c	/^cost_layer make_cost_layer(int batch, int inputs, COST_TYPE cost_type, float scale)$/;"	f
make_crnn_layer	src/crnn_layer.c	/^layer make_crnn_layer(int batch, int h, int w, int c, int hidden_filters, int output_filters, int steps, ACTIVATION activation, int batch_normalize)$/;"	f
make_crop_layer	src/crop_layer.c	/^crop_layer make_crop_layer(int batch, int h, int w, int c, int crop_height, int crop_width, int flip, float angle, float saturation, float exposure)$/;"	f
make_deconvolutional_layer	src/deconvolutional_layer.c	/^layer make_deconvolutional_layer(int batch, int h, int w, int c, int n, int size, int stride, int padding, ACTIVATION activation, int batch_normalize, int adam)$/;"	f
make_detection_layer	src/detection_layer.c	/^detection_layer make_detection_layer(int batch, int inputs, int n, int side, int classes, int coords, int rescore)$/;"	f
make_dropout_layer	src/dropout_layer.c	/^dropout_layer make_dropout_layer(int batch, int inputs, float probability)$/;"	f
make_empty_image	src/image.c	/^image make_empty_image(int w, int h, int c)$/;"	f
make_gru_layer	src/gru_layer.c	/^layer make_gru_layer(int batch, int inputs, int outputs, int steps, int batch_normalize, int adam)$/;"	f
make_image	python/darknet.py	/^make_image = lib.make_image$/;"	v
make_image	src/image.c	/^image make_image(int w, int h, int c)$/;"	f
make_labels	data/labels/make_labels.py	/^def make_labels(s):$/;"	f
make_list	src/list.c	/^list *make_list()$/;"	f
make_local_layer	src/local_layer.c	/^local_layer make_local_layer(int batch, int h, int w, int c, int n, int size, int stride, int pad, ACTIVATION activation)$/;"	f
make_lstm_layer	src/lstm_layer.c	/^layer make_lstm_layer(int batch, int inputs, int outputs, int steps, int batch_normalize, int adam)$/;"	f
make_matrix	src/matrix.c	/^matrix make_matrix(int rows, int cols)$/;"	f
make_maxpool_layer	src/maxpool_layer.c	/^maxpool_layer make_maxpool_layer(int batch, int h, int w, int c, int size, int stride, int padding)$/;"	f
make_network	src/network.c	/^network *make_network(int n)$/;"	f
make_normalization_layer	src/normalization_layer.c	/^layer make_normalization_layer(int batch, int w, int h, int c, int size, float alpha, float beta, float kappa)$/;"	f
make_probs	python/darknet.py	/^make_probs = lib.make_probs$/;"	v
make_probs	src/network.c	/^float **make_probs(network *net)$/;"	f
make_random_image	src/image.c	/^image make_random_image(int w, int h, int c)$/;"	f
make_region_layer	src/region_layer.c	/^layer make_region_layer(int batch, int w, int h, int n, int classes, int coords)$/;"	f
make_reorg_layer	src/reorg_layer.c	/^layer make_reorg_layer(int batch, int w, int h, int c, int stride, int reverse, int flatten, int extra)$/;"	f
make_rnn_layer	src/rnn_layer.c	/^layer make_rnn_layer(int batch, int inputs, int outputs, int steps, ACTIVATION activation, int batch_normalize, int adam)$/;"	f
make_route_layer	src/route_layer.c	/^route_layer make_route_layer(int batch, int n, int *input_layers, int *input_sizes)$/;"	f
make_shortcut_layer	src/shortcut_layer.c	/^layer make_shortcut_layer(int batch, int index, int w, int h, int c, int w2, int h2, int c2)$/;"	f
make_size_type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^struct make_size_type {$/;"	s	namespace:Eigen::internal
make_softmax_layer	src/softmax_layer.c	/^softmax_layer make_softmax_layer(int batch, int inputs, int groups)$/;"	f
makes_safe_go	examples/go.c	/^static int makes_safe_go(float *b, int *lib, int p, int r, int c){$/;"	f	file:
malloc_error	src/utils.c	/^void malloc_error()$/;"	f
manageErrorCode	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void manageErrorCode(Index error) const$/;"	f	class:Eigen::PardisoImpl
manage_caching_sizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1, std::ptrdiff_t* l2, std::ptrdiff_t* l3)$/;"	f	namespace:Eigen::internal
manage_caching_sizes_helper	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)$/;"	f	namespace:Eigen::internal
manage_multi_threading	plugin/Eigen/src/Core/products/Parallelizer.h	/^inline void manage_multi_threading(Action action, int* v)$/;"	f	namespace:Eigen::internal
map	include/darknet.h	/^    int   * map;$/;"	m	struct:layer
map_superlu	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> map_superlu(SluMatrix& sluMat)$/;"	f	namespace:Eigen::internal
mapbase_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit mapbase_evaluator(const XprType& map)$/;"	f	struct:Eigen::internal::mapbase_evaluator
mapbase_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct mapbase_evaluator : evaluator_base<Derived>$/;"	s	namespace:Eigen::internal
mark	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType mark ;  \/* for computing set differences and marking dead rows*\/$/;"	m	union:internal::Colamd_Row::__anon127
markAsRValue	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& markAsRValue() { m_isRValue = true; return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
marker	src/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon12
mask_scale	include/darknet.h	/^    float mask_scale;$/;"	m	struct:layer
mask_to_rgb	src/image.c	/^image mask_to_rgb(image mask)$/;"	f
matPrefix	plugin/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matSuffix	plugin/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
match	plugin/Eigen/src/Core/Ref.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
match	plugin/Eigen/src/SparseCore/SparseRef.h	/^  template<typename Derived> struct match {$/;"	s	struct:Eigen::internal::traits
matrix	include/darknet.h	/^typedef struct matrix{$/;"	s
matrix	include/darknet.h	/^} matrix;$/;"	t	typeref:struct:matrix
matrix	plugin/Eigen/src/Core/ArrayBase.h	/^    MatrixWrapper<Derived> matrix() { return MatrixWrapper<Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	plugin/Eigen/src/Core/ArrayBase.h	/^    const MatrixWrapper<const Derived> matrix() const { return MatrixWrapper<const Derived>(derived()); }$/;"	f	class:Eigen::ArrayBase
matrix	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC MatrixBase<Derived>& matrix() { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC const MatrixBase<Derived>& matrix() const { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType matrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
matrix	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType& matrix() const$/;"	f	class:Eigen::IterativeSolverBase
matrix	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType& matrix() const$/;"	f	class:Eigen::internal::generic_matrix_wrapper
matrix	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const NestedExpression& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
matrix	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const _MatrixTypeNested& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typename internal::remove_reference<MatrixTypeNested>::type& matrix() { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrixH	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixHReturnType matrixH() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixL	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LDLT
matrixL	plugin/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LLT
matrixL	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const FactorType& matrixL() const { eigen_assert("m_factorizationIsOk"); return m_L; }$/;"	f	class:Eigen::IncompleteCholesky
matrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixL	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLLT
matrixL	plugin/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixLReturnType<SCMatrix> matrixL() const$/;"	f	class:Eigen::SparseLU
matrixL	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const LMatrixType& matrixL() const$/;"	f	class:Eigen::SuperLU
matrixL	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixL() const$/;"	f	class:Eigen::UmfPackLU
matrixLDLT	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline const MatrixType& matrixLDLT() const$/;"	f	class:Eigen::LDLT
matrixLLT	plugin/Eigen/src/Cholesky/LLT.h	/^    inline const MatrixType& matrixLLT() const$/;"	f	class:Eigen::LLT
matrixLU	plugin/Eigen/src/LU/FullPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::FullPivLU
matrixLU	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::PartialPivLU
matrixQ	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixQ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixQ() const {$/;"	f	class:Eigen::RealQZ
matrixQ	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::Tridiagonalization
matrixQ	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQ	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  HouseholderSequenceType matrixQ(void) const { return m_cpqr.householderQ(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixQ	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^inline typename FullPivHouseholderQR<MatrixType>::MatrixQReturnType FullPivHouseholderQR<MatrixType>::matrixQ() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQ	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    SPQRMatrixQReturnType<SPQR> matrixQ() const$/;"	f	class:Eigen::SPQR
matrixQ	plugin/Eigen/src/SparseQR/SparseQR.h	/^    SparseQRMatrixQReturnType<SparseQR> matrixQ() const $/;"	f	class:Eigen::SparseQR
matrixQR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQR	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	plugin/Eigen/src/QR/HouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::HouseholderQR
matrixQTZ	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const MatrixType& matrixQTZ() const { return m_cpqr.matrixQR(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixR	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    const MatrixType matrixR() const$/;"	f	class:Eigen::SPQR
matrixR	plugin/Eigen/src/SparseQR/SparseQR.h	/^    const QRMatrixType& matrixR() const { return m_R; }$/;"	f	class:Eigen::SparseQR
matrixS	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixS() const {$/;"	f	class:Eigen::RealQZ
matrixT	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixT() const$/;"	f	class:Eigen::ComplexSchur
matrixT	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixT() const {$/;"	f	class:Eigen::RealQZ
matrixT	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixT() const$/;"	f	class:Eigen::RealSchur
matrixT	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixTReturnType matrixT() const$/;"	f	class:Eigen::Tridiagonalization
matrixT	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const MatrixType& matrixT() const { return m_cpqr.matrixQR(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrixU	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LDLT
matrixU	plugin/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LLT
matrixU	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixU() const$/;"	f	class:Eigen::ComplexSchur
matrixU	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixU() const$/;"	f	class:Eigen::RealSchur
matrixU	plugin/Eigen/src/SVD/SVDBase.h	/^  const MatrixUType& matrixU() const$/;"	f	class:Eigen::SVDBase
matrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixU	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLLT
matrixU	plugin/Eigen/src/SparseLU/SparseLU.h	/^    SparseLUMatrixUReturnType<SCMatrix,MappedSparseMatrix<Scalar,ColMajor,StorageIndex> > matrixU() const$/;"	f	class:Eigen::SparseLU
matrixU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const UMatrixType& matrixU() const$/;"	f	class:Eigen::SuperLU
matrixU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixU() const$/;"	f	class:Eigen::UmfPackLU
matrixV	plugin/Eigen/src/SVD/SVDBase.h	/^  const MatrixVType& matrixV() const$/;"	f	class:Eigen::SVDBase
matrixZ	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      const MatrixType& matrixZ() const {$/;"	f	class:Eigen::RealQZ
matrixZ	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  MatrixType matrixZ() const {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
matrix_add_matrix	src/matrix.c	/^void matrix_add_matrix(matrix from, matrix to)$/;"	f
matrix_swap_impl	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl$/;"	s	namespace:Eigen::internal
matrix_swap_impl	plugin/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>$/;"	s	namespace:Eigen::internal
matrix_to_csv	src/matrix.c	/^void matrix_to_csv(matrix m)$/;"	f
matrix_topk_accuracy	src/matrix.c	/^float matrix_topk_accuracy(matrix truth, matrix guess, int k)$/;"	f
matrix_type_times_scalar_type	plugin/Eigen/src/Householder/HouseholderSequence.h	/^template<typename OtherScalarType, typename MatrixType> struct matrix_type_times_scalar_type$/;"	s	namespace:Eigen::internal
max	include/darknet.h	/^    int min, max, size;$/;"	m	struct:load_args
max	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half (max)() { return Eigen::half_impl::raw_uint16_to_half(0x7bff); }$/;"	f	class:std::numeric_limits::Eigen
max	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half (max)(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
max	plugin/Eigen/src/Core/util/Meta.h	/^  static T (max)() { assert(false && "Highest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static double (max)() { return DBL_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static float (max)() { return CUDART_MAX_NORMAL_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static int (max)() { return INT_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static long (max)() { return LONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static long long (max)() { return LLONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned int (max)() { return UINT_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long (max)() { return ULONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long long (max)() { return ULLONG_MAX; }$/;"	f	struct:Eigen::internal::device::numeric_limits
max	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^max$/;"	f
maxCoeff	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::maxCoeff() const$/;"	f	class:Eigen::DenseBase
maxCoeff	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const MaxCoeffReturnType maxCoeff() const$/;"	f	class:Eigen::VectorwiseOp
maxCoeff	plugin/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
maxCoeff	plugin/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* rowPtr, IndexType* colPtr) const$/;"	f	class:Eigen::DenseBase
maxIterations	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index maxIterations() const$/;"	f	class:Eigen::IterativeSolverBase
maxPivot	plugin/Eigen/src/LU/FullPivLU.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivLU
maxPivot	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::ColPivHouseholderQR
maxPivot	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline RealScalar maxPivot() const { return m_cpqr.maxPivot(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
maxPivot	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivHouseholderQR
max_batches	include/darknet.h	/^    int max_batches;$/;"	m	struct:network
max_boxes	include/darknet.h	/^    int max_boxes;$/;"	m	struct:layer
max_coeff_visitor	plugin/Eigen/src/Core/Visitor.h	/^struct max_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
max_crop	include/darknet.h	/^    int max_crop;$/;"	m	struct:network
max_digits10	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int max_digits10 = 5;  \/\/ according to http:\/\/half.sourceforge.net\/structstd_1_1numeric__limits_3_01half__float_1_1half_01_4.html$/;"	m	struct:std::numeric_limits
max_exponent	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int max_exponent = 16;$/;"	m	struct:std::numeric_limits
max_exponent10	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int max_exponent10 = 4;$/;"	m	struct:std::numeric_limits
max_index	src/utils.c	/^int max_index(float *a, int n)$/;"	f
max_int_index	src/utils.c	/^int max_int_index(int *a, int n)$/;"	f
max_ratio	include/darknet.h	/^    float max_ratio;$/;"	m	struct:network
max_size	plugin/Eigen/src/Core/Matrix.h	/^      max_size = is_dynamic_size_storage ? Dynamic : _MaxRows*_MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon676
max_x	src/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon22
max_y	src/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon22
maxcode	src/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon15
maxcode	src/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon11
maxi	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T maxi(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
maxpool_layer	src/maxpool_layer.h	/^typedef layer maxpool_layer;$/;"	t
maxsuper	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index maxsuper; \/\/ The maximum size for a supernode in complete LU$/;"	m	struct:Eigen::internal::perfvalues
mc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index mc() const { return m_mc; }$/;"	f	class:Eigen::internal::level3_blocking
mcts	examples/go.c	/^    float mcts;$/;"	m	struct:__anon26	file:
mcts_tree	examples/go.c	/^typedef struct mcts_tree{$/;"	s	file:
mcts_tree	examples/go.c	/^} mcts_tree;$/;"	t	typeref:struct:mcts_tree	file:
mean	examples/go.c	/^    float *mean;$/;"	m	struct:mcts_tree	file:
mean	include/darknet.h	/^    float * mean;$/;"	m	struct:layer
mean	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::mean() const$/;"	f	class:Eigen::DenseBase
mean	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const MeanReturnType mean() const$/;"	f	class:Eigen::VectorwiseOp
mean_array	src/utils.c	/^float mean_array(float *a, int n)$/;"	f
mean_arrays	src/utils.c	/^void mean_arrays(float **a, int n, int els, float *avg)$/;"	f
mean_cpu	src/blas.c	/^void mean_cpu(float *x, int batch, int filters, int spatial, float *mean)$/;"	f
mean_delta	include/darknet.h	/^    float * mean_delta;$/;"	m	struct:layer
mean_delta_cpu	src/batchnorm_layer.c	/^void mean_delta_cpu(float *delta, float *variance, int batch, int filters, int spatial, float *mean_delta)$/;"	f
mean_delta_gpu	include/darknet.h	/^    float * mean_delta_gpu;$/;"	m	struct:layer
mean_gpu	include/darknet.h	/^    float * mean_gpu;$/;"	m	struct:layer
memInit	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memInit(Index m, Index n, Index annz, Index lwork, Index fillratio, Index panel_size,  GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
memXpand	plugin/Eigen/src/SparseLU/SparseLU_Memory.h	/^Index SparseLUImpl<Scalar,StorageIndex>::memXpand(VectorType& vec, Index& maxlen, Index nbElts, MemType memtype, Index& num_expansions)$/;"	f	class:Eigen::internal::SparseLUImpl
mem_expand	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  void mem_expand(IndexVector& lsub, Index& nextl, Index chmark)$/;"	f	struct:Eigen::internal::column_dfs_traits
mem_expand	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  void mem_expand(IndexVector& \/*glu.lsub*\/, Index \/*nextl*\/, Index \/*chmark*\/) {}$/;"	f	struct:Eigen::internal::panel_dfs_traits
member_lpnorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC member_lpnorm() {}$/;"	f	struct:Eigen::internal::member_lpnorm
member_lpnorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^struct member_lpnorm {$/;"	s	namespace:Eigen::internal
member_redux	plugin/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC explicit member_redux(const BinaryOp func) : m_functor(func) {}$/;"	f	struct:Eigen::internal::member_redux
member_redux	plugin/Eigen/src/Core/VectorwiseOp.h	/^struct member_redux {$/;"	s	namespace:Eigen::internal
merge_weights	src/network.c	/^void merge_weights(layer l, layer base)$/;"	f
merged	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox merged(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
meta	examples/detector-scipy-opencv.py	/^meta = dn.load_meta("cfg\/coco.data")$/;"	v
meta	examples/detector.py	/^meta = dn.load_meta("cfg\/thor.data")$/;"	v
meta	python/darknet.py	/^    meta = load_meta("cfg\/coco.data")$/;"	v
meta_floor_log2	plugin/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2 {};$/;"	s	namespace:Eigen::internal
meta_floor_log2	plugin/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_bogus>$/;"	s	namespace:Eigen::internal
meta_floor_log2	plugin/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_down>$/;"	s	namespace:Eigen::internal
meta_floor_log2	plugin/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_move_up>$/;"	s	namespace:Eigen::internal
meta_floor_log2	plugin/Eigen/src/Core/MathFunctions.h	/^struct meta_floor_log2<n, lower, upper, meta_floor_log2_terminate>$/;"	s	namespace:Eigen::internal
meta_floor_log2_bogus	plugin/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_bogus$/;"	e	enum:Eigen::internal::__anon666
meta_floor_log2_move_down	plugin/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_down,$/;"	e	enum:Eigen::internal::__anon666
meta_floor_log2_move_up	plugin/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_move_up,$/;"	e	enum:Eigen::internal::__anon666
meta_floor_log2_selector	plugin/Eigen/src/Core/MathFunctions.h	/^template<unsigned int n, int lower, int upper> struct meta_floor_log2_selector$/;"	s	namespace:Eigen::internal
meta_floor_log2_terminate	plugin/Eigen/src/Core/MathFunctions.h	/^  meta_floor_log2_terminate,$/;"	e	enum:Eigen::internal::__anon666
meta_least_common_multiple	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_least_common_multiple$/;"	s	namespace:Eigen
meta_least_common_multiple	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_least_common_multiple<A,B,K,true>$/;"	s	namespace:Eigen
meta_no	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_no  { char a[2]; };$/;"	s	namespace:Eigen::internal
meta_sqrt	plugin/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c	namespace:Eigen
meta_yes	plugin/Eigen/src/Core/util/Meta.h	/^struct meta_yes { char a[1]; };$/;"	s	namespace:Eigen::internal
metadata	include/darknet.h	/^} metadata;$/;"	t	typeref:struct:__anon724
middle	plugin/Eigen/src/Core/MathFunctions.h	/^  enum { middle = (lower + upper) \/ 2,$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon667
middleCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N) const$/;"	f
middleCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type middleCols(Index startCol, Index n = N)$/;"	f
middleCols	plugin/Eigen/src/plugins/BlockMethods.h	/^middleCols(Index startCol, NColsType numCols) const$/;"	f
middleCols	plugin/Eigen/src/plugins/BlockMethods.h	/^middleCols(Index startCol, NColsType numCols)$/;"	f
middleRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N) const$/;"	f
middleRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type middleRows(Index startRow, Index n = N)$/;"	f
middleRows	plugin/Eigen/src/plugins/BlockMethods.h	/^middleRows(Index startRow, NRowsType n) const$/;"	f
middleRows	plugin/Eigen/src/plugins/BlockMethods.h	/^middleRows(Index startRow, NRowsType n)$/;"	f
min	include/darknet.h	/^    int min, max, size;$/;"	m	struct:load_args
min	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half (min)() { return Eigen::half_impl::raw_uint16_to_half(0x400); }$/;"	f	class:std::numeric_limits::Eigen
min	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half (min)(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
min	plugin/Eigen/src/Core/util/Meta.h	/^  static T (min)() { assert(false && "Lowest not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static double (min)() { return DBL_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static float (min)() { return FLT_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static int (min)() { return INT_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static long (min)() { return LONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static long long (min)() { return LLONG_MIN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned int (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Core/util/Meta.h	/^  static unsigned long long (min)() { return 0; }$/;"	f	struct:Eigen::internal::device::numeric_limits
min	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^min$/;"	f
minCoeff	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::minCoeff() const$/;"	f	class:Eigen::DenseBase
minCoeff	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const MinCoeffReturnType minCoeff() const$/;"	f	class:Eigen::VectorwiseOp
minCoeff	plugin/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
minCoeff	plugin/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* rowId, IndexType* colId) const$/;"	f	class:Eigen::DenseBase
min_coeff_visitor	plugin/Eigen/src/Core/Visitor.h	/^struct min_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
min_crop	include/darknet.h	/^    int min_crop;$/;"	m	struct:network
min_exponent	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int min_exponent = -13;$/;"	m	struct:std::numeric_limits
min_exponent10	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int min_exponent10 = -4;$/;"	m	struct:std::numeric_limits
min_ratio	include/darknet.h	/^    float min_ratio;$/;"	m	struct:network
mini	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE T mini(const T& x, const T& y)$/;"	f	namespace:Eigen::numext
minimum_degree_ordering	plugin/Eigen/src/OrderingMethods/Amd.h	/^void minimum_degree_ordering(SparseMatrix<Scalar,ColMajor,StorageIndex>& C, PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm)$/;"	f	namespace:Eigen::internal
mkimg	examples/darknet.c	/^void mkimg(char *cfgfile, char *weightfile, int h, int w, int num, char *prefix)$/;"	f
momentum	include/darknet.h	/^    float momentum;$/;"	m	struct:__anon730
momentum	include/darknet.h	/^    float momentum;$/;"	m	struct:network
move	examples/go.c	/^} move;$/;"	t	typeref:struct:__anon26	file:
move	plugin/Eigen/src/Core/DenseStorage.h	/^      , m_cols(std::move(other.m_cols))$/;"	f	class:Eigen::DenseStorage
move	plugin/Eigen/src/Core/DenseStorage.h	/^      , m_rows(std::move(other.m_rows))$/;"	f	class:Eigen::DenseStorage
move	plugin/Eigen/src/Core/PlainObjectBase.h	/^      : m_storage( std::move(other.m_storage) )$/;"	f	class:Eigen::PlainObjectBase
move_go	examples/go.c	/^void move_go(float *b, int p, int r, int c)$/;"	f
move_mcts	examples/go.c	/^mcts_tree *move_mcts(mcts_tree *tree, int index)$/;"	f
moves	examples/go.c	/^} moves;$/;"	t	typeref:struct:__anon25	file:
mp_matrix	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const ActualMatrixType *mp_matrix;$/;"	m	class:Eigen::internal::generic_matrix_wrapper
mp_matrix	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    KLUMatrixRef mp_matrix;$/;"	m	class:Eigen::KLU
mp_matrix	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixRef mp_matrix;$/;"	m	class:Eigen::UmfPackLU
mr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = (EIGEN_PLAIN_ENUM_MIN(16,NumberOfRegisters)\/2\/nr)*ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
mr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 3*LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
mr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
mr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = Vectorizable ? 3*LhsPacketSize : default_mr,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
ms_from	plugin/Eigen/src/Core/util/Meta.h	/^  static From ms_from;$/;"	m	struct:Eigen::internal::is_convertible_impl
ms_from	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  static MatrixType ms_from;$/;"	m	struct:Eigen::internal::is_ref_compatible_impl
mse_array	src/utils.c	/^float mse_array(float *a, int n)$/;"	f
mul_assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^struct mul_assign_op {$/;"	s	namespace:Eigen::internal
mul_cpu	src/blas.c	/^void mul_cpu(int N, float *X, int INCX, float *Y, int INCY)$/;"	f
mult_add_into_cpu	src/blas.c	/^void mult_add_into_cpu(int N, float *X, float *Y, float *Z)$/;"	f
multi_gemm	src/convolutional_layer.c	/^void multi_gemm(int thread_num, float *a, unsigned int ar, unsigned int ac,$/;"	f
mutex	src/data.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
n	examples/go.c	/^    int n;$/;"	m	struct:__anon25	file:
n	include/darknet.h	/^    int n;$/;"	m	struct:__anon725
n	include/darknet.h	/^    int n;$/;"	m	struct:layer
n	include/darknet.h	/^    int n;$/;"	m	struct:load_args
n	include/darknet.h	/^    int n;$/;"	m	struct:network
n	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   n; \/\/ Number of columns in the matrix  $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
n	src/network.c	/^    int n;$/;"	m	struct:__anon2	file:
name	include/darknet.h	/^    char **name;$/;"	m	struct:__anon725
name	include/darknet.h	/^    char name[256];$/;"	m	struct:__anon733
names	include/darknet.h	/^    char **names;$/;"	m	struct:__anon724
nbThreads	plugin/Eigen/src/Core/products/Parallelizer.h	/^inline int nbThreads()$/;"	f	namespace:Eigen
nbiases	include/darknet.h	/^    int nbiases;$/;"	m	struct:layer
nc	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline Index nc() const { return m_nc; }$/;"	f	class:Eigen::internal::level3_blocking
nestByValue	plugin/Eigen/src/Core/NestByValue.h	/^DenseBase<Derived>::nestByValue() const$/;"	f	class:Eigen::DenseBase
nestedExpression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::ArrayWrapper
nestedExpression	plugin/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::MatrixWrapper
nestedExpression	plugin/Eigen/src/Core/Block.h	/^    XprType& nestedExpression() { return m_xpr; }$/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	plugin/Eigen/src/Core/Block.h	/^    const typename internal::remove_all<XprTypeNested>::type& nestedExpression() const$/;"	f	class:Eigen::internal::BlockImpl_dense
nestedExpression	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	plugin/Eigen/src/Core/Diagonal.h	/^    nestedExpression() const $/;"	f	class:Eigen::Diagonal
nestedExpression	plugin/Eigen/src/Core/IndexedView.h	/^  nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::IndexedView
nestedExpression	plugin/Eigen/src/Core/IndexedView.h	/^  nestedExpression() { return m_xpr.const_cast_derived(); }$/;"	f	class:Eigen::IndexedView
nestedExpression	plugin/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC const XprTypeNestedCleaned& nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::Inverse
nestedExpression	plugin/Eigen/src/Core/Redux.h	/^  const XprType & nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::internal::redux_evaluator
nestedExpression	plugin/Eigen/src/Core/Replicate.h	/^    const _MatrixTypeNested& nestedExpression() const$/;"	f	class:Eigen::Replicate
nestedExpression	plugin/Eigen/src/Core/Reverse.h	/^    nestedExpression() const $/;"	f	class:Eigen::Reverse
nestedExpression	plugin/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	plugin/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	plugin/Eigen/src/Core/Transpose.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	plugin/Eigen/src/Core/Transpose.h	/^    nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	plugin/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& nestedExpression() const { return m_transpositions; }$/;"	f	class:Eigen::Transpose
nestedExpression	plugin/Eigen/src/Core/TriangularMatrix.h	/^    NestedExpression& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	plugin/Eigen/src/Core/TriangularMatrix.h	/^    const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	plugin/Eigen/src/Core/VectorwiseOp.h	/^    typename MatrixType::Nested nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::PartialReduxExpr
nestedExpression	plugin/Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC const NestedExpression& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Homogeneous
nestedExpression	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseMatrixType& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
nestedExpression	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline XprType& nestedExpression() { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const SparseMatrixType& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
nestedExpression	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const XprType& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::BlockImpl
nestedExpression	plugin/Eigen/src/SparseCore/SparseView.h	/^  nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SparseView
nested_eval	plugin/Eigen/src/Core/ReturnByValue.h	/^struct nested_eval<ReturnByValue<Derived>, n, PlainObject>$/;"	s	namespace:Eigen::internal
net	examples/detector-scipy-opencv.py	/^net = dn.load_net("cfg\/tiny-yolo.cfg", "tiny-yolo.weights", 0)$/;"	v
net	examples/detector.py	/^net = dn.load_net("cfg\/yolo-thor.cfg", "\/home\/pjreddie\/backup\/yolo-thor_final.weights", 0)$/;"	v
net	python/darknet.py	/^    net = load_net("cfg\/tiny-yolo.cfg", "tiny-yolo.weights", 0)$/;"	v
net	python/proverbot.py	/^net = load_net("cfg\/coq.test.cfg", "\/home\/pjreddie\/backup\/coq.backup", 0)$/;"	v
net	src/compare.c	/^    network net;$/;"	m	struct:__anon23	file:
net	src/demo.c	/^static network *net;$/;"	v	file:
net	src/network.c	/^    network *net;$/;"	m	struct:__anon1	file:
net	src/parser.c	/^    network *net;$/;"	m	struct:size_params	file:
net	src/zcu102_api.cpp	/^static network *net;$/;"	v	file:
nets	src/network.c	/^    network **nets;$/;"	m	struct:__anon2	file:
network	include/darknet.h	/^typedef struct network network;$/;"	t	typeref:struct:network
network	include/darknet.h	/^typedef struct network{$/;"	s
network	include/darknet.h	/^} network;$/;"	t	typeref:struct:network
network_accuracies	src/network.c	/^float *network_accuracies(network *net, data d, int n)$/;"	f
network_accuracy	src/network.c	/^float network_accuracy(network *net, data d)$/;"	f
network_accuracy_multi	src/network.c	/^float network_accuracy_multi(network *net, data d, int n)$/;"	f
network_detect	python/darknet.py	/^network_detect = lib.network_detect$/;"	v
network_detect	src/network.c	/^void network_detect(network *net, image im, float thresh, float hier_thresh, float nms, box *boxes, float **probs)$/;"	f
network_height	src/network.c	/^int network_height(network *net){return net->h;}$/;"	f
network_inputs	src/network.c	/^int network_inputs(network *net)$/;"	f
network_loss_data	examples/attention.c	/^matrix network_loss_data(network *net, data test)$/;"	f
network_output	src/network.c	/^float *network_output(network *net)$/;"	f
network_output_layer	src/network.c	/^layer network_output_layer(network *net)$/;"	f
network_outputs	src/network.c	/^int network_outputs(network *net)$/;"	f
network_predict	src/network.c	/^float *network_predict(network *net, float *input)$/;"	f
network_predict_data	src/network.c	/^matrix network_predict_data(network *net, data test)$/;"	f
network_predict_data_multi	src/network.c	/^matrix network_predict_data_multi(network *net, data test, int n)$/;"	f
network_predict_image	src/network.c	/^float *network_predict_image(network *net, image im)$/;"	f
network_predict_rotations	examples/go.c	/^float *network_predict_rotations(network *net, float *next)$/;"	f
network_width	src/network.c	/^int network_width(network *net){return net->w;}$/;"	f
next	include/darknet.h	/^    struct node *next;$/;"	m	struct:node	typeref:struct:node::node
next	plugin/Eigen/src/SparseCore/AmbiVector.h	/^      StorageIndex next;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
nh	include/darknet.h	/^    int nh;$/;"	m	struct:load_args
nind	examples/go.c	/^static const int nind = 10;$/;"	v	file:
nms_comparator	src/box.c	/^int nms_comparator(const void *pa, const void *pb)$/;"	f
nnz	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon35::__anon36
no	plugin/Eigen/src/Core/util/Meta.h	/^  struct no  {int a[2];};$/;"	s	struct:Eigen::internal::is_convertible_impl
no	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct no  {int a[2];};$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
no_assignment_operator	plugin/Eigen/src/Core/util/XprHelper.h	/^class no_assignment_operator$/;"	c	namespace:Eigen::internal
noadjust	include/darknet.h	/^    int noadjust;$/;"	m	struct:layer
noalias	plugin/Eigen/src/Core/NoAlias.h	/^NoAlias<Derived,MatrixBase> EIGEN_DEVICE_FUNC MatrixBase<Derived>::noalias()$/;"	f	class:Eigen::MatrixBase
node	include/darknet.h	/^typedef struct node{$/;"	s
node	include/darknet.h	/^} node;$/;"	t	typeref:struct:node
noi	examples/go.c	/^int noi = 1;$/;"	v
nomore	src/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon12
nonZeros	plugin/Eigen/src/Core/DenseBase.h	/^    inline Index nonZeros() const { return size(); }$/;"	f	class:Eigen::DenseBase
nonZeros	plugin/Eigen/src/SparseCore/AmbiVector.h	/^Index AmbiVector<_Scalar,_StorageIndex>::nonZeros() const$/;"	f	class:Eigen::internal::AmbiVector
nonZeros	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const { return Dynamic; }$/;"	f	class:Eigen::BlockImpl
nonZeros	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const$/;"	f	class:Eigen::BlockImpl
nonZeros	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index nonZeros() const$/;"	f	class:Eigen::SparseCompressedBase
nonZeros	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Index nonZeros() const { return m_zero_nnz[1]; }$/;"	f	class:Eigen::SparseMapBase
nonZeros	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZeros() const { return derived().nestedExpression().nonZeros(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
nonZeros	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline Index nonZeros() const  { return m_data.size(); }$/;"	f	class:Eigen::SparseVector
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::binary_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::sparse_conjunction_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  Index nonZerosEstimate() const { return m_sparseXprEval.nonZerosEstimate(); }$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  Index nonZerosEstimate() const { return m_sparseXprImpl.nonZerosEstimate(); }$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::unary_evaluator
nonZerosEstimate	plugin/Eigen/src/SparseCore/SparseVector.h	/^  inline Index nonZerosEstimate() const {$/;"	f	struct:Eigen::internal::evaluator
noncopyable	plugin/Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
noncopyable	plugin/Eigen/src/Core/util/Meta.h	/^class noncopyable$/;"	c	namespace:Eigen::internal
nonzeroPivots	plugin/Eigen/src/LU/FullPivLU.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivLU
nonzeroPivots	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::ColPivHouseholderQR
nonzeroPivots	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index nonzeroPivots() const { return m_cpqr.nonzeroPivots(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
nonzeroPivots	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivHouseholderQR
nonzeroSingularValues	plugin/Eigen/src/SVD/SVDBase.h	/^  Index nonzeroSingularValues() const$/;"	f	class:Eigen::SVDBase
noobject_scale	include/darknet.h	/^    float noobject_scale;$/;"	m	struct:layer
norm	plugin/Eigen/src/Core/Dot.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const$/;"	f	class:Eigen::MatrixBase
norm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const NormReturnType norm() const$/;"	f	class:Eigen::VectorwiseOp
norm	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar norm() const { return coeffs().norm(); }$/;"	f	class:Eigen::QuaternionBase
norm	plugin/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::norm() const$/;"	f	class:Eigen::SparseMatrixBase
norm1	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)$/;"	f	namespace:Eigen::numext
norm1_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl$/;"	s	namespace:Eigen::internal
norm1_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
norm1_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct norm1_impl : norm1_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
norm1_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct norm1_retval$/;"	s	namespace:Eigen::internal
normTensorDesc	include/darknet.h	/^    cudnnTensorDescriptor_t normTensorDesc;$/;"	m	struct:layer
normal	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline ConstNormalReturnType normal() const { return ConstNormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normalize	plugin/Eigen/src/Core/Dot.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void MatrixBase<Derived>::normalize()$/;"	f	class:Eigen::MatrixBase
normalize	plugin/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_DEVICE_FUNC void normalize() {$/;"	f	class:Eigen::VectorwiseOp
normalize	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline void normalize() { coeffs().normalize(); }$/;"	f	class:Eigen::QuaternionBase
normalize_array	src/utils.c	/^void normalize_array(float *a, int n)$/;"	f
normalize_cpu	src/blas.c	/^void normalize_cpu(float *x, float *mean, float *variance, int batch, int filters, int spatial)$/;"	f
normalize_data_rows	src/data.c	/^void normalize_data_rows(data d)$/;"	f
normalize_delta_cpu	src/batchnorm_layer.c	/^void normalize_delta_cpu(float *x, float *mean, float *variance, float *mean_delta, float *variance_delta, int batch, int filters, int spatial, float *delta)$/;"	f
normalize_image	src/image.c	/^void normalize_image(image p)$/;"	f
normalize_image2	src/image.c	/^void normalize_image2(image p)$/;"	f
normalize_layer	examples/darknet.c	/^layer normalize_layer(layer l, int n)$/;"	f
normalize_net	examples/darknet.c	/^void normalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
normalized	plugin/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::normalized() const$/;"	f	class:Eigen::MatrixBase
normalized	plugin/Eigen/src/Core/VectorwiseOp.h	/^    normalized() const { return m_matrix.cwiseQuotient(extendedToOpposite(this->norm())); }$/;"	f	class:Eigen::VectorwiseOp
normalized	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Quaternion<Scalar> normalized() const { return Quaternion<Scalar>(coeffs().normalized()); }$/;"	f	class:Eigen::QuaternionBase
norms	include/darknet.h	/^    float * norms;$/;"	m	struct:layer
norms_gpu	include/darknet.h	/^    float * norms_gpu;$/;"	m	struct:layer
not_equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool not_equal_strict(const X& x,const Y& y) { return x != y; }$/;"	f	namespace:numext
not_equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool not_equal_strict(const double& x,const double& y) { return std::not_equal_to<double>()(x,y); }$/;"	f	namespace:numext
not_equal_strict	plugin/Eigen/src/Core/util/Meta.h	/^bool not_equal_strict(const float& x,const float& y) { return std::not_equal_to<float>()(x,y); }$/;"	f	namespace:numext
notruth	include/darknet.h	/^    int notruth;$/;"	m	struct:network
nr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon307
nr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon308
nr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon309
nr	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon310
nr_etdfs	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^void nr_etdfs (typename IndexVector::Scalar n, IndexVector& parent, IndexVector& first_kid, IndexVector& next_kid, IndexVector& post, typename IndexVector::Scalar postnum)$/;"	f	namespace:Eigen::internal
nsuper	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index nsuper() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
nullary_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper$/;"	s	namespace:Eigen::internal
nullary_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,false,false> {};$/;"	s	namespace:Eigen::internal
nullary_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,false,true>$/;"	s	namespace:Eigen::internal
nullary_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,false,true,false>$/;"	s	namespace:Eigen::internal
nullary_wrapper	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct nullary_wrapper<Scalar,NullaryOp,true,false,false>$/;"	s	namespace:Eigen::internal
num_bits	src/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon16
num_boxes	include/darknet.h	/^    int *num_boxes;$/;"	m	struct:__anon736
num_boxes	include/darknet.h	/^    int num_boxes;$/;"	m	struct:load_args
num_boxes	python/darknet.py	/^num_boxes = lib.num_boxes$/;"	v
num_boxes	src/network.c	/^int num_boxes(network *net)$/;"	f
num_expansions	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   num_expansions; $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
num_steps	include/darknet.h	/^    int num_steps;$/;"	m	struct:network
numeric_limits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct numeric_limits<Eigen::half> {$/;"	s	namespace:std
numeric_limits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct numeric_limits<const Eigen::half> : numeric_limits<Eigen::half> {};$/;"	s	namespace:std
numeric_limits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct numeric_limits<const volatile Eigen::half> : numeric_limits<Eigen::half> {};$/;"	s	namespace:std
numeric_limits	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct numeric_limits<volatile Eigen::half> : numeric_limits<Eigen::half> {};$/;"	s	namespace:std
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<double>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<float>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<int>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned int>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned long long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct numeric_limits<unsigned long>$/;"	s	namespace:Eigen::internal::device
numeric_limits	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct numeric_limits$/;"	s	namespace:Eigen::internal::device
numext	plugin/Eigen/src/Core/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace numext {$/;"	n	namespace:Eigen
numext	plugin/Eigen/src/Core/util/Meta.h	/^namespace numext {$/;"	n
numops	examples/darknet.c	/^long numops(network *net)$/;"	f
nw	include/darknet.h	/^    int nw;$/;"	m	struct:load_args
nweights	include/darknet.h	/^    int nweights;$/;"	m	struct:layer
nzlmax	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlmax; \/\/ Current max size of lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzlumax	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzlumax; \/\/ Current max size of lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
nzumax	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index   nzumax; \/\/ Current max size of ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
o_cpu	include/darknet.h	/^    float *o_cpu;$/;"	m	struct:layer
o_gpu	include/darknet.h	/^    float *o_gpu;$/;"	m	struct:layer
object_scale	include/darknet.h	/^    float object_scale;$/;"	m	struct:layer
objectness	include/darknet.h	/^    int objectness;$/;"	m	struct:layer
occupied	examples/go.c	/^static int occupied(float *b, int i)$/;"	f	file:
offset	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
one_hot_encode	src/utils.c	/^float **one_hot_encode(float *a, int n, int k)$/;"	f
oneoff	examples/darknet.c	/^void oneoff(char *cfgfile, char *weightfile, char *outfile)$/;"	f
oneoff2	examples/darknet.c	/^void oneoff2(char *cfgfile, char *weightfile, char *outfile, int l)$/;"	f
onlyforward	include/darknet.h	/^    int onlyforward;$/;"	m	struct:layer
operations	examples/darknet.c	/^void operations(char *cfgfile)$/;"	f
operator !	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^operator!() const$/;"	f
operator !=	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC inline bool operator!=(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator !=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator != (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator %	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N%M> operator%( FixedInt<M>) const { return FixedInt<N%M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator &	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N&M> operator&( FixedInt<M>) const { return FixedInt<N&M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator &&	plugin/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^operator&&(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator ()	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i) const { return op(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j) const { return op(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j) const {$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType i, IndexType j=0) const { return op(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar operator()(const NullaryOp& op, IndexType=0, IndexType=0) const { return op(); }$/;"	f	struct:Eigen::internal::nullary_wrapper
operator ()	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	plugin/Eigen/src/Core/ProductEvaluators.h	/^    template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const {$/;"	f	struct:Eigen::internal::generic_product_impl::adds
operator ()	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct add  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() += src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::add
operator ()	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::set
operator ()	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	f	struct:Eigen::internal::generic_product_impl::sub
operator ()	plugin/Eigen/src/Core/Random.h	/^  inline const Scalar operator() () const { return random<Scalar>(); }$/;"	f	struct:Eigen::internal::scalar_random_op
operator ()	plugin/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator()(Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	plugin/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator()(Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar operator()(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
operator ()	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::TriangularBase
operator ()	plugin/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC inline ResultType operator()(const XprType& mat) const$/;"	f	struct:Eigen::internal::member_lpnorm
operator ()	plugin/Eigen/src/Core/VectorwiseOp.h	/^  EIGEN_DEVICE_FUNC inline result_type operator()(const DenseBase<Derived>& mat) const$/;"	f	struct:Eigen::internal::member_redux
operator ()	plugin/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::max_coeff_visitor
operator ()	plugin/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::min_coeff_visitor
operator ()	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::complex<T> operator() (const std::complex<T>& a, const std::complex<T>& b) const {$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE std::size_t operator()(const Eigen::half& a) const {$/;"	f	struct:std::hash
operator ()	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Eigen::half operator() (const float& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Eigen::half operator() (const int& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float operator() (const Eigen::half& a) const {$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a && b; }$/;"	f	struct:Eigen::internal::scalar_boolean_and_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a ^ b; }$/;"	f	struct:Eigen::internal::scalar_boolean_xor_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a || b; }$/;"	f	struct:Eigen::internal::scalar_boolean_or_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return !(a<=b || b<=a);}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a!=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a<=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a<b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a==b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a>=b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator()(const LhsScalar& a, const RhsScalar& b) const {return a>b;}$/;"	f	struct:Eigen::internal::scalar_cmp_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar &x, const Scalar &y) const$/;"	f	struct:Eigen::internal::scalar_hypot_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a + b; }$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a - b; }$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a \/ b; }$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return numext::maxi(a, b); }$/;"	f	struct:Eigen::internal::scalar_max_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return numext::mini(a, b); }$/;"	f	struct:Eigen::internal::scalar_min_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const first_argument_type& a) const { return BinaryOp::operator()(a,m_value); }$/;"	f	struct:Eigen::internal::bind2nd_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const second_argument_type& b) const { return BinaryOp::operator()(m_value,b); }$/;"	f	struct:Eigen::internal::bind1st_op
operator ()	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  inline result_type operator() (const Scalar& a, const Exponent& b) const { return numext::pow(a, b); }$/;"	f	struct:Eigen::internal::scalar_pow_op
operator ()	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() () const { return m_other; }$/;"	f	struct:Eigen::internal::scalar_constant_op
operator ()	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType i) const { return impl(i); }$/;"	f	struct:Eigen::internal::linspaced_op
operator ()	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType i) const {$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (IndexType row, IndexType col) const { return row==col ? Scalar(1) : Scalar(0); }$/;"	f	struct:Eigen::internal::scalar_identity_op
operator ()	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  const Scalar operator() (IndexType i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE bool operator() (const bool& a) const { return !a; }$/;"	f	struct:Eigen::internal::scalar_boolean_not_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const NewType operator() (const Scalar& a) const { return cast<Scalar, NewType>(a); }$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }$/;"	f	struct:Eigen::internal::scalar_opposite_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::ceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::floor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return numext::round(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scal&, const result_type& a) const { return a; }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs(a); }$/;"	f	struct:Eigen::internal::scalar_abs_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { using numext::arg; return arg(a); }$/;"	f	struct:Eigen::internal::scalar_arg_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a, const Score&) const { return numext::abs(a); }$/;"	f	struct:Eigen::internal::abs_knowing_score
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const {$/;"	f	struct:Eigen::internal::scalar_isfinite_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const {$/;"	f	struct:Eigen::internal::scalar_isinf_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const {$/;"	f	struct:Eigen::internal::scalar_isnan_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return Scalar(1)\/a; }$/;"	f	struct:Eigen::internal::scalar_inverse_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a*a; }$/;"	f	struct:Eigen::internal::scalar_cube_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return a*a; }$/;"	f	struct:Eigen::internal::scalar_square_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (const Scalar& a) const { return numext::cos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { EIGEN_USING_STD_MATH(log10) return log10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return Scalar(1)\/numext::sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::acos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::asin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::atan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::cosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::exp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::expm1(a); }$/;"	f	struct:Eigen::internal::scalar_expm1_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::log(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::log1p(a); }$/;"	f	struct:Eigen::internal::scalar_log1p_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const { return numext::tan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator() (const Scalar& a) const$/;"	f	struct:Eigen::internal::scalar_sign_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Scalar operator()(const Scalar& a) const { return numext::tanh(a); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { using numext::conj; return conj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return numext::abs2(a); }$/;"	f	struct:Eigen::internal::scalar_abs2_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::imag(a); }$/;"	f	struct:Eigen::internal::scalar_imag_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return numext::real(a); }$/;"	f	struct:Eigen::internal::scalar_real_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::imag_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_imag_ref_op
operator ()	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return numext::real_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_real_ref_op
operator ()	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockA, const DataMapper& lhs, Index depth, Index rows, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_lhs
operator ()	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(Scalar* blockB, const DataMapper& rhs, Index depth, Index cols, Index stride, Index offset)$/;"	f	class:Eigen::internal::gemm_pack_rhs
operator ()	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  ::operator()(const DataMapper& res, const LhsScalar* blockA, const RhsScalar* blockB,$/;"	f	class:Eigen::internal::gebp_kernel
operator ()	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void operator() (Index row, Index rows, Index col=0, Index cols=-1, GemmParallelInfo<Index>* info=0) const$/;"	f	struct:Eigen::internal::gemm_functor
operator ()	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  void operator()(ResScalar* _res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index size, Index depth, const ResScalar& alpha)$/;"	f	struct:Eigen::internal::tribb_kernel
operator ()	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockA, const Scalar* _lhs, Index lhsStride, Index cols, Index rows)$/;"	f	struct:Eigen::internal::symm_pack_lhs
operator ()	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockB, const Scalar* _rhs, Index rhsStride, Index rows, Index cols, Index k2)$/;"	f	struct:Eigen::internal::symm_pack_rhs
operator ()	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_ALWAYS_INLINE Scalar& operator()(Index i, Index j) const {$/;"	f	class:Eigen::internal::blas_data_mapper
operator ()	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasVectorMapper
operator ()	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Scalar& operator()(Index i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
operator ()	plugin/Eigen/src/Core/util/BlasUtil.h	/^  inline T operator()(const T& x) const { return numext::conj(x); }$/;"	f	struct:Eigen::internal::conj_if
operator ()	plugin/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& operator()(const T& x) const { return x; }$/;"	f	struct:Eigen::internal::conj_if
operator ()	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt operator() () const { return *this; }$/;"	f	class:Eigen::internal::FixedInt
operator ()	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  VariableAndFixedInt<N> operator() (int val) const { return VariableAndFixedInt<N>(val); }$/;"	f	class:Eigen::internal::FixedInt
operator ()	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Scalar operator() (Index row, Index col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Scalar& operator() (Index row, Index col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::IncompleteLUT::keep_diag
operator ()	plugin/Eigen/src/MetisSupport/MetisSupport.h	/^  void operator() (const MatrixType& A, PermutationType& matperm)$/;"	f	class:Eigen::MetisOrdering
operator ()	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    void operator() (const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::COLAMDOrdering
operator ()	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& \/*mat*\/, PermutationType& perm)$/;"	f	class:Eigen::NaturalOrdering
operator ()	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const MatrixType& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	plugin/Eigen/src/OrderingMethods/Ordering.h	/^    void operator()(const SparseSelfAdjointView<SrcType, SrcUpLo>& mat, PermutationType& perm)$/;"	f	class:Eigen::AMDOrdering
operator ()	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::SimplicialCholeskyBase::keep_diag
operator ()	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool operator() (const Index&, const Index&, const Scalar& value) const$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
operator *	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const MatrixBase<MatrixDerived> &matrix) const$/;"	f	class:Eigen::DiagonalBase
operator *	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar) const$/;"	f	class:Eigen::DiagonalBase
operator *	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar, const DiagonalBase& other)$/;"	f	class:Eigen::DiagonalBase
operator *	plugin/Eigen/src/Core/DiagonalProduct.h	/^MatrixBase<Derived>::operator*(const DiagonalBase<DiagonalDerived> &a_diagonal) const$/;"	f	class:Eigen::MatrixBase
operator *	plugin/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const InverseImpl<Other, PermutationStorage>& other, const PermutationBase& perm)$/;"	f	class:Eigen::PermutationBase
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const InverseImpl<Other,PermutationStorage>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const PermutationBase<Other>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::InverseImpl
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const InverseType& trPerm)$/;"	f	class:Eigen::InverseImpl
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Core/PermutationMatrix.h	/^operator*(const PermutationBase<PermutationDerived> &permutation,$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SelfAdjointView& rhs)$/;"	f	class:Eigen::SelfAdjointView
operator *	plugin/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SelfAdjointView
operator *	plugin/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const Scalar& s, const SelfAdjointView& mat)$/;"	f	class:Eigen::SelfAdjointView
operator *	plugin/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	plugin/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trt)$/;"	f	class:Eigen::Transpose
operator *	plugin/Eigen/src/Core/Transpositions.h	/^operator*(const MatrixBase<MatrixDerived> &matrix,$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Core/Transpositions.h	/^operator*(const TranspositionsBase<TranspositionsDerived> &transpositions,$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const TriangularViewImpl& rhs)$/;"	f	class:Eigen::TriangularViewImpl
operator *	plugin/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularViewImpl
operator *	plugin/Eigen/src/Core/VectorwiseOp.h	/^    operator*(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator *	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half operator * (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator *	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N*M> operator*( FixedInt<M>) const { return FixedInt<N*M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ProductExpr<Derived,OtherDerived> operator*(const BaseExpr<OtherDerived> &b) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ProductExpr<Derived,ValueExpr<> > operator*(Index a) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ProductExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator*(internal::FixedInt<N> (*)()) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  ProductExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator*(internal::FixedInt<N>) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend ProductExpr<ValueExpr<>,Derived> operator*(Index a, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend ProductExpr<ValueExpr<internal::FixedInt<N> >,Derived> operator*(internal::FixedInt<N> (*)(), const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend ProductExpr<ValueExpr<internal::FixedInt<N> >,Derived> operator*(internal::FixedInt<N>, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator *	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	plugin/Eigen/src/Geometry/AngleAxis.h	/^  EIGEN_DEVICE_FUNC inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	plugin/Eigen/src/Geometry/AngleAxis.h	/^  friend EIGEN_DEVICE_FUNC inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	plugin/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Lhs>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	plugin/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Rhs>& rhs) const$/;"	f	class:Eigen::Homogeneous
operator *	plugin/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const Transform<Scalar,Dim,Mode,Options>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::operator* (const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
operator *	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC friend inline Transform<Scalar,Dim,Affine> operator*(const DiagonalMatrix<Scalar,Dim>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType operator*(const EigenBase<OtherDerived>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Isometry> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode> operator*(const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/RotationBase.h	/^    operator*(const EigenBase<OtherDerived>& e) const$/;"	f	class:Eigen::RotationBase
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^	operator* (const Transform<Scalar, Dim, Mode, Options>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^  inline Matrix<Scalar,Dim,Dim> operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::UniformScaling
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling operator* (const UniformScaling& other) const$/;"	f	class:Eigen::UniformScaling
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^  inline typename Eigen::internal::plain_matrix_type<Derived>::type operator* (const MatrixBase<Derived>& other) const$/;"	f	class:Eigen::UniformScaling
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^UniformScaling<Scalar>::operator* (const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	plugin/Eigen/src/Geometry/Scaling.h	/^operator*(const MatrixBase<Derived>& matrix, const UniformScaling<Scalar>& s)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &b) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^    operator * (const EigenBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^    operator * (const Transform<Scalar,Dim,OtherMode,OtherOptions>& other) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Transform operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^  inline TransformTimeDiagonalReturnType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^  operator * (const EigenBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline AffineTransformType operator*(const EigenBase<OtherDerived>& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline IsometryTransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode> operator* (const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^  operator* (const MatrixBase<Derived>& vec) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const EigenBase<OtherDerived>& linear) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const UniformScaling<Scalar>& other) const$/;"	f	class:Eigen::Translation
operator *	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    typename internal::matrix_type_times_scalar_type<Scalar, OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::HouseholderSequence
operator *	plugin/Eigen/src/Householder/HouseholderSequence.h	/^typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation operator*(const JacobiRotation& other)$/;"	f	class:Eigen::JacobiRotation
operator *	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQReturnType
operator *	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQR_QProduct<SPQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SPQRMatrixQTransposeReturnType
operator *	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^operator*( const PermutationBase<PermDerived>& perm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const InverseImpl<PermutationType,PermutationStorage>& tperm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const InverseImpl<PermutationType, PermutationStorage>& tperm)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const PermutationBase<PermDerived>& perm)$/;"	f	namespace:Eigen
operator *	plugin/Eigen/src/SparseCore/SparseProduct.h	/^SparseMatrixBase<Derived>::operator*(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const SparseMatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	plugin/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType, Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
operator *	plugin/Eigen/src/SparseQR/SparseQR.h	/^  SparseQR_QProduct<SparseQRType,Derived> operator*(const MatrixBase<Derived>& other)$/;"	f	struct:Eigen::SparseQRMatrixQTransposeReturnType
operator *	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator*(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator *=	plugin/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator*=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator *=	plugin/Eigen/src/Core/MatrixBase.h	/^MatrixBase<Derived>::operator*=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator *=	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator *=	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator*=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() * other; }$/;"	f	class:Eigen::TriangularViewImpl
operator *=	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator*=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator *=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half& operator *= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator *=	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator *=	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator*=(const EigenBase<OtherDerived>& other) { return *this = *this * other; }$/;"	f	class:Eigen::Transform
operator *=	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	plugin/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const DiagonalMatrix<Scalar,Dim>& s) { linearExt() *= s; return *this; }$/;"	f	class:Eigen::Transform
operator *=	plugin/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	plugin/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const UniformScaling<Scalar>& s) { return scale(s.factor()); }$/;"	f	class:Eigen::Transform
operator *=	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE InnerIterator operator+(Index i) $/;"	f	class:Eigen::InnerIterator
operator +	plugin/Eigen/src/Core/VectorwiseOp.h	/^    operator+(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator +	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half operator + (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator +	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N+M> operator+( FixedInt<M>) const { return FixedInt<N+M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,OtherDerived> operator+(const BaseExpr<OtherDerived> &b) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<> > operator+(Index b) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator+(internal::FixedInt<N> (*)()) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator+(internal::FixedInt<N>) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<Derived,ValueExpr<> > operator+(Index a, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator+(internal::FixedInt<N> (*)(), const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator+(internal::FixedInt<N>, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator +	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline InnerIterator operator+(Index i) $/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator +	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator+(const MatrixBase<DenseDerived> &a, const SparseMatrixBase<SparseDerived> &b)$/;"	f	namespace:Eigen
operator +	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator+(const SparseMatrixBase<SparseDerived> &a, const MatrixBase<DenseDerived> &b)$/;"	f	namespace:Eigen
operator ++	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator++()   { m_iter.operator++(); return *this; }$/;"	f	class:Eigen::InnerIterator
operator ++	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE inner_iterator_selector& operator++() { m_inner++; return *this; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator ++	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator& operator++()$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator ++	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline OuterVectorInnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++() { ++m_sparseIter; return *this; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator ++	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline InnerIterator& operator++()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator +=	plugin/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator+=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator +=	plugin/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator+=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator +=	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator+=(Index i) { m_iter.operator+=(i); return *this; }$/;"	f	class:Eigen::InnerIterator
operator +=	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator +=	plugin/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator +=	plugin/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator +=	plugin/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator +=	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& ArrayBase<Derived>::operator+=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator +=	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator+=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator +=	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator+=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator +=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half& operator += (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator +=	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline InnerIterator& operator+=(Index i) { m_id += i ; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator +=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator+=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator+=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator ,	plugin/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
operator ,	plugin/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
operator -	plugin/Eigen/src/Core/VectorwiseOp.h	/^    operator-(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator -	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half operator - (const half& a) {$/;"	f	namespace:Eigen::half_impl
operator -	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half operator - (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator -	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<-N> operator-() const { return FixedInt<-N>(); }$/;"	f	class:Eigen::internal::FixedInt
operator -	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N-M> operator-( FixedInt<M>) const { return FixedInt<N-M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,NegateExpr<OtherDerived> > operator-(const BaseExpr<OtherDerived> &b) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<> > operator-(Index a) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<internal::FixedInt<-N> > > operator-(internal::FixedInt<N> (*)()) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  AddExpr<Derived,ValueExpr<internal::FixedInt<-N> > > operator-(internal::FixedInt<N>) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  NegateExpr<Derived> operator-() const { return NegateExpr<Derived>(derived()); }$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<NegateExpr<Derived>,ValueExpr<> > operator-(Index a, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<NegateExpr<Derived>,ValueExpr<internal::FixedInt<N> > > operator-(internal::FixedInt<N> (*)(), const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend AddExpr<NegateExpr<Derived>,ValueExpr<internal::FixedInt<N> > > operator-(internal::FixedInt<N>, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator -	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline ReverseInnerIterator operator-(Index i) $/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator -	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator-(const MatrixBase<DenseDerived> &a, const SparseMatrixBase<SparseDerived> &b)$/;"	f	namespace:Eigen
operator -	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^operator-(const SparseMatrixBase<SparseDerived> &a, const MatrixBase<DenseDerived> &b)$/;"	f	namespace:Eigen
operator -	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator-() const { return NegativeReturnType(derived()); }$/;"	f
operator --	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline ReverseInnerIterator& operator--() { --m_id; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator -=	plugin/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator-=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator -=	plugin/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator-=(const ArrayBase<OtherDerived> &other)$/;"	f	class:Eigen::ArrayBase
operator -=	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator -=	plugin/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator -=	plugin/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator-=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator -=	plugin/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator -=	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& ArrayBase<Derived>::operator-=(const Scalar& other)$/;"	f	class:Eigen::ArrayBase
operator -=	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator-=(const DenseBase<Other>& other) {$/;"	f	class:Eigen::TriangularViewImpl
operator -=	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator-=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator -=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half& operator -= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator -=	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline ReverseInnerIterator& operator-=(Index i) { m_id -= i; return *this; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator -=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator-=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^Derived& SparseMatrixBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator-=(const SparseMatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator /	plugin/Eigen/src/Core/VectorwiseOp.h	/^    operator\/(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator /	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half operator \/ (const half& a, Index b) {$/;"	f	namespace:Eigen::half_impl
operator /	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half operator \/ (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator /	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N\/M> operator\/( FixedInt<M>) const { return FixedInt<N\/M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  QuotientExpr<Derived,OtherDerived> operator\/(const BaseExpr<OtherDerived> &b) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  QuotientExpr<Derived,ValueExpr<> > operator\/(Index a) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  QuotientExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator\/(internal::FixedInt<N> (*)()) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  QuotientExpr<Derived,ValueExpr<internal::FixedInt<N> > > operator\/(internal::FixedInt<N>) const$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend QuotientExpr<ValueExpr<>,Derived> operator\/(Index a, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend QuotientExpr<ValueExpr<internal::FixedInt<N> >,Derived> operator\/(internal::FixedInt<N> (*)(), const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  friend QuotientExpr<ValueExpr<internal::FixedInt<N> >,Derived> operator\/(internal::FixedInt<N>, const BaseExpr& b)$/;"	f	class:Eigen::Symbolic::BaseExpr
operator /	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator\/(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator /=	plugin/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator\/=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator /=	plugin/Eigen/src/Core/SelfCwiseBinaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator /=	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType&  operator\/=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = derived().nestedExpression() \/ other; }$/;"	f	class:Eigen::TriangularViewImpl
operator /=	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator\/=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator /=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ half& operator \/= (half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator /=	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator <	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator < (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator <<	plugin/Eigen/src/Core/CommaInitializer.h	/^DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator <<	plugin/Eigen/src/Core/CommaInitializer.h	/^EIGEN_DEVICE_FUNC inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)$/;"	f	class:Eigen::DenseBase
operator <<	plugin/Eigen/src/Core/IO.h	/^    friend std::ostream & operator << (std::ostream & s, const WithFormat& wf)$/;"	f	class:Eigen::WithFormat
operator <<	plugin/Eigen/src/Core/IO.h	/^std::ostream & operator <<$/;"	f	namespace:Eigen
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet16uc & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2d & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2l & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4f & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4i & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4ui & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_ALWAYS_INLINE std::ostream& operator << (std::ostream& os, const half& v) {$/;"	f	namespace:Eigen::half_impl
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2d & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2l & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet2ul & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4f & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4i & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^inline std::ostream & operator <<(std::ostream & s, const Packet4ui & v)$/;"	f	namespace:Eigen::internal
operator <<	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrix& m)$/;"	f	class:Eigen::SparseMatrix
operator <<	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)$/;"	f	class:Eigen::SparseMatrixBase
operator <<	plugin/Eigen/src/SparseCore/SparseVector.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseVector& m)$/;"	f	class:Eigen::SparseVector
operator <=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator <= (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator =	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Array& other)$/;"	f	class:Eigen::Array
operator =	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
operator =	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
operator =	plugin/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Scalar &value)$/;"	f	class:Eigen::Array
operator =	plugin/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const ArrayBase& other)$/;"	f	class:Eigen::ArrayBase
operator =	plugin/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const Scalar &value)$/;"	f	class:Eigen::ArrayBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)$/;"	f	class:Eigen::DenseBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)$/;"	f	class:Eigen::MatrixBase
operator =	plugin/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	plugin/Eigen/src/Core/DenseStorage.h	/^    DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other) $/;"	f	class:Eigen::DenseStorage
operator =	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
operator =	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC DenseStorage& operator=(const DenseStorage&) { return *this; }$/;"	f	class:Eigen::DenseStorage
operator =	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalMatrix& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	plugin/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator =	plugin/Eigen/src/Core/MapBase.h	/^    Derived& operator=(const MapBase& other)$/;"	f	class:Eigen::MapBase
operator =	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
operator =	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
operator =	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)$/;"	f	class:Eigen::Matrix
operator =	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::Matrix
operator =	plugin/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase& other)$/;"	f	class:Eigen::PermutationBase
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& tr)$/;"	f	class:Eigen::PermutationBase
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::Map
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::Map
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationMatrix& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	plugin/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
operator =	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
operator =	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::PlainObjectBase
operator =	plugin/Eigen/src/Core/ReturnByValue.h	/^      Unusable& operator=(const Unusable&) {return *this;}$/;"	f	class:Eigen::ReturnByValue::Unusable
operator =	plugin/Eigen/src/Core/ReturnByValue.h	/^EIGEN_DEVICE_FUNC Derived& DenseBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Map
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const Transpositions& other)$/;"	f	class:Eigen::Transpositions
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	plugin/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsWrapper& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& operator=(const TriangularView &other)$/;"	f	class:Eigen::TriangularView
operator =	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& operator=(const TriangularViewImpl& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	plugin/Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	plugin/Eigen/src/Core/TriangularMatrix.h	/^TriangularViewImpl<MatrixType, Mode, Dense>::operator=(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularViewImpl
operator =	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator =	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC half& operator=(const half& other) {$/;"	f	struct:Eigen::half
operator =	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  eigen_packet_wrapper& operator=(const T &v) {$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator =	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE eigen_packet_wrapper& operator=(const T &v) {$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator =	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  SymbolValue<Tag> operator=(Index val) const {$/;"	f	class:Eigen::Symbolic::SymbolExpr
operator =	plugin/Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	plugin/Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionBase<QuatDerived>& q)$/;"	f	class:Eigen::AngleAxis
operator =	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::QuaternionBase
operator =	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)$/;"	f	class:Eigen::QuaternionBase
operator =	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC Rotation2D& operator=(const  MatrixBase<Derived>& m)$/;"	f	class:Eigen::Rotation2D
operator =	plugin/Eigen/src/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Transform& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	plugin/Eigen/src/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage& operator=(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
operator =	plugin/Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	plugin/Eigen/src/SparseCore/SparseAssign.h	/^Derived& SparseMatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	plugin/Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const Derived& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	plugin/Eigen/src/SparseCore/SparseAssign.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    BlockImpl& operator=(const T&)$/;"	f	class:Eigen::BlockImpl
operator =	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const BlockType& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline BlockType& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
operator =	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    InnerIterator& operator=(const InnerIterator& other)$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator =	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
operator =	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^EIGEN_DONT_INLINE SparseMatrix<Scalar,_Options,_StorageIndex>& SparseMatrix<Scalar,_Options,_StorageIndex>::operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView<SrcMatrixType,SrcMode>& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSymmetricPermutationProduct<SrcMatrixType,SrcMode>& permutedMatrix)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
operator =	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseVector
operator =	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
operator =	plugin/Eigen/src/StlSupport/details.h	/^    inline T& operator=(const OtherT& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	plugin/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support& operator=(const workaround_msvc_stl_support& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix& operator=(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
operator ==	plugin/Eigen/src/Core/MatrixBase.h	/^    EIGEN_DEVICE_FUNC inline bool operator==(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator ==	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator == (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator >	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator > (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator >=	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE __device__ bool operator >= (const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
operator Derived&	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator Derived&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator SparseVectorType&	plugin/Eigen/src/SparseCore/SparseVector.h	/^  operator SparseVectorType&() { return m_matrix->const_cast_derived(); }$/;"	f	struct:Eigen::internal::evaluator
operator T&	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  operator T&() { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator T&	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator T&() { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator T&	plugin/Eigen/src/StlSupport/details.h	/^    inline operator T& () { return *static_cast<T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator []	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  Index operator[](Index i) const { return m_first + i * m_incr; }$/;"	f	class:Eigen::ArithmeticSequence
operator []	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator []	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator []	plugin/Eigen/src/Core/Transpositions.h	/^    inline StorageIndex& operator[](Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	plugin/Eigen/src/Core/Transpositions.h	/^    inline const StorageIndex& operator[](Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index operator[](Index i) const { return i; }$/;"	f	struct:Eigen::internal::AllRange
operator []	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index operator[](Index) const { return m_value; }$/;"	f	struct:Eigen::internal::SingleRange
operator []	plugin/Eigen/src/Core/util/Memory.h	/^  T& operator[](std::ptrdiff_t i) { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	plugin/Eigen/src/Core/util/Memory.h	/^  const T& operator[](std::ptrdiff_t i) const { return m_ptr[i]; }$/;"	f	class:Eigen::internal::scoped_array
operator []	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^        StorageIndex operator[](Index i) const { return i==m_index ? m_value : 0; }$/;"	f	class:Eigen::SparseMatrix::SingletonVector
operator ^	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator^(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator bool	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const         { return m_iter; }$/;"	f	class:Eigen::InnerIterator
operator bool	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::inner_iterator_selector
operator bool	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    operator bool() const { return m_cachedIndex>=0; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator bool	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return EvalIterator::operator bool() && EvalIterator::index() < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline operator bool() const { return m_outerPos < m_end; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return (m_lhsIter && m_rhsIter); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id<m_innerSize; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_lhsIter; }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_rhsIter; }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE operator bool() const { return LhsIterator::operator bool() && (!m_empty); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline operator bool() const  { return m_sparseIter; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
operator bool	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline operator bool() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
operator const Derived&	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^  operator const Derived&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const ExpressionType&	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::ForceAlignedAccess
operator const ExpressionType&	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::NestByValue
operator const Scalar	plugin/Eigen/src/Core/Product.h	/^  EIGEN_STRONG_INLINE operator const Scalar() const$/;"	f	class:Eigen::internal::dense_product_base
operator const SparseVectorType&	plugin/Eigen/src/SparseCore/SparseVector.h	/^  operator const SparseVectorType&() const { return *m_matrix; }$/;"	f	struct:Eigen::internal::evaluator
operator const T&	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  operator const T&() const { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator const T&	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  EIGEN_ALWAYS_INLINE operator const T&() const { return m_val; }$/;"	f	struct:Eigen::internal::eigen_packet_wrapper
operator const T&	plugin/Eigen/src/StlSupport/details.h	/^    inline operator const T& () const { return *static_cast<const T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator const T*	plugin/Eigen/src/Core/util/Memory.h	/^  operator const T*() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
operator int	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  operator int() const { return m_value; }$/;"	f	class:Eigen::internal::VariableAndFixedInt
operator int	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  operator int() const { return value; }$/;"	f	class:Eigen::internal::FixedInt
operator |	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  FixedInt<N|M> operator|( FixedInt<M>) const { return FixedInt<N|M>(); }$/;"	f	class:Eigen::internal::FixedInt
operator ||	plugin/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^operator||(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operatorInverseSqrt	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorInverseSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorNorm	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::operatorNorm() const$/;"	f	class:Eigen::MatrixBase
operatorNorm	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::operatorNorm() const$/;"	f	class:Eigen::SelfAdjointView
operatorSqrt	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
optimize_picture	examples/nightmare.c	/^void optimize_picture(network *net, image orig, int max_layer, float scale, float rate, float thresh, int norm)$/;"	f
option_find	src/option_list.c	/^char *option_find(list *l, char *key)$/;"	f
option_find_float	src/option_list.c	/^float option_find_float(list *l, char *key, float def)$/;"	f
option_find_float_quiet	src/option_list.c	/^float option_find_float_quiet(list *l, char *key, float def)$/;"	f
option_find_int	src/option_list.c	/^int option_find_int(list *l, char *key, int def)$/;"	f
option_find_int_quiet	src/option_list.c	/^int option_find_int_quiet(list *l, char *key, int def)$/;"	f
option_find_str	src/option_list.c	/^char *option_find_str(list *l, char *key, char *def)$/;"	f
option_insert	src/option_list.c	/^void option_insert(list *l, char *key, char *val)$/;"	f
option_unused	src/option_list.c	/^void option_unused(list *l)$/;"	f
options	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline superlu_options_t& options() { return m_sluOptions; }$/;"	f	class:Eigen::SuperLUBase
options	src/parser.c	/^    list *options;$/;"	m	struct:__anon6	file:
or_image	src/data.c	/^void or_image(image src, image dest, int c)$/;"	f
order	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType order ; \/* pivot ordering of this column, if col is dead *\/$/;"	m	union:internal::colamd_col::__anon123
order	src/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon12
order_children	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^static inline  void order_children$/;"	f	namespace:internal
ordering	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::ordering(const MatrixType& a, ConstCholMatrixPtr &pmat, CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
ordering_helper_at_plus_a	plugin/Eigen/src/OrderingMethods/Ordering.h	/^void ordering_helper_at_plus_a(const MatrixType& A, MatrixType& symmat)$/;"	f	namespace:Eigen::internal
origin	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
originalMatrix	plugin/Eigen/src/misc/Image.h	/^  inline const MatrixType& originalMatrix() const { return m_originalMatrix; }$/;"	f	struct:Eigen::internal::image_retval_base
other	plugin/Eigen/src/Core/util/Memory.h	/^    typedef aligned_allocator<U> other;$/;"	t	struct:Eigen::aligned_allocator::rebind
other	plugin/Eigen/src/StlSupport/details.h	/^      typedef aligned_allocator_indirection<U> other;$/;"	t	struct:Eigen::aligned_allocator_indirection::rebind
out	src/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon18
out	src/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon22
out_c	include/darknet.h	/^    int out_h, out_w, out_c;$/;"	m	struct:layer
out_h	include/darknet.h	/^    int out_h, out_w, out_c;$/;"	m	struct:layer
out_h	include/darknet.h	/^    int out_h;$/;"	m	struct:load_args
out_w	include/darknet.h	/^    int out_h, out_w, out_c;$/;"	m	struct:layer
out_w	include/darknet.h	/^    int out_w;$/;"	m	struct:load_args
outer	plugin/Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling::__anon497
outer	plugin/Eigen/src/Core/AssignEvaluator.h	/^    outer = Index \/ DstXprType::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling::__anon498
outer	plugin/Eigen/src/Core/Redux.h	/^    outer = Start \/ Derived::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon374
outer	plugin/Eigen/src/Core/Redux.h	/^    outer = index \/ int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon376
outer	plugin/Eigen/src/Core/Stride.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::Stride
outer	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return 0; }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
outer	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index outer()  const { return EvalIterator::outer() - (IsRowMajor ? m_block.startRow() : m_block.startCol()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_lhsIter.outer(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_rhsIter.outer(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index outer() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
outer	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index outer() const  { return m_sparseIter.outer(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
outerInd	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *outerInd;$/;"	m	struct:Eigen::SluMatrix::__anon35
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline StorageIndex* outerIndexPtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const StorageIndex* outerIndexPtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline StorageIndex* outerIndexPtr() { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().outerIndexPtr(); }$/;"	f	class:Eigen::SparseCompressedBase
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline StorageIndex* outerIndexPtr()   { return Base::m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMapBase
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline StorageIndex* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const StorageIndex* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline StorageIndex* outerIndexPtr() { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const StorageIndex* outerIndexPtr() const { return derived().nestedExpression().outerIndexPtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline StorageIndex* outerIndexPtr() { return 0; }$/;"	f	class:Eigen::SparseVector
outerIndexPtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline const StorageIndex* outerIndexPtr() const { return 0; }$/;"	f	class:Eigen::SparseVector
outerSize	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const   { return m_dstExpr.outerSize(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerSize	plugin/Eigen/src/Core/DenseBase.h	/^    Index outerSize() const$/;"	f	class:Eigen::DenseBase
outerSize	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index outerSize() const { return m_xpr.outerSize(); }$/;"	f	class:Eigen::internal::redux_evaluator
outerSize	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMapBase
outerSize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
outerSize	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }$/;"	f	class:Eigen::SparseMatrixBase
outerSize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index outerSize() const { return 1; }$/;"	f	class:Eigen::SparseVector
outerSize	plugin/Eigen/src/SparseCore/SparseView.h	/^  inline Index outerSize() const { return m_matrix.outerSize(); }$/;"	f	class:Eigen::SparseView
outerStride	plugin/Eigen/src/Core/Array.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Array
outerStride	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ArrayWrapper
outerStride	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::MatrixWrapper
outerStride	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index outerStride() const { return m_dstExpr.outerStride(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
outerStride	plugin/Eigen/src/Core/Block.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::internal::BlockImpl_dense
outerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Index outerStride() const { return OuterStride; }$/;"	f	class:Eigen::internal::plainobjectbase_evaluator_data
outerStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC Index outerStride() const { return m_outerStride; }$/;"	f	class:Eigen::internal::plainobjectbase_evaluator_data
outerStride	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
outerStride	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
outerStride	plugin/Eigen/src/Core/Diagonal.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Diagonal
outerStride	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
outerStride	plugin/Eigen/src/Core/Map.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Map
outerStride	plugin/Eigen/src/Core/Matrix.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Matrix
outerStride	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::NestByValue
outerStride	plugin/Eigen/src/Core/Ref.h	/^  EIGEN_DEVICE_FUNC inline Index outerStride() const$/;"	f	class:Eigen::RefBase
outerStride	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfAdjointView
outerStride	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TransposeImpl
outerStride	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TriangularViewImpl
outerStride	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().outerStride(); }$/;"	f	class:Eigen::TriangularBase
outer_product_selector_run	plugin/Eigen/src/Core/ProductEvaluators.h	/^void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const false_type&)$/;"	f	namespace:Eigen::internal
outer_product_selector_run	plugin/Eigen/src/Core/ProductEvaluators.h	/^void outer_product_selector_run(Dst& dst, const Lhs &lhs, const Rhs &rhs, const Func& func, const true_type&)$/;"	f	namespace:Eigen::internal
outer_stride_at_compile_time	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
outfile	src/stb_image_write.h	/^static int outfile(char const *filename, int rgb_dir, int vdir, int x, int y, int comp, int expand_mono, void *data, int alpha, int pad, const char *fmt, ...)$/;"	f
output	include/darknet.h	/^    float * output;$/;"	m	struct:layer
output	include/darknet.h	/^    float *output;$/;"	m	struct:network
output_gpu	include/darknet.h	/^    float * output_gpu;$/;"	m	struct:layer
output_gpu	include/darknet.h	/^    float *output_gpu;$/;"	m	struct:network
output_layer	include/darknet.h	/^    struct layer *output_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
outputs	include/darknet.h	/^    int outputs;$/;"	m	struct:layer
outputs	include/darknet.h	/^    int outputs;$/;"	m	struct:network
overlap	src/box.c	/^float overlap(float x1, float w1, float x2, float w2)$/;"	f
p	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType p ;   \/* used as a row pointer in init_rows_cols () *\/$/;"	m	union:internal::Colamd_Row::__anon126
p16uc_COMPLEX32_REV	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV = vec_sld(p16uc_REVERSE32, p16uc_REVERSE32, 8);                                         \/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV = vec_sld(p16uc_REVERSE32, p16uc_REVERSE32, 8);                                         \/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_PSET64_HI, p16uc_PSET64_LO, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX32_REV2	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_COMPLEX32_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);                                            \/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE32_HI	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE32_HI = { 0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE32_HI	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE32_HI = { 0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = p16uc_REVERSE32; $/;"	m	namespace:Eigen::internal
p16uc_FORWARD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = vec_lvsl(0, (float*)0);$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_FORWARD =   { 0,1,2,3, 4,5,6,7, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld((Packet16uc)p4i_ZERO, vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 3), 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_HALF64_0_16	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_HALF64_0_16 = vec_sld(vec_splat((Packet16uc) vec_abs(p4i_MINUS16), 0), (Packet16uc)p4i_ZERO, 8);      \/\/{ 0,0,0,0, 0,0,0,0, 16,16,16,16, 16,16,16,16};$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN  = vec_sld(p16uc_DUPLICATE32_HI, (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WEVEN	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET32_WEVEN  = vec_sld(p16uc_DUPLICATE32_HI, (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 1), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET32_WODD	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET32_WODD   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_HI	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_HI = (Packet16uc) vec_mergeh((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_HI	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET64_HI = { 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_LO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_PSET64_LO = (Packet16uc) vec_mergel((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_PSET64_LO	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_PSET64_LO = (Packet16uc) vec_mergel((Packet4ui)p16uc_PSET32_WODD, (Packet4ui)p16uc_PSET32_WEVEN);     \/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE32	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE32 = { 12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE32	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_REVERSE32 = { 12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE64	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE64 = { 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE64	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_REVERSE64 = { 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_HI	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_HI = p16uc_PSET64_HI + p16uc_HALF64_0_16;                                         \/\/{ 0,1,2,3, 4,5,6,7, 16,17,18,19, 20,21,22,23};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_HI	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_HI = { 0,1,2,3, 4,5,6,7, 16,17,18,19, 20,21,22,23};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_LO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_LO = p16uc_PSET64_LO + p16uc_HALF64_0_16;                                         \/\/{ 8,9,10,11, 12,13,14,15, 24,25,26,27, 28,29,30,31};$/;"	m	namespace:Eigen::internal
p16uc_TRANSPOSE64_LO	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet16uc p16uc_TRANSPOSE64_LO = { 8,9,10,11, 12,13,14,15, 24,25,26,27, 28,29,30,31};$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet4f>(p2d_ONE), reinterpret_cast<Packet4f>(p2d_ZERO), 8));$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet4f>(p2d_ZERO), reinterpret_cast<Packet4f>(p2d_ONE), 8));$/;"	m	namespace:Eigen::internal
p2d_COUNTDOWN	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_COUNTDOWN = reinterpret_cast<Packet2d>(vec_sld(reinterpret_cast<Packet16uc>(p2d_ZERO), reinterpret_cast<Packet16uc>(p2d_ONE), 8));$/;"	m	namespace:Eigen::internal
p2d_MZERO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_MZERO = { -0.0, -0.0 };$/;"	m	namespace:Eigen::internal
p2d_ONE	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_ONE  = { 1.0, 1.0 }; $/;"	m	namespace:Eigen::internal
p2d_ONE	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_ONE = { 1.0, 1.0 }; $/;"	m	namespace:Eigen::internal
p2d_ZERO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2d  p2d_ZERO = reinterpret_cast<Packet2d>(p4f_ZERO);$/;"	m	namespace:Eigen::internal
p2d_ZERO_	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet2d p2d_ZERO_ = { -0.0, -0.0 };$/;"	m	namespace:Eigen::internal
p2l_1023	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static Packet2l p2l_1023 = { 1023, 1023 };$/;"	m	namespace:Eigen::internal
p2l_ONE	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2l  p2l_ONE  = { 1, 1 };$/;"	m	namespace:Eigen::internal
p2l_ZERO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet2l  p2l_ZERO = reinterpret_cast<Packet2l>(p4i_ZERO);$/;"	m	namespace:Eigen::internal
p2ui_CONJ_XOR	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^inline uint32x2_t p2ui_CONJ_XOR() {$/;"	f	namespace:Eigen::internal
p2ul_52	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^static Packet2ul p2ul_52 = { 52, 52 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  static uint64x2_t p2ul_CONJ_XOR = vld1q_u64( p2ul_conj_XOR_DATA );$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  static uint64x2_t p2ul_CONJ_XOR = {0x0, 0x8000000000000000};$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2d_MZERO, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_MZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR1	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR1 = (Packet2ul) vec_sld((Packet4ui) p2d_ZERO_, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2d_MZERO, (Packet4ui) p2l_ZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_MZERO, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_CONJ_XOR2	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^static Packet2ul  p2ul_CONJ_XOR2 = (Packet2ul) vec_sld((Packet4ui) p2l_ZERO,  (Packet4ui) p2d_ZERO_, 8);\/\/{ 0x8000000000000000, 0x0000000000000000 };$/;"	m	namespace:Eigen::internal
p2ul_conj_XOR_DATA	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  const uint64_t  p2ul_conj_XOR_DATA[] = { 0x0, 0x8000000000000000 };$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 0.0, 1.0, 2.0, 3.0 };$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 0.0, 1.0, 2.0, 3.0 };$/;"	m	namespace:Eigen::internal
p4f_MZERO	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_MZERO = (Packet4f) vec_sl((Packet4ui)p4i_MINUS1, (Packet4ui)p4i_MINUS1); \/\/{ 0x80000000, 0x80000000, 0x80000000, 0x80000000}$/;"	m	namespace:Eigen::internal
p4f_MZERO	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet4f p4f_MZERO = { 0x80000000, 0x80000000, 0x80000000, 0x80000000};$/;"	m	namespace:Eigen::internal
p4f_ONE	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ONE = vec_ctf(p4i_ONE, 0); \/\/{ 1.0, 1.0, 1.0, 1.0}$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 0, 1, 2, 3 };$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 0, 1, 2, 3 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_MZERO);\/\/{ 0x00000000, 0x80000000, 0x00000000, 0x80000000 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^inline uint32x4_t p4ui_CONJ_XOR() {$/;"	f	namespace:Eigen::internal
p4ui_CONJ_XOR	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = { 0x00000000, 0x80000000, 0x00000000, 0x80000000 }; \/\/vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_MZERO);$/;"	m	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/GenericPacketMath.h	/^pabs(const Packet& a) { using std::abs; return abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pabs(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pabs(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pabs(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f pabs(const Packet16f& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pabs<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4  pabs<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pabs<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a) { return vabsq_f64(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vabsq_f32(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vabsq_s32(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs<Packet2d>(const Packet2d& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs<Packet4f>   (const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs<Packet4i>(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pack	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void pack(Scalar* blockA, const const_blas_data_mapper<Scalar,Index,StorageOrder>& lhs, Index cols, Index i, Index& count)$/;"	f	struct:Eigen::internal::symm_pack_lhs
packedMatrix	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const MatrixType& packedMatrix() const$/;"	f	class:Eigen::HessenbergDecomposition
packedMatrix	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline const MatrixType& packedMatrix() const$/;"	f	class:Eigen::Tridiagonalization
packet	plugin/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	plugin/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::internal::BlockImpl_dense
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::ternary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const $/;"	f	struct:Eigen::internal::unary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::binary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::mapbase_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::ternary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::unary_evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(IndexType index) const$/;"	f	struct:Eigen::internal::evaluator
packet	plugin/Eigen/src/Core/CoreEvaluators.h	/^  PacketType packet(IndexType row, IndexType col) const$/;"	f	struct:Eigen::internal::evaluator
packet	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	plugin/Eigen/src/Core/GenericPacketMath.h	/^  Packet packet[N];$/;"	m	struct:Eigen::internal::PacketBlock
packet	plugin/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::MapBase
packet	plugin/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::MapBase
packet	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::NestByValue
packet	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
packet	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::PlainObjectBase
packet	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index rowId, Index colId) const$/;"	f	class:Eigen::PlainObjectBase
packet	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index idx) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	plugin/Eigen/src/Core/ProductEvaluators.h	/^  const PacketType packet(Index index) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	plugin/Eigen/src/Core/ProductEvaluators.h	/^  const PacketType packet(Index row, Index col) const$/;"	f	struct:Eigen::internal::product_evaluator
packet	plugin/Eigen/src/Core/Redux.h	/^  PacketType packet(Index index) const$/;"	f	class:Eigen::internal::redux_evaluator
packet	plugin/Eigen/src/Core/Redux.h	/^  PacketType packet(Index row, Index col) const$/;"	f	class:Eigen::internal::redux_evaluator
packetByOuterInner	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
packetByOuterInner	plugin/Eigen/src/Core/Redux.h	/^  PacketType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::internal::redux_evaluator
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i) const { return op.template packetOp<T>(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i) const { return op.template packetOp<T>(i); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j) const { return op.template packetOp<T>(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j) const {$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType i, IndexType j=0) const { return op.template packetOp<T>(i,j); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/CoreEvaluators.h	/^  template <typename T, typename IndexType> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE T packetOp(const NullaryOp& op, IndexType=0, IndexType=0) const { return op.template packetOp<T>(); }$/;"	f	struct:Eigen::internal::nullary_wrapper
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::bind2nd_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_difference_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_max_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_min_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_product_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_quotient_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_sum_op
packetOp	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& b) const$/;"	f	struct:Eigen::internal::bind1st_op
packetOp	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(IndexType i) const { return impl.packetOp(i); }$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(IndexType i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const PacketType packetOp() const { return internal::pset1<PacketType>(m_other); }$/;"	f	struct:Eigen::internal::scalar_constant_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const { return internal::pconj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs2_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_arg_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_opposite_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pacos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pasin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::patan(a); }$/;"	f	struct:Eigen::internal::scalar_atan_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pceil(a); }$/;"	f	struct:Eigen::internal::scalar_ceil_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pcos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pcosh(a); }$/;"	f	struct:Eigen::internal::scalar_cosh_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pexp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pexpm1(a); }$/;"	f	struct:Eigen::internal::scalar_expm1_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pfloor(a); }$/;"	f	struct:Eigen::internal::scalar_floor_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog10(a); }$/;"	f	struct:Eigen::internal::scalar_log10_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::plog1p(a); }$/;"	f	struct:Eigen::internal::scalar_log1p_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::pround(a); }$/;"	f	struct:Eigen::internal::scalar_round_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::prsqrt(a); }$/;"	f	struct:Eigen::internal::scalar_rsqrt_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psinh(a); }$/;"	f	struct:Eigen::internal::scalar_sinh_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::psqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& a) const { return internal::ptan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline Packet packetOp(const Packet& x) const { return ptanh(x); }$/;"	f	struct:Eigen::internal::scalar_tanh_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_cube_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_op
packetOp	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  EIGEN_DEVICE_FUNC inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_square_op
packet_access_bit	plugin/Eigen/src/Core/Matrix.h	/^      packet_access_bit = (packet_traits<_Scalar>::Vectorizable && (EIGEN_UNALIGNED_VECTORIZE || (actual_alignment>=required_alignment))) ? PacketAccessBit : 0$/;"	e	enum:Eigen::internal::traits::__anon676
packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::false_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_impl	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_STRONG_INLINE PacketType packet_impl(Index row, Index col, Index id, internal::true_type) const$/;"	f	struct:Eigen::internal::diagonal_product_evaluator_base
packet_traits	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits<const T> : packet_traits<T> { };$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct packet_traits<float> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct packet_traits<Eigen::half> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<double>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<int32_t>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<float> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
pacos	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pacos(const Packet& a) { using std::acos; return acos(a); }$/;"	f	namespace:Eigen::internal
pad	include/darknet.h	/^    int pad;$/;"	m	struct:layer
padd	plugin/Eigen/src/Core/GenericPacketMath.h	/^padd(const Packet& a,$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd padd<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf padd<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d padd<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f padd<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f padd<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d padd<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return a + b; }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 padd<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 padd<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 padd<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(padd<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return vaddq_f64(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vaddq_f32(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vaddq_s32(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v + b.v); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a + b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return (a + b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a + b); }$/;"	f	namespace:Eigen::internal
padd	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^DoublePacket<Packet> padd(const DoublePacket<Packet> &a, const DoublePacket<Packet> &b)$/;"	f	namespace:Eigen::internal
pal	src/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon22
palign	plugin/Eigen/src/Core/GenericPacketMath.h	/^inline void palign(PacketType& first, const PacketType& second)$/;"	f	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/GenericPacketMath.h	/^struct palign_impl$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet2cd>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^struct palign_impl<Offset,Packet4cf>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet4d>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^struct palign_impl<Offset,Packet8f>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct palign_impl<Offset, Packet16f> {$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct palign_impl<Offset, Packet8d> {$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/GenericPacketMath.h	/^pand(const Packet& a, const Packet& b) { return a & b; }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pand   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pand   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pand<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pand<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pand<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pand<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pand(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pand<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vandq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_and_si128(a,b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pand<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>   (const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/GenericPacketMath.h	/^pandnot(const Packet& a, const Packet& b) { return a & (!b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pandnot<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pandnot<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pandnot<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pandnot<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pandnot<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pandnot<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pandnot(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pandnot<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vbicq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pandnot<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return pand<Packet4i>(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
panel_bmod	plugin/Eigen/src/SparseLU/SparseLU_panel_bmod.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_bmod(const Index m, const Index w, const Index jcol, $/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^void SparseLUImpl<Scalar,StorageIndex>::panel_dfs(const Index m, const Index w, const Index jcol, MatrixType& A, IndexVector& perm_r, Index& nseg, ScalarVector& dense, IndexVector& panel_lsub, IndexVector& segrep, IndexVector& repfnz, IndexVector& xprune, IndexVector& marker, IndexVector& parent, IndexVector& xplore, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
panel_dfs_traits	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  panel_dfs_traits(Index jcol, StorageIndex* marker)$/;"	f	struct:Eigen::internal::panel_dfs_traits
panel_dfs_traits	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^struct panel_dfs_traits$/;"	s	namespace:Eigen::internal
panel_size	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index panel_size; \/\/ a panel consists of at most <panel_size> consecutive columns$/;"	m	struct:Eigen::internal::perfvalues
parallelize_gemm	plugin/Eigen/src/Core/products/Parallelizer.h	/^void parallelize_gemm(const Functor& func, Index rows, Index cols, Index depth, bool transpose)$/;"	f	namespace:Eigen::internal
pardisoInit	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoInit(int type)$/;"	f	class:Eigen::PardisoImpl
pardisoParameterArray	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ParameterType& pardisoParameterArray()$/;"	f	class:Eigen::PardisoImpl
pardisoRelease	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoRelease()$/;"	f	class:Eigen::PardisoImpl
pardiso_run_selector	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector$/;"	s	namespace:Eigen::internal
pardiso_run_selector	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector<long long int>$/;"	s	namespace:Eigen::internal
pardiso_traits	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLDLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
parent	include/darknet.h	/^    int *parent;$/;"	m	struct:__anon725
parent	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType parent ;  \/* parent in parent tree super-column structure, if *\/$/;"	m	union:internal::colamd_col::__anon122
parg	plugin/Eigen/src/Core/GenericPacketMath.h	/^parg(const Packet& a) { using numext::arg; return arg(a); }$/;"	f	namespace:Eigen::internal
parse	src/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon22
parse_activation	src/parser.c	/^layer parse_activation(list *options, size_params params)$/;"	f
parse_avgpool	src/parser.c	/^avgpool_layer parse_avgpool(list *options, size_params params)$/;"	f
parse_batchnorm	src/parser.c	/^layer parse_batchnorm(list *options, size_params params)$/;"	f
parse_connected	src/parser.c	/^layer parse_connected(list *options, size_params params)$/;"	f
parse_convolutional	src/parser.c	/^convolutional_layer parse_convolutional(list *options, size_params params)$/;"	f
parse_cost	src/parser.c	/^cost_layer parse_cost(list *options, size_params params)$/;"	f
parse_crnn	src/parser.c	/^layer parse_crnn(list *options, size_params params)$/;"	f
parse_crop	src/parser.c	/^crop_layer parse_crop(list *options, size_params params)$/;"	f
parse_csv_line	src/utils.c	/^list *parse_csv_line(char *line)$/;"	f
parse_data	src/parser.c	/^void parse_data(char *data, float *a, int n)$/;"	f
parse_deconvolutional	src/parser.c	/^layer parse_deconvolutional(list *options, size_params params)$/;"	f
parse_detection	src/parser.c	/^detection_layer parse_detection(list *options, size_params params)$/;"	f
parse_dropout	src/parser.c	/^dropout_layer parse_dropout(list *options, size_params params)$/;"	f
parse_fields	src/utils.c	/^float *parse_fields(char *line, int n)$/;"	f
parse_gru	src/parser.c	/^layer parse_gru(list *options, size_params params)$/;"	f
parse_local	src/parser.c	/^local_layer parse_local(list *options, size_params params)$/;"	f
parse_lstm	src/parser.c	/^layer parse_lstm(list *options, size_params params)$/;"	f
parse_maxpool	src/parser.c	/^maxpool_layer parse_maxpool(list *options, size_params params)$/;"	f
parse_net_options	src/parser.c	/^void parse_net_options(list *options, network *net)$/;"	f
parse_network_cfg	src/parser.c	/^network *parse_network_cfg(char *filename)$/;"	f
parse_normalization	src/parser.c	/^layer parse_normalization(list *options, size_params params)$/;"	f
parse_region	src/parser.c	/^layer parse_region(list *options, size_params params)$/;"	f
parse_reorg	src/parser.c	/^layer parse_reorg(list *options, size_params params)$/;"	f
parse_rnn	src/parser.c	/^layer parse_rnn(list *options, size_params params)$/;"	f
parse_route	src/parser.c	/^route_layer parse_route(list *options, size_params params, network *net)$/;"	f
parse_shortcut	src/parser.c	/^layer parse_shortcut(list *options, size_params params, network *net)$/;"	f
parse_softmax	src/parser.c	/^softmax_layer parse_softmax(list *options, size_params params)$/;"	f
partial	examples/darknet.c	/^void partial(char *cfgfile, char *weightfile, char *outfile, int max)$/;"	f
partialPivLu	plugin/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::partialPivLu() const$/;"	f	class:Eigen::MatrixBase
partial_lu_impl	plugin/Eigen/src/LU/PartialPivLU.h	/^struct partial_lu_impl$/;"	s	namespace:Eigen::internal
partial_lu_inplace	plugin/Eigen/src/LU/PartialPivLU.h	/^void partial_lu_inplace(MatrixType& lu, TranspositionType& row_transpositions, typename TranspositionType::StorageIndex& nb_transpositions)$/;"	f	namespace:Eigen::internal
pasin	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pasin(const Packet& a) { using std::asin; return asin(a); }$/;"	f	namespace:Eigen::internal
pass	examples/go.c	/^    int pass;$/;"	m	struct:mcts_tree	file:
pastix_traits	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLDLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
patan	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet patan(const Packet& a) { using std::atan; return atan(a); }$/;"	f	namespace:Eigen::internal
path	include/darknet.h	/^    char *path;$/;"	m	struct:load_args
paths	include/darknet.h	/^    char **paths;$/;"	m	struct:load_args
pblend	plugin/Eigen/src/Core/GenericPacketMath.h	/^pblend(const Selector<unpacket_traits<Packet>::size>& ifPacket, const Packet& thenPacket, const Packet& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pblend(const Selector<4>& ifPacket, const Packet4d& thenPacket, const Packet4d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pblend(const Selector<8>& ifPacket, const Packet8f& thenPacket, const Packet8f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pblend(const Selector<16>& \/*ifPacket*\/,$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pblend(const Selector<8>& ifPacket,$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<>  EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pblend(const Selector<2>& ifPacket, const Packet2cf& thenPacket, const Packet2cf& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pblend(const Selector<2>& ifPacket, const Packet2d& thenPacket, const Packet2d& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pblend(const Selector<4>& ifPacket, const Packet4f& thenPacket, const Packet4f& elsePacket) {$/;"	f	namespace:Eigen::internal
pblend	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pblend(const Selector<4>& ifPacket, const Packet4i& thenPacket, const Packet4i& elsePacket) {$/;"	f	namespace:Eigen::internal
pbroadcast2	plugin/Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast2(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/GenericPacketMath.h	/^inline void pbroadcast4(const typename unpacket_traits<Packet>::type *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^pbroadcast4<Packet4i>(const int *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet2d>(const double *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet4f>(const float *a,$/;"	f	namespace:Eigen::internal
pbroadcast4	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^pbroadcast4<Packet4i>(const int *a,$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a, const SrcPacket& \/*b*\/) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/GenericPacketMath.h	/^pcast(const SrcPacket& a, const SrcPacket& \/*b*\/, const SrcPacket& \/*c*\/, const SrcPacket& \/*d*\/) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8f pcast<Packet8i, Packet8f>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8i pcast<Packet8f, Packet8i>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pcast<half2, float4>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE half2 pcast<float4, half2>(const float4& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet16f pcast<Packet16h, Packet16f>(const Packet16h& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet16h pcast<Packet16f, Packet16h>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet4h, Packet4f>(const Packet4h& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4h pcast<Packet4f, Packet4h>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8f pcast<Packet8h, Packet8f>(const Packet8h& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet8h pcast<Packet8f, Packet8h>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet2d pcast<Packet4f, Packet2d>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet2d, Packet4f>(const Packet2d& a, const Packet2d& b) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4f pcast<Packet4i, Packet4f>(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
pcast	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^template<> EIGEN_STRONG_INLINE Packet4i pcast<Packet4f, Packet4i>(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pceil(const Packet& a) { using numext::ceil; return ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pceil<Packet4d>(const Packet4d& a) { return _mm256_ceil_pd(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pceil<Packet8f>(const Packet8f& a) { return _mm256_ceil_ps(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const  Packet2d& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const  Packet4f& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const Packet2d& a) { return _mm_ceil_pd(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const Packet4f& a) { return _mm_ceil_ps(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pceil<Packet2d>(const  Packet2d& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>  (const Packet4f& a) { return vec_ceil(a); }$/;"	f	namespace:Eigen::internal
pceil	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pceil<Packet4f>(const  Packet4f& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/GenericPacketMath.h	/^pconj(const Packet& a) { return numext::conj(a); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pconj(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pconj(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pconj(const Packet4d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pconj(const Packet8f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pconj(const Packet8i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pconj(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pconj(const Packet16i& a) {$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pconj(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd(pxor(a.v, reinterpret_cast<Packet2d>(p2ul_CONJ_XOR2))); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf(pxor<Packet4f>(a.v, reinterpret_cast<Packet4f>(p4ui_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pconj(const double2& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pconj(const float4& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pconj(const half2& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd(vreinterpretq_f64_u64(veorq_u64(vreinterpretq_u64_f64(a.v), p2ul_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj(const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a) { return Packet1cd((Packet2d)vec_xor((Packet2d)a.v, (Packet2d)p2ul_CONJ_XOR2)); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf(pxor<Packet4f>(a.v, reinterpret_cast<Packet4f>(p4ui_CONJ_XOR))); }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pconj(const Packet2d& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pconj<Packet4f>  (const Packet4f& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pconj(const Packet4i& a) { return a; }$/;"	f	namespace:Eigen::internal
pconj	plugin/Eigen/src/Core/util/BlasUtil.h	/^  inline T pconj(const T& x) const { return internal::pconj(x); }$/;"	f	struct:Eigen::internal::conj_if
pconj	plugin/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& pconj(const T& x) const { return x; }$/;"	f	struct:Eigen::internal::conj_if
pcos	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pcos(const Packet& a) { using std::cos; return cos(a); }$/;"	f	namespace:Eigen::internal
pcos	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pcos<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pcosh	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pcosh(const Packet& a) { using std::cosh; return cosh(a); }$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet pcplxflip(const Packet& a)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pcplxflip<Packet2cd>(const Packet2cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pcplxflip<Packet4cf>(const Packet4cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/* <Packet1cd> *\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/* <Packet2cf> *\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/*<Packet2cf>*\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/GenericPacketMath.h	/^pdiv(const Packet& a,$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pdiv<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pdiv<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pdiv<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pdiv<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pdiv<Packet8i>(const Packet8i& \/*a*\/, const Packet8i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pdiv<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pdiv<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_div(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pdiv<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pdiv<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pdiv<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return vdivq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a \/ b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return (a \/ b); }$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a \/ b); }$/;"	f	namespace:Eigen::internal
performFrancisQRStep	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::performFrancisQRStep(Index il, Index im, Index iu, bool computeU, const Vector3s& firstHouseholderVector, Scalar* workspace)$/;"	f	class:Eigen::RealSchur
perfvalues	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^struct perfvalues {$/;"	s	namespace:Eigen::internal
perm	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& perm() const { return m_perm; }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
permutationP	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const PermutationType& permutationP() const { eigen_assert("m_analysisIsOk"); return m_perm; }$/;"	f	class:Eigen::IncompleteCholesky
permutationP	plugin/Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline const PermutationPType& permutationP() const$/;"	f	class:Eigen::FullPivLU
permutationP	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline const PermutationType& permutationP() const$/;"	f	class:Eigen::PartialPivLU
permutationP	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationP() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationP	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::SuperLU
permutationP	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::UmfPackLU
permutationPinv	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& permutationPinv() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationQ	plugin/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationQType& permutationQ() const$/;"	f	class:Eigen::FullPivLU
permutationQ	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::SuperLU
permutationQ	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::UmfPackLU
permutation_matrix_product	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, DenseShape>$/;"	s	namespace:Eigen::internal
permutation_matrix_product	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, HomogeneousShape>$/;"	s	namespace:Eigen::internal
permutation_matrix_product	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^struct permutation_matrix_product<ExpressionType, Side, Transposed, SparseShape>$/;"	s	namespace:Eigen::internal
permute_symm_to_fullsymm	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_fullsymm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DestOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
permute_symm_to_symm	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_symm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DstOrder,typename MatrixType::StorageIndex>& _dest, const typename MatrixType::StorageIndex* perm)$/;"	f	namespace:Eigen::internal
perturbCol0	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::perturbCol0$/;"	f	class:Eigen::BDCSVD
pexp	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pexp(const Packet& a) { using std::exp; return exp(a); }$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet4d>(const Packet4d& _x) {$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^pexp<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^pexp<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 pexp<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 pexp<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 pexp<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pexp<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/NEON/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d pexp<Packet2d>(const Packet2d& _x)$/;"	f	namespace:Eigen::internal
pexp	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pexpm1	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pexpm1(const Packet& a) { return numext::expm1(a); }$/;"	f	namespace:Eigen::internal
pexpm1	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 pexpm1<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
pexpm1	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 pexpm1<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
pexpm1	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pexpm1<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type pfirst(const Packet& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> pfirst<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet4d>(const Packet4d& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet8f>(const Packet8f& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet8i>(const Packet8i& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double pfirst<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float pfirst<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE int pfirst<Packet16i>(const Packet16i& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double  pfirst<Packet2d>(const Packet2d& a) { double EIGEN_ALIGN16 x[2]; pstore<double>(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x; vec_ste(a, 0, &x); return x; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x; vec_ste(a, 0, &x); return x; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double pfirst<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  pfirst<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half pfirst<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(a, 0); }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float   pfirst<Packet4f>(const Packet4f& a) { float   EIGEN_ALIGN16 x[4]; vst1q_f32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t pfirst<Packet4i>(const Packet4i& a) { int32_t EIGEN_ALIGN16 x[4]; vst1q_s32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double EIGEN_ALIGN16 x[2]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float  EIGEN_ALIGN16 x[2]; vec_st2f(a.v4f[0], &x[0]); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int    EIGEN_ALIGN16 x[4]; pstore(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pfloor(const Packet& a) { using numext::floor; return floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pfloor<Packet4d>(const Packet4d& a) { return _mm256_floor_pd(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pfloor<Packet8f>(const Packet8f& a) { return _mm256_floor_ps(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return _mm_floor_pd(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a) { return _mm_floor_ps(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pfloor<Packet2d>(const Packet2d& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f> (const Packet4f& a) { return vec_floor(a); }$/;"	f	namespace:Eigen::internal
pfloor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pfloor<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline Packet pgather(const Scalar* from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cd pgather<std::complex<double>, Packet2cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4cf pgather<std::complex<float>, Packet4cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4d pgather<double, Packet4d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet8f pgather<float, Packet8f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline Packet16f pgather<float, Packet16f>(const float* from,$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline Packet8d pgather<double, Packet8d>(const double* from,$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double2 pgather<double, double2>(const double* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float4 pgather<float, float4>(const float* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pgather<Eigen::half, half2>(const Eigen::half* from, Index stride) {$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int32_t, Packet4i>(const int32_t* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet1cd pgather<std::complex<double>, Packet1cd>(const std::complex<double>* from, Index stride EIGEN_UNUSED)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2cf pgather<std::complex<float>, Packet2cf>(const std::complex<float>* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet2d pgather<double, Packet2d>(const double* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4f pgather<float, Packet4f>(const float* from, Index stride)$/;"	f	namespace:Eigen::internal
pgather	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline Packet4i pgather<int, Packet4i>(const int* from, Index stride)$/;"	f	namespace:Eigen::internal
pick_move	examples/go.c	/^move pick_move(mcts_tree *tree, float temp, int player)$/;"	f
pinsertfirst	plugin/Eigen/src/Core/GenericPacketMath.h	/^pinsertfirst(const Packet& a, typename unpacket_traits<Packet>::type b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pinsertfirst(const Packet2cd& a, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pinsertfirst(const Packet4cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pinsertfirst(const Packet4d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pinsertfirst(const Packet8f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f pinsertfirst(const Packet16f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d pinsertfirst(const Packet8d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pinsertfirst(const Packet1cd&, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pinsertfirst(const Packet2cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pinsertfirst(const Packet2d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertfirst	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pinsertfirst(const Packet4f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/GenericPacketMath.h	/^pinsertlast(const Packet& a, typename unpacket_traits<Packet>::type b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pinsertlast(const Packet2cd& a, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pinsertlast(const Packet4cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pinsertlast(const Packet4d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pinsertlast(const Packet8f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f pinsertlast(const Packet16f& a, float b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d pinsertlast(const Packet8d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pinsertlast(const Packet1cd&, std::complex<double> b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pinsertlast(const Packet2cf& a, std::complex<float> b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pinsertlast(const Packet2d& a, double b)$/;"	f	namespace:Eigen::internal
pinsertlast	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pinsertlast(const Packet4f& a, float b)$/;"	f	namespace:Eigen::internal
pivotL	plugin/Eigen/src/SparseLU/SparseLU_pivotL.h	/^Index SparseLUImpl<Scalar,StorageIndex>::pivotL(const Index jcol, const RealScalar& diagpivotthresh, IndexVector& perm_r, IndexVector& iperm_c, Index& pivrow, GlobalLU_t& glu)$/;"	f	class:Eigen::internal::SparseLUImpl
place_image	src/image.c	/^void place_image(image im, int w, int h, int dx, int dy, image canvas)$/;"	f
placeholders	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^namespace placeholders {$/;"	n	namespace:Eigen
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array() {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  EIGEN_DEVICE_FUNC plain_array(constructor_without_unaligned_array_assert) {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  plain_array() $/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  plain_array()$/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) $/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert)$/;"	f	struct:Eigen::internal::plain_array
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array$/;"	s	namespace:Eigen::internal
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, 0, MatrixOrArrayOptions, Alignment>$/;"	s	namespace:Eigen::internal
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 16>$/;"	s	namespace:Eigen::internal
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 32>$/;"	s	namespace:Eigen::internal
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 64>$/;"	s	namespace:Eigen::internal
plain_array	plugin/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 8>$/;"	s	namespace:Eigen::internal
plain_matrix_type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct plain_matrix_type<T,Sparse>$/;"	s	namespace:Eigen::internal
plain_object_eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct plain_object_eval<T,Sparse>$/;"	s	namespace:Eigen::internal
plainobjectbase_evaluator_data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC plainobjectbase_evaluator_data(const Scalar* ptr, Index outerStride) : data(ptr)$/;"	f	class:Eigen::internal::plainobjectbase_evaluator_data
plainobjectbase_evaluator_data	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC plainobjectbase_evaluator_data(const Scalar* ptr, Index outerStride) : data(ptr), m_outerStride(outerStride) {}$/;"	f	class:Eigen::internal::plainobjectbase_evaluator_data
plainobjectbase_evaluator_data	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<typename Scalar,int OuterStride> class plainobjectbase_evaluator_data {$/;"	c	namespace:Eigen::internal
plainobjectbase_evaluator_data	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<typename Scalar> class plainobjectbase_evaluator_data<Scalar,Dynamic> {$/;"	c	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/GenericPacketMath.h	/^pload(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pload <Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pload <Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet4cf(pload<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload<Packet4d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload<Packet8f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pload<Packet8i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm256_load_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pload<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pload<Packet16i>(const int* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pload<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from) { return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>*        from) { return Packet2cf(pload<Packet4f>((const float *) from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pload<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pload<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pload<half2>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*    from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int32_t*  from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const __m128i*>(from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet1cd(pload<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from)  { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
pload	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/GenericPacketMath.h	/^pload1(const typename unpacket_traits<Packet>::type  *a) { return pset1<Packet>(*a); }$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pload1<Packet4d>(const double* from) { return _mm256_broadcast_sd(from); }$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pload1<Packet8f>(const float*  from) { return _mm256_broadcast_ss(from); }$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pload1<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pload1<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
pload1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload1<Packet4f>(const float *from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/GenericPacketMath.h	/^ploaddup(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploaddup<Packet2cd>(const std::complex<double>* from) { return pset1<Packet2cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploaddup<Packet4cf>(const std::complex<float>* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploaddup<Packet4d>(const double* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploaddup<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploaddup<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploaddup<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>*     from)  { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*     from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 ploaddup<double2>(const double*  from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 ploaddup<float4>(const float*   from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 ploaddup<half2>(const Eigen::half*  from) {$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int32_t* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*  from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>*     from) {  return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*      from) {  return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*   from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*    from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploaddup	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploadquad	plugin/Eigen/src/Core/GenericPacketMath.h	/^ploadquad(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadquad	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadquad<Packet8f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadquad	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploadquad<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadquad	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploadquad<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt	plugin/Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet ploadt(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE Packet ploadt_ro(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Aligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE double2 ploadt_ro<double2, Unaligned>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Aligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE float4 ploadt_ro<float4, Unaligned>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^ __device__ EIGEN_ALWAYS_INLINE half2 ploadt_ro<half2, Aligned>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadt_ro	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^__device__ EIGEN_ALWAYS_INLINE half2 ploadt_ro<half2, Unaligned>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/GenericPacketMath.h	/^ploadu(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd ploadu<Packet2cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf ploadu<Packet4cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet4cf(ploadu<Packet8f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d ploadu<Packet4d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f ploadu<Packet8f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_ps(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i ploadu<Packet8i>(const int* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm256_loadu_si256(reinterpret_cast<const __m256i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f ploadu<Packet16f>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i ploadu<Packet16i>(const int* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d ploadu<Packet8d>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>*       from) { return Packet2cf(ploadu<Packet4f>((const float*) from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 ploadu<double2>(const double* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 ploadu<float4>(const float* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 ploadu<half2>(const Eigen::half* from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f64(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*   from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int32_t* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>(&numext::real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet1cd(ploadu<Packet2d>((const double*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from)  { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double*    from) { return pload<Packet2d>(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f> (const float* from) { return pload<Packet4f>(from); }$/;"	f	namespace:Eigen::internal
ploadu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int*       from) { return pload<Packet4i>(from); }$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet plog(const Packet& a) { using std::log; return log(a); }$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^plog<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^plog<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 plog<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 plog<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 plog<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plog<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/NEON/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plog10	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet plog10(const Packet& a) { using std::log10; return log10(a); }$/;"	f	namespace:Eigen::internal
plog1p	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet plog1p(const Packet& a) { return numext::log1p(a); }$/;"	f	namespace:Eigen::internal
plog1p	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 plog1p<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
plog1p	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 plog1p<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
plog1p	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plog1p<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
plse_activate	src/activations.h	/^static inline float plse_activate(float x)$/;"	f
plse_gradient	src/activations.h	/^static inline float plse_gradient(float x){return (x < 0 || x > 1) ? .01 : .125;}$/;"	f
plset	plugin/Eigen/src/Core/GenericPacketMath.h	/^plset(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d plset<Packet4d>(const double& a) { return _mm256_add_pd(_mm256_set1_pd(a), _mm256_set_pd(3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f plset<Packet8f>(const float& a) { return _mm256_add_ps(_mm256_set1_ps(a), _mm256_set_ps(7.0,6.0,5.0,4.0,3.0,2.0,1.0,0.0)); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f plset<Packet16f>(const float& a) {$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d plset<Packet8d>(const double& a) {$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return pset1<Packet2d>(a) + p2d_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return pset1<Packet4f>(a) + p4f_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)   { return pset1<Packet4i>(a) + p4i_COUNTDOWN; }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 plset<double2>(const double& a) {$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 plset<float4>(const float& a) {$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 plset<half2>(const Eigen::half& a) {$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a)$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a)$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int32_t& a)$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<Packet2d>(const double& a) { return padd<Packet2d>(pset1<Packet2d>(a), p2d_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<Packet4f>  (const float& a)  { return padd<Packet4f>(pset1<Packet4f>(a), p4f_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<Packet4i>(const int& a)    { return padd<Packet4i>(pset1<Packet4i>(a), p4i_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
pm	src/utils.c	/^void pm(int M, int N, float *A)$/;"	f
pmadd	plugin/Eigen/src/Core/GenericPacketMath.h	/^pmadd(const Packet&  a,$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmadd(const Packet2cd& x, const Packet2cd& y, const Packet2cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmadd(const Packet4cf& x, const Packet4cf& y, const Packet4cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmadd(const Packet4d& a, const Packet4d& b, const Packet4d& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmadd(const Packet8f& a, const Packet8f& b, const Packet8f& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmadd(const Packet16f& a, const Packet16f& b,$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmadd(const Packet8d& a, const Packet8d& b,$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return a*b + c; }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmadd<half2>(const half2& a, const half2& b, const half2& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vfmaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vmlaq_f64(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vfmaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return vmlaq_s32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return _mm_fmadd_pd(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return _mm_fmadd_ps(a,b,c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pmadd(const double& a, const double& b, const double& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float pmadd(const float& a, const float& b, const float& c) {$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmadd(const Packet2d& a, const Packet2d& b, const Packet2d& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c)$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd<Packet4f>  (const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd<Packet4i>(pmul<Packet4i>(a, b), c); }$/;"	f	namespace:Eigen::internal
pmadd	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const LhsScalar& x, const RhsScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const RealScalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const RealScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmax	plugin/Eigen/src/Core/GenericPacketMath.h	/^pmax(const Packet& a,$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmax<Packet4d>(const Packet4d& a, const Packet4d& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmax<Packet8f>(const Packet8f& a, const Packet8f& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmax<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmax<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmax<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmax<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmax<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmaxq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmaxq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmaxq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) {$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>   (const Packet4f& a, const Packet4f& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmax	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/GenericPacketMath.h	/^pmin(const Packet& a,$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmin<Packet4d>(const Packet4d& a, const Packet4d& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmin<Packet8f>(const Packet8f& a, const Packet8f& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmin<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmin<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmin<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmin<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmin<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vminq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vminq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vminq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) {$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>   (const Packet4f& a, const Packet4f& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmin	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/GenericPacketMath.h	/^pmul(const Packet& a,$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<double> pmul(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<float> pmul(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cd pmul(const Packet2cd& a, const Packet2cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  EIGEN_STRONG_INLINE Packet4cf pmul(const Packet4cf& a, const Packet4cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pmul<Packet2cd>(const Packet2cd& a, const Packet2cd& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pmul<Packet4cf>(const Packet4cf& a, const Packet4cf& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pmul<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pmul<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pmul<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pmul<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_madd(a,b,p2d_MZERO); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_madd(a,b, p4f_MZERO); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return a * b; }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pmul<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pmul<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pmul<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return vmulq_f64(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmulq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmulq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a * b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return (a * b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a * b); }$/;"	f	namespace:Eigen::internal
pmul	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const LhsScalar& x, const RhsScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const RealScalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const RealScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pnegate	plugin/Eigen/src/Core/GenericPacketMath.h	/^pnegate(const Packet& a) { return -a; }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pnegate(const Packet2cd& a) { return Packet2cd(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pnegate(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pnegate(const Packet4d& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pnegate(const Packet8f& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pnegate(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pnegate(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return p2d_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return p4f_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return p4i_ZERO - a; }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pnegate(const double2& a) {$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pnegate(const float4& a) {$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pnegate(const half2& a) {$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate<Packet2d>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate<Packet4f>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return vnegq_f64(a); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return vnegq_f32(a); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return vnegq_s32(a); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(Packet2d(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(Packet4f(a.v))); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a) { return (-a); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate<Packet4f>(const Packet4f& a) { return (-a); }$/;"	f	namespace:Eigen::internal
pnegate	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return (-a); }$/;"	f	namespace:Eigen::internal
pointAt	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::pointAt(const _Scalar& t) const$/;"	f	class:Eigen::ParametrizedLine
pointer	plugin/Eigen/src/Core/util/Memory.h	/^  typedef T*              pointer;$/;"	t	class:Eigen::aligned_allocator
pointer	plugin/Eigen/src/StlSupport/details.h	/^    typedef T*              pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
policy	include/darknet.h	/^    learning_rate_policy policy;$/;"	m	struct:network
ponder	examples/go.c	/^mcts_tree *ponder(mcts_tree *tree, network *net, float *b, float *ko, int player, float cpuct)$/;"	f
pop_column	src/matrix.c	/^float *pop_column(matrix *m, int c)$/;"	f
por	plugin/Eigen/src/Core/GenericPacketMath.h	/^por(const Packet& a, const Packet& b) { return a | b; }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd por    <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf por    <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d por<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f por<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f por<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d por<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(por(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(por<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vorrq_s32(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_or_si128(a,b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por     <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(por<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>    (const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
positive_real_hypot	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^RealScalar positive_real_hypot(const RealScalar& x, const RealScalar& y)$/;"	f	namespace:Eigen::internal
pow	plugin/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<ExponentDerived>& exponents) $/;"	f	namespace:Eigen
pow	plugin/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Scalar& x, const Eigen::ArrayBase<Derived>& exponents) {$/;"	f	namespace:Eigen
pow	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  pow(double x, double y) { return cl::sycl::pow(x, y); }$/;"	f	namespace:Eigen::numext
pow	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   pow(float x, float y) { return cl::sycl::pow(x, y); }$/;"	f	namespace:Eigen::numext
pow	plugin/Eigen/src/Core/MathFunctions.h	/^inline typename internal::pow_impl<ScalarX,ScalarY>::result_type pow(const ScalarX& x, const ScalarY& y)$/;"	f	namespace:Eigen::numext
pow	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half pow(const half& a, const half& b) {$/;"	f	namespace:Eigen::half_impl
pow_cpu	src/blas.c	/^void pow_cpu(int N, float ALPHA, float *X, int INCX, float *Y, int INCY)$/;"	f
pow_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct pow_impl$/;"	s	namespace:Eigen::internal
pow_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct pow_impl<ScalarX,ScalarY, true>$/;"	s	namespace:Eigen::internal
power	include/darknet.h	/^    float power;$/;"	m	struct:network
powh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half powh(const Eigen::half& a, const Eigen::half& b) {$/;"	f
precision	plugin/Eigen/src/Core/IO.h	/^  int precision;$/;"	m	struct:Eigen::IOFormat
preconditioner	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner& preconditioner() { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
preconditioner	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Preconditioner& preconditioner() const { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
predict	python/darknet.py	/^predict = lib.network_predict$/;"	v
predict_attention	examples/attention.c	/^void predict_attention(char *datacfg, char *cfgfile, char *weightfile, char *filename, int top)$/;"	f
predict_classifier	examples/classifier.c	/^void predict_classifier(char *datacfg, char *cfgfile, char *weightfile, char *filename, int top)$/;"	f
predict_image	python/darknet.py	/^predict_image = lib.network_predict_image$/;"	v
predict_move2	examples/go.c	/^float predict_move2(network *net, float *board, float *move, int multi)$/;"	f
predict_regressor	examples/regressor.c	/^void predict_regressor(char *cfgfile, char *weightfile, char *filename)$/;"	f
predict_segmenter	examples/segmenter.c	/^void predict_segmenter(char *datafile, char *cfg, char *weights, char *filename)$/;"	f
predict_tactic	python/proverbot.py	/^def predict_tactic(net, s):$/;"	f
predict_tactics	python/proverbot.py	/^def predict_tactics(net, s, n):$/;"	f
predictions	src/demo.c	/^static float **predictions;$/;"	v	file:
predux	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux(const Packet& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) + vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) + vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_max_op
predux	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_min_op
predux	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_product_op
predux	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sum_op
predux_half_dowto4	plugin/Eigen/src/Core/GenericPacketMath.h	/^predux_half_dowto4(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_half_dowto4	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f predux_half_dowto4<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_half_dowto4	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet4d predux_half_dowto4<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_half_dowto4	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8f predux_half_dowto4<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_half_dowto4	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^const DoublePacket<Packet>& predux_half_dowto4(const DoublePacket<Packet> &a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_max(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_max<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_max<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_max<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_max<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_max<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpmaxq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_min(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_min<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_min<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_min<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_min<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_min<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a) { return vgetq_lane_f64(vpminq_f64(a, a), 0); }$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline typename unpacket_traits<Packet>::type predux_mul(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet2cd>(const Packet2cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet4cf>(const Packet4cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet4d>(const Packet4d& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet8f>(const Packet8f& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE double predux_mul<Packet8d>(const Packet8d& a) {$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE float predux_mul<Packet16f>(const Packet16f& a) {$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline double predux_mul<double2>(const double2& a) {$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline float  predux_mul<float4>(const float4& a) {$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE Eigen::half predux_mul<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a) { return pfirst(a); }$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return (vget_low_f64(a) * vget_high_f64(a))[0]; }$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a) { return vget_lane_f64(vget_low_f64(a) * vget_high_f64(a), 0); }$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int32_t predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/GenericPacketMath.h	/^preduxp(const Packet* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preduxp<Packet2cd>(const Packet2cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preduxp<Packet4cf>(const Packet4cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preduxp<Packet4d>(const Packet4d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preduxp<Packet8f>(const Packet8f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f preduxp<Packet16f>(const Packet16f*$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d preduxp<Packet8d>(const Packet8d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)        { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar> EIGEN_DEVICE_FUNC inline void prefetch(const Scalar* addr)$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> * addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> * addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr)    { EIGEN_PPC_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { EIGEN_ARM_PREFETCH((const double *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { EIGEN_ARM_PREFETCH((const float *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>  (const float*    addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int32_t>(const int32_t*  addr) { EIGEN_ARM_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *     addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { EIGEN_ZVECTOR_PREFETCH(addr); }$/;"	f	namespace:Eigen::internal
prefetch	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void prefetch(int i) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
prefix	src/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon21
prerotate	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prescale	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::prescale(const Scalar& s)$/;"	f	class:Eigen::Transform
prescale	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
preshear	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::preshear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
pretranslate	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prev	include/darknet.h	/^    struct node *prev;$/;"	m	struct:node	typeref:struct:node::node
prev	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType prev ;  \/* previous column in degree list, if col is in a *\/$/;"	m	union:internal::colamd_col::__anon124
prev_cell_cpu	include/darknet.h	/^    float *prev_cell_cpu;$/;"	m	struct:layer
prev_cell_gpu	include/darknet.h	/^    float *prev_cell_gpu;$/;"	m	struct:layer
prev_state	include/darknet.h	/^    float * prev_state;$/;"	m	struct:layer
prev_state_cpu	include/darknet.h	/^    float * prev_state_cpu;$/;"	m	struct:layer
prev_state_gpu	include/darknet.h	/^    float * prev_state_gpu;$/;"	m	struct:layer
preverse	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> EIGEN_DEVICE_FUNC inline Packet preverse(const Packet& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd preverse(const Packet2cd& a) {$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf preverse(const Packet4cf& a) {$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d preverse(const Packet4d& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f preverse(const Packet8f& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet16f preverse(const Packet16f& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8d preverse(const Packet8d& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a) { return vcombine_f64(vget_high_f64(a), vget_low_f64(a)); }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a) { return Packet2cf(_mm_castpd_ps(preverse(Packet2d(_mm_castps_pd(a.v))))); }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
printUmfpackControl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void printUmfpackControl()$/;"	f	class:Eigen::UmfPackLU
printUmfpackInfo	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void printUmfpackInfo()$/;"	f	class:Eigen::UmfPackLU
printUmfpackStatus	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void printUmfpackStatus() {$/;"	f	class:Eigen::UmfPackLU
print_board	examples/go.c	/^void print_board(FILE *stream, float *board, int player, int *indexes)$/;"	f
print_cocos	examples/coco.c	/^void print_cocos(FILE *fp, int image_id, box *boxes, float **probs, int num_boxes, int classes, int w, int h)$/;"	f
print_cocos	examples/detector.c	/^static void print_cocos(FILE *fp, char *image_path, box *boxes, float **probs, int num_boxes, int classes, int w, int h)$/;"	f	file:
print_detector_detections	examples/detector.c	/^void print_detector_detections(FILE **fps, char *id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
print_game	examples/go.c	/^int print_game(float *board, FILE *fp)$/;"	f
print_image	src/image.c	/^void print_image(image m)$/;"	f
print_imagenet_detections	examples/detector.c	/^void print_imagenet_detections(FILE *fp, int id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
print_letters	src/data.c	/^void print_letters(float *pred, int n)$/;"	f
print_matrix	plugin/Eigen/src/Core/IO.h	/^std::ostream & print_matrix(std::ostream & s, const Derived& _m, const IOFormat& fmt)$/;"	f	namespace:Eigen::internal
print_matrix	src/matrix.c	/^void print_matrix(matrix m)$/;"	f
print_network	src/network.c	/^void print_network(network *net)$/;"	f
print_statistics	src/utils.c	/^void print_statistics(float *a, int n)$/;"	f
print_symbol	examples/rnn.c	/^void print_symbol(int n, char **tokens){$/;"	f
print_yolo_detections	examples/yolo.c	/^void print_yolo_detections(FILE **fps, char *id, box *boxes, float **probs, int total, int classes, int w, int h)$/;"	f
prior	examples/go.c	/^    float *prior;$/;"	m	struct:mcts_tree	file:
prob	examples/go.c	/^    float *prob;$/;"	m	struct:mcts_tree	file:
probability	include/darknet.h	/^    float probability;$/;"	m	struct:layer
probs	src/box.c	/^    float **probs;$/;"	m	struct:__anon4	file:
probs	src/demo.c	/^static float **probs;$/;"	v	file:
processRow	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void processRow(const LhsEval& lhsEval, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha, Index i, Index col)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
processRow	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void processRow(const LhsEval& lhsEval, const DenseRhsType& rhs, Res& res, const typename Res::Scalar& alpha, Index i)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
prod	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::prod() const$/;"	f	class:Eigen::DenseBase
prod	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const ProdReturnType prod() const$/;"	f	class:Eigen::VectorwiseOp
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, LazyCoeffBasedProductMode, DenseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, Options>, ProductTag, LhsShape, RhsShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DenseShape, DiagonalShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct product_evaluator<Product<Lhs, Rhs, ProductKind>, ProductTag, DiagonalShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, DenseShape, HomogeneousShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct product_evaluator<Product<Lhs, Rhs, LazyProduct>, ProductTag, HomogeneousShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, DenseShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, OuterProduct, SparseShape, DenseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.lhs(), xpr.rhs().diagonal().transpose()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  explicit product_evaluator(const XprType& xpr) : Base(xpr.rhs(), xpr.lhs().diagonal()) {}$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, DiagonalShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct product_evaluator<Product<Lhs, Rhs, DefaultProduct>, ProductTag, SparseShape, DiagonalShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^  explicit product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, PermutationShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^struct product_evaluator<Product<Lhs, Rhs, AliasFreeProduct>, ProductTag, SparseShape, PermutationShape >$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  product_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::product_evaluator
product_evaluator	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<Lhs, RhsView, DefaultProduct>, ProductTag, SparseShape, SparseSelfAdjointShape>$/;"	s	namespace:Eigen::internal
product_evaluator	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct product_evaluator<Product<LhsView, Rhs, DefaultProduct>, ProductTag, SparseSelfAdjointShape, SparseShape>$/;"	s	namespace:Eigen::internal
product_promote_storage_type	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_promote_storage_type	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,LhsSelfAdjoint,ConjugateLhs, RhsStorageOrder,RhsSelfAdjoint,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_size_category	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int Size, int MaxSize> struct product_size_category$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,LhsIsTriangular,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,false,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,true,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix_trmm	plugin/Eigen/src/Core/products/TriangularMatrixMatrix_BLAS.h	/^struct product_triangular_matrix_matrix_trmm :$/;"	s	namespace:Eigen::internal
product_type	plugin/Eigen/src/Core/GeneralProduct.h	/^template<typename Lhs, typename Rhs> struct product_type$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int M>         struct product_type_selector<M, 1, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int N>         struct product_type_selector<1, N, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
progressive	src/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon12
projection	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projective_transform_inverse	plugin/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse$/;"	s	namespace:Eigen::internal
projective_transform_inverse	plugin/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse<TransformType, Projective>$/;"	s	namespace:Eigen::internal
promote_index_type	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_index_type$/;"	s	namespace:Eigen::internal
promote_scalar_arg	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg<S,T,false> : promote_scalar_arg_unsupported<S,T,typename NumTraits<S>::Literal> {};$/;"	s	namespace:Eigen::internal
promote_scalar_arg	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg<S,T,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<ExprScalar,T,PromotedType,false,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,PromotedType,ConvertibleToLiteral,false> {};$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,PromotedType,true,true>$/;"	s	namespace:Eigen::internal
promote_scalar_arg_unsupported	plugin/Eigen/src/Core/util/XprHelper.h	/^struct promote_scalar_arg_unsupported<S,T,S,false,true> {};$/;"	s	namespace:Eigen::internal
propagate_liberty	examples/go.c	/^static void propagate_liberty(float *board, int *lib, int *visited, int row, int col, int side)$/;"	f	file:
pround	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet pround(const Packet& a) { using numext::round; return round(a); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pround<Packet4d>(const Packet4d& a) { return _mm256_round_pd(a, _MM_FROUND_CUR_DIRECTION); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pround<Packet8f>(const Packet8f& a) { return _mm256_round_ps(a, _MM_FROUND_CUR_DIRECTION); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return _mm_round_pd(a, 0); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a) { return _mm_round_ps(a, 0); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pround<Packet2d>(const Packet2d& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f> (const Packet4f& a) { return vec_round(a); }$/;"	f	namespace:Eigen::internal
pround	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pround<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet prsqrt(const Packet& a) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d prsqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f prsqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet16f prsqrt<Packet16f>(const Packet16f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^prsqrt<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^prsqrt<Packet8d>(const Packet8d& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 prsqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 prsqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 prsqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 prsqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& _x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d prsqrt<Packet2d>(const Packet2d& x) {$/;"	f	namespace:Eigen::internal
prsqrt	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f prsqrt<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
prune	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::internal::CompressedStorage
prune	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const KeepFunc& keep = KeepFunc())$/;"	f	class:Eigen::SparseMatrix
prune	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseMatrix
prune	plugin/Eigen/src/SparseCore/SparseVector.h	/^    void prune(const Scalar& reference, const RealScalar& epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseVector
pruneL	plugin/Eigen/src/SparseLU/SparseLU_pruneL.h	/^void SparseLUImpl<Scalar,StorageIndex>::pruneL(const Index jcol, const IndexVector& perm_r, const Index pivrow, const Index nseg,$/;"	f	class:Eigen::internal::SparseLUImpl
pruned	plugin/Eigen/src/SparseCore/SparseView.h	/^SparseMatrixBase<Derived>::pruned(const Scalar& reference,$/;"	f	class:Eigen::SparseMatrixBase
pscatter	plugin/Eigen/src/Core/GenericPacketMath.h	/^ template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pscatter(Scalar* to, const Packet& from, Index \/*stride*\/)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet2cd>(std::complex<double>* to, const Packet2cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet4cf>(std::complex<float>* to, const Packet4cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet4d>(double* to, const Packet4d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet8f>(float* to, const Packet8f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void pscatter<double, Packet8d>(double* to,$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void pscatter<float, Packet16f>(float* to,$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, double2>(double* to, const double2& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, float4>(float* to, const float4& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pscatter<Eigen::half, half2>(Eigen::half* to, const half2& from, Index stride) {$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int32_t, Packet4i>(int32_t* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<double>, Packet1cd>(std::complex<double>* to, const Packet1cd& from, Index stride EIGEN_UNUSED)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<std::complex<float>, Packet2cf>(std::complex<float>* to, const Packet2cf& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<double, Packet2d>(double* to, const Packet2d& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<float, Packet4f>(float* to, const Packet4f& from, Index stride)$/;"	f	namespace:Eigen::internal
pscatter	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC inline void pscatter<int, Packet4i>(int* to, const Packet4i& from, Index stride)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/GenericPacketMath.h	/^pset1(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pset1<Packet2cd>(const std::complex<double>& from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pset1<Packet4cf>(const std::complex<float>& from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pset1<Packet4d>(const double& from) { return _mm256_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pset1<Packet8f>(const float&  from) { return _mm256_set1_ps(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8i pset1<Packet8i>(const int&    from) { return _mm256_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pset1<Packet16f>(const float& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16i pset1<Packet16i>(const int& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pset1<Packet8d>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 pset1<double2>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 pset1<float4>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 pset1<half2>(const Eigen::half& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double&  from) { return vdupq_n_f64(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return vdupq_n_f32(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int32_t&    from)   { return vdupq_n_s32(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps1(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) {$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&    from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float& from)$/;"	f	namespace:Eigen::internal
pset1	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)$/;"	f	namespace:Eigen::internal
pseudoEigenvalueMatrix	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^MatrixType EigenSolver<MatrixType>::pseudoEigenvalueMatrix() const$/;"	f	class:Eigen::EigenSolver
pseudoEigenvectors	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    const MatrixType& pseudoEigenvectors() const$/;"	f	class:Eigen::EigenSolver
pseudoInverse	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const Inverse<CompleteOrthogonalDecomposition> pseudoInverse() const$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
pshiftleft	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^inline Packet8i pshiftleft(Packet8i v, int n)$/;"	f	namespace:Eigen::internal
pshiftright	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^inline Packet8f pshiftright(Packet8f v, int n)$/;"	f	namespace:Eigen::internal
psin	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet psin(const Packet& a) { using std::sin; return sin(a); }$/;"	f	namespace:Eigen::internal
psin	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^psin<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psin	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psin<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psinh	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet psinh(const Packet& a) { using std::sinh; return sinh(a); }$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet psqrt(const Packet& a) { using std::sqrt; return sqrt(a); }$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet4d psqrt<Packet4d>(const Packet4d& x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^Packet8f psqrt<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^psqrt<Packet8f>(const Packet8f& _x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet16f psqrt<Packet16f>(const Packet16f& x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^EIGEN_STRONG_INLINE Packet8d psqrt<Packet8d>(const Packet8d& x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^psqrt<Packet16f>(const Packet16f& _x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AVX512/MathFunctions.h	/^psqrt<Packet8d>(const Packet8d& _x) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/AltiVec/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^double2 psqrt<double2>(const double2& a)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/CUDA/MathFunctions.h	/^float4 psqrt<float4>(const float4& a)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^half2 psqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 psqrt<half2>(const half2& a) {$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x) { return _mm_sqrt_pd(x); }$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x) { return _mm_sqrt_ps(x); }$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet2d psqrt<Packet2d>(const Packet2d& x)$/;"	f	namespace:Eigen::internal
psqrt	plugin/Eigen/src/Core/arch/ZVector/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& x)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstore(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet8d& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<float>(float* to, const Packet16f& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore<int>(int* to, const Packet16i& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstore<float>(float*   to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pstore<Eigen::half>(Eigen::half* to, const half2& from) {$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>  (float*    to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int32_t>(int32_t*  to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<__m128i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *     to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double*   to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float* to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstore	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/GenericPacketMath.h	/^inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet8i>(int* to, const int& a)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet16f>(float* to, const float& a) {$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet16i>(int* to, const int& a) {$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstore1<Packet8d>(double* to, const double& a) {$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstoret	plugin/Eigen/src/Core/GenericPacketMath.h	/^EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void pstoret(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> EIGEN_DEVICE_FUNC inline void pstoreu(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet2cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float>* to, const Packet4cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet4d& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet8f& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet8i& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm256_storeu_si256(reinterpret_cast<__m256i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet8d& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<float>(float* to, const Packet16f& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE void pstoreu<int>(int* to, const Packet16i& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const double2& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const float4& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE void pstoreu<Eigen::half>(Eigen::half* to, const half2& from) {$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f64(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>  (float*   to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int32_t>(int32_t* to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, Packet2d(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&numext::real_ref(*to), Packet4f(from.v)); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE _mm_storeu_si128(reinterpret_cast<__m128i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *     to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double*  to, const Packet2d& from) { pstore<double>(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float* to, const Packet4f& from) { pstore<float>(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*        to, const Packet4i& from) { pstore<int>(to, from); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/GenericPacketMath.h	/^psub(const Packet& a,$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd psub<Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf psub<Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d psub<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f psub<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f psub<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d psub<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return a - b; }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE double2 psub<double2>(const double2& a, const double2& b) {$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE float4 psub<float4>(const float4& a, const float4& b) {$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> __device__ EIGEN_STRONG_INLINE half2 psub<half2>(const half2& a, const half2& b) {$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(psub<Packet2d>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return vsubq_f64(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vsubq_f32(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vsubq_s32(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(a.v - b.v); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return (a - b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return (a - b); }$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
psub	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return (a - b); }$/;"	f	namespace:Eigen::internal
ptan	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet ptan(const Packet& a) { using std::tan; return tan(a); }$/;"	f	namespace:Eigen::internal
ptanh	plugin/Eigen/src/Core/GenericPacketMath.h	/^Packet ptanh(const Packet& a) { using std::tanh; return tanh(a); }$/;"	f	namespace:Eigen::internal
ptanh	plugin/Eigen/src/Core/arch/AVX/MathFunctions.h	/^ptanh<Packet8f>(const Packet8f& x) {$/;"	f	namespace:Eigen::internal
ptanh	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^ptanh<Packet4f>(const Packet4f& x) {$/;"	f	namespace:Eigen::internal
ptr	plugin/Eigen/src/Core/util/Memory.h	/^  T* &ptr() { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptr	plugin/Eigen/src/Core/util/Memory.h	/^  const T* ptr() const { return m_ptr; }$/;"	f	class:Eigen::internal::scoped_array
ptranspose	plugin/Eigen/src/Core/GenericPacketMath.h	/^ptranspose(PacketBlock<Packet,1>& \/*kernel*\/) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet2cd,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^ptranspose(PacketBlock<Packet4cf,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet4d,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^ptranspose(PacketBlock<Packet8f,8>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet16f, 16>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet16f, 4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet8d, 4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_DEVICE_FUNC inline void ptranspose(PacketBlock<Packet8d, 8>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet2cf,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<double2,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^ptranspose(PacketBlock<float4,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^ptranspose(PacketBlock<half2,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^ptranspose(PacketBlock<Packet2cf,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet1cd,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^EIGEN_STRONG_INLINE void ptranspose(PacketBlock<Packet2cf,2>& kernel)$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet2d,2>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet4f,4>& kernel) {$/;"	f	namespace:Eigen::internal
ptranspose	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^ptranspose(PacketBlock<Packet4i,4>& kernel) {$/;"	f	namespace:Eigen::internal
pull_batchnorm_layer	src/batchnorm_layer.c	/^void pull_batchnorm_layer(layer l)$/;"	f
pull_connected_layer	src/connected_layer.c	/^void pull_connected_layer(layer l)$/;"	f
pull_cost_layer	src/cost_layer.c	/^void pull_cost_layer(cost_layer l)$/;"	f
pull_crnn_layer	src/crnn_layer.c	/^void pull_crnn_layer(layer l)$/;"	f
pull_gru_layer	src/gru_layer.c	/^void pull_gru_layer(layer l)$/;"	f
pull_local_layer	src/local_layer.c	/^void pull_local_layer(local_layer l)$/;"	f
pull_network_output	src/network.c	/^void pull_network_output(network *net)$/;"	f
pull_rnn_layer	src/rnn_layer.c	/^void pull_rnn_layer(layer l)$/;"	f
pull_softmax_layer_output	src/softmax_layer.c	/^void pull_softmax_layer_output(const softmax_layer layer)$/;"	f
pull_weights	src/network.c	/^void pull_weights(layer l)$/;"	f
punpackp	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^EIGEN_STRONG_INLINE void punpackp(Packet4f* vecs)$/;"	f	namespace:Eigen::internal
pushDownZero	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::pushDownZero(Index z, Index f, Index l)$/;"	f	class:Eigen::RealQZ
push_back	plugin/Eigen/src/StlSupport/StdDeque.h	/^  void push_back(const value_type& x)$/;"	f	class:std::deque
push_back	plugin/Eigen/src/StlSupport/StdList.h	/^    void push_back(const value_type& x)$/;"	f	class:std::list
push_back	plugin/Eigen/src/StlSupport/StdVector.h	/^  void push_back(const value_type& x)$/;"	f	class:std::vector
push_batchnorm_layer	src/batchnorm_layer.c	/^void push_batchnorm_layer(layer l)$/;"	f
push_connected_layer	src/connected_layer.c	/^void push_connected_layer(layer l)$/;"	f
push_cost_layer	src/cost_layer.c	/^void push_cost_layer(cost_layer l)$/;"	f
push_crnn_layer	src/crnn_layer.c	/^void push_crnn_layer(layer l)$/;"	f
push_front	plugin/Eigen/src/StlSupport/StdDeque.h	/^  void push_front(const value_type& x)$/;"	f	class:std::deque
push_gru_layer	src/gru_layer.c	/^void push_gru_layer(layer l)$/;"	f
push_local_layer	src/local_layer.c	/^void push_local_layer(local_layer l)$/;"	f
push_rnn_layer	src/rnn_layer.c	/^void push_rnn_layer(layer l)$/;"	f
push_weights	src/network.c	/^void push_weights(layer l)$/;"	f
pxor	plugin/Eigen/src/Core/GenericPacketMath.h	/^pxor(const Packet& a, const Packet& b) { return a ^ b; }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cd pxor   <Packet2cd>(const Packet2cd& a, const Packet2cd& b) { return Packet2cd(_mm256_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet4cf pxor   <Packet4cf>(const Packet4cf& a, const Packet4cf& b) { return Packet4cf(_mm256_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4d pxor<Packet4d>(const Packet4d& a, const Packet4d& b) { return _mm256_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet8f pxor<Packet8f>(const Packet8f& a, const Packet8f& b) { return _mm256_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet16f pxor<Packet16f>(const Packet16f& a,$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^EIGEN_STRONG_INLINE Packet8d pxor<Packet8d>(const Packet8d& a,$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(pxor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pxor<Packet4f>(a.v, b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b)$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return veorq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(pxor<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>   (const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^> struct qr_preconditioner_impl {};$/;"	s	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	plugin/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, QRPreconditioner, Case, false>$/;"	c	namespace:Eigen::internal
qr_preconditioner_should_do_anything	plugin/Eigen/src/SVD/JacobiSVD.h	/^struct qr_preconditioner_should_do_anything$/;"	s	namespace:Eigen::internal
quant_t	include/darknet.h	/^typedef float quant_t;$/;"	t
quant_t	include/darknet.h	/^typedef short quant_t;$/;"	t
quat_conj	plugin/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived, typename Scalar> struct quat_conj$/;"	s	namespace:Eigen::internal
quat_conj	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, double>$/;"	s	namespace:Eigen::internal
quat_conj	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_conj<Architecture::SSE, Derived, float>$/;"	s	namespace:Eigen::internal
quat_product	plugin/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived1, class Derived2, typename Scalar> struct quat_product$/;"	s	namespace:Eigen::internal
quat_product	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, double>$/;"	s	namespace:Eigen::internal
quat_product	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, float>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	plugin/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,3,3>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	plugin/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,4,1>$/;"	s	namespace:Eigen::internal
queryCacheSizes	plugin/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_amd	plugin/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel	plugin/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_codes	plugin/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_direct	plugin/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryL1CacheSize	plugin/Eigen/src/Core/util/Memory.h	/^inline int queryL1CacheSize()$/;"	f	namespace:Eigen::internal
queryTopLevelCacheSize	plugin/Eigen/src/Core/util/Memory.h	/^inline int queryTopLevelCacheSize()$/;"	f	namespace:Eigen::internal
quiet_NaN	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Eigen::half quiet_NaN() {$/;"	f	struct:Eigen::NumTraits
quiet_NaN	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half quiet_NaN() { return Eigen::half_impl::raw_uint16_to_half(0x7e00); }$/;"	f	struct:std::numeric_limits
quiet_NaN	plugin/Eigen/src/Core/util/Meta.h	/^  static T quiet_NaN() { assert(false && "quiet_NaN not supported for this type"); }$/;"	f	struct:Eigen::internal::device::numeric_limits
quiet_NaN	plugin/Eigen/src/Core/util/Meta.h	/^  static double quiet_NaN() { return CUDART_NAN; }$/;"	f	struct:Eigen::internal::device::numeric_limits
quiet_NaN	plugin/Eigen/src/Core/util/Meta.h	/^  static float quiet_NaN() { return CUDART_NAN_F; }$/;"	f	struct:Eigen::internal::device::numeric_limits
r	examples/detector-scipy-opencv.py	/^r = detect2(net, meta, im)$/;"	v
r	examples/detector-scipy-opencv.py	/^r = dn.detect(net, meta, "data\/dog.jpg")$/;"	v
r	examples/detector.py	/^r = dn.detect(net, meta, "data\/bedroom.jpg")$/;"	v
r	examples/detector.py	/^r = dn.detect(net, meta, "data\/eagle.jpg")$/;"	v
r	examples/detector.py	/^r = dn.detect(net, meta, "data\/giraffe.jpg")$/;"	v
r	examples/detector.py	/^r = dn.detect(net, meta, "data\/horses.jpg")$/;"	v
r	examples/detector.py	/^r = dn.detect(net, meta, "data\/person.jpg")$/;"	v
r	python/darknet.py	/^    r = detect(net, meta, "data\/dog.jpg")$/;"	v
r_cpu	include/darknet.h	/^    float *r_cpu;$/;"	m	struct:layer
r_gpu	include/darknet.h	/^    float *r_gpu;$/;"	m	struct:layer
rad	include/darknet.h	/^    float rad;$/;"	m	struct:__anon734
radix	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const int radix = 2;$/;"	m	struct:std::numeric_limits
ramp_activate	src/activations.h	/^static inline float ramp_activate(float x){return x*(x>0)+.1*x;}$/;"	f
ramp_gradient	src/activations.h	/^static inline float ramp_gradient(float x){return (x>0)+.1;}$/;"	f
rand	include/darknet.h	/^    float * rand;$/;"	m	struct:layer
rand_gpu	include/darknet.h	/^    float * rand_gpu;$/;"	m	struct:layer
rand_int	src/utils.c	/^int rand_int(int min, int max)$/;"	f
rand_normal	src/utils.c	/^float rand_normal()$/;"	f
rand_scale	src/utils.c	/^float rand_scale(float s)$/;"	f
rand_size_t	src/utils.c	/^size_t rand_size_t()$/;"	f
rand_uniform	src/utils.c	/^float rand_uniform(float min, float max)$/;"	f
random	include/darknet.h	/^    int random;$/;"	m	struct:layer
random	include/darknet.h	/^    int random;$/;"	m	struct:network
random	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random()$/;"	f	namespace:Eigen::internal
random	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
random_augment_args	src/image.c	/^augment_args random_augment_args(image im, float angle, float aspect, int low, int high, int w, int h)$/;"	f
random_augment_image	src/image.c	/^image random_augment_image(image im, float angle, float aspect, int low, int high, int w, int h)$/;"	f
random_crop_image	src/image.c	/^image random_crop_image(image im, int w, int h)$/;"	f
random_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl {};$/;"	s	namespace:Eigen::internal
random_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
random_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
random_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
random_default_impl	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^struct random_default_impl<half, false, false>$/;"	s	namespace:Eigen::internal
random_distort_image	src/image.c	/^void random_distort_image(image im, float hue, float saturation, float exposure)$/;"	f
random_go_moves	examples/go.c	/^data random_go_moves(moves m, int n)$/;"	f
random_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_impl : random_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
random_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> struct random_impl<bool>$/;"	s	namespace:Eigen::internal
random_index_order	src/utils.c	/^int *random_index_order(int min, int max)$/;"	f
random_matrix	src/gemm.c	/^float *random_matrix(int rows, int cols)$/;"	f
random_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct random_retval$/;"	s	namespace:Eigen::internal
randomize_boxes	src/data.c	/^void randomize_boxes(box_label *b, int n)$/;"	f
randomize_data	src/data.c	/^void randomize_data(data d)$/;"	f
rank	plugin/Eigen/src/LU/FullPivLU.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivLU
rank	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::ColPivHouseholderQR
rank	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index rank() const { return m_cpqr.rank(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
rank	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivHouseholderQR
rank	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    Index rank() const$/;"	f	class:Eigen::SPQR
rank	plugin/Eigen/src/SVD/SVDBase.h	/^  inline Index rank() const$/;"	f	class:Eigen::SVDBase
rank	plugin/Eigen/src/SparseQR/SparseQR.h	/^    Index rank() const$/;"	f	class:Eigen::SparseQR
rank	plugin/Eigen/src/misc/Image.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::image_retval_base
rank	plugin/Eigen/src/misc/Kernel.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::kernel_retval_base
rankUpdate	plugin/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::rankUpdate(const MatrixBase<Derived>& w, const typename LDLT<MatrixType,_UpLo>::RealScalar& sigma)$/;"	f	class:Eigen::LDLT
rankUpdate	plugin/Eigen/src/Cholesky/LLT.h	/^  static Index rankUpdate(MatrixType& mat, const VectorType& vec, const RealScalar& sigma)$/;"	f	struct:Eigen::internal::llt_inplace
rankUpdate	plugin/Eigen/src/Cholesky/LLT.h	/^LLT<_MatrixType,_UpLo> LLT<_MatrixType,_UpLo>::rankUpdate(const VectorType& v, const RealScalar& sigma)$/;"	f	class:Eigen::LLT
rankUpdate	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const MatrixBase<DerivedV>& v, const Scalar& alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<MatrixType,Mode>::rankUpdate(const SparseMatrixBase<DerivedU>& u, const Scalar& alpha)$/;"	f	class:Eigen::SparseSelfAdjointView
ratio	include/darknet.h	/^    float ratio;$/;"	m	struct:layer
ratio	src/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon22
rawMatrix	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const CholMatrixType rawMatrix() const {$/;"	f	class:Eigen::SimplicialCholesky
raw_coeff	src/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon12::__anon13
raw_data	src/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon12::__anon13
raw_uint16_to_half	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC __half_raw raw_uint16_to_half(unsigned short x) {$/;"	f	namespace:Eigen::half_impl
rcond	plugin/Eigen/src/Cholesky/LDLT.h	/^    RealScalar rcond() const$/;"	f	class:Eigen::LDLT
rcond	plugin/Eigen/src/Cholesky/LLT.h	/^    RealScalar rcond() const$/;"	f	class:Eigen::LLT
rcond	plugin/Eigen/src/LU/FullPivLU.h	/^    inline RealScalar rcond() const$/;"	f	class:Eigen::FullPivLU
rcond	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline RealScalar rcond() const$/;"	f	class:Eigen::PartialPivLU
rcond_compute_sign	plugin/Eigen/src/Core/ConditionEstimator.h	/^struct rcond_compute_sign {$/;"	s	namespace:Eigen::internal
rcond_compute_sign	plugin/Eigen/src/Core/ConditionEstimator.h	/^struct rcond_compute_sign<Vector, Vector, false> {$/;"	s	namespace:Eigen::internal
rcond_estimate_helper	plugin/Eigen/src/Core/ConditionEstimator.h	/^rcond_estimate_helper(typename Decomposition::RealScalar matrix_norm, const Decomposition& dec)$/;"	f	namespace:Eigen::internal
rcond_invmatrix_L1_norm_estimate	plugin/Eigen/src/Core/ConditionEstimator.h	/^typename Decomposition::RealScalar rcond_invmatrix_L1_norm_estimate(const Decomposition& dec)$/;"	f	namespace:Eigen::internal
read	src/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon8
read_all	src/utils.c	/^void read_all(int fd, char *buffer, size_t bytes)$/;"	f
read_all_fail	src/utils.c	/^int read_all_fail(int fd, char *buffer, size_t bytes)$/;"	f
read_boxes	src/data.c	/^box_label *read_boxes(char *filename, int *n)$/;"	f
read_cfg	src/parser.c	/^list *read_cfg(char *filename)$/;"	f
read_data_cfg	src/option_list.c	/^list *read_data_cfg(char *filename)$/;"	f
read_file	src/utils.c	/^unsigned char *read_file(char *filename)$/;"	f
read_from_callbacks	src/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon9
read_int	src/utils.c	/^int read_int(int fd)$/;"	f
read_intlist	src/utils.c	/^int *read_intlist(char *gpu_list, int *ngpus, int d)$/;"	f
read_map	src/utils.c	/^int *read_map(char *filename)$/;"	f
read_option	src/option_list.c	/^int read_option(char *s, list *options)$/;"	f
read_tokenized_data	examples/rnn.c	/^int *read_tokenized_data(char *filename, size_t *read)$/;"	f
read_tokens	examples/rnn.c	/^char **read_tokens(char *filename, size_t *read)$/;"	f
read_tree	src/tree.c	/^tree *read_tree(char *filename)$/;"	f
real	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)$/;"	f	namespace:Eigen::numext
real	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() const { return RealReturnType(derived()); }$/;"	f
real	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() { return NonConstRealReturnType(derived()); }$/;"	f
real_2x2_jacobi_svd	plugin/Eigen/src/misc/RealSvd2x2.h	/^void real_2x2_jacobi_svd(const MatrixType& matrix, Index p, Index q,$/;"	f	namespace:Eigen::internal
real_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl$/;"	s	namespace:Eigen::internal
real_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_default_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
real_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_impl<std::complex<T> >$/;"	s	namespace:Eigen::internal
real_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename Scalar> struct real_impl : real_default_impl<Scalar> {};$/;"	s	namespace:Eigen::internal
real_ref	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref	plugin/Eigen/src/Core/MathFunctions.h	/^inline typename internal::add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)$/;"	f	namespace:Eigen::numext
real_ref_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_ref_impl$/;"	s	namespace:Eigen::internal
real_ref_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_ref_retval$/;"	s	namespace:Eigen::internal
real_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct real_retval$/;"	s	namespace:Eigen::internal
reallocate	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocate(Index size)$/;"	f	class:Eigen::internal::AmbiVector
reallocate	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void reallocate(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reallocateSparse	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocateSparse()$/;"	f	class:Eigen::internal::AmbiVector
rebind	plugin/Eigen/src/Core/util/Memory.h	/^  struct rebind$/;"	s	class:Eigen::aligned_allocator
rebind	plugin/Eigen/src/StlSupport/details.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator_indirection
reconstruct_picture	examples/nightmare.c	/^void reconstruct_picture(network *net, float *features, image recon, image update, float rate, float momentum, float lambda, int smooth_size, int iters)$/;"	f
reconstructedMatrix	plugin/Eigen/src/Cholesky/LDLT.h	/^MatrixType LDLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LDLT
reconstructedMatrix	plugin/Eigen/src/Cholesky/LLT.h	/^MatrixType LLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LLT
reconstructedMatrix	plugin/Eigen/src/LU/FullPivLU.h	/^MatrixType FullPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::FullPivLU
reconstructedMatrix	plugin/Eigen/src/LU/PartialPivLU.h	/^MatrixType PartialPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::PartialPivLU
reduceToTriangularForm	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^void ComplexSchur<MatrixType>::reduceToTriangularForm(bool computeU)$/;"	f	class:Eigen::ComplexSchur
redux	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::redux(const Func& func) const$/;"	f	class:Eigen::DenseBase
redux	plugin/Eigen/src/Core/VectorwiseOp.h	/^    redux(const BinaryOp& func = BinaryOp()) const$/;"	f	class:Eigen::VectorwiseOp
redux	plugin/Eigen/src/Geometry/Homogeneous.h	/^    redux(const Func& func) const$/;"	f	class:Eigen::Homogeneous
redux_evaluator	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC explicit redux_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::redux_evaluator
redux_evaluator	plugin/Eigen/src/Core/Redux.h	/^class redux_evaluator$/;"	c	namespace:Eigen::internal
redux_impl	plugin/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	plugin/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	plugin/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	plugin/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, SliceVectorizedTraversal, Unrolling>$/;"	s	namespace:Eigen::internal
redux_impl	plugin/Eigen/src/Core/Redux.h	/^struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	plugin/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller$/;"	s	namespace:Eigen::internal
redux_novec_unroller	plugin/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 0>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	plugin/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
redux_traits	plugin/Eigen/src/Core/Redux.h	/^struct redux_traits$/;"	s	namespace:Eigen::internal
redux_vec_unroller	plugin/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller$/;"	s	namespace:Eigen::internal
redux_vec_unroller	plugin/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
reference	plugin/Eigen/src/Core/util/Memory.h	/^  typedef T&              reference;$/;"	t	class:Eigen::aligned_allocator
reference	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar reference;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
reference	plugin/Eigen/src/SparseCore/SparseView.h	/^  Scalar reference() const { return m_reference; }$/;"	f	class:Eigen::SparseView
reference	plugin/Eigen/src/StlSupport/details.h	/^    typedef T&              reference;$/;"	t	class:Eigen::aligned_allocator_indirection
relax	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index relax; \/\/ To control degree of relaxing supernodes. If the number of nodes (columns) $/;"	m	struct:Eigen::internal::perfvalues
relax_snode	plugin/Eigen/src/SparseLU/SparseLU_relax_snode.h	/^void SparseLUImpl<Scalar,StorageIndex>::relax_snode (const Index n, IndexVector& et, const Index relax_columns, IndexVector& descendants, IndexVector& relax_end)$/;"	f	class:Eigen::internal::SparseLUImpl
relie_activate	src/activations.h	/^static inline float relie_activate(float x){return (x>0) ? x : .01*x;}$/;"	f
relie_gradient	src/activations.h	/^static inline float relie_gradient(float x){return (x>0) ? 1 : .01;}$/;"	f
relu_activate	src/activations.h	/^static inline float relu_activate(float x){return x*(x>0);}$/;"	f
relu_gradient	src/activations.h	/^static inline float relu_gradient(float x){return (x>0);}$/;"	f
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_connected	examples/go.c	/^static void remove_connected(float *b, int *lib, int p, int r, int c)$/;"	f	file:
remove_const	plugin/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	s	namespace:Eigen::internal
remove_const	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	s	namespace:Eigen::internal
remove_pointer	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s	namespace:Eigen::internal
reorg	include/darknet.h	/^    int reorg;$/;"	m	struct:layer
reorg_cpu	src/blas.c	/^void reorg_cpu(float *x, int w, int h, int c, int batch, int stride, int forward, float *out)$/;"	f
replicate	plugin/Eigen/src/Core/DenseBase.h	/^    const Replicate<Derived, Dynamic, Dynamic> replicate(Index rowFactor, Index colFactor) const$/;"	f	class:Eigen::DenseBase
replicate	plugin/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate() const$/;"	f	class:Eigen::DenseBase
replicate	plugin/Eigen/src/Core/Replicate.h	/^VectorwiseOp<ExpressionType,Direction>::replicate(Index factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	plugin/Eigen/src/Core/VectorwiseOp.h	/^    replicate(Index factor = Factor) const$/;"	f	class:Eigen::VectorwiseOp
required_alignment	plugin/Eigen/src/Core/Matrix.h	/^      required_alignment = unpacket_traits<PacketScalar>::alignment,$/;"	e	enum:Eigen::internal::traits::__anon676
res	plugin/Eigen/src/Core/Visitor.h	/^  Scalar res;$/;"	m	struct:Eigen::internal::coeff_visitor
resample	src/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon14
resample_row_1	src/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
resample_row_func	src/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	src/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon12
rescale_net	examples/darknet.c	/^void rescale_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
rescale_weights	src/convolutional_layer.c	/^void rescale_weights(convolutional_layer l, float scale, float trans)$/;"	f
rescore	include/darknet.h	/^    int rescore;$/;"	m	struct:layer
reserve	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void reserve(Index size)$/;"	f	class:Eigen::internal::CompressedStorage
reserve	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(Index reserveSize)$/;"	f	class:Eigen::SparseMatrix
reserve	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif =$/;"	f	class:Eigen::SparseMatrix
reserve	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }$/;"	f	class:Eigen::SparseVector
reserveInnerVectors	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserveInnerVectors(const SizesType& reserveSizes)$/;"	f	class:Eigen::SparseMatrix
reset_layer	include/darknet.h	/^    struct layer *reset_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
reset_network_state	src/network.c	/^void reset_network_state(network *net, int b)$/;"	f
reset_normalize_net	examples/darknet.c	/^void reset_normalize_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
reset_rnn	python/darknet.py	/^reset_rnn = lib.reset_rnn$/;"	v
reset_rnn	src/network.c	/^void reset_rnn(network *net)$/;"	f
resize	plugin/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.resize(newSize); }$/;"	f	class:Eigen::ArrayWrapper
resize	plugin/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.resize(newSize); }$/;"	f	class:Eigen::MatrixWrapper
resize	plugin/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.resize(rows,cols); }$/;"	f	class:Eigen::ArrayWrapper
resize	plugin/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index rows, Index cols) { m_expression.resize(rows,cols); }$/;"	f	class:Eigen::MatrixWrapper
resize	plugin/Eigen/src/Core/DenseBase.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::DenseBase
resize	plugin/Eigen/src/Core/DenseBase.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index rows, Index)$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void resize(Index size, Index, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index size, Index rows, Index cols)$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index, Index rows, Index) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void resize(Index,Index,Index) {}$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DenseStorage.h	/^    void resize(Index, Index, Index cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline void resize(Index size) { m_diagonal.resize(size); }$/;"	f	class:Eigen::DiagonalMatrix
resize	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::PermutationBase
resize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
resize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PlainObjectBase
resize	plugin/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	plugin/Eigen/src/Core/Transpose.h	/^    void resize(Index nrows, Index ncols) {$/;"	f	class:Eigen::Transpose
resize	plugin/Eigen/src/Core/Transpositions.h	/^    inline void resize(Index newSize)$/;"	f	class:Eigen::TranspositionsBase
resize	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::TriangularBase
resize	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    void resize(Index size)$/;"	f	class:Eigen::internal::AmbiVector
resize	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void resize(Index size, double reserveSizeFactor = 0)$/;"	f	class:Eigen::internal::CompressedStorage
resize	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
resize	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseSelfAdjointView
resize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::SparseVector
resize	plugin/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseVector
resize	plugin/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size)$/;"	f	class:std::deque
resize	plugin/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::deque
resize	plugin/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size)$/;"	f	class:std::list
resize	plugin/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size, const value_type& x)$/;"	f	class:std::list
resize	plugin/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size)$/;"	f	class:std::vector
resize	plugin/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::vector
resizeLike	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)$/;"	f	class:Eigen::PlainObjectBase
resizeNonZeros	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void resizeNonZeros(Index size)$/;"	f	class:Eigen::SparseMatrix
resizeNonZeros	plugin/Eigen/src/SparseCore/SparseVector.h	/^    void resizeNonZeros(Index size) { m_data.resize(size); }$/;"	f	class:Eigen::SparseVector
resize_avgpool_layer	src/avgpool_layer.c	/^void resize_avgpool_layer(avgpool_layer *l, int w, int h)$/;"	f
resize_batchnorm_layer	src/batchnorm_layer.c	/^void resize_batchnorm_layer(layer *layer, int w, int h)$/;"	f
resize_convolutional_layer	src/convolutional_layer.c	/^void resize_convolutional_layer(convolutional_layer *l, int w, int h)$/;"	f
resize_cost_layer	src/cost_layer.c	/^void resize_cost_layer(cost_layer *l, int inputs)$/;"	f
resize_crop_layer	src/crop_layer.c	/^void resize_crop_layer(layer *l, int w, int h)$/;"	f
resize_data	src/data.c	/^data resize_data(data orig, int w, int h)$/;"	f
resize_deconvolutional_layer	src/deconvolutional_layer.c	/^void resize_deconvolutional_layer(layer *l, int h, int w)$/;"	f
resize_dropout_layer	src/dropout_layer.c	/^void resize_dropout_layer(dropout_layer *l, int inputs)$/;"	f
resize_if_allowed	plugin/Eigen/src/Core/AssignEvaluator.h	/^void resize_if_allowed(DstXprType &dst, const SrcXprType& src, const Functor &\/*func*\/)$/;"	f	namespace:Eigen::internal
resize_if_allowed	plugin/Eigen/src/Core/AssignEvaluator.h	/^void resize_if_allowed(DstXprType &dst, const SrcXprType& src, const internal::assign_op<T1,T2> &\/*func*\/)$/;"	f	namespace:Eigen::internal
resize_image	src/image.c	/^image resize_image(image im, int w, int h)$/;"	f
resize_matrix	src/matrix.c	/^matrix resize_matrix(matrix m, int size)$/;"	f
resize_max	src/image.c	/^image resize_max(image im, int max)$/;"	f
resize_maxpool_layer	src/maxpool_layer.c	/^void resize_maxpool_layer(maxpool_layer *l, int w, int h)$/;"	f
resize_min	src/image.c	/^image resize_min(image im, int min)$/;"	f
resize_network	src/network.c	/^int resize_network(network *net, int w, int h)$/;"	f
resize_normalization_layer	src/normalization_layer.c	/^void resize_normalization_layer(layer *layer, int w, int h)$/;"	f
resize_region_layer	src/region_layer.c	/^void resize_region_layer(layer *l, int w, int h)$/;"	f
resize_reorg_layer	src/reorg_layer.c	/^void resize_reorg_layer(layer *l, int w, int h)$/;"	f
resize_route_layer	src/route_layer.c	/^void resize_route_layer(route_layer *l, network *net)$/;"	f
resized	include/darknet.h	/^    image *resized;$/;"	m	struct:load_args
restart	plugin/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::restart()$/;"	f	class:Eigen::internal::AmbiVector
restart_interval	src/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon12
result	examples/go.c	/^    float result;$/;"	m	struct:mcts_tree	file:
result_of	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct result_of<scalar_cmp_op<LhsScalar, RhsScalar, Cmp>(LhsScalar,RhsScalar)> {$/;"	s	namespace:Eigen::internal
result_of	plugin/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType)> {$/;"	s	namespace:Eigen::internal
result_of	plugin/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1)> {$/;"	s	namespace:Eigen::internal
result_of	plugin/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1,ArgType2)> {$/;"	s	namespace:Eigen::internal
result_of	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of { };$/;"	s	namespace:Eigen::internal
result_of	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of {$/;"	s	namespace:Eigen::internal
result_type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef ScalarX result_type;$/;"	t	struct:Eigen::internal::pow_impl
result_type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename ScalarBinaryOpTraits<ScalarX,ScalarY,internal::scalar_pow_op<ScalarX,ScalarY> >::ReturnType result_type;$/;"	t	struct:Eigen::internal::pow_impl
result_type	plugin/Eigen/src/Core/VectorwiseOp.h	/^                   >::type  result_type;$/;"	t	struct:Eigen::internal::member_redux
result_type	plugin/Eigen/src/Core/VectorwiseOp.h	/^  typedef ResultType result_type;$/;"	t	struct:Eigen::internal::member_lpnorm
result_type	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_difference_op
result_type	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^  typedef typename std::complex<T> result_type;$/;"	t	struct:Eigen::internal::scalar_sum_op
result_type	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  typedef Eigen::half result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^  typedef float result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_cmp_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::result_type          result_type;$/;"	t	struct:Eigen::internal::bind1st_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::result_type          result_type;$/;"	t	struct:Eigen::internal::bind2nd_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_conj_product_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_conj_product_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_difference_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_difference_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_max_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_max_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_min_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_min_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_product_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_quotient_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_quotient_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<LhsScalar,RhsScalar,scalar_sum_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_sum_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename ScalarBinaryOpTraits<Scalar,Exponent,scalar_pow_op>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_pow_op
result_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename scalar_quotient_op<LhsScalar,RhsScalar>::result_type result_type;$/;"	t	struct:Eigen::internal::functor_traits
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef NewType result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isfinite_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isinf_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef bool result_type;$/;"	t	struct:Eigen::internal::scalar_isnan_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::abs_knowing_score
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs2_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_arg_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_ref_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_op
result_type	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_ref_op
ret	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon326
ret	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon328
ret	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::InnerStrideAtCompileTime };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon325
ret	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::OuterStrideAtCompileTime };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon327
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^    ret = selector::ret$/;"	e	enum:Eigen::internal::product_type::__anon530
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon535
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon543
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon542
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon544
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon537
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon541
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon546
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon545
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon551
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon554
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon549
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon552
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon540
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon539
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon547
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon536
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon550
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon553
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon548
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon538
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon534
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon531
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int M>         struct product_type_selector<M, 1, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon532
ret	plugin/Eigen/src/Core/GeneralProduct.h	/^template<int N>         struct product_type_selector<1, N, 1>            { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon533
ret	plugin/Eigen/src/Core/Transpose.h	/^  enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon186
ret	plugin/Eigen/src/Core/Transpose.h	/^  enum { ret = bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed };$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon185
ret	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = !has_binary_operator<Functor>::value }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon235
ret	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { ret = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0 };$/;"	e	enum:Eigen::internal::has_direct_access::__anon392
ret	plugin/Eigen/src/Core/util/Meta.h	/^    enum { ret = meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::internal::__anon479
ret	plugin/Eigen/src/Core/util/Meta.h	/^  enum { ret = A*K };$/;"	e	enum:Eigen::meta_least_common_multiple::__anon482
ret	plugin/Eigen/src/Core/util/Meta.h	/^  enum { ret = meta_least_common_multiple<A,B,K+1>::ret };$/;"	e	enum:Eigen::meta_least_common_multiple::__anon481
ret	plugin/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:Eigen::meta_sqrt::__anon480
ret	plugin/Eigen/src/Householder/Householder.h	/^    ret = n==Dynamic ? n : n-1$/;"	e	enum:Eigen::internal::decrement_size::__anon723
ret	plugin/Eigen/src/SVD/JacobiSVD.h	/^         ret = !( (QRPreconditioner == NoQRPreconditioner) ||$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon133
ret	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Dense,Sparse, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^template <> struct product_promote_storage_type<Sparse,Dense, OuterProduct> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<PermutationStorage, Sparse,             ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
ret	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^template <int ProductTag> struct product_promote_storage_type<Sparse,             PermutationStorage, ProductTag> { typedef Sparse ret; };$/;"	t	struct:Eigen::internal::product_promote_storage_type
reverse	include/darknet.h	/^    int reverse;$/;"	m	struct:layer
reverse	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  reverse() const {$/;"	f	class:Eigen::ArithmeticSequence
reverse	plugin/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC ConstReverseReturnType reverse() const$/;"	f	class:Eigen::DenseBase
reverse	plugin/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse()$/;"	f	class:Eigen::DenseBase
reverse	plugin/Eigen/src/Core/VectorwiseOp.h	/^    ReverseReturnType reverse()$/;"	f	class:Eigen::VectorwiseOp
reverse	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const ConstReverseReturnType reverse() const$/;"	f	class:Eigen::VectorwiseOp
reverseFlag	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    bool reverseFlag() const { return m_reverse; }     \/**< \\internal \\brief Returns the reverse flag. *\/$/;"	f	class:Eigen::HouseholderSequence
reverseInPlace	plugin/Eigen/src/Core/Reverse.h	/^EIGEN_DEVICE_FUNC inline void DenseBase<Derived>::reverseInPlace()$/;"	f	class:Eigen::DenseBase
reverseInPlace	plugin/Eigen/src/Core/Reverse.h	/^EIGEN_DEVICE_FUNC void VectorwiseOp<ExpressionType,Direction>::reverseInPlace()$/;"	f	class:Eigen::VectorwiseOp
reverse_packet	plugin/Eigen/src/Core/Reverse.h	/^    typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;$/;"	t	class:Eigen::Reverse
reverse_packet_cond	plugin/Eigen/src/Core/Reverse.h	/^template<typename PacketType, bool ReversePacket> struct reverse_packet_cond$/;"	s	namespace:Eigen::internal
reverse_packet_cond	plugin/Eigen/src/Core/Reverse.h	/^template<typename PacketType> struct reverse_packet_cond<PacketType,false>$/;"	s	namespace:Eigen::internal
rgb2yuv422	src/rgb2yuyv_neon.cpp	/^static void rgb2yuv422(Mat *src, Mat *dst)$/;"	f	file:
rgb2yuv422	src/zcu102_api.cpp	/^static void rgb2yuv422(image *src, void *fb)$/;"	f	file:
rgb_to_hsv	src/image.c	/^void rgb_to_hsv(image im)$/;"	f
rgb_to_yuv	src/image.c	/^void rgb_to_yuv(image im)$/;"	f
rgbgr_image	python/darknet.py	/^rgbgr_image = lib.rgbgr_image$/;"	v
rgbgr_image	src/image.c	/^void rgbgr_image(image im)$/;"	f
rgbgr_net	examples/darknet.c	/^void rgbgr_net(char *cfgfile, char *weightfile, char *outfile)$/;"	f
rgbgr_weights	src/convolutional_layer.c	/^void rgbgr_weights(convolutional_layer l)$/;"	f
rhs	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CwiseBinaryOp
rhs	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	class:Eigen::Product
rhs	plugin/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs() const { return m_rhs; }$/;"	f	class:Eigen::Solve
rhs	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC const RhsType&       rhs()   const { return m_rhs; }$/;"	f	class:Eigen::SolveWithGuess
rhsImpl	plugin/Eigen/src/Core/CoreEvaluators.h	/^    evaluator<Rhs> rhsImpl;$/;"	m	struct:Eigen::internal::binary_evaluator::Data
right	include/darknet.h	/^    float left, right, top, bottom;$/;"	m	struct:__anon738
rightCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type rightCols(Index n = N) const$/;"	f
rightCols	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type rightCols(Index n = N)$/;"	f
rightCols	plugin/Eigen/src/plugins/BlockMethods.h	/^rightCols(NColsType n) const$/;"	f
rightCols	plugin/Eigen/src/plugins/BlockMethods.h	/^rightCols(NColsType n)$/;"	f
rightHouseholderSequence	plugin/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType,OnTheRight> rightHouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
rolling_mean	include/darknet.h	/^    float * rolling_mean;$/;"	m	struct:layer
rolling_mean_gpu	include/darknet.h	/^    float * rolling_mean_gpu;$/;"	m	struct:layer
rolling_variance	include/darknet.h	/^    float * rolling_variance;$/;"	m	struct:layer
rolling_variance_gpu	include/darknet.h	/^    float * rolling_variance_gpu;$/;"	m	struct:layer
rotate	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotate_crop_image	src/image.c	/^image rotate_crop_image(image im, float rad, float s, int w, int h, float dx, float dy, float aspect)$/;"	f
rotate_image	src/image.c	/^image rotate_image(image im, float rad)$/;"	f
rotate_image_cw	src/image.c	/^void rotate_image_cw(image im, int times)$/;"	f
rotation	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotation() const$/;"	f	class:Eigen::Transform
rotation_base_generic_product_selector	plugin/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector< RotationDerived, DiagonalMatrix<Scalar,Dim,MaxDim>, false >$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	plugin/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,MatrixType,false>$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	plugin/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,OtherVectorType,true>$/;"	s	namespace:Eigen::internal
round	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  round(double x) { return cl::sycl::round(x); }$/;"	f	namespace:Eigen::numext
round	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   round(float x) { return cl::sycl::round(x); }$/;"	f	namespace:Eigen::numext
round	plugin/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(round, Scalar) round(const Scalar& x)$/;"	f	namespace:Eigen::numext
round	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^round() const$/;"	f
round_error	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half round_error() { return Eigen::half(0.5); }$/;"	f	struct:std::numeric_limits
round_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  struct round_impl {$/;"	s	namespace:Eigen::internal
round_impl	plugin/Eigen/src/Core/MathFunctions.h	/^  struct round_impl$/;"	s	namespace:Eigen::internal
round_retval	plugin/Eigen/src/Core/MathFunctions.h	/^struct round_retval$/;"	s	namespace:Eigen::internal
round_style	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const std::float_round_style round_style = std::round_to_nearest;$/;"	m	struct:std::numeric_limits
route_layer	src/route_layer.h	/^typedef layer route_layer;$/;"	t
row	examples/go.c	/^    int row;$/;"	m	struct:__anon26	file:
row	plugin/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Rows$/;"	e	enum:Eigen::internal::all_unroller::__anon329
row	plugin/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Rows$/;"	e	enum:Eigen::internal::any_unroller::__anon330
row	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Index row() const             { return m_iter.row(); }$/;"	f	class:Eigen::InnerIterator
row	plugin/Eigen/src/Core/CoreIterators.h	/^  inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::inner_iterator_selector
row	plugin/Eigen/src/Core/TriangularMatrix.h	/^    row = (UnrollCount-1) % DstXprType::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_loop::__anon181
row	plugin/Eigen/src/Core/Visitor.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::visitor_impl::__anon285
row	plugin/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
row	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return EvalIterator::row()   - m_block.startRow(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerVectorInnerIterator
row	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Index row()    const { return IsRowMajor ? 0 : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
row	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer.value() : index(); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Index row() const { return IsRowMajor ? m_outer.value() : index(); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
row	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return IsRowMajor ? m_lhsIter.outer() : m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return IsRowMajor ? m_rhsIter.outer() : m_id; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_lhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_rhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index row()   const { return NeedToTranspose ? m_outer : LhsIterator::index(); }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index row() const    { return SparseXprType::IsRowMajor ? m_sparseIter.outer() : m_sparseIter.index(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^      Index row() const { return EvalIterator::col(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  const StorageIndex& row() const { return m_row; }$/;"	f	class:Eigen::Triplet
row	plugin/Eigen/src/SparseCore/SparseView.h	/^        inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
row	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index row() const { return index(); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
row	plugin/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowXpr row(Index i) const$/;"	f
row	plugin/Eigen/src/plugins/BlockMethods.h	/^inline RowXpr row(Index i)$/;"	f
rowIndex	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndex()  { return m_rowind; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndex	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndex() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexByOuterInner	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rowIndexByOuterInner	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
rowIndexPtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* rowIndexPtr() { return m_rowind_colptr; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndexPtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* rowIndexPtr() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rowIndices	plugin/Eigen/src/Core/IndexedView.h	/^  const RowIndices& rowIndices() const { return m_rowIndices; }$/;"	f	class:Eigen::IndexedView
rowOffset	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value() > 0 ? 0 : -m_index.value(); }$/;"	f	struct:Eigen::internal::evaluator
rowOffset	plugin/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
rowPrefix	plugin/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSeparator	plugin/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSpacer	plugin/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowStride	plugin/Eigen/src/Core/CoreEvaluators.h	/^  inline Index rowStride() const { return XprType::IsRowMajor ? m_outerStride.value() : m_innerStride.value(); }$/;"	f	struct:Eigen::internal::mapbase_evaluator
rowStride	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index rowStride() const$/;"	f	class:Eigen::DenseCoeffsBase
rowSuffix	plugin/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
row_major_bit	plugin/Eigen/src/Core/Matrix.h	/^      row_major_bit = _Options&RowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon676
rowblk	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  Index rowblk; \/\/ The minimum row dimension for 2-D blocking to be used;$/;"	m	struct:Eigen::internal::perfvalues
rows	include/darknet.h	/^    int rows, cols;$/;"	m	struct:matrix
rows	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LDLT
rows	plugin/Eigen/src/Cholesky/LLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LLT
rows	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline StorageIndex rows() const { return internal::convert_index<StorageIndex, Index>(m_cholmodFactor->n); }$/;"	f	class:Eigen::CholmodBase
rows	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ArrayWrapper
rows	plugin/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::MatrixWrapper
rows	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index rows() const        { return m_dstExpr.rows(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
rows	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrix
rows	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
rows	plugin/Eigen/src/Core/Block.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::internal::BlockImpl_dense
rows	plugin/Eigen/src/Core/CoreEvaluators.h	/^  Index rows() const $/;"	f	class:Eigen::internal::EvalToTemp
rows	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseBinaryOp
rows	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
rows	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^  EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseTernaryOp
rows	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^    Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::CwiseUnaryOp
rows	plugin/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::CwiseUnaryView
rows	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows() const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC Index rows(void) const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC static Index rows(void) {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	plugin/Eigen/src/Core/Diagonal.h	/^    inline Index rows() const$/;"	f	class:Eigen::Diagonal
rows	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index rows() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
rows	plugin/Eigen/src/Core/EigenBase.h	/^  inline Index rows() const { return derived().rows(); }$/;"	f	struct:Eigen::EigenBase
rows	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ForceAlignedAccess
rows	plugin/Eigen/src/Core/IndexedView.h	/^  Index rows() const { return internal::size(m_rowIndices); }$/;"	f	class:Eigen::IndexedView
rows	plugin/Eigen/src/Core/Inverse.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::Inverse
rows	plugin/Eigen/src/Core/MapBase.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::MapBase
rows	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::NestByValue
rows	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
rows	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }$/;"	f	class:Eigen::PlainObjectBase
rows	plugin/Eigen/src/Core/Product.h	/^    EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::Product
rows	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::redux_evaluator
rows	plugin/Eigen/src/Core/Replicate.h	/^    inline Index rows() const { return m_matrix.rows() * m_rowFactor.value(); }$/;"	f	class:Eigen::Replicate
rows	plugin/Eigen/src/Core/ReturnByValue.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return static_cast<const Derived*>(this)->rows(); }$/;"	f	class:Eigen::ReturnByValue
rows	plugin/Eigen/src/Core/Reverse.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Reverse
rows	plugin/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC Index rows() const { return m_condition.rows(); }$/;"	f	class:Eigen::Select
rows	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfAdjointView
rows	plugin/Eigen/src/Core/Solve.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::Solve
rows	plugin/Eigen/src/Core/SolveTriangular.h	/^  inline Index rows() const { return m_rhs.rows(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
rows	plugin/Eigen/src/Core/Transpose.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transpose
rows	plugin/Eigen/src/Core/Transpositions.h	/^    Index rows() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
rows	plugin/Eigen/src/Core/Transpositions.h	/^    Index rows() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
rows	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::TriangularBase
rows	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::TriangularView
rows	plugin/Eigen/src/Core/VectorwiseOp.h	/^    Index rows() const { return (Direction==Vertical   ? 1 : m_matrix.rows()); }$/;"	f	class:Eigen::PartialReduxExpr
rows	plugin/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::internal::visitor_evaluator
rows	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index rows() const { return m_hess.packedMatrix().rows(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
rows	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
rows	plugin/Eigen/src/Geometry/Homogeneous.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_matrix.rows() + (int(Direction)==Vertical   ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
rows	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
rows	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
rows	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return int(Mode)==int(Projective) ? m_matrix.cols() : (m_matrix.cols()-1); }$/;"	f	class:Eigen::Transform
rows	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index rows() const { return Side==OnTheLeft ? m_vectors.rows() : m_vectors.cols(); }$/;"	f	class:Eigen::HouseholderSequence
rows	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index rows() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
rows	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    Index rows() const { return m_L.rows(); }$/;"	f	class:Eigen::IncompleteCholesky
rows	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLUT
rows	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index rows() const { return matrix().rows(); }$/;"	f	class:Eigen::IterativeSolverBase
rows	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  EIGEN_DEVICE_FUNC Index rows() const { return m_dec.cols(); }$/;"	f	class:Eigen::SolveWithGuess
rows	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    inline Index rows() const { return mp_matrix.rows(); }$/;"	f	class:Eigen::KLU
rows	plugin/Eigen/src/LU/FullPivLU.h	/^    EIGEN_DEVICE_FUNC inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::FullPivLU
rows	plugin/Eigen/src/LU/PartialPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::PartialPivLU
rows	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PastixBase
rows	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
rows	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::ColPivHouseholderQR
rows	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline Index rows() const { return m_cpqr.rows(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
rows	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::FullPivHouseholderQR
rows	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
rows	plugin/Eigen/src/QR/HouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::HouseholderQR
rows	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    inline Index rows() const {return m_rows; }$/;"	f	class:Eigen::SPQR
rows	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  inline Index rows() const { return m_transpose ? m_spqr.rows() : m_spqr.cols(); }$/;"	f	struct:Eigen::SPQR_QProduct
rows	plugin/Eigen/src/SVD/SVDBase.h	/^  inline Index rows() const { return m_rows; }$/;"	f	class:Eigen::SVDBase
rows	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
rows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::BlockImpl
rows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
rows	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::BlockImpl
rows	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMapBase
rows	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
rows	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::SparseMatrixBase
rows	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSelfAdjointView
rows	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
rows	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }$/;"	f	class:Eigen::SparseVector
rows	plugin/Eigen/src/SparseCore/SparseView.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseView
rows	plugin/Eigen/src/SparseLU/SparseLU.h	/^    inline Index rows() const { return m_mat.rows(); }$/;"	f	class:Eigen::SparseLU
rows	plugin/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
rows	plugin/Eigen/src/SparseLU/SparseLU.h	/^  Index rows() { return m_mapL.rows(); }$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
rows	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Index rows() { return m_row; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
rows	plugin/Eigen/src/SparseQR/SparseQR.h	/^    inline Index rows() const { return m_pmat.rows(); }$/;"	f	class:Eigen::SparseQR
rows	plugin/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
rows	plugin/Eigen/src/SparseQR/SparseQR.h	/^  inline Index rows() const { return m_transpose ? m_qr.rows() : m_qr.cols(); }$/;"	f	struct:Eigen::SparseQR_QProduct
rows	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SuperLUBase
rows	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index rows() const { return mp_matrix.rows(); }$/;"	f	class:Eigen::UmfPackLU
rows	plugin/Eigen/src/misc/Image.h	/^  inline Index rows() const { return m_dec.rows(); }$/;"	f	struct:Eigen::internal::image_retval_base
rows	plugin/Eigen/src/misc/Kernel.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::kernel_retval_base
rowsPermutation	plugin/Eigen/src/SparseLU/SparseLU.h	/^    inline const PermutationType& rowsPermutation() const$/;"	f	class:Eigen::SparseLU
rowsTranspositions	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    const IntDiagSizeVectorType& rowsTranspositions() const$/;"	f	class:Eigen::FullPivHouseholderQR
rows_select	plugin/Eigen/src/Core/GeneralProduct.h	/^    rows_select = product_size_category<Rows,MaxRows>::value,$/;"	e	enum:Eigen::internal::product_type::__anon529
rowwise	plugin/Eigen/src/Core/DenseBase.h	/^    EIGEN_DEVICE_FUNC inline ConstRowwiseReturnType rowwise() const {$/;"	f	class:Eigen::DenseBase
rowwise	plugin/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise()$/;"	f	class:Eigen::DenseBase
rsqrt	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^rsqrt() const$/;"	f
run	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^  static void run(CholmodType& mat) {$/;"	f	struct:Eigen::internal::cholmod_configure_matrix
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel &kernel, Index outer)$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_InnerUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel& kernel)$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_innervec_CompleteUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index) { }$/;"	f	struct:Eigen::internal::copy_using_evaluator_DefaultTraversal_InnerUnrolling
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE void run(Kernel&, Index, Index) {}$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC static void EIGEN_STRONG_INLINE run(Kernel &kernel)$/;"	f	struct:Eigen::internal::dense_assignment_loop
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_DONT_INLINE void run(Kernel &kernel,$/;"	f	struct:Eigen::internal::unaligned_dense_assignment_loop
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,SrcScalarType> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/AssignEvaluator.h	/^  static EIGEN_STRONG_INLINE void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,SrcScalarType> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived & \/*mat*\/) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::all_unroller
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &\/*mat*\/) { return true; }$/;"	f	struct:Eigen::internal::all_unroller
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::all_unroller
run	plugin/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::any_unroller
run	plugin/Eigen/src/Core/ConditionEstimator.h	/^  static inline Vector run(const Vector& v) {$/;"	f	struct:Eigen::internal::rcond_compute_sign
run	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& m)$/;"	f	struct:Eigen::internal::setIdentity_impl
run	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived& m)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline Index run(const Derived&)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/DiagonalMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/Dot.h	/^  static ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)$/;"	f	struct:Eigen::internal::dot_nocheck
run	plugin/Eigen/src/Core/Dot.h	/^  static inline RealScalar run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	plugin/Eigen/src/Core/Dot.h	/^  static inline typename NumTraits<typename traits<Derived>::Scalar>::Real run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isApprox_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isApprox_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar& y, const typename Derived::RealScalar& prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	plugin/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar&, const typename Derived::RealScalar&)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	plugin/Eigen/src/Core/GeneralProduct.h	/^  static inline void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_selector
run	plugin/Eigen/src/Core/GeneralProduct.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::gemv_dense_selector
run	plugin/Eigen/src/Core/GenericPacketMath.h	/^  static inline void run(PacketType&, const PacketType&) {}$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/IO.h	/^  static inline int run()$/;"	f	struct:Eigen::internal::significant_decimals_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^    static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::arg_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^    static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::round_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  EIGEN_DEVICE_FUNC static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::expm1_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  EIGEN_DEVICE_FUNC static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::log1p_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static EIGEN_DEVICE_FUNC inline ScalarX run(ScalarX x, ScalarY y)$/;"	f	struct:Eigen::internal::pow_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static EIGEN_DEVICE_FUNC inline result_type run(const ScalarX& x, const ScalarY& y)$/;"	f	struct:Eigen::internal::pow_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline NewType run(const OldType& x)$/;"	f	struct:Eigen::internal::cast_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl_default
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run()$/;"	f	struct:Eigen::internal::random_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::conj_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline T run(const std::complex<T>& x)$/;"	f	struct:Eigen::internal::imag_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline T run(const std::complex<T>& x)$/;"	f	struct:Eigen::internal::real_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline bool run()$/;"	f	struct:Eigen::internal::random_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline const Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	plugin/Eigen/src/Core/MathFunctions.h	/^  static inline std::complex<T> run(const std::complex<T>& x)$/;"	f	struct:Eigen::internal::conj_impl
run	plugin/Eigen/src/Core/MathFunctionsImpl.h	/^  static inline RealScalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::hypot_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() { return 0; }$/;"	f	struct:Eigen::internal::default_digits10_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() { return 0; }$/;"	f	struct:Eigen::internal::default_digits_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() { return std::numeric_limits<T>::digits10; }$/;"	f	struct:Eigen::internal::default_digits10_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() { return std::numeric_limits<T>::digits; }$/;"	f	struct:Eigen::internal::default_digits_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() {$/;"	f	struct:Eigen::internal::default_digits10_impl
run	plugin/Eigen/src/Core/NumTraits.h	/^  static int run() {$/;"	f	struct:Eigen::internal::default_digits_impl
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index rows, Index cols)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static EIGEN_ALWAYS_INLINE void run(Index, Index)$/;"	f	struct:Eigen::internal::check_rows_cols_for_overflow
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static inline void run(MatrixTypeA& a, MatrixTypeB& b)$/;"	f	struct:Eigen::internal::matrix_swap_impl
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index rows, Index cols)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index size)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	plugin/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index \/*col*\/, const Lhs& \/*lhs*\/, const Rhs& \/*rhs*\/, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index \/*innerDim*\/, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet &res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Index innerDim, Packet& res)$/;"	f	struct:Eigen::internal::etor_product_packet_impl
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static inline void run(Dest& dst, const TranspositionType& tr, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::transposition_matrix_product
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const AssignFunc& func)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const InitialFunc& \/*func*\/)$/;"	f	struct:Eigen::internal::assignment_from_xpr_op_product
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/ProductEvaluators.h	/^  void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	plugin/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived&, const Func&) { return Scalar(); }$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	plugin/Eigen/src/Core/Redux.h	/^  static Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	plugin/Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return preverse(x); }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	plugin/Eigen/src/Core/Reverse.h	/^  static inline PacketType run(const PacketType& x) { return x; }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	plugin/Eigen/src/Core/Reverse.h	/^  static void run(ExpressionType &xpr)$/;"	f	struct:Eigen::internal::vectorwise_reverse_inplace_impl
run	plugin/Eigen/src/Core/Solve.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_selector
run	plugin/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	plugin/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs&, Rhs&) {}$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	plugin/Eigen/src/Core/Transpose.h	/^    static void run(const Derived& dst, const OtherDerived& other)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	plugin/Eigen/src/Core/Transpose.h	/^    static void run(const Derived&, const OtherDerived&)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	plugin/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	plugin/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const OtherDerived& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	plugin/Eigen/src/Core/Transpose.h	/^  static void run(MatrixType& m) {$/;"	f	struct:Eigen::internal::inplace_transpose_selector
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Kernel &kernel)$/;"	f	struct:Eigen::internal::triangular_assignment_loop
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/TriangularMatrix.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived &mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	plugin/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived& mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cd& first, const Packet2cd& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet4cf& first, const Packet4cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4d& first, const Packet4d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet8f& first, const Packet8f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet16f& first,$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet8d& first, const Packet8d& second) {$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static inline half run()$/;"	f	struct:Eigen::internal::random_default_impl
run	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static inline half run(const half& x, const half& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE static void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, A& a, B& b, C& c, T& \/*t*\/)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^static void run(Index rows, Index cols, Index depth,$/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static void run(MatrixType& mat, const ProductType& prod, const typename MatrixType::Scalar& alpha, bool beta)$/;"	f	struct:Eigen::general_product_to_triangular_selector
run	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,ColMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	plugin/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE void general_matrix_vector_product<Index,LhsScalar,LhsMapper,RowMajor,ConjugateLhs,RhsScalar,RhsMapper,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::general_matrix_vector_product
run	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static void run(Dest &dst, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^EIGEN_DONT_INLINE void product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>::run($/;"	f	class:Eigen::internal::product_selfadjoint_matrix
run	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  static void run(Dest& dest, const Lhs &a_lhs, const Rhs &a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_product_impl
run	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^EIGEN_DONT_INLINE void selfadjoint_matrix_vector_product<Scalar,Index,StorageOrder,UpLo,ConjugateLhs,ConjugateRhs,Version>::run($/;"	f	class:Eigen::internal::selfadjoint_matrix_vector_product
run	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* vecX, const Scalar* vecY, const Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_rank1_update
run	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(MatrixType& mat, const OtherType& other, const typename MatrixType::Scalar& alpha)$/;"	f	struct:Eigen::selfadjoint_product_selector
run	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^  static void run(Scalar* mat, Index stride, const UType& u, const VType& v, const Scalar& alpha)$/;"	f	struct:Eigen::internal::selfadjoint_rank2_update_selector
run	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^                                                        RhsStorageOrder,ConjugateRhs,ColMajor,Version>::run($/;"	f	class:Eigen::internal::product_triangular_matrix_matrix
run	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &a_lhs, const Rhs &a_rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^  ::run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	class:Eigen::internal::triangular_matrix_vector_product
run	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(const Lhs &lhs, const Rhs &rhs, Dest& dest, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::trmv_selector
run	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^  template<typename Dest> static void run(Dest& dst, const Lhs &lhs, const Rhs &rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::triangular_product_impl
run	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^  static void run($/;"	f	struct:Eigen::internal::triangular_solve_matrix
run	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^EIGEN_DONT_INLINE void triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>::run($/;"	f	class:Eigen::internal::triangular_solve_matrix
run	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)$/;"	f	struct:Eigen::internal::triangular_solve_vector
run	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE To run(const From& x) { return To(x); }$/;"	f	struct:Eigen::internal::get_factor
run	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return numext::real(x); }$/;"	f	struct:Eigen::internal::get_factor
run	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static const typename T::Scalar* run(const T& m)$/;"	f	struct:Eigen::internal::extract_data_selector
run	plugin/Eigen/src/Core/util/BlasUtil.h	/^  static typename T::Scalar* run(const T&) { return 0; }$/;"	f	struct:Eigen::internal::extract_data_selector
run	plugin/Eigen/src/Core/util/Memory.h	/^  EIGEN_DEVICE_FUNC static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_copy_helper
run	plugin/Eigen/src/Core/util/Memory.h	/^  static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_memmove_helper
run	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^  static void run(ComplexSchur<MatrixType>& _this, const MatrixType& matrix, bool computeU)$/;"	f	struct:Eigen::internal::complex_schur_reduce_to_hessenberg
run	plugin/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^  run(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::internal::eigenvalues_selector::MatrixBase
run	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& solver, const MatrixType& mat, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType&, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static const type& run (const TransformType& x) { return x.matrix(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static const type& run(const type &x) { return x; }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static type run (const TransformType& x) { return x.affine(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename ArgType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	plugin/Eigen/src/Geometry/OrthoMethods.h	/^  static inline VectorType run(const Derived& src)$/;"	f	struct:Eigen::internal::unitOrthogonal_selector
run	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){$/;"	f	struct:Eigen::internal::quat_product
run	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived>& q){$/;"	f	struct:Eigen::internal::quat_conj
run	plugin/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC static inline void run(QuaternionBase<Derived>& q, const Other& a_mat)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	plugin/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_DEVICE_FUNC static inline void run(QuaternionBase<Derived>& q, const Other& vec)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	plugin/Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static EIGEN_STRONG_INLINE ReturnType run(const RotationDerived& r, const OtherVectorType& v)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	plugin/Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static inline ReturnType run(const RotationDerived& r, const DiagonalMatrix<Scalar,Dim,MaxDim>& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	plugin/Eigen/src/Geometry/RotationBase.h	/^  EIGEN_DEVICE_FUNC static inline ReturnType run(const RotationDerived& r, const MatrixType& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static inline void run(const TransformType& m, TransformType& res)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static inline void run(const TransformType&, TransformType&)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC static void run(MatrixType &mat)$/;"	f	struct:Eigen::internal::transform_make_affine
run	plugin/Eigen/src/Geometry/Transform.h	/^  static EIGEN_STRONG_INLINE ResultType run(const TransformType& T, const MatrixType& other)$/;"	f	struct:Eigen::internal::transform_right_product_impl
run	plugin/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::transform_transform_product_impl
run	plugin/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other, const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	plugin/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other,const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline AffinePart run(MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline ConstAffinePart run(const MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline MatrixType& run(MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline const MatrixType& run(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,AffineCompact,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	plugin/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,Mode,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	plugin/Eigen/src/Geometry/Transform.h	/^  template<typename MatrixType> EIGEN_DEVICE_FUNC static void run(MatrixType &) { }$/;"	f	struct:Eigen::internal::transform_make_affine
run	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	plugin/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& q)$/;"	f	struct:Eigen::internal::quat_conj
run	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/Jacobi/Jacobi.h	/^  static inline void run(Scalar *x, Index incrx, Scalar *y, Index incry, Index size, OtherScalar c, OtherScalar s)$/;"	f	struct:Eigen::internal::apply_rotation_in_the_plane_selector
run	plugin/Eigen/src/LU/Determinant.h	/^  static inline typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	plugin/Eigen/src/LU/Determinant.h	/^  static typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	plugin/Eigen/src/LU/FullPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/LU/InverseImpl.h	/^  static inline void run($/;"	f	struct:Eigen::internal::compute_inverse_and_det_with_check
run	plugin/Eigen/src/LU/InverseImpl.h	/^  static inline void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse
run	plugin/Eigen/src/LU/InverseImpl.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename XprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/LU/InverseImpl.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	plugin/Eigen/src/LU/PartialPivLU.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename LuType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/LU/arch/Inverse_SSE.h	/^  static void run(const MatrixType& mat, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    static IndexType run( _MKL_DSS_HANDLE_t pt, IndexType maxfct, IndexType mnum, IndexType type, IndexType phase, IndexType n, void *a,$/;"	f	struct:Eigen::internal::pardiso_run_selector
run	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename QrType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename CodType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename QrType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/QR/HouseholderQR.h	/^  static void run(MatrixQR& mat, HCoeffs& hCoeffs, Index maxBlockSize=32,$/;"	f	struct:Eigen::internal::householder_qr_inplace_blocked
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, QRPreconditioner>&, const MatrixType&)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  static bool run(typename SVD::WorkMatrixType& work_matrix, SVD& svd, Index p, Index q, RealScalar& maxDiagEntry)$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	plugin/Eigen/src/SVD/JacobiSVD.h	/^  static bool run(typename SVD::WorkMatrixType&, SVD&, Index, Index, RealScalar&) { return true; }$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const InputMatrixType& input, ConstCholMatrixPtr &pmat, CholMatrixType &tmp)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    static void run(const MatrixType& input, ConstMatrixPtr &pmat, MatrixType &\/*tmp*\/)$/;"	f	struct:Eigen::internal::simplicial_cholesky_grab_input
run	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::conservative_sparse_sparse_product_selector
run	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::sparse_sparse_to_dense_product_selector
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const Functor &func)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrix<Scalar,Options,StorageIndex> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseAssign.h	/^  static void run(SparseMatrixBase<DstDerived> &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const typename Res::Scalar& alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	plugin/Eigen/src/SparseCore/SparsePermutation.h	/^    static inline void run(Dest& dst, const PermutationType& perm, const ExpressionType& xpr)$/;"	f	struct:Eigen::internal::permutation_matrix_product
run	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::add_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::sub_assign_op<typename DstXprType::Scalar,typename SrcXprType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(DynamicSparseMatrix<DestScalar,ColMajor,StorageIndex>& dst, const SrcXprType &src, const AssignOpType&\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src, const AssignFunc& func)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src, const AssignOpType&\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<DestScalar,StorageOrder,StorageIndex> &dst, const SrcXprType &src,$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseMatrix<Scalar,Options,DstIndex> &dst, const SrcXprType &src, const internal::assign_op<Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void run(SparseSelfAdjointView<DestType,DestMode>& dst, const SrcXprType &src, const internal::assign_op<Scalar,typename MatrixType::Scalar> &)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res, const RealScalar& tolerance)$/;"	f	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
run	plugin/Eigen/src/SparseCore/SparseVector.h	/^  static void run(Dest& dst, const Src& src) {$/;"	f	struct:Eigen::internal::sparse_vector_assign_selector
run	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_selector
run	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
run	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<1>::run(const Index \/*segsize*\/, BlockScalarVector& dense, ScalarVector& \/*tempv*\/, ScalarVector& lusup, Index& luptr,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	plugin/Eigen/src/SparseLU/SparseLU_kernel_bmod.h	/^EIGEN_DONT_INLINE void LU_kernel_bmod<SegSizeAtCompileTime>::run(const Index segsize, BlockScalarVector& dense, ScalarVector& tempv, ScalarVector& lusup, Index& luptr, const Index lda,$/;"	f	class:Eigen::internal::LU_kernel_bmod
run	plugin/Eigen/src/SparseQR/SparseQR.h	/^  static void run(DstXprType &dst, const SrcXprType &src, const internal::assign_op<Scalar,Scalar> &\/*func*\/)$/;"	f	struct:Eigen::internal::Assignment
run	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static void run(MatrixType& mat, SluMatrix& res)$/;"	f	struct:Eigen::SluMatrixMapHelper
run_art	examples/art.c	/^void run_art(int argc, char **argv)$/;"	f
run_attention	examples/attention.c	/^void run_attention(int argc, char **argv)$/;"	f
run_captcha	examples/captcha.c	/^void run_captcha(int argc, char **argv)$/;"	f
run_char_rnn	examples/rnn.c	/^void run_char_rnn(int argc, char **argv)$/;"	f
run_cifar	examples/cifar.c	/^void run_cifar(int argc, char **argv)$/;"	f
run_classifier	examples/classifier.c	/^void run_classifier(int argc, char **argv)$/;"	f
run_coco	examples/coco.c	/^void run_coco(int argc, char **argv)$/;"	f
run_compare	src/compare.c	/^void run_compare(int argc, char **argv)$/;"	f
run_detector	examples/detector.c	/^void run_detector(int argc, char **argv)$/;"	f
run_dice	examples/dice.c	/^void run_dice(int argc, char **argv)$/;"	f
run_go	examples/go.c	/^void run_go(int argc, char **argv)$/;"	f
run_lsd	examples/lsd.c	/^void run_lsd(int argc, char **argv)$/;"	f
run_mcts	examples/go.c	/^mcts_tree *run_mcts(mcts_tree *tree, network *net, float *board, float *ko, int player, int n, float cpuct, float secs)$/;"	f
run_nightmare	examples/nightmare.c	/^void run_nightmare(int argc, char **argv)$/;"	f
run_regressor	examples/regressor.c	/^void run_regressor(int argc, char **argv)$/;"	f
run_segmenter	examples/segmenter.c	/^void run_segmenter(int argc, char **argv)$/;"	f
run_super	examples/super.c	/^void run_super(int argc, char **argv)$/;"	f
run_swag	examples/swag.c	/^void run_swag(int argc, char **argv)$/;"	f
run_tag	examples/tag.c	/^void run_tag(int argc, char **argv)$/;"	f
run_vid_rnn	examples/rnn_vid.c	/^void run_vid_rnn(int argc, char **argv)$/;"	f
run_vid_rnn	examples/rnn_vid.c	/^void run_vid_rnn(int argc, char **argv){}$/;"	f
run_voxel	examples/voxel.c	/^void run_voxel(int argc, char **argv)$/;"	f
run_writing	examples/writing.c	/^void run_writing(int argc, char **argv)$/;"	f
run_yolo	examples/yolo.c	/^void run_yolo(int argc, char **argv)$/;"	f
running	src/demo.c	/^static int running = 0;$/;"	v	file:
s	plugin/Eigen/src/Jacobi/Jacobi.h	/^    EIGEN_DEVICE_FUNC Scalar s() const { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	plugin/Eigen/src/Jacobi/Jacobi.h	/^    EIGEN_DEVICE_FUNC Scalar& s() { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	src/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon12
s	src/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon18
sample	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline VectorType sample() const$/;"	f	class:Eigen::AlignedBox
sample	python/darknet.py	/^def sample(probs):$/;"	f
sample_array	src/utils.c	/^int sample_array(float *a, int n)$/;"	f
saturate_exposure_image	src/image.c	/^void saturate_exposure_image(image im, float sat, float exposure)$/;"	f
saturate_image	src/image.c	/^void saturate_image(image im, float sat)$/;"	f
saturation	include/darknet.h	/^    float saturation;$/;"	m	struct:layer
saturation	include/darknet.h	/^    float saturation;$/;"	m	struct:load_args
saturation	include/darknet.h	/^    float saturation;$/;"	m	struct:network
save_batchnorm_weights	src/parser.c	/^void save_batchnorm_weights(layer l, FILE *fp)$/;"	f
save_connected_weights	src/parser.c	/^void save_connected_weights(layer l, FILE *fp)$/;"	f
save_convolutional_weights	src/parser.c	/^void save_convolutional_weights(layer l, FILE *fp)$/;"	f
save_convolutional_weights_binary	src/parser.c	/^void save_convolutional_weights_binary(layer l, FILE *fp)$/;"	f
save_delta_gpu	include/darknet.h	/^    float * save_delta_gpu;$/;"	m	struct:layer
save_gpu	include/darknet.h	/^    float * save_gpu;$/;"	m	struct:layer
save_image	src/image.c	/^void save_image(image im, const char *name)$/;"	f
save_image_jpg	src/image.c	/^void save_image_jpg(image p, const char *name)$/;"	f
save_image_png	src/image.c	/^void save_image_png(image im, const char *name)$/;"	f
save_prediction_files	src/detection_layer.c	/^void save_prediction_files(float *data)$/;"	f
save_reconstruction	examples/rnn_vid.c	/^image save_reconstruction(network net, image *init, float *feat, char *name, int i)$/;"	f
save_weights	src/parser.c	/^void save_weights(network *net, char *filename)$/;"	f
save_weights_upto	src/parser.c	/^void save_weights_upto(network *net, char *filename, int cutoff)$/;"	f
scal_cpu	src/blas.c	/^void scal_cpu(int N, float ALPHA, float *X, int INCX)$/;"	f
scalar_abs2_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs2_op {$/;"	s	namespace:Eigen::internal
scalar_abs_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_abs_op {$/;"	s	namespace:Eigen::internal
scalar_acos_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_acos_op {$/;"	s	namespace:Eigen::internal
scalar_arg_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_arg_op {$/;"	s	namespace:Eigen::internal
scalar_asin_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_asin_op {$/;"	s	namespace:Eigen::internal
scalar_atan_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_atan_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_and_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_and_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_not_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_boolean_not_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_or_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_or_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_xor_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_boolean_xor_op {$/;"	s	namespace:Eigen::internal
scalar_cast_op	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<Eigen::half, float> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<float, Eigen::half> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct scalar_cast_op<int, Eigen::half> {$/;"	s	namespace:Eigen::internal
scalar_cast_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cast_op {$/;"	s	namespace:Eigen::internal
scalar_ceil_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_ceil_op {$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_EQ> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_GE> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_GT> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_LE> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_LT> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_NEQ> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_cmp_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_cmp_op<LhsScalar,RhsScalar, cmp_UNORD> : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_conj_product_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_conj_product_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_conjugate_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_conjugate_op {$/;"	s	namespace:Eigen::internal
scalar_constant_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct scalar_constant_op {$/;"	s	namespace:Eigen::internal
scalar_cos_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cos_op {$/;"	s	namespace:Eigen::internal
scalar_cosh_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_cosh_op {$/;"	s	namespace:Eigen::internal
scalar_cube_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_cube_op {$/;"	s	namespace:Eigen::internal
scalar_difference_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_difference_op<const std::complex<T>, const std::complex<T> >  : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_difference_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_difference_op<std::complex<T>, std::complex<T> > : scalar_difference_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_difference_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_difference_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_div_cost	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 16 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 14 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 8 }; };$/;"	s	namespace:Eigen::internal
scalar_div_cost	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 7 }; };$/;"	s	namespace:Eigen::internal
scalar_exp_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_exp_op {$/;"	s	namespace:Eigen::internal
scalar_expm1_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_expm1_op {$/;"	s	namespace:Eigen::internal
scalar_floor_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_floor_op {$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	plugin/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	plugin/Eigen/src/Core/MathFunctions.h	/^template<> struct scalar_fuzzy_impl<bool>$/;"	s	namespace:Eigen::internal
scalar_hypot_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_hypot_op<Scalar,Scalar> : binary_op_base<Scalar,Scalar>$/;"	s	namespace:Eigen::internal
scalar_identity_op	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^template<typename Scalar> struct scalar_identity_op {$/;"	s	namespace:Eigen::internal
scalar_imag_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_op {$/;"	s	namespace:Eigen::internal
scalar_imag_ref_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_imag_ref_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_inverse_op {$/;"	s	namespace:Eigen::internal
scalar_isfinite_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isfinite_op {$/;"	s	namespace:Eigen::internal
scalar_isinf_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isinf_op {$/;"	s	namespace:Eigen::internal
scalar_isnan_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_isnan_op {$/;"	s	namespace:Eigen::internal
scalar_log10_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log10_op {$/;"	s	namespace:Eigen::internal
scalar_log1p_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log1p_op {$/;"	s	namespace:Eigen::internal
scalar_log_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_log_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_max_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_min_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_min_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_opposite_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_opposite_op {$/;"	s	namespace:Eigen::internal
scalar_pow_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_pow_op  : binary_op_base<Scalar,Exponent>$/;"	s	namespace:Eigen::internal
scalar_product_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_product_op<const std::complex<T>, const std::complex<T> >  : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_product_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_product_op<std::complex<T>, std::complex<T> > : scalar_product_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_product_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_product_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_product_traits	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct scalar_product_traits$/;"	s	namespace:Eigen
scalar_quotient_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_quotient_op<const std::complex<T>, const std::complex<T> > : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_quotient_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_quotient_op<std::complex<T>, std::complex<T> > : scalar_quotient_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_quotient_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_quotient_op  : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_random_op	plugin/Eigen/src/Core/Random.h	/^template<typename Scalar> struct scalar_random_op {$/;"	s	namespace:Eigen::internal
scalar_real_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_op {$/;"	s	namespace:Eigen::internal
scalar_real_ref_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_real_ref_op {$/;"	s	namespace:Eigen::internal
scalar_round_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_round_op {$/;"	s	namespace:Eigen::internal
scalar_rsqrt_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_rsqrt_op {$/;"	s	namespace:Eigen::internal
scalar_score_coeff_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_score_coeff_op : scalar_abs_op<Scalar>$/;"	s	namespace:Eigen::internal
scalar_sign_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_sign_op<Scalar,false> {$/;"	s	namespace:Eigen::internal
scalar_sign_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_sign_op<Scalar,true> {$/;"	s	namespace:Eigen::internal
scalar_sin_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sin_op {$/;"	s	namespace:Eigen::internal
scalar_sinh_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sinh_op {$/;"	s	namespace:Eigen::internal
scalar_sqrt_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_sqrt_op {$/;"	s	namespace:Eigen::internal
scalar_square_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_square_op {$/;"	s	namespace:Eigen::internal
scalar_sum_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_sum_op<const std::complex<T>, const std::complex<T> > : binary_op_base<const std::complex<T>, const std::complex<T> > {$/;"	s	namespace:Eigen::internal
scalar_sum_op	plugin/Eigen/src/Core/arch/CUDA/Complex.h	/^template<typename T> struct scalar_sum_op<std::complex<T>, std::complex<T> > : scalar_sum_op<const std::complex<T>, const std::complex<T> > {};$/;"	s	namespace:Eigen::internal
scalar_sum_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  scalar_sum_op() {}$/;"	f	struct:Eigen::internal::scalar_sum_op
scalar_sum_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^struct scalar_sum_op : binary_op_base<LhsScalar,RhsScalar>$/;"	s	namespace:Eigen::internal
scalar_sum_op	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^template<> struct scalar_sum_op<bool,bool> : scalar_sum_op<int,int> {$/;"	s	namespace:Eigen::internal
scalar_tan_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^template<typename Scalar> struct scalar_tan_op {$/;"	s	namespace:Eigen::internal
scalar_tanh_op	plugin/Eigen/src/Core/functors/UnaryFunctors.h	/^struct scalar_tanh_op {$/;"	s	namespace:Eigen::internal
scale	include/darknet.h	/^    float scale;$/;"	m	struct:__anon734
scale	include/darknet.h	/^    float scale;$/;"	m	struct:layer
scale	include/darknet.h	/^    float scale;$/;"	m	struct:network
scale	include/darknet.h	/^    int scale;$/;"	m	struct:load_args
scale	plugin/Eigen/src/Geometry/Transform.h	/^EIGEN_DEVICE_FUNC inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::scale(const Scalar& s)$/;"	f	class:Eigen::Transform
scale	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scaleAndAddTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl_base
scaleAndAddTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& a_lhs, const Rhs& a_rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void scaleAndAddTo(Dst& dst, const Lhs& lhs, const Rhs& rhs, const Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void scaleAndAddTo(Dest& dst, const Lhs& lhs, const RhsView& rhsView, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scaleAndAddTo	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  static void scaleAndAddTo(Dest& dst, const LhsView& lhsView, const Rhs& rhs, const typename Dest::Scalar& alpha)$/;"	f	struct:Eigen::internal::generic_product_impl
scale_array	src/utils.c	/^void scale_array(float *a, int n, float s)$/;"	f
scale_bias	src/convolutional_layer.c	/^void scale_bias(float *output, float *scales, int batch, int n, int size)$/;"	f
scale_change_gpu	include/darknet.h	/^    float * scale_change_gpu;$/;"	m	struct:layer
scale_data_rows	src/data.c	/^void scale_data_rows(data d, float s)$/;"	f
scale_image	src/image.c	/^void scale_image(image m, float s)$/;"	f
scale_image_channel	src/image.c	/^void scale_image_channel(image im, int c, float v)$/;"	f
scale_m	include/darknet.h	/^    float * scale_m;$/;"	m	struct:layer
scale_m_gpu	include/darknet.h	/^    float *scale_m_gpu;$/;"	m	struct:layer
scale_matrix	src/matrix.c	/^void scale_matrix(matrix m, float scale)$/;"	f
scale_updates	include/darknet.h	/^    float * scale_updates;$/;"	m	struct:layer
scale_updates_gpu	include/darknet.h	/^    float * scale_updates_gpu;$/;"	m	struct:layer
scale_v	include/darknet.h	/^    float * scale_v;$/;"	m	struct:layer
scale_v_gpu	include/darknet.h	/^    float *scale_v_gpu;$/;"	m	struct:layer
scale_weights	src/network.c	/^void scale_weights(layer l, float s)$/;"	f
scales	include/darknet.h	/^    float * scales;$/;"	m	struct:layer
scales	include/darknet.h	/^    float *scales;$/;"	m	struct:network
scales_gpu	include/darknet.h	/^    float * scales_gpu;$/;"	m	struct:layer
scalingS	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    const VectorRx& scalingS() const { eigen_assert("m_factorizationIsOk"); return m_scale; }$/;"	f	class:Eigen::IncompleteCholesky
scan_n	src/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon12
scatterPacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void scatterPacket(Index i, Index j, const SubPacket &p) const {$/;"	f	class:Eigen::internal::blas_data_mapper
scomplex	plugin/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<float>  scomplex;$/;"	t	namespace:Eigen
scoped_array	plugin/Eigen/src/Core/util/Memory.h	/^  explicit scoped_array(std::ptrdiff_t size)$/;"	f	class:Eigen::internal::scoped_array
scoped_array	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> class scoped_array : noncopyable$/;"	c	namespace:Eigen::internal
score	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType score ; \/* the score used to maintain heap, if col is alive *\/$/;"	m	union:internal::colamd_col::__anon123
score_game	examples/go.c	/^float score_game(float *board)$/;"	f
searchLowerIndex	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
searchLowerIndex	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index start, Index end, Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
sec	src/utils.c	/^float sec(clock_t clocks)$/;"	f
second	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  Packet second;$/;"	m	struct:Eigen::internal::DoublePacket
second_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef Arg2 second_argument_type;$/;"	t	struct:Eigen::internal::binary_op_base
second_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::second_argument_type second_argument_type;$/;"	t	struct:Eigen::internal::bind1st_op
second_argument_type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef typename BinaryOp::second_argument_type second_argument_type;$/;"	t	struct:Eigen::internal::bind2nd_op
section	src/parser.c	/^}section;$/;"	t	typeref:struct:__anon6	file:
secularEq	plugin/Eigen/src/SVD/BDCSVD.h	/^typename BDCSVD<MatrixType>::RealScalar BDCSVD<MatrixType>::secularEq(RealScalar mu, const ArrayRef& col0, const ArrayRef& diag, const IndicesRef &perm, const ArrayRef& diagShifted, RealScalar shift)$/;"	f	class:Eigen::BDCSVD
seen	include/darknet.h	/^    size_t *seen;$/;"	m	struct:network
segment	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type segment(Index start, Index n = N) const$/;"	f
segment	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type segment(Index start, Index n = N)$/;"	f
segment	plugin/Eigen/src/plugins/BlockMethods.h	/^segment(Index start, NType n) const$/;"	f
segment	plugin/Eigen/src/plugins/BlockMethods.h	/^segment(Index start, NType n)$/;"	f
select	plugin/Eigen/src/Core/GenericPacketMath.h	/^  bool select[N];$/;"	m	struct:Eigen::internal::Selector
select	plugin/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const DenseBase<ThenDerived>& thenMatrix,$/;"	f	class:Eigen::DenseBase
select	plugin/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const typename ElseDerived::Scalar& thenScalar,$/;"	f	class:Eigen::DenseBase
select_data	src/data.c	/^data select_data(data *orig, int *inds)$/;"	f
select_mcts	examples/go.c	/^float select_mcts(mcts_tree *root, network *net, float *prev, float cpuct)$/;"	f
selector	plugin/Eigen/src/Core/GeneralProduct.h	/^  typedef product_type_selector<rows_select, cols_select, depth_select> selector;$/;"	t	struct:Eigen::internal::product_type
self_go	examples/go.c	/^void self_go(char *filename, char *weightfile, char *f2, char *w2, int multi)$/;"	f
self_layer	include/darknet.h	/^    struct layer *self_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
selfadjointView	plugin/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::MatrixBase
selfadjointView	plugin/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::MatrixBase
selfadjointView	plugin/Eigen/src/Core/TriangularMatrix.h	/^    SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView()$/;"	f	class:Eigen::TriangularView
selfadjointView	plugin/Eigen/src/Core/TriangularMatrix.h	/^    const SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView() const$/;"	f	class:Eigen::TriangularView
selfadjointView	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template ConstSelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::SparseMatrixBase
selfadjointView	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^typename SparseMatrixBase<Derived>::template SelfAdjointViewReturnType<UpLo>::Type SparseMatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::SparseMatrixBase
selfadjoint_matrix_vector_product	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_matrix_vector_product$/;"	s	namespace:Eigen::internal
selfadjoint_matrix_vector_product_symv	plugin/Eigen/src/Core/products/SelfadjointMatrixVector_BLAS.h	/^struct selfadjoint_matrix_vector_product_symv :$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,0,true,Rhs,RhsMode,false>$/;"	s	namespace:Eigen::internal
selfadjoint_product_impl	plugin/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_product_impl<Lhs,LhsMode,false,Rhs,0,true>$/;"	s	namespace:Eigen::internal
selfadjoint_product_selector	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,false>$/;"	s	namespace:Eigen
selfadjoint_product_selector	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,true>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	plugin/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank2_update_selector	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Lower>$/;"	s	namespace:Eigen::internal
selfadjoint_rank2_update_selector	plugin/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Upper>$/;"	s	namespace:Eigen::internal
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(FirstType f, LastType l)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(FirstType f, LastType l, IncrType incr)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(FirstType f, const Symbolic::BaseExpr<LastTypeDerived> &l)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(FirstType f, const Symbolic::BaseExpr<LastTypeDerived> &l, IncrType incr)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(const Symbolic::BaseExpr<FirstTypeDerived> &f, LastType l)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(const Symbolic::BaseExpr<FirstTypeDerived> &f, LastType l, IncrType incr)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(const Symbolic::BaseExpr<FirstTypeDerived> &f, const Symbolic::BaseExpr<LastTypeDerived> &l)$/;"	f	namespace:Eigen
seq	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seq(const Symbolic::BaseExpr<FirstTypeDerived> &f, const Symbolic::BaseExpr<LastTypeDerived> &l, IncrType incr)$/;"	f	namespace:Eigen
seqN	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  -> decltype(seqN(typename internal::cleanup_index_type<FirstType>::type(f),$/;"	f	namespace:Eigen
seqN	plugin/Eigen/src/Core/ArithmeticSequence.h	/^auto seq(FirstType f, LastType l) -> decltype(seqN(typename internal::cleanup_index_type<FirstType>::type(f),$/;"	f	namespace:Eigen
seqN	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seqN(FirstType first, SizeType size)  {$/;"	f	namespace:Eigen
seqN	plugin/Eigen/src/Core/ArithmeticSequence.h	/^seqN(FirstType first, SizeType size, IncrType incr)  {$/;"	f	namespace:Eigen
set	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct set  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived()  = src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
setBounds	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    void setBounds(Index start, Index end) { m_start = convert_index(start); m_end = convert_index(end); }$/;"	f	class:Eigen::internal::AmbiVector
setConstant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& val)$/;"	f	class:Eigen::DenseBase
setConstant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index rows, Index cols, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index size, const Scalar& val)$/;"	f	class:Eigen::PlainObjectBase
setConstant	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setConstant(const Scalar& value)$/;"	f	class:Eigen::TriangularViewImpl
setCpuCacheSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void setCpuCacheSizes(std::ptrdiff_t l1, std::ptrdiff_t l2, std::ptrdiff_t l3)$/;"	f	namespace:Eigen
setDroptol	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setDroptol(const RealScalar& droptol)$/;"	f	class:Eigen::IncompleteLUT
setEmpty	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline void setEmpty()$/;"	f	class:Eigen::AlignedBox
setFillfactor	plugin/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar,StorageIndex>::setFillfactor(int fillfactor)$/;"	f	class:Eigen::IncompleteLUT
setFromTriplets	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::setFromTriplets(const InputIterators& begin, const InputIterators& end)$/;"	f	class:Eigen::SparseMatrix
setFromTriplets	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_StorageIndex>::setFromTriplets(const InputIterators& begin, const InputIterators& end, DupFunctor dup_func)$/;"	f	class:Eigen::SparseMatrix
setFromTwoVectors	plugin/Eigen/src/Geometry/Quaternion.h	/^EIGEN_DEVICE_FUNC inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::QuaternionBase
setIdentity	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity()$/;"	f	class:Eigen::MatrixBase
setIdentity	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
setIdentity	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity() { m_diagonal.setOnes(); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity(Index size) { m_diagonal.setOnes(size); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity()$/;"	f	class:Eigen::PermutationBase
setIdentity	plugin/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity(Index newSize)$/;"	f	class:Eigen::PermutationBase
setIdentity	plugin/Eigen/src/Core/Transpositions.h	/^    void setIdentity()$/;"	f	class:Eigen::TranspositionsBase
setIdentity	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline QuaternionBase& setIdentity() { coeffs() << Scalar(0), Scalar(0), Scalar(0), Scalar(1); return *this; }$/;"	f	class:Eigen::QuaternionBase
setIdentity	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setIdentity()$/;"	f	class:Eigen::SparseMatrix
setIdentity_impl	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^struct setIdentity_impl<Derived, true>$/;"	s	namespace:Eigen::internal
setInfos	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    void setInfos(Index m, Index n, ScalarVector& nzval, IndexVector& nzval_colptr, IndexVector& rowind,$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
setInitialShift	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^    void setInitialShift(RealScalar shift) { m_initialShift = shift; }$/;"	f	class:Eigen::IncompleteCholesky
setLength	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setLength(Index length)$/;"	f	class:Eigen::HouseholderSequence
setLinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(Index newSize, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setLinSpaced	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setMaxIterations	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexEigenSolver
setMaxIterations	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::ComplexSchur
setMaxIterations	plugin/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::EigenSolver
setMaxIterations	plugin/Eigen/src/Eigenvalues/GeneralizedEigenSolver.h	/^    GeneralizedEigenSolver& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::GeneralizedEigenSolver
setMaxIterations	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^      RealQZ& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealQZ
setMaxIterations	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::RealSchur
setMaxIterations	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setMaxIterations(Index maxIters)$/;"	f	class:Eigen::IterativeSolverBase
setMode	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void setMode(CholmodMode mode)$/;"	f	class:Eigen::CholmodDecomposition
setMode	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& setMode(SimplicialCholeskyMode mode)$/;"	f	class:Eigen::SimplicialCholesky
setNbThreads	plugin/Eigen/src/Core/products/Parallelizer.h	/^inline void setNbThreads(int v)$/;"	f	namespace:Eigen
setNull	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline void setNull() { setEmpty(); }$/;"	f	class:Eigen::AlignedBox
setOnes	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setOnes()$/;"	f	class:Eigen::DenseBase
setOnes	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setOnes	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setOnes	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setOnes() { return setConstant(Scalar(1)); }$/;"	f	class:Eigen::TriangularViewImpl
setPivotThreshold	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setPivotThreshold(const RealScalar& tol)$/;"	f	class:Eigen::SPQR
setPivotThreshold	plugin/Eigen/src/SparseLU/SparseLU.h	/^    void setPivotThreshold(const RealScalar& thresh)$/;"	f	class:Eigen::SparseLU
setPivotThreshold	plugin/Eigen/src/SparseQR/SparseQR.h	/^    void setPivotThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SparseQR
setRandom	plugin/Eigen/src/Core/Random.h	/^EIGEN_DEVICE_FUNC inline Derived& DenseBase<Derived>::setRandom()$/;"	f	class:Eigen::DenseBase
setRandom	plugin/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setRandom	plugin/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setReverseFlag	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setReverseFlag(bool reverse)$/;"	f	class:Eigen::HouseholderSequence
setSPQROrdering	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    void setSPQROrdering(int ord) { m_ordering = ord;}$/;"	f	class:Eigen::SPQR
setScalarType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setScalarType()$/;"	f	struct:Eigen::SluMatrix
setShift	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& setShift(const RealScalar& offset)$/;"	f	class:Eigen::CholmodBase
setShift	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setShift(Index shift)$/;"	f	class:Eigen::HouseholderSequence
setShift	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& setShift(const RealScalar& offset, const RealScalar& scale = 1)$/;"	f	class:Eigen::SimplicialCholeskyBase
setStorageType	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setStorageType(Stype_t t)$/;"	f	struct:Eigen::SluMatrix
setSwitchSize	plugin/Eigen/src/SVD/BDCSVD.h	/^  void setSwitchSize(int s) $/;"	f	class:Eigen::BDCSVD
setThreshold	plugin/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivLU
setThreshold	plugin/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivLU
setThreshold	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& setThreshold(Default_t) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
setThreshold	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  CompleteOrthogonalDecomposition& setThreshold(const RealScalar& threshold) {$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
setThreshold	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	plugin/Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(Default_t)$/;"	f	class:Eigen::SVDBase
setThreshold	plugin/Eigen/src/SVD/SVDBase.h	/^  Derived& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::SVDBase
setTolerance	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setTolerance(const RealScalar& tolerance)$/;"	f	class:Eigen::IterativeSolverBase
setUnit	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setUnit(Index i)$/;"	f	class:Eigen::MatrixBase
setUnit	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setUnit(Index newSize, Index i)$/;"	f	class:Eigen::MatrixBase
setZero	plugin/Eigen/src/Cholesky/LDLT.h	/^    void setZero()$/;"	f	class:Eigen::LDLT
setZero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()$/;"	f	class:Eigen::DenseBase
setZero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index newSize)$/;"	f	class:Eigen::PlainObjectBase
setZero	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setZero	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero() { m_diagonal.setZero(); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero(Index size) { m_diagonal.setZero(size); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	plugin/Eigen/src/Core/TriangularMatrix.h	/^    TriangularViewType& setZero() { return setConstant(Scalar(0)); }$/;"	f	class:Eigen::TriangularViewImpl
setZero	plugin/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_StorageIndex>::setZero()$/;"	f	class:Eigen::internal::AmbiVector
setZero	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setZero()$/;"	f	class:Eigen::SparseMatrix
setZero	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void setZero() { m_data.clear(); }$/;"	f	class:Eigen::SparseVector
set_batch_network	src/network.c	/^void set_batch_network(network *net, int b)$/;"	f
set_cur_img	src/zcu102_api.cpp	/^void set_cur_img(unsigned char *data, int w, int h, int c, const char *name)$/;"	f
set_cur_img_by_name	src/zcu102_api.cpp	/^void set_cur_img_by_name(char *filename)$/;"	f
set_from_triplets	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, DupFunctor dup_func)$/;"	f	namespace:Eigen::internal
set_gpu	python/darknet.py	/^set_gpu = lib.cuda_set_device$/;"	v
set_is_malloc_allowed	plugin/Eigen/src/Core/util/Memory.h	/^EIGEN_DEVICE_FUNC inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }$/;"	f	namespace:Eigen::internal
set_pixel	src/image.c	/^static void set_pixel(image m, int x, int y, int c, float val)$/;"	f	file:
set_pixel_inter	src/zcu102_api.cpp	/^static void set_pixel_inter(image m, int x, int y, int c, float val) $/;"	f	file:
set_temp_network	src/network.c	/^void set_temp_network(network *net, float t)$/;"	f
sets	scripts/voc_label.py	/^sets=[('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test')]$/;"	v
sets	voc_label.py	/^sets=[('2012', 'train'), ('2012', 'val'), ('2007', 'train'), ('2007', 'val'), ('2007', 'test')]$/;"	v
setup_yolo_env	src/zcu102_api.cpp	/^void setup_yolo_env(char *cfgfile, char *weightfile)$/;"	f
shallow	include/darknet.h	/^    int shallow;$/;"	m	struct:__anon736
shared1	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon126
shared1	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared1 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon122
shared2	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::Colamd_Row	typeref:union:internal::Colamd_Row::__anon127
shared2	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared2 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon123
shared3	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared3 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon124
shared4	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  } shared4 ;$/;"	m	struct:internal::colamd_col	typeref:union:internal::colamd_col::__anon125
shear	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::shear(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Transform
shift	include/darknet.h	/^    float shift;$/;"	m	struct:layer
shift	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    Index shift() const { return m_shift; }    \/**< \\brief Returns the shift of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
shortcut	include/darknet.h	/^    int shortcut;$/;"	m	struct:layer
shortcut_cpu	src/blas.c	/^void shortcut_cpu(int batch, int w1, int h1, int c1, float *add, int w2, int h2, int c2, float *out)$/;"	f
show_image	src/image.c	/^void show_image(image p, const char *name)$/;"	f
show_image_collapsed	src/image.c	/^void show_image_collapsed(image p, char *name)$/;"	f
show_image_cv	src/image.c	/^void show_image_cv(image p, const char *name, IplImage *disp)$/;"	f
show_image_layers	src/image.c	/^void show_image_layers(image p, char *name)$/;"	f
show_image_normalized	src/image.c	/^void show_image_normalized(image im, const char *name)$/;"	f
show_images	src/image.c	/^void show_images(image *ims, int n, char *window)$/;"	f
shuffle	src/utils.c	/^void shuffle(void *arr, size_t n, size_t size)$/;"	f
side	include/darknet.h	/^    int side;$/;"	m	struct:layer
sign	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sign() const$/;"	f
signDeterminant	plugin/Eigen/src/SparseLU/SparseLU.h	/^    Scalar signDeterminant()$/;"	f	class:Eigen::SparseLU
signaling_NaN	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static Eigen::half signaling_NaN() { return Eigen::half_impl::raw_uint16_to_half(0x7e00); }$/;"	f	struct:std::numeric_limits
signedDistance	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Scalar signedDistance(const VectorType& p) const { return normal().dot(p) + offset(); }$/;"	f	class:Eigen::Hyperplane
significant_decimals_impl	plugin/Eigen/src/Core/IO.h	/^struct significant_decimals_impl$/;"	s	namespace:Eigen::internal
simplicial_cholesky_grab_input	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input {$/;"	s	namespace:Eigen::internal
simplicial_cholesky_grab_input	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  struct simplicial_cholesky_grab_input<MatrixType,MatrixType> {$/;"	s	namespace:Eigen::internal
sin	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  sin(double x) { return cl::sycl::sin(x); }$/;"	f	namespace:Eigen::numext
sin	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   sin(float x) { return cl::sycl::sin(x); }$/;"	f	namespace:Eigen::numext
sin	plugin/Eigen/src/Core/MathFunctions.h	/^T sin(const T &x) {$/;"	f	namespace:Eigen::numext
sin	plugin/Eigen/src/Core/MathFunctions.h	/^double sin(const double &x) { return ::sin(x); }$/;"	f	namespace:Eigen::numext
sin	plugin/Eigen/src/Core/MathFunctions.h	/^float sin(const float &x) { return ::sinf(x); }$/;"	f	namespace:Eigen::numext
sin	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half sin(const half& a) {$/;"	f	namespace:Eigen::half_impl
sin	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sin() const$/;"	f
singularValues	plugin/Eigen/src/SVD/SVDBase.h	/^  const SingularValuesType& singularValues() const$/;"	f	class:Eigen::SVDBase
sinh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  sinh(double x) { return cl::sycl::sinh(x); }$/;"	f	namespace:Eigen::numext
sinh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   sinh(float x) { return cl::sycl::sinh(x); }$/;"	f	namespace:Eigen::numext
sinh	plugin/Eigen/src/Core/MathFunctions.h	/^T sinh(const T &x) {$/;"	f	namespace:Eigen::numext
sinh	plugin/Eigen/src/Core/MathFunctions.h	/^double sinh(const double &x) { return ::sinh(x); }$/;"	f	namespace:Eigen::numext
sinh	plugin/Eigen/src/Core/MathFunctions.h	/^float sinh(const float &x) { return ::sinhf(x); }$/;"	f	namespace:Eigen::numext
sinh	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sinh() const$/;"	f
size	include/darknet.h	/^    int min, max, size;$/;"	m	struct:load_args
size	include/darknet.h	/^    int size;$/;"	m	struct:layer
size	include/darknet.h	/^    int size;$/;"	m	struct:list
size	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  Index size()  const { return m_size; }$/;"	f	class:Eigen::ArithmeticSequence
size	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC Index size() const        { return m_dstExpr.size(); }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
size	plugin/Eigen/src/Core/EigenBase.h	/^  inline Index size() const { return rows() * cols(); }$/;"	f	struct:Eigen::EigenBase
size	plugin/Eigen/src/Core/GenericPacketMath.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon356
size	plugin/Eigen/src/Core/Matrix.h	/^  enum { size = internal::size_at_compile_time<_Rows,_Cols>::ret };$/;"	e	enum:Eigen::internal::traits::__anon675
size	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline Index size() const { return Index(indices().size()); }$/;"	f	class:Eigen::PermutationBase
size	plugin/Eigen/src/Core/Redux.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::redux_evaluator
size	plugin/Eigen/src/Core/Transpositions.h	/^    Index size() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
size	plugin/Eigen/src/Core/Transpositions.h	/^    Index size() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
size	plugin/Eigen/src/Core/Visitor.h	/^  EIGEN_DEVICE_FUNC Index size() const { return m_xpr.size(); }$/;"	f	class:Eigen::internal::visitor_evaluator
size	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon597
size	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon595
size	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon598
size	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon596
size	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon589
size	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^    size=8,$/;"	e	enum:Eigen::internal::packet_traits::__anon588
size	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon593
size	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon592
size	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon594
size	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    size = 16,$/;"	e	enum:Eigen::internal::packet_traits::__anon627
size	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^    size = 8,$/;"	e	enum:Eigen::internal::packet_traits::__anon628
size	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon629
size	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 16, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon631
size	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { size = 8, alignment=Aligned64 };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon630
size	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon640
size	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon638
size	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon641
size	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon639
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon633
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon636
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon632
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon637
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon634
size	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon635
size	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon647
size	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon646
size	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon649
size	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon648
size	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon653
size	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon654
size	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon609
size	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon607
size	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon610
size	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon608
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon605
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon601
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon602
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon606
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon603
size	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon604
size	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon579
size	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon577
size	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon580
size	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon578
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon570
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon569
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon571
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon573
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon572
size	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon574
size	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon621
size	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon620
size	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon623
size	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon622
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon613
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon615
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon614
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon618
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon617
size	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon616
size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index size() const { return 1; }$/;"	f	struct:Eigen::internal::SingleRange
size	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  Index size() const { return m_size.value(); }$/;"	f	struct:Eigen::internal::AllRange
size	plugin/Eigen/src/Core/util/Meta.h	/^Index size(const T& x) { return x.size(); }$/;"	f	namespace:Eigen::internal
size	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    StorageIndex size() const { return m_size; }$/;"	f	class:Eigen::internal::AmbiVector
size	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index size() const { return m_size; }$/;"	f	class:Eigen::internal::CompressedStorage
size	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index size() const { return rows() * cols(); }$/;"	f	class:Eigen::SparseMatrixBase
size	src/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon11
size	src/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon15
size	src/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon20
sizeObject	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  const SizeType&  sizeObject()  const { return m_size; }$/;"	f	class:Eigen::ArithmeticSequence
size_params	src/parser.c	/^typedef struct size_params{$/;"	s	file:
size_params	src/parser.c	/^} size_params;$/;"	t	typeref:struct:size_params	file:
size_type	plugin/Eigen/src/Core/util/Memory.h	/^  typedef std::size_t     size_type;$/;"	t	class:Eigen::aligned_allocator
size_type	plugin/Eigen/src/StlSupport/details.h	/^    typedef std::size_t     size_type;$/;"	t	class:Eigen::aligned_allocator_indirection
sizes	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline const CwiseBinaryOp< internal::scalar_difference_op<Scalar,Scalar>, const VectorType, const VectorType> sizes() const$/;"	f	class:Eigen::AlignedBox
skip	src/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon8
slerp	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::slerp(const Scalar& t, const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
slerp	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Rotation2D slerp(const Scalar& t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
smallestAngle	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar smallestAngle() const {$/;"	f	class:Eigen::Rotation2D
smallestPositiveAngle	plugin/Eigen/src/Geometry/Rotation2D.h	/^  EIGEN_DEVICE_FUNC inline Scalar smallestPositiveAngle() const {$/;"	f	class:Eigen::Rotation2D
smart_copy	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> EIGEN_DEVICE_FUNC void smart_copy(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_copy_helper	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_copy_helper	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,true> {$/;"	s	namespace:Eigen::internal
smart_memmove	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> void smart_memmove(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_memmove_helper	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_memmove_helper	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_memmove_helper<T,true> {$/;"	s	namespace:Eigen::internal
smooth	examples/nightmare.c	/^void smooth(image recon, image update, float lambda, int num)$/;"	f
smooth	include/darknet.h	/^    float smooth;$/;"	m	struct:layer
smooth_data	src/data.c	/^void smooth_data(data d)$/;"	f
smooth_l1_cpu	src/blas.c	/^void smooth_l1_cpu(int n, float *pred, float *truth, float *delta, float *error)$/;"	f
softmax	include/darknet.h	/^    int softmax;$/;"	m	struct:layer
softmax	src/blas.c	/^void softmax(float *input, int n, float temp, int stride, float *output)$/;"	f
softmax_cpu	src/blas.c	/^void softmax_cpu(float *input, int n, int batch, int batch_offset, int groups, int group_offset, int stride, float temp, float *output)$/;"	f
softmax_layer	src/softmax_layer.h	/^typedef layer softmax_layer;$/;"	t
softmax_tree	include/darknet.h	/^    tree *softmax_tree;$/;"	m	struct:layer
solve	plugin/Eigen/src/Cholesky/LDLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LDLT
solve	plugin/Eigen/src/Cholesky/LLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LLT
solve	plugin/Eigen/src/Core/SolveTriangular.h	/^TriangularViewImpl<Derived,Mode,Dense>::solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solve	plugin/Eigen/src/Core/SolverBase.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SolverBase
solve	plugin/Eigen/src/Core/TriangularMatrix.h	/^    solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    inline const Rhs& solve(const Rhs& b) const { return b; }$/;"	f	class:Eigen::IdentityPreconditioner
solve	plugin/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::DiagonalPreconditioner
solve	plugin/Eigen/src/LU/FullPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivLU
solve	plugin/Eigen/src/LU/PartialPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PartialPivLU
solve	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::ColPivHouseholderQR
solve	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  inline const Solve<CompleteOrthogonalDecomposition, Rhs> solve($/;"	f	class:Eigen::CompleteOrthogonalDecomposition
solve	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivHouseholderQR
solve	plugin/Eigen/src/QR/HouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::HouseholderQR
solve	plugin/Eigen/src/SVD/SVDBase.h	/^  solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SVDBase
solve	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SparseSolverBase
solve	plugin/Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const MatrixBase<Rhs>& B) const $/;"	f	class:Eigen::SparseQR
solve	plugin/Eigen/src/SparseQR/SparseQR.h	/^    inline const Solve<SparseQR, Rhs> solve(const SparseMatrixBase<Rhs>& B) const$/;"	f	class:Eigen::SparseQR
solveInPlace	plugin/Eigen/src/Cholesky/LDLT.h	/^bool LDLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LDLT
solveInPlace	plugin/Eigen/src/Cholesky/LLT.h	/^void LLT<MatrixType,_UpLo>::solveInPlace(const MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LLT
solveInPlace	plugin/Eigen/src/Core/SolveTriangular.h	/^EIGEN_DEVICE_FUNC void TriangularViewImpl<MatrixType,Mode,Dense>::solveInPlace(const MatrixBase<OtherDerived>& _other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void solveInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^void TriangularViewImpl<ExpressionType,Mode,Sparse>::solveInPlace(SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularViewImpl
solveInPlace	plugin/Eigen/src/SparseLU/SparseLU.h	/^  template<typename Dest>   void solveInPlace(MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixUReturnType
solveInPlace	plugin/Eigen/src/SparseLU/SparseLU.h	/^  void solveInPlace( MatrixBase<Dest> &X) const$/;"	f	struct:Eigen::SparseLUMatrixLReturnType
solveInPlace	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^void MappedSuperNodalMatrix<Scalar,Index_>::solveInPlace( MatrixBase<Dest>&X) const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
solveWithGuess	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::IterativeSolverBase
solve_sparse_through_dense_panels	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^solve_sparse_through_dense_panels(const Decomposition &dec, const Rhs& rhs, Dest &dest)$/;"	f	namespace:Eigen::internal
solve_traits	plugin/Eigen/src/Core/Solve.h	/^struct solve_traits<Decomposition,RhsType,Dense>$/;"	s	namespace:Eigen::internal
solve_traits	plugin/Eigen/src/SparseCore/SparseUtil.h	/^struct solve_traits<Decomposition,RhsType,Sparse>$/;"	s	namespace:Eigen::internal
sortEigenvalues	plugin/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::sortEigenvalues(bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
sorta_shuffle	src/utils.c	/^void sorta_shuffle(void *arr, size_t n, size_t size, size_t sections)$/;"	f
sortable_bbox	src/box.c	/^} sortable_bbox;$/;"	t	typeref:struct:__anon4	file:
sortable_bbox	src/compare.c	/^} sortable_bbox;$/;"	t	typeref:struct:__anon23	file:
sparseView	plugin/Eigen/src/SparseCore/SparseView.h	/^const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& reference,$/;"	f	class:Eigen::MatrixBase
sparse_conjunction_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^  explicit sparse_conjunction_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::sparse_conjunction_evaluator
sparse_conjunction_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IndexBased, IteratorBased>$/;"	s	namespace:Eigen::internal
sparse_conjunction_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IteratorBased, IndexBased>$/;"	s	namespace:Eigen::internal
sparse_conjunction_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^struct sparse_conjunction_evaluator<XprType, IteratorBased, IteratorBased>$/;"	s	namespace:Eigen::internal
sparse_dense_outer_product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const ActualRhs &rhs, const Lhs1 &lhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^  sparse_dense_outer_product_evaluator(const Lhs1 &lhs, const ActualRhs &rhs)$/;"	f	struct:Eigen::internal::sparse_dense_outer_product_evaluator
sparse_dense_outer_product_evaluator	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_dense_outer_product_evaluator$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  sparse_diagonal_product_evaluator(const SparseXprType &sparseXpr, const DiagonalCoeffType &diagCoeff)$/;"	f	struct:Eigen::internal::sparse_diagonal_product_evaluator
sparse_diagonal_product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagCoeffType, SDP_AsCwiseProduct>$/;"	s	namespace:Eigen::internal
sparse_diagonal_product_evaluator	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct sparse_diagonal_product_evaluator<SparseXprType, DiagonalCoeffType, SDP_AsScalarProduct>$/;"	s	namespace:Eigen::internal
sparse_eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Cols,int Flags> struct sparse_eval<T,1,Cols,Flags> {$/;"	s	namespace:Eigen::internal
sparse_eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Flags> struct sparse_eval<T,1,1,Flags> {$/;"	s	namespace:Eigen::internal
sparse_eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Cols,int Flags> struct sparse_eval {$/;"	s	namespace:Eigen::internal
sparse_eval	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Flags> struct sparse_eval<T,Rows,1,Flags> {$/;"	s	namespace:Eigen::internal
sparse_matrix_block_impl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(SparseMatrixType& xpr, Index i)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline sparse_matrix_block_impl(SparseMatrixType& xpr, Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
sparse_matrix_block_impl	plugin/Eigen/src/SparseCore/SparseBlock.h	/^class sparse_matrix_block_impl$/;"	c	namespace:Eigen::internal
sparse_selfadjoint_time_dense_product	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^inline void sparse_selfadjoint_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_solve_triangular_selector	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_sparse_selector	plugin/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_sparse_selector<Lhs,Rhs,Mode,UpLo,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_impl	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^static void sparse_sparse_product_with_pruning_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, const typename ResultType::RealScalar& tolerance)$/;"	f	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	plugin/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_impl	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void sparse_sparse_to_dense_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_to_dense_product_selector	plugin/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct sparse_sparse_to_dense_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^inline void sparse_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_time_dense_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, AlphaType, ColMajor, true>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, ColMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, typename DenseResType::Scalar, RowMajor, true>$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	plugin/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Inner> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	plugin/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_Outer> {$/;"	s	namespace:Eigen::internal
sparse_vector_assign_selector	plugin/Eigen/src/SparseCore/SparseVector.h	/^struct sparse_vector_assign_selector<Dest,Src,SVA_RuntimeSwitch> {$/;"	s	namespace:Eigen::internal
sparselu_gemm	plugin/Eigen/src/SparseLU/SparseLU_gemm_kernel.h	/^void sparselu_gemm(Index m, Index n, Index d, const Scalar* A, Index lda, const Scalar* B, Index ldb, Scalar* C, Index ldc)$/;"	f	namespace:Eigen::internal
spatial	include/darknet.h	/^    int spatial;$/;"	m	struct:layer
spatial_mean	include/darknet.h	/^    float * spatial_mean;$/;"	m	struct:layer
spec_end	src/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon12
spec_start	src/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon12
speed	examples/darknet.c	/^void speed(char *cfgfile, int tics)$/;"	f
splitOffTwoRows	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::splitOffTwoRows(Index i)$/;"	f	class:Eigen::RealQZ
splitOffTwoRows	plugin/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::splitOffTwoRows(Index iu, bool computeU, const Scalar& exshift)$/;"	f	class:Eigen::RealSchur
split_data	src/data.c	/^data *split_data(data d, int part, int total)$/;"	f
split_str	src/utils.c	/^list *split_str(char *s, char delim)$/;"	f
sqrt	include/darknet.h	/^    int sqrt;$/;"	m	struct:layer
sqrt	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  sqrt(double x) { return cl::sycl::sqrt(x); }$/;"	f	namespace:Eigen::numext
sqrt	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   sqrt(float x) { return cl::sycl::sqrt(x); }$/;"	f	namespace:Eigen::numext
sqrt	plugin/Eigen/src/Core/MathFunctions.h	/^T sqrt(const T &x)$/;"	f	namespace:Eigen::numext
sqrt	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half sqrt(const half& a) {$/;"	f	namespace:Eigen::half_impl
sqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^double sqrt(const double &x)$/;"	f	namespace:Eigen::numext
sqrt	plugin/Eigen/src/Core/arch/SSE/MathFunctions.h	/^float sqrt(const float &x)$/;"	f	namespace:Eigen::numext
sqrt	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sqrt() const$/;"	f
sqrth	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC Eigen::half sqrth(const Eigen::half& a) {$/;"	f
square	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^square() const$/;"	f
squared	include/darknet.h	/^    float * squared;$/;"	m	struct:layer
squaredDistance	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredExteriorDistance	plugin/Eigen/src/Geometry/AlignedBox.h	/^EIGEN_DEVICE_FUNC inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	plugin/Eigen/src/Geometry/AlignedBox.h	/^EIGEN_DEVICE_FUNC inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
squaredNorm	plugin/Eigen/src/Core/Dot.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::MatrixBase
squaredNorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const SquaredNormReturnType squaredNorm() const$/;"	f	class:Eigen::VectorwiseOp
squaredNorm	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline Scalar squaredNorm() const { return coeffs().squaredNorm(); }$/;"	f	class:Eigen::QuaternionBase
squaredNorm	plugin/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::SparseMatrixBase
squared_gpu	include/darknet.h	/^    float * squared_gpu;$/;"	m	struct:layer
squeeze	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void squeeze()$/;"	f	class:Eigen::internal::CompressedStorage
srcEvaluator	plugin/Eigen/src/Core/AssignEvaluator.h	/^  EIGEN_DEVICE_FUNC const SrcEvaluatorType& srcEvaluator() const { return m_src; }$/;"	f	class:Eigen::internal::generic_dense_assignment_kernel
srcTensorDesc	include/darknet.h	/^    cudnnTensorDescriptor_t srcTensorDesc, dstTensorDesc;$/;"	m	struct:layer
stableNorm	plugin/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::stableNorm() const$/;"	f	class:Eigen::MatrixBase
stableNorm	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const StableNormReturnType stableNorm() const$/;"	f	class:Eigen::VectorwiseOp
stableNormalize	plugin/Eigen/src/Core/Dot.h	/^EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void MatrixBase<Derived>::stableNormalize()$/;"	f	class:Eigen::MatrixBase
stableNormalized	plugin/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::stableNormalized() const$/;"	f	class:Eigen::MatrixBase
stable_norm_impl	plugin/Eigen/src/Core/StableNorm.h	/^stable_norm_impl(const MatrixType &mat, typename enable_if<!MatrixType::IsVectorAtCompileTime>::type* = 0 )$/;"	f	namespace:Eigen::internal
stable_norm_impl	plugin/Eigen/src/Core/StableNorm.h	/^stable_norm_impl(const VectorType &vec, typename enable_if<VectorType::IsVectorAtCompileTime>::type* = 0 )$/;"	f	namespace:Eigen::internal
stable_norm_impl_inner_step	plugin/Eigen/src/Core/StableNorm.h	/^void stable_norm_impl_inner_step(const VectorType &vec, RealScalar& ssq, RealScalar& scale, RealScalar& invScale)$/;"	f	namespace:Eigen::internal
stable_norm_kernel	plugin/Eigen/src/Core/StableNorm.h	/^inline void stable_norm_kernel(const ExpressionType& bl, Scalar& ssq, Scalar& scale, Scalar& invScale)$/;"	f	namespace:Eigen::internal
stair_activate	src/activations.h	/^static inline float stair_activate(float x)$/;"	f
stair_gradient	src/activations.h	/^static inline float stair_gradient(float x)$/;"	f
start	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first col in this row *\/$/;"	m	struct:internal::Colamd_Row
start	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^  IndexType start ;   \/* index for A of first row in this column, or DEAD *\/$/;"	m	struct:internal::colamd_col
startCol	plugin/Eigen/src/Core/Block.h	/^    StorageIndex startCol() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startCol	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::BlockImpl
startCol	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return IsRowMajor ? 0 : m_outerStart; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startCol	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startCol() const { return m_startCol.value(); }$/;"	f	class:Eigen::BlockImpl
startFill	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void startFill(Index reserve)$/;"	f	class:Eigen::SparseVector
startRow	plugin/Eigen/src/Core/Block.h	/^    StorageIndex startRow() const$/;"	f	class:Eigen::internal::BlockImpl_dense
startRow	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::BlockImpl
startRow	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return IsRowMajor ? m_outerStart : 0; }$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
startRow	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    Index startRow() const { return m_startRow.value(); }$/;"	f	class:Eigen::BlockImpl
startVec	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseMatrix
startVec	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseVector
start_x	src/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon22
start_y	src/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon22
state	include/darknet.h	/^    float * state;$/;"	m	struct:layer
state_delta	include/darknet.h	/^    float * state_delta;$/;"	m	struct:layer
state_delta_gpu	include/darknet.h	/^    float * state_delta_gpu;$/;"	m	struct:layer
state_gate_layer	include/darknet.h	/^    struct layer *state_gate_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_gpu	include/darknet.h	/^    float * state_gpu;$/;"	m	struct:layer
state_h_layer	include/darknet.h	/^    struct layer *state_h_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_layer	include/darknet.h	/^    struct layer *state_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_r_layer	include/darknet.h	/^    struct layer *state_r_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_save_layer	include/darknet.h	/^    struct layer *state_save_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_state_layer	include/darknet.h	/^    struct layer *state_state_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
state_z_layer	include/darknet.h	/^    struct layer *state_z_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
static_assertion	plugin/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion {};$/;"	s	namespace:Eigen::internal
static_assertion	plugin/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion<true>$/;"	s	namespace:Eigen::internal
statistics_connected_layer	src/connected_layer.c	/^void statistics_connected_layer(layer l)$/;"	f
statistics_net	examples/darknet.c	/^void statistics_net(char *cfgfile, char *weightfile)$/;"	f
stb_image_write_test	src/stb_image_write.h	/^typedef int stb_image_write_test[sizeof(stbiw_uint32)==4 ? 1 : -1];$/;"	t
stbi__DNL	src/stb_image.h	2764;"	d
stbi__EOI	src/stb_image.h	2766;"	d
stbi__SOF	src/stb_image.h	2767;"	d
stbi__SOF_progressive	src/stb_image.h	2770;"	d
stbi__SOI	src/stb_image.h	2765;"	d
stbi__SOS	src/stb_image.h	2768;"	d
stbi__YCbCr_to_RGB_row	src/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f
stbi__YCbCr_to_RGB_simd	src/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f
stbi__at_eof	src/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f
stbi__bit_reverse	src/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f
stbi__bitcount	src/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f
stbi__bitreverse16	src/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f
stbi__bmask	src/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_info	src/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__bmp_load	src/stb_image.h	/^static stbi_uc *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__bmp_test	src/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f
stbi__bmp_test_raw	src/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f
stbi__build_fast_ac	src/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f
stbi__build_huffman	src/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f
stbi__check_png_header	src/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f
stbi__clamp	src/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f
stbi__cleanup_jpeg	src/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f
stbi__compute_huffman_codes	src/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f
stbi__compute_transparency	src/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f
stbi__compute_y	src/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f
stbi__context	src/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon9
stbi__convert_format	src/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__copyval	src/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f
stbi__cpuid3	src/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f
stbi__create_png_image	src/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f
stbi__create_png_image_raw	src/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f
stbi__de_iphone	src/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f
stbi__de_iphone_flag	src/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	src/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f
stbi__decode_jpeg_image	src/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f
stbi__depth_scale_table	src/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	src/stb_image.h	2886;"	d
stbi__div4	src/stb_image.h	2837;"	d
stbi__do_png	src/stb_image.h	/^static unsigned char *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp)$/;"	f
stbi__do_zlib	src/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f
stbi__err	src/stb_image.h	/^static int stbi__err(const char *str)$/;"	f
stbi__err	src/stb_image.h	897;"	d
stbi__err	src/stb_image.h	899;"	d
stbi__err	src/stb_image.h	901;"	d
stbi__errpf	src/stb_image.h	904;"	d
stbi__errpuc	src/stb_image.h	905;"	d
stbi__expand_png_palette	src/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f
stbi__extend_receive	src/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f
stbi__f2f	src/stb_image.h	1905;"	d
stbi__fill_bits	src/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f
stbi__fill_gif_background	src/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g)$/;"	f
stbi__float2int	src/stb_image.h	1383;"	d
stbi__float_postprocess	src/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__fopen	src/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f
stbi__fsh	src/stb_image.h	1906;"	d
stbi__g_failure_reason	src/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	src/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f
stbi__get16le	src/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f
stbi__get32be	src/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f
stbi__get32le	src/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f
stbi__get8	src/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f
stbi__get_chunk_header	src/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f
stbi__get_marker	src/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f
stbi__getn	src/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f
stbi__gif	src/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon22
stbi__gif_header	src/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f
stbi__gif_info	src/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_info_raw	src/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_load	src/stb_image.h	/^static stbi_uc *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__gif_load_next	src/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f
stbi__gif_lzw	src/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon21
stbi__gif_parse_colortable	src/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f
stbi__gif_test	src/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f
stbi__gif_test_raw	src/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f
stbi__grow_buffer_unsafe	src/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f
stbi__h2l_gamma_i	src/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	src/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	src/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f
stbi__hdr_gettoken	src/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f
stbi__hdr_info	src/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__hdr_load	src/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__hdr_test	src/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f
stbi__hdr_test_core	src/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s)$/;"	f
stbi__hdr_to_ldr	src/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f
stbi__high_bit	src/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f
stbi__huffman	src/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon11
stbi__idct_block	src/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__idct_simd	src/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__info_main	src/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__init_zdefaults	src/stb_image.h	/^static void stbi__init_zdefaults(void)$/;"	f
stbi__int16	src/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	src/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	src/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	src/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__jbias	src/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	src/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon12
stbi__jpeg_decode_block	src/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi_uc *dequant)$/;"	f
stbi__jpeg_decode_block_prog_ac	src/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f
stbi__jpeg_decode_block_prog_dc	src/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f
stbi__jpeg_dequantize	src/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi_uc *dequant)$/;"	f
stbi__jpeg_dezigzag	src/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	src/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f
stbi__jpeg_get_bit	src/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f
stbi__jpeg_get_bits	src/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f
stbi__jpeg_huff_decode	src/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f
stbi__jpeg_info	src/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_info_raw	src/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_load	src/stb_image.h	/^static unsigned char *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__jpeg_reset	src/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f
stbi__jpeg_test	src/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f
stbi__l2h_gamma	src/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	src/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	src/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f
stbi__load_flip	src/stb_image.h	/^static unsigned char *stbi__load_flip(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_main	src/stb_image.h	/^static unsigned char *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__loadf_main	src/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__malloc	src/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f
stbi__out_gif_code	src/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f
stbi__paeth	src/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f
stbi__parse_entropy_coded_data	src/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f
stbi__parse_huffman_block	src/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f
stbi__parse_png_file	src/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f
stbi__parse_uncomperssed_block	src/stb_image.h	/^static int stbi__parse_uncomperssed_block(stbi__zbuf *a)$/;"	f
stbi__parse_zlib	src/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f
stbi__parse_zlib_header	src/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f
stbi__pic_info	src/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pic_is4	src/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f
stbi__pic_load	src/stb_image.h	/^static stbi_uc *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp)$/;"	f
stbi__pic_load_core	src/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f
stbi__pic_packet	src/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon20
stbi__pic_test	src/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f
stbi__pic_test_core	src/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f
stbi__png	src/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon18
stbi__png_info	src/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__png_info_raw	src/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f
stbi__png_load	src/stb_image.h	/^static unsigned char *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__png_test	src/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f
stbi__pngchunk	src/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon17
stbi__pnm_getinteger	src/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f
stbi__pnm_info	src/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pnm_isdigit	src/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f
stbi__pnm_isspace	src/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f
stbi__pnm_load	src/stb_image.h	/^static stbi_uc *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__pnm_skip_whitespace	src/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f
stbi__pnm_test	src/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f
stbi__process_frame_header	src/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f
stbi__process_gif_raster	src/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f
stbi__process_marker	src/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f
stbi__process_scan_header	src/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f
stbi__psd_info	src/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__psd_load	src/stb_image.h	/^static stbi_uc *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__psd_test	src/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f
stbi__readval	src/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f
stbi__refill_buffer	src/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f
stbi__resample	src/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon14
stbi__resample_row_generic	src/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_h_2	src/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2	src/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2_simd	src/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_v_2	src/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__rewind	src/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f
stbi__setup_jpeg	src/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f
stbi__shiftsigned	src/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f
stbi__skip	src/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f
stbi__sse2_available	src/stb_image.h	/^static int stbi__sse2_available()$/;"	f
stbi__start_callbacks	src/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f
stbi__start_file	src/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f
stbi__start_mem	src/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f
stbi__stdio_callbacks	src/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	src/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f
stbi__stdio_read	src/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f
stbi__stdio_skip	src/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f
stbi__tga_info	src/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__tga_load	src/stb_image.h	/^static stbi_uc *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__tga_test	src/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f
stbi__uint16	src/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	src/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	src/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	src/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	src/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertically_flip_on_load	src/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__zbuf	src/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon16
stbi__zbuild_huffman	src/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, stbi_uc *sizelist, int num)$/;"	f
stbi__zdefault_distance	src/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdefault_length	src/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdist_base	src/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	src/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	src/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f
stbi__zget8	src/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f
stbi__zhuffman	src/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon15
stbi__zhuffman_decode	src/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zhuffman_decode_slowpath	src/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zlength_base	src/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	src/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	src/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f
stbi_convert_iphone_png_to_rgb	src/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f
stbi_failure_reason	src/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f
stbi_hdr_to_ldr_gamma	src/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	src/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f
stbi_image_free	src/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_info	src/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f
stbi_info_from_callbacks	src/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f
stbi_info_from_file	src/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f
stbi_info_from_memory	src/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f
stbi_inline	src/stb_image.h	581;"	d
stbi_inline	src/stb_image.h	583;"	d
stbi_inline	src/stb_image.h	586;"	d
stbi_io_callbacks	src/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon8
stbi_is_hdr	src/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_callbacks	src/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f
stbi_is_hdr_from_file	src/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	src/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	src/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	src/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f
stbi_load	src/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_callbacks	src/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	src/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	src/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf	src/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_callbacks	src/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	src/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	src/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_lrot	src/stb_image.h	617;"	d
stbi_lrot	src/stb_image.h	619;"	d
stbi_set_flip_vertically_on_load	src/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f
stbi_set_unpremultiply_on_load	src/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f
stbi_uc	src/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_write_bmp	src/stb_image_write.h	/^int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_write_hdr	src/stb_image_write.h	/^int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)$/;"	f
stbi_write_png	src/stb_image_write.h	/^int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)$/;"	f
stbi_write_png_to_mem	src/stb_image_write.h	/^unsigned char *stbi_write_png_to_mem(unsigned char *pixels, int stride_bytes, int x, int y, int n, int *out_len)$/;"	f
stbi_write_tga	src/stb_image_write.h	/^int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)$/;"	f
stbi_zlib_compress	src/stb_image_write.h	/^unsigned char * stbi_zlib_compress(unsigned char *data, int data_len, int *out_len, int quality)$/;"	f
stbi_zlib_decode_buffer	src/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	src/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	src/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize_headerflag	src/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f
stbi_zlib_decode_noheader_buffer	src/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	src/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbiw__ZHASH	src/stb_image_write.h	467;"	d
stbiw__crc32	src/stb_image_write.h	/^unsigned int stbiw__crc32(unsigned char *buffer, int len)$/;"	f
stbiw__linear_to_rgbe	src/stb_image_write.h	/^void stbiw__linear_to_rgbe(unsigned char *rgbe, float *linear)$/;"	f
stbiw__max	src/stb_image_write.h	243;"	d
stbiw__paeth	src/stb_image_write.h	/^static unsigned char stbiw__paeth(int a, int b, int c)$/;"	f
stbiw__sbcount	src/stb_image_write.h	399;"	d
stbiw__sbfree	src/stb_image_write.h	400;"	d
stbiw__sbgrow	src/stb_image_write.h	396;"	d
stbiw__sbgrowf	src/stb_image_write.h	/^static void *stbiw__sbgrowf(void **arr, int increment, int itemsize)$/;"	f
stbiw__sbm	src/stb_image_write.h	391;"	d
stbiw__sbmaybegrow	src/stb_image_write.h	395;"	d
stbiw__sbn	src/stb_image_write.h	392;"	d
stbiw__sbneedgrow	src/stb_image_write.h	394;"	d
stbiw__sbpush	src/stb_image_write.h	398;"	d
stbiw__sbraw	src/stb_image_write.h	390;"	d
stbiw__wp32	src/stb_image_write.h	587;"	d
stbiw__wpcrc	src/stb_image_write.h	/^static void stbiw__wpcrc(unsigned char **data, int len)$/;"	f
stbiw__wpng4	src/stb_image_write.h	586;"	d
stbiw__wptag	src/stb_image_write.h	588;"	d
stbiw__write_dump_data	src/stb_image_write.h	/^void stbiw__write_dump_data(FILE *f, int length, unsigned char *data)$/;"	f
stbiw__write_hdr_scanline	src/stb_image_write.h	/^void stbiw__write_hdr_scanline(FILE *f, int width, int comp, unsigned char *scratch, const float *scanline)$/;"	f
stbiw__write_run_data	src/stb_image_write.h	/^void stbiw__write_run_data(FILE *f, int length, unsigned char databyte)$/;"	f
stbiw__zhash	src/stb_image_write.h	/^static unsigned int stbiw__zhash(unsigned char *data)$/;"	f
stbiw__zlib_add	src/stb_image_write.h	456;"	d
stbiw__zlib_bitrev	src/stb_image_write.h	/^static int stbiw__zlib_bitrev(int code, int codebits)$/;"	f
stbiw__zlib_countm	src/stb_image_write.h	/^static unsigned int stbiw__zlib_countm(unsigned char *a, unsigned char *b, int limit)$/;"	f
stbiw__zlib_flush	src/stb_image_write.h	455;"	d
stbiw__zlib_flushf	src/stb_image_write.h	/^static unsigned char *stbiw__zlib_flushf(unsigned char *data, unsigned int *bitbuffer, int *bitcount)$/;"	f
stbiw__zlib_huff	src/stb_image_write.h	464;"	d
stbiw__zlib_huff1	src/stb_image_write.h	460;"	d
stbiw__zlib_huff2	src/stb_image_write.h	461;"	d
stbiw__zlib_huff3	src/stb_image_write.h	462;"	d
stbiw__zlib_huff4	src/stb_image_write.h	463;"	d
stbiw__zlib_huffa	src/stb_image_write.h	458;"	d
stbiw__zlib_huffb	src/stb_image_write.h	465;"	d
stbiw_uint32	src/stb_image_write.h	/^typedef unsigned int stbiw_uint32;$/;"	t
std	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^namespace std {$/;"	n
std	plugin/Eigen/src/StlSupport/StdDeque.h	/^namespace std {$/;"	n
std	plugin/Eigen/src/StlSupport/StdList.h	/^namespace std$/;"	n
std	plugin/Eigen/src/StlSupport/StdVector.h	/^namespace std {$/;"	n
std_fallback	plugin/Eigen/src/Core/MathFunctions.h	/^namespace std_fallback {$/;"	n	namespace:Eigen::internal
stdin_ready	examples/go.c	/^int stdin_ready()$/;"	f
stem_function	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^struct stem_function$/;"	s	namespace:Eigen::internal
step	include/darknet.h	/^    int step;$/;"	m	struct:network
step	plugin/Eigen/src/Eigenvalues/RealQZ.h	/^    inline void RealQZ<MatrixType>::step(Index f, Index l, Index iter)$/;"	f	class:Eigen::RealQZ
step	src/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon22
steps	include/darknet.h	/^    int   *steps;$/;"	m	struct:network
steps	include/darknet.h	/^    int steps;$/;"	m	struct:layer
stopbackward	include/darknet.h	/^    int stopbackward;$/;"	m	struct:layer
storage	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  } storage;$/;"	m	struct:Eigen::SluMatrix	typeref:struct:Eigen::SluMatrix::__anon35
storage_kind_to_evaluator_kind	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct storage_kind_to_evaluator_kind {$/;"	s	namespace:Eigen::internal
storage_kind_to_evaluator_kind	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_evaluator_kind<Sparse> {$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<Dense>                  { typedef DenseShape Shape;           };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<PermutationStorage>     { typedef PermutationShape Shape;     };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<SolverStorage>          { typedef SolverShape Shape;           };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/Core/CoreEvaluators.h	/^template<> struct storage_kind_to_shape<TranspositionsStorage>  { typedef TranspositionsShape Shape;  };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/Core/DiagonalMatrix.h	/^template<> struct storage_kind_to_shape<DiagonalShape> { typedef DiagonalShape Shape; };$/;"	s	namespace:Eigen::internal
storage_kind_to_shape	plugin/Eigen/src/SparseCore/SparseAssign.h	/^struct storage_kind_to_shape<Sparse> {$/;"	s	namespace:Eigen::internal
storePacket	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC EIGEN_ALWAYS_INLINE void storePacket(Index i, const Packet &p) const {$/;"	f	class:Eigen::internal::BlasLinearMapper
stride	include/darknet.h	/^    int stride;$/;"	m	struct:layer
stride	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index stride() const$/;"	f	class:Eigen::DenseCoeffsBase
stride	plugin/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_DEVICE_FUNC const Index stride() const { return m_stride; }$/;"	f	class:Eigen::internal::blas_data_mapper
string_to_board	examples/go.c	/^void string_to_board(char *s, float *board)$/;"	f
string_to_layer_type	src/parser.c	/^LAYER_TYPE string_to_layer_type(char * type)$/;"	f
strip	src/utils.c	/^void strip(char *s)$/;"	f
strip_char	src/utils.c	/^void strip_char(char *s, char bad)$/;"	f
structured_update	plugin/Eigen/src/SVD/BDCSVD.h	/^void BDCSVD<MatrixType>::structured_update(Block<MatrixXr,Dynamic,Dynamic> A, const MatrixXr &B, Index n1)$/;"	f	class:Eigen::BDCSVD
sub	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<-1>::Type sub() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	plugin/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<-1>::Type sub()$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	plugin/Eigen/src/Core/ProductEvaluators.h	/^  struct sub  { template<typename Dst, typename Src> void operator()(const Dst& dst, const Src& src) const { dst.const_cast_derived() -= src; } };$/;"	s	struct:Eigen::internal::generic_product_impl
subDiagonal	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::subDiagonal() const$/;"	f	class:Eigen::Tridiagonalization
subTo	plugin/Eigen/src/Core/EigenBase.h	/^  inline void subTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
subTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static EIGEN_STRONG_INLINE void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl_base
subTo	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static void subTo(Dst& dst, const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::generic_product_impl
subTo	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  static void subTo(Dest& dst, const Lhs& lhs, const Rhs& rhs, typename enable_if<is_same<typename evaluator_traits<Dest>::Shape,DenseShape>::value,int*>::type* = 0)$/;"	f	struct:Eigen::internal::generic_product_impl
subVector	plugin/Eigen/src/Core/VectorwiseOp.h	/^    SubVector subVector(Index i)$/;"	f	class:Eigen::VectorwiseOp
subVectors	plugin/Eigen/src/Core/VectorwiseOp.h	/^    Index subVectors() const$/;"	f	class:Eigen::VectorwiseOp
sub_assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename DstScalar,typename SrcScalar> struct sub_assign_op {$/;"	s	namespace:Eigen::internal
subdiagonalEntryIsNeglegible	plugin/Eigen/src/Eigenvalues/ComplexSchur.h	/^inline bool ComplexSchur<MatrixType>::subdiagonalEntryIsNeglegible(Index i)$/;"	f	class:Eigen::ComplexSchur
subdivisions	include/darknet.h	/^    int subdivisions;$/;"	m	struct:network
subs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return derived().subs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
subs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrix
subs	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
succ_high	src/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon12
succ_low	src/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon12
suffix	src/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon21
suicide_go	examples/go.c	/^int suicide_go(float *b, int p, int r, int c)$/;"	f
sum	plugin/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::sum() const$/;"	f	class:Eigen::DenseBase
sum	plugin/Eigen/src/Core/VectorwiseOp.h	/^    const SumReturnType sum() const$/;"	f	class:Eigen::VectorwiseOp
sum	plugin/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrix<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseMatrix
sum	plugin/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrixBase<Derived>::sum() const$/;"	f	class:Eigen::SparseMatrixBase
sum	plugin/Eigen/src/SparseCore/SparseRedux.h	/^SparseVector<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseVector
sum_array	src/utils.c	/^float sum_array(float *a, int n)$/;"	f
sumupDuplicates	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void sumupDuplicates() { collapseDuplicates(internal::scalar_sum_op<Scalar,Scalar>()); }$/;"	f	class:Eigen::SparseMatrix
supIndex	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Index supIndex() const { return m_supno; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
supToCol	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    StorageIndex* supToCol() { return m_sup_to_col; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
supToCol	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const StorageIndex* supToCol() const$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
super	plugin/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<1>::Type super() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	plugin/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<1>::Type super()$/;"	f	class:Eigen::internal::TridiagonalMatrix
supers	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return derived().supers(); }$/;"	f	class:Eigen::internal::BandMatrixBase
supers	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrix
supers	plugin/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
supno	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector supno; \/\/ Supernode number corresponding to this column (column to supernode mapping)$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
svd_precondition_2x2_block_to_be_real	plugin/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real {};$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	plugin/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, false>$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	plugin/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, true>$/;"	s	namespace:Eigen::internal
swap	plugin/Eigen/src/Core/DenseBase.h	/^    void swap(PlainObjectBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	plugin/Eigen/src/Core/DenseBase.h	/^    void swap(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& ) {}$/;"	f	class:Eigen::DenseStorage
swap	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }$/;"	f	class:Eigen::DenseStorage
swap	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }$/;"	f	class:Eigen::DenseStorage
swap	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }$/;"	f	class:Eigen::DenseStorage
swap	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC void swap(DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
swap	plugin/Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> & other)$/;"	f	class:Eigen::PlainObjectBase
swap	plugin/Eigen/src/Core/PlainObjectBase.h	/^    void swap(DenseBase<OtherDerived> const & other)$/;"	f	class:Eigen::PlainObjectBase
swap	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularViewImpl
swap	plugin/Eigen/src/Core/TriangularMatrix.h	/^    void swap(TriangularBase<OtherDerived> &other)$/;"	f	class:Eigen::TriangularViewImpl
swap	plugin/Eigen/src/Core/util/Memory.h	/^template<typename T> void swap(scoped_array<T> &a,scoped_array<T> &b)$/;"	f	namespace:Eigen::internal
swap	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> EIGEN_DEVICE_FUNC   void swap(T &a, T &b) { T tmp = b; b = a; a = tmp; }$/;"	f	namespace:numext
swap	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    void swap(CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
swap	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void swap(SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
swap	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseMatrix<Scalar,OtherOptions,StorageIndex>& other)$/;"	f	class:Eigen::SparseVector
swap	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseVector& other)$/;"	f	class:Eigen::SparseVector
swap_assign_op	plugin/Eigen/src/Core/functors/AssignmentFunctors.h	/^template<typename Scalar> struct swap_assign_op {$/;"	s	namespace:Eigen::internal
swap_binary	src/convolutional_layer.c	/^void swap_binary(convolutional_layer *l)$/;"	f
symbolic_last_tag	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^struct symbolic_last_tag {};$/;"	s	namespace:Eigen::placeholders::internal
symm_pack_lhs	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_lhs$/;"	s	namespace:Eigen::internal
symm_pack_rhs	plugin/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_rhs$/;"	s	namespace:Eigen::internal
sync	plugin/Eigen/src/Core/products/Parallelizer.h	/^  Index volatile sync;$/;"	m	struct:Eigen::internal::GemmParallelInfo
sync_args	src/network.c	/^} sync_args;$/;"	t	typeref:struct:__anon2	file:
sync_layer	src/network.c	/^void sync_layer(network **nets, int n, int j)$/;"	f
sync_layer_in_thread	src/network.c	/^pthread_t sync_layer_in_thread(network **nets, int n, int j)$/;"	f
sync_layer_thread	src/network.c	/^void *sync_layer_thread(void *ptr)$/;"	f
sync_nets	src/network.c	/^void sync_nets(network **nets, int n, int interval)$/;"	f
t	include/darknet.h	/^    int *t;$/;"	m	struct:network
t	include/darknet.h	/^    int t;$/;"	m	struct:__anon730
t	python/proverbot.py	/^t = predict_tactics(net, "+++++\\n", 10)$/;"	v
t_arg	src/convolutional_layer.c	/^struct t_arg{$/;"	s	file:
tail	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstFixedSegmentReturnType<N>::Type tail(Index n = N) const$/;"	f
tail	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedSegmentReturnType<N>::Type tail(Index n = N)$/;"	f
tail	plugin/Eigen/src/plugins/BlockMethods.h	/^tail(NType n) const$/;"	f
tail	plugin/Eigen/src/plugins/BlockMethods.h	/^tail(NType n)$/;"	f
take_affine_part	plugin/Eigen/src/Geometry/Transform.h	/^  typedef internal::transform_take_affine_part<Transform> take_affine_part;$/;"	t	class:Eigen::Transform
take_matrix_for_product	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product$/;"	s	namespace:Eigen::internal
take_matrix_for_product	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Mode, Options> >$/;"	s	namespace:Eigen::internal
take_matrix_for_product	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Projective, Options> >$/;"	s	namespace:Eigen::internal
tan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  tan(double x) { return cl::sycl::tan(x); }$/;"	f	namespace:Eigen::numext
tan	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   tan(float x) { return cl::sycl::tan(x); }$/;"	f	namespace:Eigen::numext
tan	plugin/Eigen/src/Core/MathFunctions.h	/^T tan(const T &x) {$/;"	f	namespace:Eigen::numext
tan	plugin/Eigen/src/Core/MathFunctions.h	/^double tan(const double &x) { return ::tan(x); }$/;"	f	namespace:Eigen::numext
tan	plugin/Eigen/src/Core/MathFunctions.h	/^float tan(const float &x) { return ::tanf(x); }$/;"	f	namespace:Eigen::numext
tan	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half tan(const half& a) {$/;"	f	namespace:Eigen::half_impl
tan	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tan() const$/;"	f
tanh	include/darknet.h	/^    int tanh;$/;"	m	struct:layer
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE double  tanh(double x) { return cl::sycl::tanh(x); }$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^EIGEN_ALWAYS_INLINE float   tanh(float x) { return cl::sycl::tanh(x); }$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^T tanh(const T &x) {$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^double tanh(const double &x) { return ::tanh(x); }$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^float tanh(const float &x) { return ::tanhf(x); }$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/MathFunctions.h	/^float tanh(float x) { return internal::generic_fast_tanh_float(x); }$/;"	f	namespace:Eigen::numext
tanh	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half tanh(const half& a) {$/;"	f	namespace:Eigen::half_impl
tanh	plugin/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tanh() const$/;"	f
tanh_activate	src/activations.h	/^static inline float tanh_activate(float x){return (exp(2*x)-1)\/(exp(2*x)+1);}$/;"	f
tanh_gradient	src/activations.h	/^static inline float tanh_gradient(float x){return 1-x*x;}$/;"	f
temp2_cpu	include/darknet.h	/^    float *temp2_cpu;$/;"	m	struct:layer
temp2_gpu	include/darknet.h	/^    float *temp2_gpu;$/;"	m	struct:layer
temp3_cpu	include/darknet.h	/^    float *temp3_cpu;$/;"	m	struct:layer
temp3_gpu	include/darknet.h	/^    float *temp3_gpu;$/;"	m	struct:layer
temp_cpu	include/darknet.h	/^    float *temp_cpu;$/;"	m	struct:layer
temp_gpu	include/darknet.h	/^    float *temp_gpu;$/;"	m	struct:layer
temperature	include/darknet.h	/^    float temperature;$/;"	m	struct:layer
ternary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit ternary_evaluator(const XprType& xpr) : m_d(xpr)$/;"	f	struct:Eigen::internal::ternary_evaluator
ternary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct ternary_evaluator<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3>, IndexBased, IndexBased>$/;"	s	namespace:Eigen::internal
ternary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	s	namespace:Eigen::internal
ternary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
ternary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
test_box	src/box.c	/^void test_box()$/;"	f
test_captcha	examples/captcha.c	/^void test_captcha(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_char_rnn	examples/rnn.c	/^void test_char_rnn(char *cfgfile, char *weightfile, int num, char *seed, float temp, int rseed, char *token_file)$/;"	f
test_cifar	examples/cifar.c	/^void test_cifar(char *filename, char *weightfile)$/;"	f
test_cifar_csv	examples/cifar.c	/^void test_cifar_csv(char *filename, char *weightfile)$/;"	f
test_cifar_csvtrain	examples/cifar.c	/^void test_cifar_csvtrain(char *cfg, char *weights)$/;"	f
test_cifar_multi	examples/cifar.c	/^void test_cifar_multi(char *filename, char *weightfile)$/;"	f
test_classifier	examples/classifier.c	/^void test_classifier(char *datacfg, char *cfgfile, char *weightfile, int target_layer)$/;"	f
test_coco	examples/coco.c	/^void test_coco(char *cfgfile, char *weightfile, char *filename, float thresh)$/;"	f
test_dcgan	examples/lsd.c	/^void test_dcgan(char *cfgfile, char *weightfile)$/;"	f
test_detector	examples/detector.c	/^void test_detector(char *datacfg, char *cfgfile, char *weightfile, char *filename, float thresh, float hier_thresh, char *outfile, int fullscreen)$/;"	f
test_dice	examples/dice.c	/^void test_dice(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_dintersect	src/box.c	/^void test_dintersect()$/;"	f
test_dunion	src/box.c	/^void test_dunion()$/;"	f
test_go	examples/go.c	/^void test_go(char *cfg, char *weights, int multi)$/;"	f
test_gpu_accuracy	src/gemm.c	/^void test_gpu_accuracy(int TA, int TB, int m, int k, int n)$/;"	f
test_gpu_blas	src/gemm.c	/^int test_gpu_blas()$/;"	f
test_lsd	examples/lsd.c	/^void test_lsd(char *cfg, char *weights, char *filename, int gray)$/;"	f
test_resize	src/image.c	/^void test_resize(char *filename)$/;"	f
test_super	examples/super.c	/^void test_super(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_tactic_rnn	examples/rnn.c	/^void test_tactic_rnn(char *cfgfile, char *weightfile, int num, float temp, int rseed, char *token_file)$/;"	f
test_tactic_rnn_multi	examples/rnn.c	/^void test_tactic_rnn_multi(char *cfgfile, char *weightfile, int num, float temp, int rseed, char *token_file)$/;"	f
test_tag	examples/tag.c	/^void test_tag(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_voxel	examples/voxel.c	/^void test_voxel(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_writing	examples/writing.c	/^void test_writing(char *cfgfile, char *weightfile, char *filename)$/;"	f
test_yolo	examples/yolo.c	/^void test_yolo(char *cfgfile, char *weightfile, char *filename, float thresh)$/;"	f
thenMatrix	plugin/Eigen/src/Core/Select.h	/^    inline EIGEN_DEVICE_FUNC const ThenMatrixType& thenMatrix() const$/;"	f	class:Eigen::Select
thickness	plugin/Eigen/src/OrderingMethods/Eigen_Colamd.h	/^    IndexType thickness ; \/* number of original columns represented by this *\/$/;"	m	union:internal::colamd_col::__anon122
thread_gemm	src/convolutional_layer.c	/^void *thread_gemm(struct t_arg *arg)$/;"	f
threads	include/darknet.h	/^    int threads;$/;"	m	struct:load_args
threat_classifier	examples/classifier.c	/^void threat_classifier(char *datacfg, char *cfgfile, char *weightfile, int cam_index, const char *filename)$/;"	f
three_way_max	src/image.c	/^float three_way_max(float a, float b, float c)$/;"	f
three_way_min	src/image.c	/^float three_way_min(float a, float b, float c)$/;"	f
thresh	include/darknet.h	/^    float thresh;$/;"	m	struct:layer
threshold	plugin/Eigen/src/LU/FullPivLU.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivLU
threshold	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::ColPivHouseholderQR
threshold	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  RealScalar threshold() const { return m_cpqr.threshold(); }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
threshold	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivHouseholderQR
threshold	plugin/Eigen/src/SVD/SVDBase.h	/^  RealScalar threshold() const$/;"	f	class:Eigen::SVDBase
threshold_image	src/image.c	/^image threshold_image(image im, float thresh)$/;"	f
throw_std_bad_alloc	plugin/Eigen/src/Core/util/Memory.h	/^inline void throw_std_bad_alloc()$/;"	f	namespace:Eigen::internal
tile_data	src/data.c	/^data *tile_data(data orig, int divs, int size)$/;"	f
tile_images	src/image.c	/^image tile_images(image a, image b, int dx)$/;"	f
time_gpu	src/gemm.c	/^void time_gpu(int TA, int TB, int m, int k, int n)$/;"	f
time_gpu_random_matrix	src/gemm.c	/^void time_gpu_random_matrix(int TA, int TB, int m, int k, int n)$/;"	f
time_random_matrix	src/gemm.c	/^void time_random_matrix(int TA, int TB, int m, int k, int n)$/;"	f
time_steps	include/darknet.h	/^    int time_steps;$/;"	m	struct:network
time_steps	src/parser.c	/^    int time_steps;$/;"	m	struct:size_params	file:
tinyness_before	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool tinyness_before = false;$/;"	m	struct:std::numeric_limits
tisnan	src/region_layer.c	/^float tisnan(float x)$/;"	f
toDense	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    DenseMatrixType toDense() const$/;"	f	class:Eigen::SparseMatrixBase
toDenseMatrix	plugin/Eigen/src/Core/BandMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::internal::BandMatrixBase
toDenseMatrix	plugin/Eigen/src/Core/DiagonalMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::DiagonalBase
toDenseMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::InverseImpl
toDenseMatrix	plugin/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::PermutationBase
toDenseMatrix	plugin/Eigen/src/Core/TriangularMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::TriangularBase
toQMatrix	plugin/Eigen/src/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim,Mode,Options>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQTransform	plugin/Eigen/src/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim,Mode,Options>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toRotationMatrix	plugin/Eigen/src/Geometry/AngleAxis.h	/^EIGEN_DEVICE_FUNC AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	plugin/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::toRotationMatrix(void) const$/;"	f	class:Eigen::QuaternionBase
toRotationMatrix	plugin/Eigen/src/Geometry/Rotation2D.h	/^EIGEN_DEVICE_FUNC Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	plugin/Eigen/src/Geometry/RotationBase.h	/^    EIGEN_DEVICE_FUNC inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	plugin/Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline Matrix<Scalar,2,2> toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen::internal
toRotationMatrix	plugin/Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline Matrix<Scalar,Dim,Dim> toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen::internal
toRotationMatrix	plugin/Eigen/src/Geometry/RotationBase.h	/^EIGEN_DEVICE_FUNC static inline const MatrixBase<OtherDerived>& toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen::internal
todo	src/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon12
tolerance	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar tolerance() const { return m_tolerance; }$/;"	f	class:Eigen::IterativeSolverBase
top	include/darknet.h	/^    float left, right, top, bottom;$/;"	m	struct:__anon738
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topLeftCorner() const$/;"	f
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topLeftCorner(Index cRows, Index cCols) const$/;"	f
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topLeftCorner()$/;"	f
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^topLeftCorner(NRowsType cRows, NColsType cCols) const$/;"	f
topLeftCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^topLeftCorner(NRowsType cRows, NColsType cCols)$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topRightCorner() const$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline const typename ConstFixedBlockXpr<CRows,CCols>::Type topRightCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topRightCorner()$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename FixedBlockXpr<CRows,CCols>::Type topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^topRightCorner(NRowsType cRows, NColsType cCols) const$/;"	f
topRightCorner	plugin/Eigen/src/plugins/BlockMethods.h	/^topRightCorner(NRowsType cRows, NColsType cCols)$/;"	f
topRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type topRows(Index n = N) const$/;"	f
topRows	plugin/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type topRows(Index n = N)$/;"	f
topRows	plugin/Eigen/src/plugins/BlockMethods.h	/^topRows(NRowsType n) const$/;"	f
topRows	plugin/Eigen/src/plugins/BlockMethods.h	/^topRows(NRowsType n)$/;"	f
top_k	src/utils.c	/^void top_k(float *a, int n, int k, int *index)$/;"	f
top_predictions	src/network.c	/^void top_predictions(network *net, int k, int *index)$/;"	f
total_compares	src/compare.c	/^int total_compares = 0;$/;"	v
total_count	examples/go.c	/^    int total_count;$/;"	m	struct:mcts_tree	file:
tq	src/stb_image.h	/^      int tq;$/;"	m	struct:__anon12::__anon13
trace	plugin/Eigen/src/Core/Redux.h	/^MatrixBase<Derived>::trace() const$/;"	f	class:Eigen::MatrixBase
train	include/darknet.h	/^    int train;$/;"	m	struct:network
train_args	src/network.c	/^} train_args;$/;"	t	typeref:struct:__anon1	file:
train_attention	examples/attention.c	/^void train_attention(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_captcha	examples/captcha.c	/^void train_captcha(char *cfgfile, char *weightfile)$/;"	f
train_char_rnn	examples/rnn.c	/^void train_char_rnn(char *cfgfile, char *weightfile, char *filename, int clear, int tokenized)$/;"	f
train_cifar	examples/cifar.c	/^void train_cifar(char *cfgfile, char *weightfile)$/;"	f
train_cifar_distill	examples/cifar.c	/^void train_cifar_distill(char *cfgfile, char *weightfile)$/;"	f
train_classifier	examples/classifier.c	/^void train_classifier(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_coco	examples/coco.c	/^void train_coco(char *cfgfile, char *weightfile)$/;"	f
train_colorizer	examples/lsd.c	/^void train_colorizer(char *cfg, char *weight, char *acfg, char *aweight, int clear, int display)$/;"	f
train_compare	src/compare.c	/^void train_compare(char *cfgfile, char *weightfile)$/;"	f
train_dcgan	examples/lsd.c	/^void train_dcgan(char *cfg, char *weight, char *acfg, char *aweight, int clear, int display, char *train_images)$/;"	f
train_detector	examples/detector.c	/^void train_detector(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_dice	examples/dice.c	/^void train_dice(char *cfgfile, char *weightfile)$/;"	f
train_go	examples/go.c	/^void train_go(char *cfgfile, char *weightfile, char *filename, int *gpus, int ngpus, int clear)$/;"	f
train_network	src/network.c	/^float train_network(network *net, data d)$/;"	f
train_network_datum	src/network.c	/^float train_network_datum(network *net)$/;"	f
train_network_in_thread	src/network.c	/^pthread_t train_network_in_thread(network *net, data d, float *err)$/;"	f
train_network_sgd	src/network.c	/^float train_network_sgd(network *net, data d, int n)$/;"	f
train_networks	src/network.c	/^float train_networks(network **nets, int n, data d, int interval)$/;"	f
train_regressor	examples/regressor.c	/^void train_regressor(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear)$/;"	f
train_segmenter	examples/segmenter.c	/^void train_segmenter(char *datacfg, char *cfgfile, char *weightfile, int *gpus, int ngpus, int clear, int display)$/;"	f
train_super	examples/super.c	/^void train_super(char *cfgfile, char *weightfile, int clear)$/;"	f
train_swag	examples/swag.c	/^void train_swag(char *cfgfile, char *weightfile)$/;"	f
train_tag	examples/tag.c	/^void train_tag(char *cfgfile, char *weightfile, int clear)$/;"	f
train_thread	src/network.c	/^void *train_thread(void *ptr)$/;"	f
train_vid_rnn	examples/rnn_vid.c	/^void train_vid_rnn(char *cfgfile, char *weightfile)$/;"	f
train_voxel	examples/voxel.c	/^void train_voxel(char *cfgfile, char *weightfile)$/;"	f
train_writing	examples/writing.c	/^void train_writing(char *cfgfile, char *weightfile)$/;"	f
train_yolo	examples/yolo.c	/^void train_yolo(char *cfgfile, char *weightfile)$/;"	f
traits	plugin/Eigen/src/Core/Array.h	/^struct traits<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > : traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/ArrayWrapper.h	/^struct traits<ArrayWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/ArrayWrapper.h	/^struct traits<MatrixWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Block.h	/^struct traits<Block<XprType, BlockRows, BlockCols, InnerPanel> > : traits<XprType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct traits<EvalToTemp<ArgType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CwiseBinaryOp.h	/^struct traits<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CwiseNullaryOp.h	/^struct traits<CwiseNullaryOp<NullaryOp, PlainObjectType> > : traits<PlainObjectType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CwiseTernaryOp.h	/^struct traits<CwiseTernaryOp<TernaryOp, Arg1, Arg2, Arg3> > {$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CwiseUnaryOp.h	/^struct traits<CwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/CwiseUnaryView.h	/^struct traits<CwiseUnaryView<ViewOp, MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Diagonal.h	/^struct traits<Diagonal<MatrixType,DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalMatrix<_Scalar,SizeAtCompileTime,MaxSizeAtCompileTime> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalWrapper<_DiagonalVectorType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^struct traits<ForceAlignedAccess<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/IndexedView.h	/^struct traits<IndexedView<XprType, RowIndices, ColIndices> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Inverse.h	/^struct traits<Inverse<XprType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Map.h	/^struct traits<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Matrix.h	/^struct traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/NestByValue.h	/^struct traits<NestByValue<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Product.h	/^struct traits<Product<Lhs, Rhs, Option> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Ref.h	/^struct traits<Ref<_PlainObjectType, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Ref.h	/^struct traits<RefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Replicate.h	/^struct traits<Replicate<MatrixType,RowFactor,ColFactor> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/ReturnByValue.h	/^struct traits<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Reverse.h	/^struct traits<Reverse<MatrixType, Direction> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Select.h	/^struct traits<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/SelfAdjointView.h	/^struct traits<SelfAdjointView<MatrixType, UpLo> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Solve.h	/^struct traits<Solve<Decomposition, RhsType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/SolveTriangular.h	/^struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Transpose.h	/^struct traits<Transpose<MatrixType> > : public traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Transpositions.h	/^struct traits<Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Transpositions.h	/^struct traits<Transpose<TranspositionsBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Transpositions.h	/^struct traits<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,_StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/Transpositions.h	/^struct traits<TranspositionsWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct traits<TriangularView<MatrixType, _Mode> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/VectorBlock.h	/^struct traits<VectorBlock<VectorType, Size> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/VectorwiseOp.h	/^struct traits<PartialReduxExpr<MatrixType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename T> struct traits<const T> : traits<T> {};$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^struct traits<HessenbergDecompositionMatrixHReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct traits<TridiagonalizationMatrixTReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/AngleAxis.h	/^template<typename _Scalar> struct traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct traits<Homogeneous<MatrixType,Direction> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<const Quaternion<_Scalar>, _Options> > : traits<Quaternion<_Scalar, (int(_Options)&Aligned)==Aligned ? AutoAlign : DontAlign> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Quaternion.h	/^struct traits<Quaternion<_Scalar,_Options> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Rotation2D.h	/^template<typename _Scalar> struct traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Geometry/Transform.h	/^struct traits<Transform<_Scalar,_Dim,_Mode,_Options> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/Householder/HouseholderSequence.h	/^struct traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct traits<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct traits<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^struct traits<LeastSquaresConjugateGradient<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/IterativeLinearSolvers/SolveWithGuess.h	/^struct traits<SolveWithGuess<Decomposition, RhsType, GuessType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> struct traits<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> struct traits<PartialPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<ColPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^struct traits<CompleteOrthogonalDecomposition<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^struct traits<FullPivHouseholderQRMatrixQReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> struct traits<FullPivHouseholderQR<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType, typename Derived> struct traits<SPQR_QProduct<SPQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    template <typename SPQRType> struct traits<SPQRMatrixQTransposeReturnType<SPQRType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SVD/BDCSVD.h	/^struct traits<BDCSVD<_MatrixType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SVD/JacobiSVD.h	/^struct traits<JacobiSVD<_MatrixType,QRPreconditioner> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialCholesky<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo, typename _Ordering> struct traits<SimplicialLLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType,int _UpLo, typename _Ordering> struct traits<SimplicialLDLT<_MatrixType,_UpLo,_Ordering> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct traits<MappedSparseMatrix<_Scalar, _Flags, _StorageIndex> > : traits<SparseMatrix<_Scalar, _Flags, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^struct traits<SparseCompressedBase<Derived> > : traits<Derived>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseMap.h	/^struct traits<Map<const SparseMatrix<MatScalar,MatOptions,MatIndex>, Options, StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<SparseMatrix<_Scalar, _Options, _StorageIndex>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<const SparseMatrix<_Scalar, _Options, _StorageIndex>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<SparseMatrix<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<SparseVector<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<const SparseMatrix<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct traits<Ref<const SparseVector<MatScalar,MatOptions,MatIndex>, _Options, _StrideType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseRef.h	/^struct traits<SparseRefBase<Derived> > : public traits<Derived> {};$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointView<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSymmetricPermutationProduct<MatrixType,Mode> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseVector.h	/^struct traits<SparseVector<_Scalar, _Options, _StorageIndex> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseCore/SparseView.h	/^struct traits<SparseView<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType, typename Derived> struct traits<SparseQR_QProduct<SparseQRType, Derived> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/SparseQR/SparseQR.h	/^  template <typename SparseQRType> struct traits<SparseQRMatrixQTransposeReturnType<SparseQRType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/misc/Image.h	/^struct traits<image_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	plugin/Eigen/src/misc/Kernel.h	/^struct traits<kernel_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
transform	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::Hyperplane
transform	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline ParametrizedLine& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::ParametrizedLine
transform	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC inline ParametrizedLine& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::ParametrizedLine
transform_construct_from_matrix	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_make_affine	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_make_affine$/;"	s	namespace:Eigen::internal
transform_make_affine	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_make_affine<AffineCompact>$/;"	s	namespace:Eigen::internal
transform_product_result	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_product_result$/;"	s	namespace:Eigen::internal
transform_right_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 0, RhsCols>$/;"	s	namespace:Eigen::internal
transform_right_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 1, RhsCols>$/;"	s	namespace:Eigen::internal
transform_right_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2, 1> \/\/ rhs is a vector of size Dim$/;"	s	namespace:Eigen::internal
transform_right_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2, RhsCols>$/;"	s	namespace:Eigen::internal
transform_take_affine_part	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_take_affine_part<Transform<Scalar,Dim,AffineCompact, Options> > {$/;"	s	namespace:Eigen::internal
transform_take_affine_part	plugin/Eigen/src/Geometry/Transform.h	/^template<typename TransformType> struct transform_take_affine_part {$/;"	s	namespace:Eigen::internal
transform_traits	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_traits$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,AffineCompact,LhsOptions>,Transform<Scalar,Dim,Projective,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,false >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	plugin/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,Projective,LhsOptions>,Transform<Scalar,Dim,AffineCompact,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
translate	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline AlignedBox& translate(const MatrixBase<Derived>& a_t)$/;"	f	class:Eigen::AlignedBox
translate	plugin/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translate_array	src/utils.c	/^void translate_array(float *a, int n, float s)$/;"	f
translate_data_rows	src/data.c	/^void translate_data_rows(data d, float s)$/;"	f
translate_image	src/image.c	/^void translate_image(image m, float s)$/;"	f
translate_image_channel	src/image.c	/^void translate_image_channel(image im, int c, float v)$/;"	f
translation	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline ConstTranslationPart translation() const { return ConstTranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline TranslationPart translation() { return TranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC VectorType& translation() { return m_coeffs; }$/;"	f	class:Eigen::Translation
translation	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC const VectorType& translation() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
translationExt	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt()$/;"	f	class:Eigen::Transform
translationExt	plugin/Eigen/src/Geometry/Transform.h	/^  EIGEN_DEVICE_FUNC inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt() const$/;"	f	class:Eigen::Transform
transparent	src/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon22
transpose	plugin/Eigen/src/Core/PermutationMatrix.h	/^    inline InverseReturnType transpose() const$/;"	f	class:Eigen::PermutationBase
transpose	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline TransposeReturnType transpose()$/;"	f	class:Eigen::SelfAdjointView
transpose	plugin/Eigen/src/Core/SelfAdjointView.h	/^    inline const ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::SelfAdjointView
transpose	plugin/Eigen/src/Core/SolverBase.h	/^    inline ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::SolverBase
transpose	plugin/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose() const$/;"	f	class:Eigen::DenseBase
transpose	plugin/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose()$/;"	f	class:Eigen::DenseBase
transpose	plugin/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> transpose() const$/;"	f	class:Eigen::TranspositionsBase
transpose	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline TransposeReturnType transpose()$/;"	f	class:Eigen::TriangularView
transpose	plugin/Eigen/src/Core/TriangularMatrix.h	/^    inline const ConstTransposeReturnType transpose() const$/;"	f	class:Eigen::TriangularView
transpose	plugin/Eigen/src/Householder/HouseholderSequence.h	/^    TransposeReturnType transpose() const$/;"	f	class:Eigen::HouseholderSequence
transpose	plugin/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation transpose() const { using numext::conj; return JacobiRotation(m_c, -conj(m_s)); }$/;"	f	class:Eigen::JacobiRotation
transpose	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^  SPQRMatrixQTransposeReturnType<SPQRType> transpose() const$/;"	f	struct:Eigen::SPQRMatrixQReturnType
transpose	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    TransposeReturnType transpose() { return TransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const ConstTransposeReturnType transpose() const { return ConstTransposeReturnType(derived()); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	plugin/Eigen/src/SparseQR/SparseQR.h	/^  SparseQRMatrixQTransposeReturnType<SparseQRType> transpose() const$/;"	f	struct:Eigen::SparseQRMatrixQReturnType
transposeInPlace	plugin/Eigen/src/Core/Transpose.h	/^EIGEN_DEVICE_FUNC inline void DenseBase<Derived>::transposeInPlace()$/;"	f	class:Eigen::DenseBase
transpose_image	src/image.c	/^void transpose_image(image im)$/;"	f
transpose_matrix	src/parser.c	/^void transpose_matrix(float *a, int rows, int cols)$/;"	f
transposition_matrix_product	plugin/Eigen/src/Core/ProductEvaluators.h	/^struct transposition_matrix_product$/;"	s	namespace:Eigen::internal
transpositionsP	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline const TranspositionType& transpositionsP() const$/;"	f	class:Eigen::LDLT
traps	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  static const bool traps = true;$/;"	m	struct:std::numeric_limits
tree	include/darknet.h	/^} tree;$/;"	t	typeref:struct:__anon725
treePostorder	plugin/Eigen/src/SparseCore/SparseColEtree.h	/^void treePostorder(typename IndexVector::Scalar n, IndexVector& parent, IndexVector& post)$/;"	f	namespace:Eigen::internal
triangularView	plugin/Eigen/src/Core/SelfAdjointView.h	/^    triangularView() const$/;"	f	class:Eigen::SelfAdjointView
triangularView	plugin/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::MatrixBase
triangularView	plugin/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView()$/;"	f	class:Eigen::MatrixBase
triangularView	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^SparseMatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::SparseMatrixBase
triangular_assignment_loop	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, 0, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_loop	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_loop<Kernel, Mode, Dynamic, SetOpposite>$/;"	s	namespace:Eigen::internal
triangular_dense_assignment_kernel	plugin/Eigen/src/Core/SelfAdjointView.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	plugin/Eigen/src/Core/SelfAdjointView.h	/^class triangular_dense_assignment_kernel<UpLo,SelfAdjoint,SetOpposite,DstEvaluatorTypeT,SrcEvaluatorTypeT,Functor,Version>$/;"	c	namespace:Eigen::internal
triangular_dense_assignment_kernel	plugin/Eigen/src/Core/TriangularMatrix.h	/^  EIGEN_DEVICE_FUNC triangular_dense_assignment_kernel(DstEvaluatorType &dst, const SrcEvaluatorType &src, const Functor &func, DstXprType& dstExpr)$/;"	f	class:Eigen::internal::triangular_dense_assignment_kernel
triangular_dense_assignment_kernel	plugin/Eigen/src/Core/TriangularMatrix.h	/^class triangular_dense_assignment_kernel : public generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>$/;"	c	namespace:Eigen::internal
triangular_matrix_vector_product	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product_trmv	plugin/Eigen/src/Core/products/TriangularMatrixVector_BLAS.h	/^struct triangular_matrix_vector_product_trmv :$/;"	s	namespace:Eigen::internal
triangular_product_impl	plugin/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct triangular_product_impl<Mode,LhsIsTriangular,Lhs,false,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,false,Lhs,true,Rhs,false>$/;"	s	namespace:Eigen::internal
triangular_product_impl	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_product_impl<Mode,true,Lhs,false,Rhs,true>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	plugin/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,Side,Mode,Conjugate,TriStorageOrder,RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_retval	plugin/Eigen/src/Core/SolveTriangular.h	/^  triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solve_retval
triangular_solve_retval	plugin/Eigen/src/Core/SolveTriangular.h	/^template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval$/;"	s	namespace:Eigen::internal
triangular_solve_vector	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	plugin/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheLeft,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheRight,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,LoopIndex,Size,false> {$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	plugin/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,LoopIndex,Size,true> {$/;"	s	namespace:Eigen::internal
tribb_kernel	plugin/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct tribb_kernel$/;"	s	namespace:Eigen::internal
tridiagonal_qr_step	plugin/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& matA, CoeffVectorType& hCoeffs)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace_selector	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,1,IsComplex>$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	plugin/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,3,false>$/;"	s	namespace:Eigen::internal
trmv_selector	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,ColMajor>$/;"	s	namespace:Eigen::internal
trmv_selector	plugin/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<int Mode> struct trmv_selector<Mode,RowMajor>$/;"	s	namespace:Eigen::internal
trsolve_traits	plugin/Eigen/src/Core/SolveTriangular.h	/^class trsolve_traits$/;"	c	namespace:Eigen::internal
true_type	plugin/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
truth	include/darknet.h	/^    float *truth;$/;"	m	struct:network
truth	include/darknet.h	/^    int truth;$/;"	m	struct:layer
truth_gpu	include/darknet.h	/^    float *truth_gpu;$/;"	m	struct:network
truths	include/darknet.h	/^    int truths;$/;"	m	struct:layer
truths	include/darknet.h	/^    int truths;$/;"	m	struct:network
try_classifier	examples/classifier.c	/^void try_classifier(char *datacfg, char *cfgfile, char *weightfile, char *filename, int layer_num)$/;"	f
twistedBy	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseSymmetricPermutationProduct<Derived,Upper|Lower> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseMatrixBase
twistedBy	plugin/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct<_MatrixTypeNested,Mode> twistedBy(const PermutationMatrix<Dynamic,Dynamic,StorageIndex>& perm) const$/;"	f	class:Eigen::SparseSelfAdjointView
type	include/darknet.h	/^    LAYER_TYPE type;$/;"	m	struct:layer
type	include/darknet.h	/^    data_type type;$/;"	m	struct:load_args
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^                            Symbolic::ValueExpr<> > type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^                           > type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef ArithmeticSequence<Index,typename make_size_type<SizeType>::type,IncrType> type;$/;"	t	struct:Eigen::internal::IndexedViewCompatibleType
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef FixedInt<(SizeType::value-1)*IncrType::value> type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type_aux
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef FixedInt<-N> type;$/;"	t	struct:Eigen::internal::aseq_negate
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef Index type;$/;"	t	struct:Eigen::internal::aseq_negate
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef Index type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef Index type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type_aux
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef Symbolic::AddExpr<FirstType,Symbolic::ValueExpr<Aux> > type;$/;"	t	struct:Eigen::internal::aseq_reverse_first_type
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef typename cleanup_index_type<T,DynamicIndex>::type type;$/;"	t	struct:Eigen::internal::cleanup_seq_incr
type	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  typedef typename internal::conditional<Symbolic::is_symbolic<T>::value, Index, T>::type type;$/;"	t	struct:Eigen::internal::make_size_type
type	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^  typedef typename conditional<is_arithmetic<T>::value, T, typename add_const_on_value_type<T>::type>::type type;$/;"	t	struct:Eigen::internal::add_const_on_value_type_if_arithmetic
type	plugin/Eigen/src/Core/GenericPacketMath.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::conj_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::expm1_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::log1p_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::random_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::round_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::imag_ref_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::real_ref_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs2_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::arg_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::hypot_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::imag_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::norm1_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::real_retval
type	plugin/Eigen/src/Core/MathFunctions.h	/^  typedef typename T::Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	plugin/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	t	struct:Eigen::internal::always_void
type	plugin/Eigen/src/Core/MatrixBase.h	/^      typedef Matrix<Scalar,MatrixBase::RowsAtCompileTime,MatrixBase::ColsAtCompileTime> type;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
type	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedAlignedMapType
type	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, AlignedMax, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstAlignedMapType
type	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstMapType
type	plugin/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedMapType
type	plugin/Eigen/src/Core/Ref.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	plugin/Eigen/src/Core/ReturnByValue.h	/^  typedef typename traits<Derived>::ReturnType type;$/;"	t	struct:Eigen::internal::nested_eval
type	plugin/Eigen/src/Core/SolverBase.h	/^  typedef SolverBase<Derived> type;$/;"	t	struct:Eigen::internal::generic_xpr_base
type	plugin/Eigen/src/Core/Transpose.h	/^  typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;$/;"	t	struct:Eigen::internal::TransposeImpl_base
type	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet2cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  typedef Packet4cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet4d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^  typedef Packet8f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet16f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef Packet8d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef double type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef float type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  typedef int type;$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef double2 type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^  typedef float4 type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^  typedef half2 type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	plugin/Eigen/src/Core/functors/BinaryFunctors.h	/^  typedef bool type;$/;"	t	struct:Eigen::internal::result_of
type	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef ComplexScalar type(ComplexScalar, int);$/;"	t	struct:Eigen::internal::stem_function
type	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  typedef AllRange<XprSize> type;$/;"	t	struct:Eigen::internal::IndexedViewCompatibleType
type	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  typedef SingleRange type;$/;"	t	struct:Eigen::internal::IndexedViewCompatibleType
type	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::IndexedViewCompatibleType
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int DynamicKey> struct cleanup_index_type<VariableAndFixedInt<DynamicKey>, DynamicKey> { typedef Index type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<FixedInt<N> (*)(), DynamicKey> { typedef FixedInt<N> type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<VariableAndFixedInt<N>, DynamicKey> { typedef FixedInt<N> type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<int N, int DynamicKey> struct cleanup_index_type<std::integral_constant<int,N>, DynamicKey> { typedef FixedInt<N> type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T, int DynamicKey=Dynamic, typename EnableIf=void> struct cleanup_index_type { typedef T type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/IntegralConstant.h	/^template<typename T, int DynamicKey> struct cleanup_index_type<T,DynamicKey,typename internal::enable_if<internal::is_integral<T>::value>::type> { typedef Index type; };$/;"	t	struct:Eigen::internal::cleanup_index_type
type	plugin/Eigen/src/Core/util/Meta.h	/^    typedef typename binary_result_of_select<Func, ArgType0, ArgType1, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	plugin/Eigen/src/Core/util/Meta.h	/^    typedef typename ternary_result_of_select<Func, ArgType0, ArgType1, ArgType2, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	plugin/Eigen/src/Core/util/Meta.h	/^    typedef typename unary_result_of_select<Func, ArgType, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	plugin/Eigen/src/Core/util/Meta.h	/^  typedef typename remove_all<type1>::type type;$/;"	t	struct:Eigen::internal::result_of
type	plugin/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	t	struct:Eigen::internal::conditional
type	plugin/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	t	struct:Eigen::internal::conditional
type	plugin/Eigen/src/Core/util/Meta.h	/^struct ternary_result_of_select {typedef typename internal::remove_all<ArgType0>::type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef typename internal::remove_all<ArgType>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	t	struct:Eigen::internal::remove_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	t	struct:Eigen::internal::remove_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	t	struct:Eigen::internal::add_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	t	struct:Eigen::internal::add_const
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	plugin/Eigen/src/Core/util/Meta.h	/^{ typedef T type; };$/;"	t	struct:Eigen::internal::enable_if
type	plugin/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1)>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	plugin/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1,ArgType2)>::type type;};$/;"	t	struct:Eigen::internal::ternary_result_of_select
type	plugin/Eigen/src/Core/util/XprHelper.h	/^  typedef PromotedType type;$/;"	t	struct:Eigen::internal::promote_scalar_arg_unsupported
type	plugin/Eigen/src/Core/util/XprHelper.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::promote_scalar_arg
type	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef MatrixOrTransformType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename TransformType::MatrixType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	plugin/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename internal::add_const<typename TransformType::ConstAffinePart>::type type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	plugin/Eigen/src/Geometry/Scaling.h	/^    typedef Transform <Scalar, Dim, NewMode> type;$/;"	t	struct:Eigen::internal::uniformscaling_times_affine_returntype
type	plugin/Eigen/src/Geometry/Umeyama.h	/^  > type;$/;"	t	struct:Eigen::internal::umeyama_transform_matrix_type
type	plugin/Eigen/src/LU/PartialPivLU.h	/^  typedef Derived type;$/;"	t	struct:Eigen::internal::enable_if_ref
type	plugin/Eigen/src/SparseCore/SparseRef.h	/^    typedef typename internal::conditional<MatchAtCompileTime,internal::true_type,internal::false_type>::type type;$/;"	t	struct:Eigen::internal::traits::match
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef Matrix<_Scalar, 1, 1> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::plain_matrix_type
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, ColMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, RowMajor, _StorageIndex> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  typedef SparseMatrixBase<Derived> type;$/;"	t	struct:Eigen::internal::generic_xpr_base
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,SelfAdjointShape> { typedef SparseSelfAdjointShape type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type	plugin/Eigen/src/SparseCore/SparseUtil.h	/^template<> struct glue_shapes<SparseShape,TriangularShape > { typedef SparseTriangularShape  type;  };$/;"	t	struct:Eigen::internal::glue_shapes
type	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^                      typename IvcColType<ColIndices>::type> type;$/;"	t	struct:EIGEN_INDEXED_VIEW_METHOD_TYPE
type	src/parser.c	/^    char *type;$/;"	m	struct:__anon6	file:
type	src/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon17
type	src/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon20
type1	plugin/Eigen/src/Core/util/Meta.h	/^  typedef typename std::result_of<T>::type type1;$/;"	t	struct:Eigen::internal::result_of
type_casting_traits	plugin/Eigen/src/Core/GenericPacketMath.h	/^template <typename Src, typename Tgt> struct type_casting_traits {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/AVX/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<Eigen::half, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<float, Eigen::half> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<float, half> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/CUDA/TypeCasting.h	/^struct type_casting_traits<half, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<double, float> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, double> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<float, int> {$/;"	s	namespace:Eigen::internal
type_casting_traits	plugin/Eigen/src/Core/arch/SSE/TypeCasting.h	/^struct type_casting_traits<int, float> {$/;"	s	namespace:Eigen::internal
u	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  unsigned int u;$/;"	m	union:Eigen::half_impl::FP32
ucol	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  ScalarVector  ucol; \/\/ nonzero values of U ordered by columns $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
uf	include/darknet.h	/^    struct layer *uf;$/;"	m	struct:layer	typeref:struct:layer::layer
ug	include/darknet.h	/^    struct layer *ug;$/;"	m	struct:layer	typeref:struct:layer::layer
uh	include/darknet.h	/^    struct layer *uh;$/;"	m	struct:layer	typeref:struct:layer::layer
ui	include/darknet.h	/^    struct layer *ui;$/;"	m	struct:layer	typeref:struct:layer::layer
ui	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  uint32_t ui[4];$/;"	m	union:Eigen::internal::__anon612
ul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  uint64_t ul[2];$/;"	m	union:Eigen::internal::__anon612
umeyama	plugin/Eigen/src/Geometry/Umeyama.h	/^umeyama(const MatrixBase<Derived>& src, const MatrixBase<OtherDerived>& dst, bool with_scaling = true)$/;"	f	namespace:Eigen
umeyama_transform_matrix_type	plugin/Eigen/src/Geometry/Umeyama.h	/^struct umeyama_transform_matrix_type$/;"	s	namespace:Eigen::internal
umfpackControl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline UmfpackControl& umfpackControl()$/;"	f	class:Eigen::UmfPackLU
umfpackControl	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const UmfpackControl& umfpackControl() const$/;"	f	class:Eigen::UmfPackLU
umfpackFactorizeReturncode	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline int umfpackFactorizeReturncode() const$/;"	f	class:Eigen::UmfPackLU
umfpack_defaults	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_defaults	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], double, int)$/;"	f	namespace:Eigen
umfpack_defaults	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_defaults	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_defaults(double control[UMFPACK_CONTROL], std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_free_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_free_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double, int)$/;"	f	namespace:Eigen
umfpack_free_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_free_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_free_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_free_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double, int)$/;"	f	namespace:Eigen
umfpack_free_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_free_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_get_determinant	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO], SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_get_determinant	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO], SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_get_determinant	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO], int)$/;"	f	namespace:Eigen
umfpack_get_determinant	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO], int)$/;"	f	namespace:Eigen
umfpack_get_lunz	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_get_lunz( SuiteSparse_long *lnz, SuiteSparse_long *unz, SuiteSparse_long *n_row, SuiteSparse_long *n_col,$/;"	f	namespace:Eigen
umfpack_get_lunz	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, double)$/;"	f	namespace:Eigen
umfpack_get_lunz	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_get_numeric(SuiteSparse_long Lp[], SuiteSparse_long Lj[], double Lx[], SuiteSparse_long Up[], SuiteSparse_long Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_get_numeric(SuiteSparse_long Lp[], SuiteSparse_long Lj[], std::complex<double> Lx[], SuiteSparse_long Up[], SuiteSparse_long Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], double Lx[], int Up[], int Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], std::complex<double> Lx[], int Up[], int Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_numeric(const SuiteSparse_long Ap[], const SuiteSparse_long Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_numeric(const SuiteSparse_long Ap[], const SuiteSparse_long Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_report_control	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_control	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], double, int)$/;"	f	namespace:Eigen
umfpack_report_control	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_control	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_control(double control[UMFPACK_CONTROL], std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_report_info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], double, int)$/;"	f	namespace:Eigen
umfpack_report_info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_info	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_info(double control[UMFPACK_CONTROL], double info[UMFPACK_INFO], std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_report_status	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, double, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_status	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, double, int)$/;"	f	namespace:Eigen
umfpack_report_status	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, std::complex<double>, SuiteSparse_long)$/;"	f	namespace:Eigen
umfpack_report_status	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_report_status(double control[UMFPACK_CONTROL], int status, std::complex<double>, int)$/;"	f	namespace:Eigen
umfpack_solve	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_solve(int sys, const SuiteSparse_long Ap[], const SuiteSparse_long Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_solve(int sys, const SuiteSparse_long Ap[], const SuiteSparse_long Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_solve	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline SuiteSparse_long umfpack_symbolic( SuiteSparse_long n_row,SuiteSparse_long n_col,$/;"	f	namespace:Eigen
umfpack_symbolic	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_symbolic(int n_row,int n_col,$/;"	f	namespace:Eigen
unaligned_dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop$/;"	s	namespace:Eigen::internal
unaligned_dense_assignment_loop	plugin/Eigen/src/Core/AssignEvaluator.h	/^struct unaligned_dense_assignment_loop<false>$/;"	s	namespace:Eigen::internal
unaryExpr	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryExpr(const CustomUnaryOp& func = CustomUnaryOp()) const$/;"	f
unaryViewExpr	plugin/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryViewExpr(const CustomViewOp& func = CustomViewOp()) const$/;"	f
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& block)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& op) : m_d(op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& replicate)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& reverse)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& t) : m_argImpl(t.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& wrapper)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^  explicit unary_evaluator(const XprType& op) : m_d(op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<ArrayWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Block<ArgType, BlockRows, BlockCols, InnerPanel>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp, ArgType>, IndexBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<CwiseUnaryView<UnaryOp, ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<MatrixWrapper<TArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Replicate<ArgType, RowFactor, ColFactor> >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Reverse<ArgType, Direction> >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/CoreEvaluators.h	/^struct unary_evaluator<Transpose<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/IndexedView.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& xpr) : m_argImpl(xpr.nestedExpression()), m_xpr(xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/IndexedView.h	/^struct unary_evaluator<IndexedView<ArgType, RowIndices, ColIndices>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/Inverse.h	/^  unary_evaluator(const InverseType& inv_xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/Inverse.h	/^struct unary_evaluator<Inverse<ArgType> >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Core/TriangularMatrix.h	/^  unary_evaluator(const XprType &xpr) : Base(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Core/TriangularMatrix.h	/^struct unary_evaluator<TriangularView<MatrixType,Mode>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/Geometry/Homogeneous.h	/^  EIGEN_DEVICE_FUNC explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/Geometry/Homogeneous.h	/^struct unary_evaluator<Homogeneous<ArgType,Direction>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    explicit unary_evaluator(const XprType& op)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  explicit unary_evaluator(const XprType &xpr) : Base(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<ArgType,BlockRows,BlockCols,InnerPanel>, IteratorBased >$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseBlock.h	/^struct unary_evaluator<Block<const SparseMatrix<_Scalar, _Options, _StorageIndex>,BlockRows,BlockCols,true>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    explicit unary_evaluator(const XprType& op) : m_functor(op.functor()), m_argImpl(op.nestedExpression())$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryOp<UnaryOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^struct unary_evaluator<CwiseUnaryView<ViewOp,ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseProduct.h	/^  explicit unary_evaluator(const XprType& xpr)$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseProduct.h	/^struct unary_evaluator<SparseView<Product<Lhs, Rhs, Options> >, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    explicit unary_evaluator(const XprType& op) :m_argImpl(op.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^struct unary_evaluator<Transpose<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^  explicit unary_evaluator(const XprType &xpr) : m_argImpl(xpr.nestedExpression()), m_arg(xpr.nestedExpression()) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^struct unary_evaluator<TriangularView<ArgType,Mode>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseView.h	/^    explicit unary_evaluator(const XprType& xpr) : m_argImpl(xpr.nestedExpression()), m_view(xpr) {}$/;"	f	struct:Eigen::internal::unary_evaluator
unary_evaluator	plugin/Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IndexBased>$/;"	s	namespace:Eigen::internal
unary_evaluator	plugin/Eigen/src/SparseCore/SparseView.h	/^struct unary_evaluator<SparseView<ArgType>, IteratorBased>$/;"	s	namespace:Eigen::internal
unary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef typename internal::remove_all<ArgType>::type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	plugin/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	s	namespace:Eigen::internal
unblocked	plugin/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	plugin/Eigen/src/Cholesky/LDLT.h	/^  static bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, SignMatrix& sign)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	plugin/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked	plugin/Eigen/src/Cholesky/LLT.h	/^  static Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked_lu	plugin/Eigen/src/LU/PartialPivLU.h	/^  static Index unblocked_lu(MatrixType& lu, PivIndex* row_transpositions, PivIndex& nb_transpositions)$/;"	f	struct:Eigen::internal::partial_lu_impl
uncompress	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    void uncompress()$/;"	f	class:Eigen::SparseMatrix
uniformscaling_times_affine_returntype	plugin/Eigen/src/Geometry/Scaling.h	/^  struct uniformscaling_times_affine_returntype$/;"	s	namespace:Eigen::internal
unitOrthogonal	plugin/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::unitOrthogonal() const$/;"	f	class:Eigen::MatrixBase
unitOrthogonal_selector	plugin/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	plugin/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,2>$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	plugin/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,3>$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet2cd> { typedef std::complex<double> type; enum {size=2, alignment=Aligned32}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^template<> struct unpacket_traits<Packet4cf> { typedef std::complex<float> type; enum {size=4, alignment=Aligned32}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet4d> { typedef double type; typedef Packet2d half; enum {size=4, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8f> { typedef float  type; typedef Packet4f half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct unpacket_traits<Packet8i> { typedef int    type; typedef Packet4i half; enum {size=8, alignment=Aligned32}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet16f> {$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet16i> {$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^struct unpacket_traits<Packet8d> {$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<double2> { typedef double type; enum {size=2, alignment=Aligned16}; typedef double2 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct unpacket_traits<float4>  { typedef float  type; enum {size=4, alignment=Aligned16}; typedef float4 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct unpacket_traits<half2> { typedef Eigen::half type; enum {size=2, alignment=Aligned16}; typedef half2 half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double  type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float   type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int32_t type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1, alignment=Aligned16}; typedef Packet1cd half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float>  type; enum {size=2, alignment=Aligned16}; typedef Packet2cf half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2, alignment=Aligned16}; typedef Packet2d half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4, alignment=Aligned16}; typedef Packet4f half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4, alignment=Aligned16}; typedef Packet4i half; };$/;"	s	namespace:Eigen::internal
unpacket_traits	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^template<typename Packet> struct unpacket_traits<DoublePacket<Packet> > { typedef DoublePacket<Packet> half; };$/;"	s	namespace:Eigen::internal
uo	include/darknet.h	/^    struct layer *uo;$/;"	m	struct:layer	typeref:struct:layer::layer
update	include/darknet.h	/^    void (*update)    (struct layer, update_args);$/;"	m	struct:layer
update	plugin/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool update(MatrixType& mat, TranspositionType& transpositions, Workspace& tmp, WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	plugin/Eigen/src/Cholesky/LDLT.h	/^  static bool update(MatrixType& mat, const TranspositionType& transpositions, Workspace& tmp, const WType& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateInPlace	plugin/Eigen/src/Cholesky/LDLT.h	/^  static bool updateInPlace(MatrixType& mat, MatrixBase<WDerived>& w, const typename MatrixType::RealScalar& sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateList	plugin/Eigen/src/IterativeLinearSolvers/IncompleteCholesky.h	/^inline void IncompleteCholesky<Scalar,_UpLo, OrderingType>::updateList(Ref<const VectorIx> colPtr, Ref<VectorIx> rowIdx, Ref<VectorSx> vals, const Index& col, const Index& jk, VectorIx& firstElt, VectorList& listCol)$/;"	f	class:Eigen::IncompleteCholesky
update_args	include/darknet.h	/^} update_args;$/;"	t	typeref:struct:__anon730
update_connected_layer	src/connected_layer.c	/^void update_connected_layer(layer l, update_args a)$/;"	f
update_connected_layer_gpu	src/connected_layer.c	/^void update_connected_layer_gpu(layer l, update_args a)$/;"	f
update_convolutional_layer	src/convolutional_layer.c	/^void update_convolutional_layer(convolutional_layer l, update_args a)$/;"	f
update_crnn_layer	src/crnn_layer.c	/^void update_crnn_layer(layer l, update_args a)$/;"	f
update_crnn_layer_gpu	src/crnn_layer.c	/^void update_crnn_layer_gpu(layer l, update_args a)$/;"	f
update_deconvolutional_layer	src/deconvolutional_layer.c	/^void update_deconvolutional_layer(layer l, update_args a)$/;"	f
update_gpu	include/darknet.h	/^    void (*update_gpu)    (struct layer, update_args);$/;"	m	struct:layer
update_gru_layer	src/gru_layer.c	/^void update_gru_layer(layer l, update_args a)$/;"	f
update_gru_layer_gpu	src/gru_layer.c	/^void update_gru_layer_gpu(layer l, update_args a)$/;"	f
update_layer	include/darknet.h	/^    struct layer *update_layer;$/;"	m	struct:layer	typeref:struct:layer::layer
update_local_layer	src/local_layer.c	/^void update_local_layer(local_layer l, update_args a)$/;"	f
update_local_layer_gpu	src/local_layer.c	/^void update_local_layer_gpu(local_layer l, update_args a)$/;"	f
update_lstm_layer	src/lstm_layer.c	/^void update_lstm_layer(layer l, update_args a)$/;"	f
update_lstm_layer_gpu	src/lstm_layer.c	/^void update_lstm_layer_gpu(layer l, update_args a)$/;"	f
update_network	src/network.c	/^void update_network(network *netp)$/;"	f
update_network_gpu	src/network.c	/^void update_network_gpu(network *netp)$/;"	f
update_rnn_layer	src/rnn_layer.c	/^void update_rnn_layer(layer l, update_args a)$/;"	f
update_rnn_layer_gpu	src/rnn_layer.c	/^void update_rnn_layer_gpu(layer l, update_args a)$/;"	f
update_segrep	plugin/Eigen/src/SparseLU/SparseLU_column_dfs.h	/^  bool update_segrep(Index \/*krep*\/, Index \/*jj*\/)$/;"	f	struct:Eigen::internal::column_dfs_traits
update_segrep	plugin/Eigen/src/SparseLU/SparseLU_panel_dfs.h	/^  bool update_segrep(Index krep, StorageIndex jj)$/;"	f	struct:Eigen::internal::panel_dfs_traits
upperbidiagonalization_blocked_helper	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_blocked_helper(MatrixType& A,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_blocked	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_blocked(MatrixType& A, BidiagType& bidiagonal,$/;"	f	namespace:Eigen::internal
upperbidiagonalization_inplace_unblocked	plugin/Eigen/src/SVD/UpperBidiagonalization.h	/^void upperbidiagonalization_inplace_unblocked(MatrixType& mat,$/;"	f	namespace:Eigen::internal
ur	include/darknet.h	/^    struct layer *ur;$/;"	m	struct:layer	typeref:struct:layer::layer
useSpecificBlockingSizes	plugin/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline bool useSpecificBlockingSizes(Index& k, Index& m, Index& n)$/;"	f	namespace:Eigen::internal
used	src/option_list.h	/^    int used;$/;"	m	struct:__anon5
users	plugin/Eigen/src/Core/products/Parallelizer.h	/^  int volatile users;$/;"	m	struct:Eigen::internal::GemmParallelInfo
usub	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector usub; \/\/ row indices of U columns in ucol$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
uz	include/darknet.h	/^    struct layer *uz;$/;"	m	struct:layer	typeref:struct:layer::layer
v	include/darknet.h	/^    float * v;$/;"	m	struct:layer
v	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  __m256  v;$/;"	m	struct:Eigen::internal::Packet4cf
v	plugin/Eigen/src/Core/arch/AVX/Complex.h	/^  __m256d  v;$/;"	m	struct:Eigen::internal::Packet2cd
v	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	plugin/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	plugin/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	plugin/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128d  v;$/;"	m	struct:Eigen::internal::Packet1cd
v	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^    Packet4f v;$/;"	m	union:Eigen::internal::Packet2cf::__anon619
v	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  Packet2d v;$/;"	m	struct:Eigen::internal::Packet1cd
v	plugin/Eigen/src/Core/arch/ZVector/Complex.h	/^  Packet4f v;$/;"	m	struct:Eigen::internal::Packet2cf
v	src/stb_image.h	/^      int h,v;$/;"	m	struct:__anon12::__anon13
v2d	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2d  v2d;$/;"	m	union:Eigen::internal::__anon612
v2l	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2l  v2l;$/;"	m	union:Eigen::internal::__anon612
v2ul	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet2ul v2ul;$/;"	m	union:Eigen::internal::__anon612
v4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^	Packet2d  v4f[2];$/;"	m	struct:Eigen::internal::__anon611
v4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet4f  v4f;$/;"	m	union:Eigen::internal::__anon612
v4i	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet4i  v4i;$/;"	m	union:Eigen::internal::__anon612
v4ui	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^  Packet4ui v4ui;$/;"	m	union:Eigen::internal::__anon612
v_gpu	include/darknet.h	/^    float *v_gpu;$/;"	m	struct:layer
val	include/darknet.h	/^    void *val;$/;"	m	struct:node
val	src/option_list.h	/^    char *val;$/;"	m	struct:__anon5
valid_captcha	examples/captcha.c	/^void valid_captcha(char *cfgfile, char *weightfile, char *filename)$/;"	f
valid_char_rnn	examples/rnn.c	/^void valid_char_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
valid_go	examples/go.c	/^void valid_go(char *cfgfile, char *weightfile, int multi, char *filename)$/;"	f
valid_indexed_view_overload	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^struct valid_indexed_view_overload {$/;"	s
valid_tactic_rnn	examples/rnn.c	/^void valid_tactic_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
validate_attention_multi	examples/attention.c	/^void validate_attention_multi(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_attention_single	examples/attention.c	/^void validate_attention_single(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_10	examples/classifier.c	/^void validate_classifier_10(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_crop	examples/classifier.c	/^void validate_classifier_crop(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_full	examples/classifier.c	/^void validate_classifier_full(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_classifier_multi	examples/classifier.c	/^void validate_classifier_multi(char *datacfg, char *cfg, char *weights)$/;"	f
validate_classifier_single	examples/classifier.c	/^void validate_classifier_single(char *datacfg, char *filename, char *weightfile)$/;"	f
validate_coco	examples/coco.c	/^void validate_coco(char *cfg, char *weights)$/;"	f
validate_coco_recall	examples/coco.c	/^void validate_coco_recall(char *cfgfile, char *weightfile)$/;"	f
validate_compare	src/compare.c	/^void validate_compare(char *filename, char *weightfile)$/;"	f
validate_detector	examples/detector.c	/^void validate_detector(char *datacfg, char *cfgfile, char *weightfile, char *outfile)$/;"	f
validate_detector_flip	examples/detector.c	/^void validate_detector_flip(char *datacfg, char *cfgfile, char *weightfile, char *outfile)$/;"	f
validate_detector_recall	examples/detector.c	/^void validate_detector_recall(char *cfgfile, char *weightfile)$/;"	f
validate_dice	examples/dice.c	/^void validate_dice(char *filename, char *weightfile)$/;"	f
validate_uint32	src/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
validate_yolo	examples/yolo.c	/^void validate_yolo(char *cfg, char *weights)$/;"	f
validate_yolo_recall	examples/yolo.c	/^void validate_yolo_recall(char *cfg, char *weights)$/;"	f
validate_zcu102	src/zcu102_api.cpp	/^void validate_zcu102(int argc, char **argv)$/;"	f
vals	include/darknet.h	/^    float **vals;$/;"	m	struct:matrix
value	examples/go.c	/^    float *value;$/;"	m	struct:mcts_tree	file:
value	examples/go.c	/^    float value;$/;"	m	struct:__anon26	file:
value	plugin/Eigen/src/Core/ArithmeticSequence.h	/^  enum { value = get_fixed_value<IncrType,DynamicIndex>::value };$/;"	e	enum:Eigen::internal::get_compile_time_incr::__anon525
value	plugin/Eigen/src/Core/CoreEvaluators.h	/^  static const bool value = false;$/;"	m	struct:Eigen::internal::evaluator_assume_aliasing
value	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const          { return m_iter.value(); }$/;"	f	class:Eigen::InnerIterator
value	plugin/Eigen/src/Core/CoreIterators.h	/^  EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::inner_iterator_selector
value	plugin/Eigen/src/Core/DenseBase.h	/^    CoeffReturnType value() const$/;"	f	class:Eigen::DenseBase
value	plugin/Eigen/src/Core/GeneralProduct.h	/^    value = is_large  ? Large$/;"	e	enum:Eigen::internal::product_size_category::__anon527
value	plugin/Eigen/src/Core/GeneralProduct.h	/^    value = selector::ret,$/;"	e	enum:Eigen::internal::product_type::__anon530
value	plugin/Eigen/src/Core/MathFunctions.h	/^         value = (upper <= lower + 1) ? int(meta_floor_log2_terminate)$/;"	e	enum:Eigen::internal::meta_floor_log2_selector::__anon667
value	plugin/Eigen/src/Core/MathFunctions.h	/^  enum { value = (n >= ((unsigned int)(1) << (lower+1))) ? lower+1 : lower };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon670
value	plugin/Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, lower, meta_floor_log2_selector<n, lower, upper>::middle>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon668
value	plugin/Eigen/src/Core/MathFunctions.h	/^  enum { value = meta_floor_log2<n, meta_floor_log2_selector<n, lower, upper>::middle, upper>::value };$/;"	e	enum:Eigen::internal::meta_floor_log2::__anon669
value	plugin/Eigen/src/Core/ProductEvaluators.h	/^  static const bool value = true;$/;"	m	struct:Eigen::internal::evaluator_assume_aliasing
value	plugin/Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size+5) * NumTraits<Scalar>::MulCost + (Size-1)*NumTraits<Scalar>::AddCost }; };$/;"	e	enum:Eigen::internal::member_lpnorm::Cost::__anon380
value	plugin/Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size-1) * functor_traits<BinaryOp>::Cost }; };$/;"	e	enum:Eigen::internal::member_redux::Cost::__anon381
value	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon585
value	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon587
value	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct is_arithmetic<__m256i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon586
value	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 16 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon591
value	plugin/Eigen/src/Core/arch/AVX/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 14 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon590
value	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon624
value	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon625
value	plugin/Eigen/src/Core/arch/AVX512/PacketMath.h	/^  enum { value = true };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon626
value	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^template<> struct is_arithmetic<half> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon642
value	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<double2> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon645
value	plugin/Eigen/src/Core/arch/CUDA/PacketMath.h	/^template<> struct is_arithmetic<float4>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon644
value	plugin/Eigen/src/Core/arch/CUDA/PacketMathHalf.h	/^template<> struct is_arithmetic<half2> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon652
value	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon566
value	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon568
value	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon567
value	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<double,true> { enum { value = 8 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon576
value	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct scalar_div_cost<float,true> { enum { value = 7 }; };$/;"	e	enum:Eigen::internal::scalar_div_cost::__anon575
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon244
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon238
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon241
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_binary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon247
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon242
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon236
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon239
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_nullary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon245
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<linspaced_op<Scalar,PacketType>,IndexType> { enum { value = 1}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon243
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_constant_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon237
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_identity_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon240
value	plugin/Eigen/src/Core/functors/NullaryFunctors.h	/^struct has_unary_operator<scalar_random_op<Scalar>,IndexType> { enum { value = 0}; };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon246
value	plugin/Eigen/src/Core/util/ForwardDeclarations.h	/^         value = has_direct_access ? (has_write_access ? DirectWriteAccessors : DirectAccessors)$/;"	e	enum:Eigen::internal::accessors_level::__anon393
value	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  enum { value = 1 }; \/\/ 1 or 0 ??$/;"	e	enum:Eigen::internal::get_compile_time_incr::__anon386
value	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  enum { value = 1 };$/;"	e	enum:Eigen::internal::get_compile_time_incr::__anon388
value	plugin/Eigen/src/Core/util/IndexedViewHelper.h	/^  enum { value = UndefinedIncr };$/;"	e	enum:Eigen::internal::get_compile_time_incr::__anon384
value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  static const int value = Default;$/;"	m	struct:Eigen::internal::get_fixed_value
value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  static const int value = N ;$/;"	m	struct:Eigen::internal::get_fixed_value
value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  static const int value = N;$/;"	m	class:Eigen::internal::FixedInt
value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  static const int value = N;$/;"	m	class:Eigen::internal::VariableAndFixedInt
value	plugin/Eigen/src/Core/util/IntegralConstant.h	/^  static const int value = N;$/;"	m	struct:Eigen::internal::get_fixed_value
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = Dynamic };$/;"	e	enum:Eigen::internal::array_size::__anon466
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = N };$/;"	e	enum:Eigen::internal::array_size::__anon468
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = N };$/;"	e	enum:Eigen::internal::array_size::__anon469
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = N };$/;"	e	enum:Eigen::internal::array_size::__anon470
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = N };$/;"	e	enum:Eigen::internal::array_size::__anon471
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = T::SizeAtCompileTime };$/;"	e	enum:Eigen::internal::array_size::__anon467
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = is_convertible_impl<typename remove_all<From>::type,$/;"	e	enum:Eigen::internal::is_convertible::__anon465
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(test(ms_from, 0))==sizeof(yes) };$/;"	e	enum:Eigen::internal::is_convertible_impl::__anon464
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_binary_operator::__anon478
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_nullary_operator::__anon476
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_unary_operator::__anon477
value	plugin/Eigen/src/Core/util/Meta.h	/^  enum { value = sizeof(testFunctor<T>(static_cast<T*>(0))) == sizeof(meta_yes) };$/;"	e	enum:Eigen::internal::has_ReturnType::__anon475
value	plugin/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::false_type::__anon432
value	plugin/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	e	enum:Eigen::internal::true_type::__anon431
value	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_const::__anon462
value	plugin/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_const::__anon463
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon439
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon440
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon437
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon436
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon438
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon441
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon445
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon449
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon447
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon443
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon442
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon446
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon450
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon448
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon444
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<bool>                   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon452
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<char>                   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon453
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed char>            { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon454
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed int>             { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon458
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed long>            { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon460
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<signed short>           { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon456
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon455
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned int>           { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon459
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned long>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon461
value	plugin/Eigen/src/Core/util/Meta.h	/^template<> struct is_integral<unsigned short>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_integral::__anon457
value	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_same::__anon433
value	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon435
value	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_integral               { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_integral::__anon451
value	plugin/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_same::__anon434
value	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  Index value() const { return m_value; }$/;"	f	class:Eigen::Symbolic::SymbolValue
value	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  enum { value = false };$/;"	e	enum:Eigen::Symbolic::is_symbolic::__anon391
value	plugin/Eigen/src/Core/util/SymbolicIndex.h	/^  enum { value = internal::is_convertible<T,BaseExpr<T> >::value };$/;"	e	enum:Eigen::Symbolic::is_symbolic::__anon390
value	plugin/Eigen/src/Core/util/XprHelper.h	/^  enum { value =$/;"	e	enum:Eigen::internal::is_valid_index_type::__anon389
value	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  enum { value = is_ref_compatible_impl<typename remove_all<MatrixType>::type>::value };$/;"	e	enum:Eigen::internal::is_ref_compatible::__anon107
value	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  enum { value = sizeof(test<MatrixType>(ms_from, 0))==sizeof(yes) };$/;"	e	enum:Eigen::internal::is_ref_compatible_impl::__anon106
value	plugin/Eigen/src/SparseCore/AmbiVector.h	/^      Scalar value;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
value	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar value() const { return m_cachedValue; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
value	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& value(Index i) { eigen_internal_assert(m_values!=0); return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Scalar& value(Index i) const { eigen_internal_assert(m_values!=0); return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Scalar value() const { return m_it.value(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
value	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id-1]; }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
value	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar& value() const { return m_values[m_id]; }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { eigen_internal_assert(m_id<m_innerSize); return m_value; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(m_lhsIter.value(), m_rhsIter.value()); }$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::binary_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::sparse_conjunction_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return LhsIterator::value() * m_factor; }$/;"	f	class:Eigen::internal::sparse_dense_outer_product_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_coeff * SparseXprInnerIterator::value(); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Scalar value() const { return m_sparseIter.value() * m_diagCoeffNested.coeff(index()); }$/;"	f	class:Eigen::internal::sparse_diagonal_product_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseTriangularView.h	/^      inline Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	plugin/Eigen/src/SparseCore/SparseUtil.h	/^  const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::Triplet
value	plugin/Eigen/src/SparseCore/SparseView.h	/^        EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
value	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_idval]; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
value	plugin/Eigen/src/plugins/IndexedViewMethods.h	/^  enum { value = !(internal::is_valid_index_type<RowIndices>::value && internal::is_valid_index_type<ColIndices>::value) };$/;"	e	enum:valid_indexed_view_overload::__anon111
value	src/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon15
valuePtr	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* valuePtr() { return m_values; }$/;"	f	class:Eigen::internal::CompressedStorage
valuePtr	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::internal::CompressedStorage
valuePtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar* valuePtr()$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	plugin/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar* valuePtr() const$/;"	f	class:Eigen::internal::sparse_matrix_block_impl
valuePtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar* valuePtr() { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline const Scalar* valuePtr() const { return derived().valuePtr(); }$/;"	f	class:Eigen::SparseCompressedBase
valuePtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline Scalar* valuePtr()              { return Base::m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::SparseMapBase
valuePtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar* valuePtr() { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar* valuePtr() const { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Scalar* valuePtr() { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	plugin/Eigen/src/SparseCore/SparseTranspose.h	/^    inline const Scalar* valuePtr() const { return derived().nestedExpression().valuePtr(); }$/;"	f	class:Eigen::internal::SparseTransposeImpl
valuePtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Scalar* valuePtr() { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseVector
valuePtr	plugin/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return m_data.valuePtr(); }$/;"	f	class:Eigen::SparseVector
valuePtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    Scalar* valuePtr() {  return m_nzval; }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valuePtr	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    const Scalar* valuePtr() const $/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
valueRef	plugin/Eigen/src/SparseCore/SparseBlock.h	/^  inline Scalar& valueRef() { return m_it.valueRef(); }$/;"	f	class:Eigen::internal::unary_evaluator::OuterVectorInnerIterator
valueRef	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id-1]); }$/;"	f	class:Eigen::SparseCompressedBase::ReverseInnerIterator
valueRef	plugin/Eigen/src/SparseCore/SparseCompressedBase.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }$/;"	f	class:Eigen::SparseCompressedBase::InnerIterator
valueRef	plugin/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::internal::unary_evaluator::InnerIterator
valueRef	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_idval]); }$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix::InnerIterator
value_type	plugin/Eigen/src/Core/DenseBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::DenseBase
value_type	plugin/Eigen/src/Core/util/Memory.h	/^  typedef T               value_type;$/;"	t	class:Eigen::aligned_allocator
value_type	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^        typedef StorageIndex value_type;$/;"	t	class:Eigen::SparseMatrix::SingletonVector
value_type	plugin/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef Scalar value_type;$/;"	t	class:Eigen::SparseMatrixBase
value_type	plugin/Eigen/src/StlSupport/details.h	/^    typedef T               value_type;$/;"	t	class:Eigen::aligned_allocator_indirection
values	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void *values;$/;"	m	struct:Eigen::SluMatrix::__anon35
values	src/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon11
variance	include/darknet.h	/^    float * variance;$/;"	m	struct:layer
variance_array	src/utils.c	/^float variance_array(float *a, int n)$/;"	f
variance_cpu	src/blas.c	/^void variance_cpu(float *x, float *mean, int batch, int filters, int spatial, float *variance)$/;"	f
variance_delta	include/darknet.h	/^    float * variance_delta;$/;"	m	struct:layer
variance_delta_cpu	src/batchnorm_layer.c	/^void  variance_delta_cpu(float *x, float *delta, float *mean, float *variance, int batch, int filters, int spatial, float *variance_delta)$/;"	f
variance_delta_gpu	include/darknet.h	/^    float * variance_delta_gpu;$/;"	m	struct:layer
variance_gpu	include/darknet.h	/^    float * variance_gpu;$/;"	m	struct:layer
vec	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline VectorBlock<Coefficients,3> vec() { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline const VectorBlock<const Coefficients,3> vec() const { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec2d_swizzle1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	70;"	d
vec4f_swizzle1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	64;"	d
vec4f_swizzle2	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	73;"	d
vec4i_swizzle1	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	67;"	d
vec4i_swizzle2	plugin/Eigen/src/Core/arch/SSE/PacketMath.h	76;"	d
vec_char_rnn	examples/rnn.c	/^void vec_char_rnn(char *cfgfile, char *weightfile, char *seed)$/;"	f
vec_splat_dbl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d vec_splat_dbl<0>(Packet2d& a)$/;"	f	namespace:Eigen::internal
vec_splat_dbl	plugin/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d vec_splat_dbl<1>(Packet2d& a)$/;"	f	namespace:Eigen::internal
vec_splat_packet4f	plugin/Eigen/src/Core/arch/ZVector/PacketMath.h	/^template<int element> EIGEN_STRONG_INLINE Packet4f vec_splat_packet4f(const Packet4f&   from)$/;"	f	namespace:Eigen::internal
vector	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	plugin/Eigen/src/StlSupport/StdVector.h	/^  class vector<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
vectorD	plugin/Eigen/src/Cholesky/LDLT.h	/^    inline Diagonal<const MatrixType> vectorD() const$/;"	f	class:Eigen::LDLT
vectorD	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialCholesky
vectorD	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialLDLT
vector_base	plugin/Eigen/src/StlSupport/StdVector.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > vector_base;$/;"	t	class:std::vector
vectorwise_reverse_inplace_impl	plugin/Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Horizontal>$/;"	s	namespace:Eigen::internal
vectorwise_reverse_inplace_impl	plugin/Eigen/src/Core/Reverse.h	/^struct vectorwise_reverse_inplace_impl<Vertical>$/;"	s	namespace:Eigen::internal
viewAsCholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_dense viewAsCholmod(MatrixBase<Derived>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(Ref<SparseMatrix<_Scalar,_Options,_StorageIndex> > mat)$/;"	f	namespace:Eigen
viewAsCholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(const SparseSelfAdjointView<const SparseMatrix<_Scalar,_Options,_Index>, UpLo>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseVector<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsEigen	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^MappedSparseMatrix<Scalar,Flags,StorageIndex> viewAsEigen(cholmod_sparse& cm)$/;"	f	namespace:Eigen
visit	plugin/Eigen/src/Core/Visitor.h	/^void DenseBase<Derived>::visit(Visitor& visitor) const$/;"	f	class:Eigen::DenseBase
visit_count	examples/go.c	/^    int *visit_count;$/;"	m	struct:mcts_tree	file:
visitor_evaluator	plugin/Eigen/src/Core/Visitor.h	/^  explicit visitor_evaluator(const XprType &xpr) : m_evaluator(xpr), m_xpr(xpr) {}$/;"	f	class:Eigen::internal::visitor_evaluator
visitor_evaluator	plugin/Eigen/src/Core/Visitor.h	/^class visitor_evaluator$/;"	c	namespace:Eigen::internal
visitor_impl	plugin/Eigen/src/Core/Visitor.h	/^struct visitor_impl$/;"	s	namespace:Eigen::internal
visitor_impl	plugin/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, 1>$/;"	s	namespace:Eigen::internal
visitor_impl	plugin/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, Dynamic>$/;"	s	namespace:Eigen::internal
visualize	examples/darknet.c	/^void visualize(char *cfgfile, char *weightfile)$/;"	f
visualize_convolutional_layer	src/convolutional_layer.c	/^image *visualize_convolutional_layer(convolutional_layer l, char *window, image *prev_weights)$/;"	f
visualize_network	src/network.c	/^void visualize_network(network *net)$/;"	f
vld1_dup_f32	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_dup_f32 (const float* x) { return ::vld1_dup_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1_f32	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_f32 (const float* x) { return ::vld1_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1q_f32	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x4_t vld1q_f32(const float* x) { return ::vld1q_f32((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vml_assign_traits	plugin/Eigen/src/Core/Assign_MKL.h	/^class vml_assign_traits$/;"	c	namespace:Eigen::internal
voc_names	examples/yolo.c	/^char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};$/;"	v
voc_names	src/zcu102_api.cpp	/^static const char *voc_names[] = {"aeroplane", "bicycle", "bird", "boat", "bottle", "bus", "car", "cat", "chair", "cow", "diningtable", "dog", "horse", "motorbike", "person", "pottedplant", "sheep", "sofa", "train", "tvmonitor"};$/;"	v	file:
volume	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC inline Scalar volume() const$/;"	f	class:Eigen::AlignedBox
vreinterpretq_f64_u64	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^float64x2_t vreinterpretq_f64_u64(T a)$/;"	f	namespace:Eigen::internal
vreinterpretq_u64_f64	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^uint64x2_t vreinterpretq_u64_f64(T a)$/;"	f	namespace:Eigen::internal
vs	src/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon14
vst1_f32	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1_f32 (float* to, float32x2_t from) { ::vst1_f32 ((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
vst1q_f32	plugin/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1q_f32(float* to, float32x4_t from) { ::vst1q_f32((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
w	include/darknet.h	/^    float x, y, w, h;$/;"	m	struct:__anon735
w	include/darknet.h	/^    float x,y,w,h;$/;"	m	struct:__anon738
w	include/darknet.h	/^    int h, w, c;$/;"	m	struct:network
w	include/darknet.h	/^    int h,w,c;$/;"	m	struct:layer
w	include/darknet.h	/^    int w, h;$/;"	m	struct:__anon736
w	include/darknet.h	/^    int w;$/;"	m	struct:__anon733
w	include/darknet.h	/^    int w;$/;"	m	struct:__anon734
w	include/darknet.h	/^    int w;$/;"	m	struct:load_args
w	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    w() const$/;"	f	class:Eigen::DenseCoeffsBase
w	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    w()$/;"	f	class:Eigen::DenseCoeffsBase
w	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline CoeffReturnType w() const { return this->derived().coeffs().coeff(3); }$/;"	f	class:Eigen::QuaternionBase
w	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline NonConstCoeffReturnType w() { return this->derived().coeffs().w(); }$/;"	f	class:Eigen::QuaternionBase
w	src/parser.c	/^    int w;$/;"	m	struct:size_params	file:
w	src/stb_image.h	/^   int w,h;$/;"	m	struct:__anon22
w2	src/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon12::__anon13
w_lores	src/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon14
wd	scripts/voc_label.py	/^wd = getcwd()$/;"	v
wd	voc_label.py	/^wd = getcwd()$/;"	v
weightDesc	include/darknet.h	/^    cudnnFilterDescriptor_t weightDesc;$/;"	m	struct:layer
weight_change_gpu	include/darknet.h	/^    float * weight_change_gpu;$/;"	m	struct:layer
weight_updates	include/darknet.h	/^    float * weight_updates;$/;"	m	struct:layer
weight_updates_gpu	include/darknet.h	/^    float * weight_updates_gpu;$/;"	m	struct:layer
weighted_delta_cpu	src/blas.c	/^void weighted_delta_cpu(float *a, float *b, float *s, float *da, float *db, float *ds, int n, float *dc)$/;"	f
weighted_sum_cpu	src/blas.c	/^void weighted_sum_cpu(float *a, float *b, float *s, int n, float *c)$/;"	f
weights	include/darknet.h	/^    float * weights;$/;"	m	struct:layer
weights_gpu	include/darknet.h	/^    float * weights_gpu;$/;"	m	struct:layer
wf	include/darknet.h	/^    struct layer *wf;$/;"	m	struct:layer	typeref:struct:layer::layer
wg	include/darknet.h	/^    struct layer *wg;$/;"	m	struct:layer	typeref:struct:layer::layer
wh	include/darknet.h	/^    struct layer *wh;$/;"	m	struct:layer	typeref:struct:layer::layer
what_time_is_it_now	src/utils.c	/^double what_time_is_it_now()$/;"	f
wi	include/darknet.h	/^    struct layer *wi;$/;"	m	struct:layer	typeref:struct:layer::layer
windows	src/image.c	/^int windows = 0;$/;"	v
wo	include/darknet.h	/^    struct layer *wo;$/;"	m	struct:layer	typeref:struct:layer::layer
workaround_msvc_stl_support	plugin/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support() : T() {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	plugin/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support(const T& other) : T(other) {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	plugin/Eigen/src/StlSupport/details.h	/^  template<typename T> struct workaround_msvc_stl_support : public T$/;"	s	namespace:Eigen::internal
workspace	include/darknet.h	/^    float *workspace;$/;"	m	struct:network
workspace_size	include/darknet.h	/^    size_t workspace_size;$/;"	m	struct:layer
wr	include/darknet.h	/^    struct layer *wr;$/;"	m	struct:layer	typeref:struct:layer::layer
write3	src/stb_image_write.h	/^static void write3(FILE *f, unsigned char a, unsigned char b, unsigned char c)$/;"	f
writePacket	plugin/Eigen/src/Core/Block.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	plugin/Eigen/src/Core/Block.h	/^    inline void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::internal::BlockImpl_dense
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index index, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x) $/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::evaluator_wrapper_base
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::mapbase_evaluator
writePacket	plugin/Eigen/src/Core/CoreEvaluators.h	/^  void writePacket(Index row, Index col, const PacketType& x)$/;"	f	struct:Eigen::internal::unary_evaluator
writePacket	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	plugin/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	plugin/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	plugin/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& val)$/;"	f	class:Eigen::MapBase
writePacket	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	plugin/Eigen/src/Core/NestByValue.h	/^    EIGEN_DEVICE_FUNC inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
writePacket	plugin/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index rowId, Index colId, const PacketScalar& val)$/;"	f	class:Eigen::PlainObjectBase
write_all	src/utils.c	/^void write_all(int fd, char *buffer, size_t bytes)$/;"	f
write_all_fail	src/utils.c	/^int write_all_fail(int fd, char *buffer, size_t bytes)$/;"	f
write_int	src/utils.c	/^void write_int(int fd, int n)$/;"	f
write_jpeg	src/zcu102_api.cpp	/^void write_jpeg(Mat &a, const char *filename)$/;"	f
write_pixels	src/stb_image_write.h	/^static void write_pixels(FILE *f, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad, int expand_mono)$/;"	f
write_raw_image	src/zcu102_api.cpp	/^void write_raw_image(void *raw_image,const char *filename, unsigned int size)$/;"	f
writefv	src/stb_image_write.h	/^static void writefv(FILE *f, const char *fmt, va_list v)$/;"	f
wz	include/darknet.h	/^    struct layer *wz;$/;"	m	struct:layer	typeref:struct:layer::layer
x	examples/rnn.c	/^    float *x;$/;"	m	struct:__anon27	file:
x	examples/rnn_vid.c	/^    float *x;$/;"	m	struct:__anon24	file:
x	include/darknet.h	/^    float * x;$/;"	m	struct:layer
x	include/darknet.h	/^    float x, y, w, h;$/;"	m	struct:__anon735
x	include/darknet.h	/^    float x,y,w,h;$/;"	m	struct:__anon738
x	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    x() const { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    x() { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	plugin/Eigen/src/Core/arch/CUDA/Half.h	/^  unsigned short x;$/;"	m	struct:Eigen::half_impl::__half_raw
x	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline CoeffReturnType x() const { return this->derived().coeffs().coeff(0); }$/;"	f	class:Eigen::QuaternionBase
x	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline NonConstCoeffReturnType x() { return this->derived().coeffs().x(); }$/;"	f	class:Eigen::QuaternionBase
x	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar x() const { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& x() { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	src/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon12::__anon13
x_gpu	include/darknet.h	/^    float * x_gpu;$/;"	m	struct:layer
x_norm	include/darknet.h	/^    float * x_norm;$/;"	m	struct:layer
x_norm_gpu	include/darknet.h	/^    float * x_norm_gpu;$/;"	m	struct:layer
xlsub	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlsub; \/\/ pointers to the beginning of each column in lsub$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xlusup	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xlusup; \/\/ pointers to the beginning of each column in lusup$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xnor	include/darknet.h	/^    int xnor;$/;"	m	struct:layer
xsup	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xsup; \/\/First supernode column ... xsup(s) points to the beginning of the s-th supernode$/;"	m	struct:Eigen::internal::LU_GlobalLU_t
xusub	plugin/Eigen/src/SparseLU/SparseLU_Structs.h	/^  IndexVector xusub; \/\/ Pointers to the beginning of each column of U in ucol $/;"	m	struct:Eigen::internal::LU_GlobalLU_t
y	examples/rnn.c	/^    float *y;$/;"	m	struct:__anon27	file:
y	examples/rnn_vid.c	/^    float *y;$/;"	m	struct:__anon24	file:
y	include/darknet.h	/^    float x, y, w, h;$/;"	m	struct:__anon735
y	include/darknet.h	/^    float x,y,w,h;$/;"	m	struct:__anon738
y	include/darknet.h	/^    matrix y;$/;"	m	struct:__anon736
y	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    y() const$/;"	f	class:Eigen::DenseCoeffsBase
y	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    y()$/;"	f	class:Eigen::DenseCoeffsBase
y	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline CoeffReturnType y() const { return this->derived().coeffs().coeff(1); }$/;"	f	class:Eigen::QuaternionBase
y	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline NonConstCoeffReturnType y() { return this->derived().coeffs().y(); }$/;"	f	class:Eigen::QuaternionBase
y	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar y() const { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& y() { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	src/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon12::__anon13
yes	plugin/Eigen/src/Core/util/Meta.h	/^  struct yes {int a[1];};$/;"	s	struct:Eigen::internal::is_convertible_impl
yes	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  struct yes {int a[1];};$/;"	s	struct:Eigen::internal::is_ref_compatible_impl
yolo_inference	src/zcu102_api.cpp	/^float *yolo_inference(float thresh)$/;"	f
yolo_inference_with_ptr	src/zcu102_api.cpp	/^int yolo_inference_with_ptr(void *ptr, int w, int h, int c, float thresh, void *fb)$/;"	f
ypos	src/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon14
ystep	src/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon14
yuv_to_rgb	src/image.c	/^void yuv_to_rgb(image im)$/;"	f
z	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    z() const$/;"	f	class:Eigen::DenseCoeffsBase
z	plugin/Eigen/src/Core/DenseCoeffsBase.h	/^    z()$/;"	f	class:Eigen::DenseCoeffsBase
z	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline CoeffReturnType z() const { return this->derived().coeffs().coeff(2); }$/;"	f	class:Eigen::QuaternionBase
z	plugin/Eigen/src/Geometry/Quaternion.h	/^  EIGEN_DEVICE_FUNC inline NonConstCoeffReturnType z() { return this->derived().coeffs().z(); }$/;"	f	class:Eigen::QuaternionBase
z	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar z() const { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	plugin/Eigen/src/Geometry/Translation.h	/^  EIGEN_DEVICE_FUNC inline Scalar& z() { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
zCoeffs	plugin/Eigen/src/QR/CompleteOrthogonalDecomposition.h	/^  const HCoeffsType& zCoeffs() const { return m_zCoeffs; }$/;"	f	class:Eigen::CompleteOrthogonalDecomposition
z_cpu	include/darknet.h	/^    float *z_cpu;$/;"	m	struct:layer
z_distance	src/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon16
z_expandable	src/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon16
z_gpu	include/darknet.h	/^    float *z_gpu;$/;"	m	struct:layer
z_length	src/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon16
zbuffer	src/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon16
zbuffer_end	src/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon16
zero_objectness	src/region_layer.c	/^void zero_objectness(layer l)$/;"	f
zeta	plugin/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^zeta(const EIGEN_CURRENT_STORAGE_BASE_CLASS<DerivedQ> &q) const$/;"	f
zout	src/stb_image.h	/^   char *zout;$/;"	m	struct:__anon16
zout_end	src/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon16
zout_start	src/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon16
~AlignedBox	plugin/Eigen/src/Geometry/AlignedBox.h	/^  EIGEN_DEVICE_FUNC ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AmbiVector	plugin/Eigen/src/SparseCore/AmbiVector.h	/^    ~AmbiVector() { delete[] m_buffer; }$/;"	f	class:Eigen::internal::AmbiVector
~BDCSVD	plugin/Eigen/src/SVD/BDCSVD.h	/^  ~BDCSVD() $/;"	f	class:Eigen::BDCSVD
~BiCGSTAB	plugin/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  ~BiCGSTAB() {}$/;"	f	class:Eigen::BiCGSTAB
~CholmodBase	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodBase()$/;"	f	class:Eigen::CholmodBase
~CholmodDecomposition	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodDecomposition() {}$/;"	f	class:Eigen::CholmodDecomposition
~CholmodSimplicialLDLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLDLT() {}$/;"	f	class:Eigen::CholmodSimplicialLDLT
~CholmodSimplicialLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLLT() {}$/;"	f	class:Eigen::CholmodSimplicialLLT
~CholmodSupernodalLLT	plugin/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSupernodalLLT() {}$/;"	f	class:Eigen::CholmodSupernodalLLT
~CompressedStorage	plugin/Eigen/src/SparseCore/CompressedStorage.h	/^    ~CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
~ConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ~ConjugateGradient() {}$/;"	f	class:Eigen::ConjugateGradient
~DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	plugin/Eigen/src/Core/DenseStorage.h	/^    EIGEN_DEVICE_FUNC ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~Hyperplane	plugin/Eigen/src/Geometry/Hyperplane.h	/^  EIGEN_DEVICE_FUNC ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~IterativeSolverBase	plugin/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ~IterativeSolverBase() {}$/;"	f	class:Eigen::IterativeSolverBase
~KLU	plugin/Eigen/src/KLUSupport/KLUSupport.h	/^    ~KLU()$/;"	f	class:Eigen::KLU
~LeastSquaresConjugateGradient	plugin/Eigen/src/IterativeLinearSolvers/LeastSquareConjugateGradient.h	/^  ~LeastSquaresConjugateGradient() {}$/;"	f	class:Eigen::LeastSquaresConjugateGradient
~Map	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline ~Map() {}$/;"	f	class:Eigen::Map
~MappedSparseMatrix	plugin/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ~MappedSparseMatrix() {}$/;"	f	class:Eigen::MappedSparseMatrix
~MappedSuperNodalMatrix	plugin/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h	/^    ~MappedSuperNodalMatrix()$/;"	f	class:Eigen::internal::MappedSuperNodalMatrix
~ParametrizedLine	plugin/Eigen/src/Geometry/ParametrizedLine.h	/^  EIGEN_DEVICE_FUNC ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~PardisoImpl	plugin/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ~PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
~PastixBase	plugin/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ~PastixBase() $/;"	f	class:Eigen::PastixBase
~Ref	plugin/Eigen/src/SparseCore/SparseRef.h	/^    ~Ref() {$/;"	f	class:Eigen::Ref
~SPQR	plugin/Eigen/src/SPQRSupport/SuiteSparseQRSupport.h	/^    ~SPQR()$/;"	f	class:Eigen::SPQR
~SimplicialCholeskyBase	plugin/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ~SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
~SolverBase	plugin/Eigen/src/Core/SolverBase.h	/^    ~SolverBase()$/;"	f	class:Eigen::SolverBase
~SparseLU	plugin/Eigen/src/SparseLU/SparseLU.h	/^    ~SparseLU()$/;"	f	class:Eigen::SparseLU
~SparseMapBase	plugin/Eigen/src/SparseCore/SparseMap.h	/^    inline ~SparseMapBase() {}$/;"	f	class:Eigen::SparseMapBase
~SparseMatrix	plugin/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ~SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
~SparseSolverBase	plugin/Eigen/src/SparseCore/SparseSolverBase.h	/^    ~SparseSolverBase()$/;"	f	class:Eigen::SparseSolverBase
~SparseVector	plugin/Eigen/src/SparseCore/SparseVector.h	/^    inline ~SparseVector() {}$/;"	f	class:Eigen::SparseVector
~SuperILU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperILU()$/;"	f	class:Eigen::SuperILU
~SuperLU	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLU()$/;"	f	class:Eigen::SuperLU
~SuperLUBase	plugin/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLUBase()$/;"	f	class:Eigen::SuperLUBase
~UmfPackLU	plugin/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ~UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
~aligned_allocator	plugin/Eigen/src/Core/util/Memory.h	/^  ~aligned_allocator() {}$/;"	f	class:Eigen::aligned_allocator
~aligned_allocator_indirection	plugin/Eigen/src/StlSupport/details.h	/^    ~aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
~aligned_stack_memory_handler	plugin/Eigen/src/Core/util/Memory.h	/^    ~aligned_stack_memory_handler()$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
~evaluator_base	plugin/Eigen/src/Core/CoreEvaluators.h	/^  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ~evaluator_base() {}$/;"	f	struct:Eigen::internal::evaluator_base
~gemm_blocking_space	plugin/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    ~gemm_blocking_space()$/;"	f	class:Eigen::internal::gemm_blocking_space
~noncopyable	plugin/Eigen/src/Core/util/Meta.h	/^  EIGEN_DEVICE_FUNC ~noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
~scoped_array	plugin/Eigen/src/Core/util/Memory.h	/^  ~scoped_array()$/;"	f	class:Eigen::internal::scoped_array
